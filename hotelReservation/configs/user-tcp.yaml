- address:
    socketAddress:
      address: 0.0.0.0
      portValue: 15006
  continueOnListenerFiltersTimeout: true
  filterChains:
  - filterChainMatch:
      destinationPort: 15006
    filters:
    - name: istio.metadata_exchange
      typedConfig:
        '@type': type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
        protocol: istio-peer-exchange
    - name: istio.stats
      typedConfig:
        '@type': type.googleapis.com/udpa.type.v1.TypedStruct
        typeUrl: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
        value:
          config:
            configuration:
              '@type': type.googleapis.com/google.protobuf.StringValue
              value: |
                {
                  "debug": "false",
                  "stat_prefix": "istio",
                  "metrics": [
                    {
                      "dimensions": {
                        "destination_cluster": "node.metadata['CLUSTER_ID']",
                        "source_cluster": "downstream_peer.cluster_id"
                      }
                    }
                  ]
                }
            root_id: stats_inbound
            vm_config:
              code:
                local:
                  inline_string: envoy.wasm.stats
              runtime: envoy.wasm.runtime.null
              vm_id: tcp_stats_inbound
    - name: envoy.filters.network.tcp_proxy
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
        cluster: BlackHoleCluster
        statPrefix: BlackHoleCluster
    name: virtualInbound-blackhole
  - filterChainMatch:
      applicationProtocols:
      - istio-http/1.0
      - istio-http/1.1
      - istio-h2
      prefixRanges:
      - addressPrefix: 0.0.0.0
        prefixLen: 0
      transportProtocol: tls
    filters:
    - name: istio.metadata_exchange
      typedConfig:
        '@type': type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
        protocol: istio-peer-exchange
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        forwardClientCertDetails: APPEND_FORWARD
        httpFilters:
        - name: istio.metadata_exchange
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
            config:
              configuration:
                '@type': type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
              vmConfig:
                code:
                  local:
                    inlineString: envoy.wasm.metadata_exchange
                runtime: envoy.wasm.runtime.null
        - name: envoy.filters.http.cors
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
        - name: envoy.filters.http.fault
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault
        - name: istio.stats
          typedConfig:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            typeUrl: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
            value:
              config:
                configuration:
                  '@type': type.googleapis.com/google.protobuf.StringValue
                  value: |
                    {
                      "debug": "false",
                      "stat_prefix": "istio",
                      "disable_host_header_fallback": true,
                      "metrics": [
                        {
                          "dimensions": {
                            "destination_cluster": "node.metadata['CLUSTER_ID']",
                            "source_cluster": "downstream_peer.cluster_id"
                          }
                        }
                      ]
                    }
                root_id: stats_inbound
                vm_config:
                  code:
                    local:
                      inline_string: envoy.wasm.stats
                  runtime: envoy.wasm.runtime.null
                  vm_id: stats_inbound
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        normalizePath: true
        pathWithEscapedSlashesAction: KEEP_UNCHANGED
        routeConfig:
          name: InboundPassthroughClusterIpv4
          validateClusters: false
          virtualHosts:
          - domains:
            - '*'
            name: inbound|http|0
            routes:
            - decorator:
                operation: :0/*
              match:
                prefix: /
              name: default
              route:
                cluster: InboundPassthroughClusterIpv4
                maxStreamDuration:
                  grpcTimeoutHeaderMax: 0s
                  maxStreamDuration: 0s
                timeout: 0s
        serverName: istio-envoy
        setCurrentClientCertDetails:
          dns: true
          subject: true
          uri: true
        statPrefix: InboundPassthroughClusterIpv4
        streamIdleTimeout: 0s
        tracing:
          clientSampling:
            value: 100
          customTags:
          - metadata:
              kind:
                request: {}
              metadataKey:
                key: envoy.filters.http.rbac
                path:
                - key: istio_dry_run_allow_shadow_effective_policy_id
            tag: istio.authorization.dry_run.allow_policy.name
          - metadata:
              kind:
                request: {}
              metadataKey:
                key: envoy.filters.http.rbac
                path:
                - key: istio_dry_run_allow_shadow_engine_result
            tag: istio.authorization.dry_run.allow_policy.result
          - metadata:
              kind:
                request: {}
              metadataKey:
                key: envoy.filters.http.rbac
                path:
                - key: istio_dry_run_deny_shadow_effective_policy_id
            tag: istio.authorization.dry_run.deny_policy.name
          - metadata:
              kind:
                request: {}
              metadataKey:
                key: envoy.filters.http.rbac
                path:
                - key: istio_dry_run_deny_shadow_engine_result
            tag: istio.authorization.dry_run.deny_policy.result
          - literal:
              value: latest
            tag: istio.canonical_revision
          - literal:
              value: user
            tag: istio.canonical_service
          - literal:
              value: cluster.local
            tag: istio.mesh_id
          - literal:
              value: default
            tag: istio.namespace
          overallSampling:
            value: 100
          randomSampling:
            value: 1
        upgradeConfigs:
        - upgradeType: websocket
        useRemoteAddress: false
    name: virtualInbound-catchall-http
    transportSocket:
      name: envoy.transport_sockets.tls
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
        commonTlsContext:
          alpnProtocols:
          - h2
          - http/1.1
          combinedValidationContext:
            defaultValidationContext:
              matchSubjectAltNames:
              - prefix: spiffe://cluster.local/
            validationContextSdsSecretConfig:
              name: ROOTCA
              sdsConfig:
                apiConfigSource:
                  apiType: GRPC
                  grpcServices:
                  - envoyGrpc:
                      clusterName: sds-grpc
                  setNodeOnFirstMessageOnly: true
                  transportApiVersion: V3
                initialFetchTimeout: 0s
                resourceApiVersion: V3
          tlsCertificateSdsSecretConfigs:
          - name: default
            sdsConfig:
              apiConfigSource:
                apiType: GRPC
                grpcServices:
                - envoyGrpc:
                    clusterName: sds-grpc
                setNodeOnFirstMessageOnly: true
                transportApiVersion: V3
              initialFetchTimeout: 0s
              resourceApiVersion: V3
          tlsParams:
            cipherSuites:
            - ECDHE-ECDSA-AES256-GCM-SHA384
            - ECDHE-RSA-AES256-GCM-SHA384
            - ECDHE-ECDSA-AES128-GCM-SHA256
            - ECDHE-RSA-AES128-GCM-SHA256
            - AES256-GCM-SHA384
            - AES128-GCM-SHA256
            tlsMinimumProtocolVersion: TLSv1_2
        requireClientCertificate: true
  - filterChainMatch:
      applicationProtocols:
      - http/1.0
      - http/1.1
      - h2c
      prefixRanges:
      - addressPrefix: 0.0.0.0
        prefixLen: 0
      transportProtocol: raw_buffer
    filters:
    - name: istio.metadata_exchange
      typedConfig:
        '@type': type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
        protocol: istio-peer-exchange
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        forwardClientCertDetails: APPEND_FORWARD
        httpFilters:
        - name: istio.metadata_exchange
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
            config:
              configuration:
                '@type': type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
              vmConfig:
                code:
                  local:
                    inlineString: envoy.wasm.metadata_exchange
                runtime: envoy.wasm.runtime.null
        - name: envoy.filters.http.cors
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
        - name: envoy.filters.http.fault
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault
        - name: istio.stats
          typedConfig:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            typeUrl: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
            value:
              config:
                configuration:
                  '@type': type.googleapis.com/google.protobuf.StringValue
                  value: |
                    {
                      "debug": "false",
                      "stat_prefix": "istio",
                      "disable_host_header_fallback": true,
                      "metrics": [
                        {
                          "dimensions": {
                            "destination_cluster": "node.metadata['CLUSTER_ID']",
                            "source_cluster": "downstream_peer.cluster_id"
                          }
                        }
                      ]
                    }
                root_id: stats_inbound
                vm_config:
                  code:
                    local:
                      inline_string: envoy.wasm.stats
                  runtime: envoy.wasm.runtime.null
                  vm_id: stats_inbound
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        normalizePath: true
        pathWithEscapedSlashesAction: KEEP_UNCHANGED
        routeConfig:
          name: InboundPassthroughClusterIpv4
          validateClusters: false
          virtualHosts:
          - domains:
            - '*'
            name: inbound|http|0
            routes:
            - decorator:
                operation: :0/*
              match:
                prefix: /
              name: default
              route:
                cluster: InboundPassthroughClusterIpv4
                maxStreamDuration:
                  grpcTimeoutHeaderMax: 0s
                  maxStreamDuration: 0s
                timeout: 0s
        serverName: istio-envoy
        setCurrentClientCertDetails:
          dns: true
          subject: true
          uri: true
        statPrefix: InboundPassthroughClusterIpv4
        streamIdleTimeout: 0s
        tracing:
          clientSampling:
            value: 100
          customTags:
          - metadata:
              kind:
                request: {}
              metadataKey:
                key: envoy.filters.http.rbac
                path:
                - key: istio_dry_run_allow_shadow_effective_policy_id
            tag: istio.authorization.dry_run.allow_policy.name
          - metadata:
              kind:
                request: {}
              metadataKey:
                key: envoy.filters.http.rbac
                path:
                - key: istio_dry_run_allow_shadow_engine_result
            tag: istio.authorization.dry_run.allow_policy.result
          - metadata:
              kind:
                request: {}
              metadataKey:
                key: envoy.filters.http.rbac
                path:
                - key: istio_dry_run_deny_shadow_effective_policy_id
            tag: istio.authorization.dry_run.deny_policy.name
          - metadata:
              kind:
                request: {}
              metadataKey:
                key: envoy.filters.http.rbac
                path:
                - key: istio_dry_run_deny_shadow_engine_result
            tag: istio.authorization.dry_run.deny_policy.result
          - literal:
              value: latest
            tag: istio.canonical_revision
          - literal:
              value: user
            tag: istio.canonical_service
          - literal:
              value: cluster.local
            tag: istio.mesh_id
          - literal:
              value: default
            tag: istio.namespace
          overallSampling:
            value: 100
          randomSampling:
            value: 1
        upgradeConfigs:
        - upgradeType: websocket
        useRemoteAddress: false
    name: virtualInbound-catchall-http
  - filterChainMatch:
      applicationProtocols:
      - istio-peer-exchange
      - istio
      prefixRanges:
      - addressPrefix: 0.0.0.0
        prefixLen: 0
      transportProtocol: tls
    filters:
    - name: istio.metadata_exchange
      typedConfig:
        '@type': type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
        protocol: istio-peer-exchange
    - name: istio.stats
      typedConfig:
        '@type': type.googleapis.com/udpa.type.v1.TypedStruct
        typeUrl: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
        value:
          config:
            configuration:
              '@type': type.googleapis.com/google.protobuf.StringValue
              value: |
                {
                  "debug": "false",
                  "stat_prefix": "istio",
                  "metrics": [
                    {
                      "dimensions": {
                        "destination_cluster": "node.metadata['CLUSTER_ID']",
                        "source_cluster": "downstream_peer.cluster_id"
                      }
                    }
                  ]
                }
            root_id: stats_inbound
            vm_config:
              code:
                local:
                  inline_string: envoy.wasm.stats
              runtime: envoy.wasm.runtime.null
              vm_id: tcp_stats_inbound
    - name: envoy.filters.network.tcp_proxy
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
        cluster: InboundPassthroughClusterIpv4
        statPrefix: InboundPassthroughClusterIpv4
    name: virtualInbound
    transportSocket:
      name: envoy.transport_sockets.tls
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
        commonTlsContext:
          alpnProtocols:
          - istio-peer-exchange
          - h2
          - http/1.1
          combinedValidationContext:
            defaultValidationContext:
              matchSubjectAltNames:
              - prefix: spiffe://cluster.local/
            validationContextSdsSecretConfig:
              name: ROOTCA
              sdsConfig:
                apiConfigSource:
                  apiType: GRPC
                  grpcServices:
                  - envoyGrpc:
                      clusterName: sds-grpc
                  setNodeOnFirstMessageOnly: true
                  transportApiVersion: V3
                initialFetchTimeout: 0s
                resourceApiVersion: V3
          tlsCertificateSdsSecretConfigs:
          - name: default
            sdsConfig:
              apiConfigSource:
                apiType: GRPC
                grpcServices:
                - envoyGrpc:
                    clusterName: sds-grpc
                setNodeOnFirstMessageOnly: true
                transportApiVersion: V3
              initialFetchTimeout: 0s
              resourceApiVersion: V3
          tlsParams:
            cipherSuites:
            - ECDHE-ECDSA-AES256-GCM-SHA384
            - ECDHE-RSA-AES256-GCM-SHA384
            - ECDHE-ECDSA-AES128-GCM-SHA256
            - ECDHE-RSA-AES128-GCM-SHA256
            - AES256-GCM-SHA384
            - AES128-GCM-SHA256
            tlsMinimumProtocolVersion: TLSv1_2
        requireClientCertificate: true
  - filterChainMatch:
      prefixRanges:
      - addressPrefix: 0.0.0.0
        prefixLen: 0
      transportProtocol: raw_buffer
    filters:
    - name: istio.metadata_exchange
      typedConfig:
        '@type': type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
        protocol: istio-peer-exchange
    - name: istio.stats
      typedConfig:
        '@type': type.googleapis.com/udpa.type.v1.TypedStruct
        typeUrl: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
        value:
          config:
            configuration:
              '@type': type.googleapis.com/google.protobuf.StringValue
              value: |
                {
                  "debug": "false",
                  "stat_prefix": "istio",
                  "metrics": [
                    {
                      "dimensions": {
                        "destination_cluster": "node.metadata['CLUSTER_ID']",
                        "source_cluster": "downstream_peer.cluster_id"
                      }
                    }
                  ]
                }
            root_id: stats_inbound
            vm_config:
              code:
                local:
                  inline_string: envoy.wasm.stats
              runtime: envoy.wasm.runtime.null
              vm_id: tcp_stats_inbound
    - name: envoy.filters.network.tcp_proxy
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
        cluster: InboundPassthroughClusterIpv4
        statPrefix: InboundPassthroughClusterIpv4
    name: virtualInbound
  - filterChainMatch:
      prefixRanges:
      - addressPrefix: 0.0.0.0
        prefixLen: 0
      transportProtocol: tls
    filters:
    - name: istio.metadata_exchange
      typedConfig:
        '@type': type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
        protocol: istio-peer-exchange
    - name: istio.stats
      typedConfig:
        '@type': type.googleapis.com/udpa.type.v1.TypedStruct
        typeUrl: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
        value:
          config:
            configuration:
              '@type': type.googleapis.com/google.protobuf.StringValue
              value: |
                {
                  "debug": "false",
                  "stat_prefix": "istio",
                  "metrics": [
                    {
                      "dimensions": {
                        "destination_cluster": "node.metadata['CLUSTER_ID']",
                        "source_cluster": "downstream_peer.cluster_id"
                      }
                    }
                  ]
                }
            root_id: stats_inbound
            vm_config:
              code:
                local:
                  inline_string: envoy.wasm.stats
              runtime: envoy.wasm.runtime.null
              vm_id: tcp_stats_inbound
    - name: envoy.filters.network.tcp_proxy
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
        cluster: InboundPassthroughClusterIpv4
        statPrefix: InboundPassthroughClusterIpv4
    name: virtualInbound
  - filterChainMatch:
      applicationProtocols:
      - istio
      - istio-peer-exchange
      - istio-http/1.0
      - istio-http/1.1
      - istio-h2
      destinationPort: 8086
      transportProtocol: tls
    filters:
    - name: istio.metadata_exchange
      typedConfig:
        '@type': type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
        protocol: istio-peer-exchange
    - name: istio.stats
      typedConfig:
        '@type': type.googleapis.com/udpa.type.v1.TypedStruct
        typeUrl: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
        value:
          config:
            configuration:
              '@type': type.googleapis.com/google.protobuf.StringValue
              value: |
                {
                  "debug": "false",
                  "stat_prefix": "istio",
                  "metrics": [
                    {
                      "dimensions": {
                        "destination_cluster": "node.metadata['CLUSTER_ID']",
                        "source_cluster": "downstream_peer.cluster_id"
                      }
                    }
                  ]
                }
            root_id: stats_inbound
            vm_config:
              code:
                local:
                  inline_string: envoy.wasm.stats
              runtime: envoy.wasm.runtime.null
              vm_id: tcp_stats_inbound
    - name: envoy.filters.network.tcp_proxy
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
        cluster: inbound|8086||
        statPrefix: inbound|8086||
    name: 0.0.0.0_8086
    transportSocket:
      name: envoy.transport_sockets.tls
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
        commonTlsContext:
          alpnProtocols:
          - istio-peer-exchange
          - h2
          - http/1.1
          combinedValidationContext:
            defaultValidationContext:
              matchSubjectAltNames:
              - prefix: spiffe://cluster.local/
            validationContextSdsSecretConfig:
              name: ROOTCA
              sdsConfig:
                apiConfigSource:
                  apiType: GRPC
                  grpcServices:
                  - envoyGrpc:
                      clusterName: sds-grpc
                  setNodeOnFirstMessageOnly: true
                  transportApiVersion: V3
                initialFetchTimeout: 0s
                resourceApiVersion: V3
          tlsCertificateSdsSecretConfigs:
          - name: default
            sdsConfig:
              apiConfigSource:
                apiType: GRPC
                grpcServices:
                - envoyGrpc:
                    clusterName: sds-grpc
                setNodeOnFirstMessageOnly: true
                transportApiVersion: V3
              initialFetchTimeout: 0s
              resourceApiVersion: V3
          tlsParams:
            cipherSuites:
            - ECDHE-ECDSA-AES256-GCM-SHA384
            - ECDHE-RSA-AES256-GCM-SHA384
            - ECDHE-ECDSA-AES128-GCM-SHA256
            - ECDHE-RSA-AES128-GCM-SHA256
            - AES256-GCM-SHA384
            - AES128-GCM-SHA256
            tlsMinimumProtocolVersion: TLSv1_2
        requireClientCertificate: true
  - filterChainMatch:
      destinationPort: 8086
      transportProtocol: tls
    filters:
    - name: istio.metadata_exchange
      typedConfig:
        '@type': type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
        protocol: istio-peer-exchange
    - name: istio.stats
      typedConfig:
        '@type': type.googleapis.com/udpa.type.v1.TypedStruct
        typeUrl: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
        value:
          config:
            configuration:
              '@type': type.googleapis.com/google.protobuf.StringValue
              value: |
                {
                  "debug": "false",
                  "stat_prefix": "istio",
                  "metrics": [
                    {
                      "dimensions": {
                        "destination_cluster": "node.metadata['CLUSTER_ID']",
                        "source_cluster": "downstream_peer.cluster_id"
                      }
                    }
                  ]
                }
            root_id: stats_inbound
            vm_config:
              code:
                local:
                  inline_string: envoy.wasm.stats
              runtime: envoy.wasm.runtime.null
              vm_id: tcp_stats_inbound
    - name: envoy.filters.network.tcp_proxy
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
        cluster: inbound|8086||
        statPrefix: inbound|8086||
    name: 0.0.0.0_8086
  - filterChainMatch:
      destinationPort: 8086
      transportProtocol: raw_buffer
    filters:
    - name: istio.metadata_exchange
      typedConfig:
        '@type': type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
        protocol: istio-peer-exchange
    - name: istio.stats
      typedConfig:
        '@type': type.googleapis.com/udpa.type.v1.TypedStruct
        typeUrl: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
        value:
          config:
            configuration:
              '@type': type.googleapis.com/google.protobuf.StringValue
              value: |
                {
                  "debug": "false",
                  "stat_prefix": "istio",
                  "metrics": [
                    {
                      "dimensions": {
                        "destination_cluster": "node.metadata['CLUSTER_ID']",
                        "source_cluster": "downstream_peer.cluster_id"
                      }
                    }
                  ]
                }
            root_id: stats_inbound
            vm_config:
              code:
                local:
                  inline_string: envoy.wasm.stats
              runtime: envoy.wasm.runtime.null
              vm_id: tcp_stats_inbound
    - name: envoy.filters.network.tcp_proxy
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
        cluster: inbound|8086||
        statPrefix: inbound|8086||
    name: 0.0.0.0_8086
  listenerFilters:
  - name: envoy.filters.listener.original_dst
    typedConfig:
      '@type': type.googleapis.com/envoy.extensions.filters.listener.original_dst.v3.OriginalDst
  - name: envoy.filters.listener.tls_inspector
    typedConfig:
      '@type': type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
  - filterDisabled:
      destinationPortRange:
        end: 8087
        start: 8086
    name: envoy.filters.listener.http_inspector
    typedConfig:
      '@type': type.googleapis.com/envoy.extensions.filters.listener.http_inspector.v3.HttpInspector
  listenerFiltersTimeout: 0s
  name: virtualInbound
  trafficDirection: INBOUND

