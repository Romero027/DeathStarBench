<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1446" onload="init(evt)" viewBox="0 0 1200 1446" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1446.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1429" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1429" > </text>
<g id="frames">
<g >
<title>Envoy::Buffer::OwnedImpl::addImpl(void const*, unsigned long) (3 samples, 0.02%)</title><rect x="1131.0" y="1093" width="0.2" height="15.0" fill="rgb(240,209,7)" rx="2" ry="2" />
<text  x="1133.98" y="1103.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.01%)</title><rect x="507.2" y="1125" width="0.2" height="15.0" fill="rgb(249,216,1)" rx="2" ry="2" />
<text  x="510.23" y="1135.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.01%)</title><rect x="1047.8" y="917" width="0.2" height="15.0" fill="rgb(250,214,11)" rx="2" ry="2" />
<text  x="1050.84" y="927.5" ></text>
</g>
<g >
<title>pagecache_get_page (15 samples, 0.09%)</title><rect x="240.5" y="1061" width="1.0" height="15.0" fill="rgb(230,160,28)" rx="2" ry="2" />
<text  x="243.48" y="1071.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (3 samples, 0.02%)</title><rect x="896.8" y="981" width="0.2" height="15.0" fill="rgb(239,67,13)" rx="2" ry="2" />
<text  x="899.80" y="991.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedField() const (2 samples, 0.01%)</title><rect x="1011.0" y="901" width="0.1" height="15.0" fill="rgb(224,17,4)" rx="2" ry="2" />
<text  x="1014.01" y="911.5" ></text>
</g>
<g >
<title>Envoy::Event::RealTimeSystem::monotonicTime() (2 samples, 0.01%)</title><rect x="1120.7" y="1045" width="0.1" height="15.0" fill="rgb(209,68,28)" rx="2" ry="2" />
<text  x="1123.66" y="1055.5" ></text>
</g>
<g >
<title>do_syscall_64 (199 samples, 1.20%)</title><rect x="904.7" y="1141" width="14.1" height="15.0" fill="rgb(207,48,53)" rx="2" ry="2" />
<text  x="907.69" y="1151.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::CastingValueFromMessageFactory&lt;google::protobuf::Struct&gt;::CreateValue(google::protobuf::Message const*, google::protobuf::Arena*) const (2 samples, 0.01%)</title><rect x="767.9" y="725" width="0.1" height="15.0" fill="rgb(212,66,46)" rx="2" ry="2" />
<text  x="770.87" y="735.5" ></text>
</g>
<g >
<title>generic_update_time (2 samples, 0.01%)</title><rect x="97.9" y="1109" width="0.1" height="15.0" fill="rgb(254,158,14)" rx="2" ry="2" />
<text  x="100.90" y="1119.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.01%)</title><rect x="690.9" y="1189" width="0.2" height="15.0" fill="rgb(242,183,51)" rx="2" ry="2" />
<text  x="693.92" y="1199.5" ></text>
</g>
<g >
<title>__lock_text_start (16 samples, 0.10%)</title><rect x="37.0" y="1013" width="1.1" height="15.0" fill="rgb(254,221,2)" rx="2" ry="2" />
<text  x="39.95" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Tracer::reportSpan(Envoy::Extensions::Tracers::Zipkin::Span&amp;&amp;) (2 samples, 0.01%)</title><rect x="754.6" y="917" width="0.1" height="15.0" fill="rgb(216,128,11)" rx="2" ry="2" />
<text  x="757.57" y="927.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (159 samples, 0.96%)</title><rect x="690.8" y="1253" width="11.4" height="15.0" fill="rgb(251,217,43)" rx="2" ry="2" />
<text  x="693.85" y="1263.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="598.1" y="1061" width="0.2" height="15.0" fill="rgb(228,92,37)" rx="2" ry="2" />
<text  x="601.12" y="1071.5" ></text>
</g>
<g >
<title>run_ksoftirqd (2 samples, 0.01%)</title><rect x="659.3" y="1317" width="0.1" height="15.0" fill="rgb(232,37,3)" rx="2" ry="2" />
<text  x="662.27" y="1327.5" ></text>
</g>
<g >
<title>__kfree_skb (7 samples, 0.04%)</title><rect x="1175.1" y="501" width="0.5" height="15.0" fill="rgb(205,136,10)" rx="2" ry="2" />
<text  x="1178.14" y="511.5" ></text>
</g>
<g >
<title>proxy_wasm::WasmBase::getRootContext(std::__1::shared_ptr&lt;proxy_wasm::PluginBase&gt; const&amp;, bool) (3 samples, 0.02%)</title><rect x="829.5" y="949" width="0.2" height="15.0" fill="rgb(226,66,1)" rx="2" ry="2" />
<text  x="832.52" y="959.5" ></text>
</g>
<g >
<title>Envoy::Runtime::SnapshotImpl::runtimeFeatureEnabled(absl::string_view) const (2 samples, 0.01%)</title><rect x="1115.4" y="1013" width="0.1" height="15.0" fill="rgb(239,97,46)" rx="2" ry="2" />
<text  x="1118.40" y="1023.5" ></text>
</g>
<g >
<title>event_del_nolock_ (5 samples, 0.03%)</title><rect x="703.2" y="1301" width="0.3" height="15.0" fill="rgb(229,20,14)" rx="2" ry="2" />
<text  x="706.15" y="1311.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::EvaluatorStack::EvaluatorStack(unsigned long) (5 samples, 0.03%)</title><rect x="1040.8" y="757" width="0.4" height="15.0" fill="rgb(242,175,48)" rx="2" ry="2" />
<text  x="1043.80" y="767.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::onMessageBeginBase() (35 samples, 0.21%)</title><rect x="1061.4" y="1061" width="2.5" height="15.0" fill="rgb(216,134,37)" rx="2" ry="2" />
<text  x="1064.43" y="1071.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="490.0" y="1061" width="0.2" height="15.0" fill="rgb(210,22,26)" rx="2" ry="2" />
<text  x="493.02" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Random::RandomGeneratorImpl::uuid() (2 samples, 0.01%)</title><rect x="1073.1" y="997" width="0.1" height="15.0" fill="rgb(224,215,16)" rx="2" ry="2" />
<text  x="1076.09" y="1007.5" ></text>
</g>
<g >
<title>do_epoll_wait (3 samples, 0.02%)</title><rect x="642.2" y="1221" width="0.2" height="15.0" fill="rgb(217,93,49)" rx="2" ry="2" />
<text  x="645.21" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::move(Envoy::Buffer::Instance&amp;) (3 samples, 0.02%)</title><rect x="802.4" y="933" width="0.2" height="15.0" fill="rgb(254,186,32)" rx="2" ry="2" />
<text  x="805.43" y="943.5" ></text>
</g>
<g >
<title>ipv4_mtu (2 samples, 0.01%)</title><rect x="590.6" y="965" width="0.2" height="15.0" fill="rgb(213,175,21)" rx="2" ry="2" />
<text  x="593.65" y="975.5" ></text>
</g>
<g >
<title>_raw_read_lock (7 samples, 0.04%)</title><rect x="238.9" y="1029" width="0.5" height="15.0" fill="rgb(214,208,42)" rx="2" ry="2" />
<text  x="241.92" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getHeaderMapValue(proxy_wasm::WasmHeaderMapType, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;*) (2 samples, 0.01%)</title><rect x="1031.4" y="821" width="0.2" height="15.0" fill="rgb(216,32,5)" rx="2" ry="2" />
<text  x="1034.42" y="831.5" ></text>
</g>
<g >
<title>__sched_text_start (16 samples, 0.10%)</title><rect x="134.1" y="949" width="1.1" height="15.0" fill="rgb(211,157,18)" rx="2" ry="2" />
<text  x="137.09" y="959.5" ></text>
</g>
<g >
<title>netdev_core_pick_tx (2 samples, 0.01%)</title><rect x="910.6" y="101" width="0.1" height="15.0" fill="rgb(229,183,27)" rx="2" ry="2" />
<text  x="913.59" y="111.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.01%)</title><rect x="114.3" y="1205" width="0.2" height="15.0" fill="rgb(222,42,27)" rx="2" ry="2" />
<text  x="117.32" y="1215.5" ></text>
</g>
<g >
<title>_raw_read_lock (7 samples, 0.04%)</title><rect x="238.9" y="1045" width="0.5" height="15.0" fill="rgb(236,228,24)" rx="2" ry="2" />
<text  x="241.92" y="1055.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (2 samples, 0.01%)</title><rect x="557.2" y="981" width="0.1" height="15.0" fill="rgb(229,147,26)" rx="2" ry="2" />
<text  x="560.15" y="991.5" ></text>
</g>
<g >
<title>sock_read_iter (65 samples, 0.39%)</title><rect x="894.2" y="1045" width="4.6" height="15.0" fill="rgb(225,29,33)" rx="2" ry="2" />
<text  x="897.16" y="1055.5" ></text>
</g>
<g >
<title>__vfs_write (24 samples, 0.14%)</title><rect x="642.5" y="1189" width="1.7" height="15.0" fill="rgb(227,159,10)" rx="2" ry="2" />
<text  x="645.49" y="1199.5" ></text>
</g>
<g >
<title>do_futex (162 samples, 0.98%)</title><rect x="84.3" y="1205" width="11.5" height="15.0" fill="rgb(241,161,22)" rx="2" ry="2" />
<text  x="87.31" y="1215.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.01%)</title><rect x="201.4" y="1205" width="0.1" height="15.0" fill="rgb(218,203,36)" rx="2" ry="2" />
<text  x="204.37" y="1215.5" ></text>
</g>
<g >
<title>ep_send_events_proc (3 samples, 0.02%)</title><rect x="133.2" y="1013" width="0.2" height="15.0" fill="rgb(226,83,40)" rx="2" ry="2" />
<text  x="136.17" y="1023.5" ></text>
</g>
<g >
<title>__brelse (2 samples, 0.01%)</title><rect x="238.0" y="997" width="0.1" height="15.0" fill="rgb(215,139,45)" rx="2" ry="2" />
<text  x="240.99" y="1007.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::getRequestIdValue() const (2 samples, 0.01%)</title><rect x="1011.8" y="917" width="0.1" height="15.0" fill="rgb(225,102,35)" rx="2" ry="2" />
<text  x="1014.79" y="927.5" ></text>
</g>
<g >
<title>event_queue_remove_timeout (2 samples, 0.01%)</title><rect x="1095.2" y="853" width="0.1" height="15.0" fill="rgb(245,9,11)" rx="2" ry="2" />
<text  x="1098.20" y="863.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.01%)</title><rect x="196.2" y="1141" width="0.2" height="15.0" fill="rgb(232,146,50)" rx="2" ry="2" />
<text  x="199.25" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestEncoderWrapper::encodeHeaders(Envoy::Http::RequestHeaderMap const&amp;, bool) (70 samples, 0.42%)</title><rect x="837.8" y="869" width="5.0" height="15.0" fill="rgb(232,40,43)" rx="2" ry="2" />
<text  x="840.84" y="879.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (122 samples, 0.74%)</title><rect x="490.2" y="1061" width="8.6" height="15.0" fill="rgb(227,223,34)" rx="2" ry="2" />
<text  x="493.16" y="1071.5" ></text>
</g>
<g >
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.01%)</title><rect x="566.0" y="533" width="0.1" height="15.0" fill="rgb(212,113,6)" rx="2" ry="2" />
<text  x="568.97" y="543.5" ></text>
</g>
<g >
<title>Envoy::Runtime::LoaderImpl::threadsafeSnapshot() (2 samples, 0.01%)</title><rect x="715.5" y="997" width="0.1" height="15.0" fill="rgb(224,34,5)" rx="2" ry="2" />
<text  x="718.45" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::StreamEncoderImpl(Envoy::Http::Http1::ConnectionImpl&amp;) (2 samples, 0.01%)</title><rect x="1094.8" y="869" width="0.2" height="15.0" fill="rgb(214,181,3)" rx="2" ry="2" />
<text  x="1097.85" y="879.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.02%)</title><rect x="490.2" y="981" width="0.2" height="15.0" fill="rgb(245,126,45)" rx="2" ry="2" />
<text  x="493.24" y="991.5" ></text>
</g>
<g >
<title>runtime.runqput (5 samples, 0.03%)</title><rect x="125.8" y="1157" width="0.4" height="15.0" fill="rgb(206,52,54)" rx="2" ry="2" />
<text  x="128.85" y="1167.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="1189.4" y="1349" width="0.1" height="15.0" fill="rgb(213,86,7)" rx="2" ry="2" />
<text  x="1192.36" y="1359.5" ></text>
</g>
<g >
<title>Envoy::Upstream::ManagedResourceImpl::canCreate() (3 samples, 0.02%)</title><rect x="845.7" y="933" width="0.2" height="15.0" fill="rgb(207,146,16)" rx="2" ry="2" />
<text  x="848.66" y="943.5" ></text>
</g>
<g >
<title>tcp_sendmsg (631 samples, 3.80%)</title><rect x="546.8" y="1029" width="44.9" height="15.0" fill="rgb(224,11,17)" rx="2" ry="2" />
<text  x="549.84" y="1039.5" >tcp_..</text>
</g>
<g >
<title>runtime.exitsyscall (5 samples, 0.03%)</title><rect x="248.6" y="1253" width="0.3" height="15.0" fill="rgb(208,176,39)" rx="2" ry="2" />
<text  x="251.59" y="1263.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::getByKey(absl::string_view) const (7 samples, 0.04%)</title><rect x="1070.1" y="965" width="0.5" height="15.0" fill="rgb(225,164,13)" rx="2" ry="2" />
<text  x="1073.10" y="975.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::DynamicMap::size() const (2 samples, 0.01%)</title><rect x="1020.8" y="757" width="0.2" height="15.0" fill="rgb(225,206,18)" rx="2" ry="2" />
<text  x="1023.82" y="767.5" ></text>
</g>
<g >
<title>loopback_xmit (3 samples, 0.02%)</title><rect x="1185.5" y="741" width="0.2" height="15.0" fill="rgb(220,217,3)" rx="2" ry="2" />
<text  x="1188.52" y="751.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void (proxy_wasm::ContextBase*, proxy_wasm::Word)&gt;*)::$_1, std::__1::allocator&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void (proxy_wasm::ContextBase*, proxy_wasm::Word)&gt;*)::$_1&gt;, void (proxy_wasm::ContextBase*, proxy_wasm::Word)&gt;::operator()(proxy_wasm::ContextBase*&amp;&amp;, proxy_wasm::Word&amp;&amp;) (473 samples, 2.85%)</title><rect x="760.4" y="901" width="33.6" height="15.0" fill="rgb(206,174,29)" rx="2" ry="2" />
<text  x="763.40" y="911.5" >st..</text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::insertByKey(Envoy::Http::HeaderString&amp;&amp;, Envoy::Http::HeaderString&amp;&amp;) (8 samples, 0.05%)</title><rect x="835.0" y="965" width="0.6" height="15.0" fill="rgb(224,131,41)" rx="2" ry="2" />
<text  x="838.00" y="975.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="679.8" y="1317" width="0.1" height="15.0" fill="rgb(222,126,2)" rx="2" ry="2" />
<text  x="682.75" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_read (402 samples, 2.42%)</title><rect x="139.1" y="1189" width="28.6" height="15.0" fill="rgb(211,109,23)" rx="2" ry="2" />
<text  x="142.14" y="1199.5" >__..</text>
</g>
<g >
<title>wrk:worker_1 (3,532 samples, 21.29%)</title><rect x="938.8" y="1381" width="251.2" height="15.0" fill="rgb(227,99,30)" rx="2" ry="2" />
<text  x="941.82" y="1391.5" >wrk:worker_1</text>
</g>
<g >
<title>[unknown] (258 samples, 1.55%)</title><rect x="660.6" y="1365" width="18.3" height="15.0" fill="rgb(220,194,10)" rx="2" ry="2" />
<text  x="663.55" y="1375.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::insertByKey(Envoy::Http::HeaderString&amp;&amp;, Envoy::Http::HeaderString&amp;&amp;) (2 samples, 0.01%)</title><rect x="1129.9" y="1061" width="0.2" height="15.0" fill="rgb(251,52,27)" rx="2" ry="2" />
<text  x="1132.91" y="1071.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (42 samples, 0.25%)</title><rect x="116.5" y="1221" width="2.9" height="15.0" fill="rgb(249,5,52)" rx="2" ry="2" />
<text  x="119.46" y="1231.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.01%)</title><rect x="489.5" y="949" width="0.2" height="15.0" fill="rgb(241,210,20)" rx="2" ry="2" />
<text  x="492.52" y="959.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::shared_ptr&lt;Envoy::Tracing::CustomTag const&gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::shared_ptr&lt;Envoy::Tracing::CustomTag const&gt; &gt; &gt; &gt;::destroy_slots() (8 samples, 0.05%)</title><rect x="708.9" y="1237" width="0.6" height="15.0" fill="rgb(221,71,49)" rx="2" ry="2" />
<text  x="711.91" y="1247.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::SpanContextExtractor::extractSpanContext(bool) (4 samples, 0.02%)</title><rect x="821.9" y="981" width="0.3" height="15.0" fill="rgb(248,88,38)" rx="2" ry="2" />
<text  x="824.91" y="991.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (23 samples, 0.14%)</title><rect x="35.0" y="1061" width="1.7" height="15.0" fill="rgb(225,196,28)" rx="2" ry="2" />
<text  x="38.03" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Router::StaticRouteConfigProviderImpl::config() (2 samples, 0.01%)</title><rect x="863.1" y="1029" width="0.1" height="15.0" fill="rgb(227,174,20)" rx="2" ry="2" />
<text  x="866.09" y="1039.5" ></text>
</g>
<g >
<title>ep_remove (2 samples, 0.01%)</title><rect x="876.5" y="917" width="0.1" height="15.0" fill="rgb(237,134,12)" rx="2" ry="2" />
<text  x="879.46" y="927.5" ></text>
</g>
<g >
<title>handle_mm_fault (5 samples, 0.03%)</title><rect x="593.8" y="1125" width="0.3" height="15.0" fill="rgb(227,34,49)" rx="2" ry="2" />
<text  x="596.78" y="1135.5" ></text>
</g>
<g >
<title>__x64_sys_readv (101 samples, 0.61%)</title><rect x="893.2" y="1125" width="7.2" height="15.0" fill="rgb(254,16,12)" rx="2" ry="2" />
<text  x="896.24" y="1135.5" ></text>
</g>
<g >
<title>absl::StrCat(absl::AlphaNum const&amp;, absl::AlphaNum const&amp;, absl::AlphaNum const&amp;) (2 samples, 0.01%)</title><rect x="1036.4" y="853" width="0.1" height="15.0" fill="rgb(242,178,13)" rx="2" ry="2" />
<text  x="1039.39" y="863.5" ></text>
</g>
<g >
<title>runtime.casgstatus (3 samples, 0.02%)</title><rect x="131.0" y="1157" width="0.2" height="15.0" fill="rgb(214,84,9)" rx="2" ry="2" />
<text  x="134.04" y="1167.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (122 samples, 0.74%)</title><rect x="949.9" y="1253" width="8.7" height="15.0" fill="rgb(209,64,45)" rx="2" ry="2" />
<text  x="952.92" y="1263.5" ></text>
</g>
<g >
<title>__kfree_skb (5 samples, 0.03%)</title><rect x="925.0" y="501" width="0.4" height="15.0" fill="rgb(238,1,17)" rx="2" ry="2" />
<text  x="928.03" y="511.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::staticLookup(absl::string_view) (4 samples, 0.02%)</title><rect x="835.8" y="965" width="0.3" height="15.0" fill="rgb(251,144,31)" rx="2" ry="2" />
<text  x="838.78" y="975.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#1}::__invoke(http_parser*) (49 samples, 0.30%)</title><rect x="811.2" y="1109" width="3.5" height="15.0" fill="rgb(229,206,11)" rx="2" ry="2" />
<text  x="814.17" y="1119.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (188 samples, 1.13%)</title><rect x="1173.1" y="885" width="13.4" height="15.0" fill="rgb(253,153,31)" rx="2" ry="2" />
<text  x="1176.15" y="895.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Upstreams::Http::Generic::GenericGenericConnPoolFactory::createGenericConnPool(Envoy::Upstream::ThreadLocalCluster&amp;, bool, Envoy::Router::RouteEntry const&amp;, absl::optional&lt;Envoy::Http::Protocol&gt;, Envoy::Upstream::LoadBalancerContext*) const (34 samples, 0.20%)</title><rect x="848.7" y="981" width="2.4" height="15.0" fill="rgb(249,71,46)" rx="2" ry="2" />
<text  x="851.72" y="991.5" ></text>
</g>
<g >
<title>smp_call_function_single (4 samples, 0.02%)</title><rect x="628.4" y="1061" width="0.3" height="15.0" fill="rgb(210,162,51)" rx="2" ry="2" />
<text  x="631.41" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderString::append(char const*, unsigned int) (3 samples, 0.02%)</title><rect x="803.8" y="1077" width="0.3" height="15.0" fill="rgb(219,203,48)" rx="2" ry="2" />
<text  x="806.85" y="1087.5" ></text>
</g>
<g >
<title>mutex_spin_on_owner (2 samples, 0.01%)</title><rect x="198.0" y="1045" width="0.1" height="15.0" fill="rgb(239,11,43)" rx="2" ry="2" />
<text  x="200.96" y="1055.5" ></text>
</g>
<g >
<title>__sched_text_start (3 samples, 0.02%)</title><rect x="545.7" y="1093" width="0.2" height="15.0" fill="rgb(225,75,11)" rx="2" ry="2" />
<text  x="548.70" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::setAndCheckCallbackStatusOr(absl::StatusOr&lt;Envoy::Http::Http1::ParserStatus&gt;&amp;&amp;) (3 samples, 0.02%)</title><rect x="811.0" y="1109" width="0.2" height="15.0" fill="rgb(220,174,45)" rx="2" ry="2" />
<text  x="813.96" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Reservation::commit(unsigned long) (20 samples, 0.12%)</title><rect x="884.7" y="1189" width="1.4" height="15.0" fill="rgb(244,124,50)" rx="2" ry="2" />
<text  x="887.71" y="1199.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="1188.0" y="1125" width="0.2" height="15.0" fill="rgb(215,24,18)" rx="2" ry="2" />
<text  x="1191.01" y="1135.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (2 samples, 0.01%)</title><rect x="910.0" y="133" width="0.1" height="15.0" fill="rgb(210,1,4)" rx="2" ry="2" />
<text  x="912.95" y="143.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Network::ConnectionImpl::streamInfo() (2 samples, 0.01%)</title><rect x="902.3" y="1221" width="0.1" height="15.0" fill="rgb(229,17,27)" rx="2" ry="2" />
<text  x="905.27" y="1231.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Extensions::Common::Wasm::Context::onDestroy() (4 samples, 0.02%)</title><rect x="795.5" y="949" width="0.2" height="15.0" fill="rgb(243,115,36)" rx="2" ry="2" />
<text  x="798.46" y="959.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::onMessageCompleteBase() (126 samples, 0.76%)</title><rect x="870.6" y="1077" width="8.9" height="15.0" fill="rgb(253,187,32)" rx="2" ry="2" />
<text  x="873.55" y="1087.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelExpressionFlatImpl::Evaluate(google::api::expr::runtime::BaseActivation const&amp;, google::protobuf::Arena*) const (52 samples, 0.31%)</title><rect x="1037.5" y="805" width="3.7" height="15.0" fill="rgb(214,67,52)" rx="2" ry="2" />
<text  x="1040.46" y="815.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.01%)</title><rect x="690.9" y="1205" width="0.2" height="15.0" fill="rgb(221,120,10)" rx="2" ry="2" />
<text  x="693.92" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (1,640 samples, 9.88%)</title><rect x="391.2" y="1141" width="116.7" height="15.0" fill="rgb(222,153,7)" rx="2" ry="2" />
<text  x="394.24" y="1151.5" >[unknown]</text>
</g>
<g >
<title>__fget_light (2 samples, 0.01%)</title><rect x="96.0" y="1173" width="0.2" height="15.0" fill="rgb(229,204,40)" rx="2" ry="2" />
<text  x="99.05" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onWriteReady() (260 samples, 1.57%)</title><rect x="1169.7" y="1237" width="18.5" height="15.0" fill="rgb(222,107,46)" rx="2" ry="2" />
<text  x="1172.66" y="1247.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Extensions::Common::Wasm::Context::log(Envoy::Http::RequestHeaderMap const*, Envoy::Http::ResponseHeaderMap const*, Envoy::Http::ResponseTrailerMap const*, Envoy::StreamInfo::StreamInfo const&amp;) (2 samples, 0.01%)</title><rect x="794.7" y="949" width="0.2" height="15.0" fill="rgb(205,98,1)" rx="2" ry="2" />
<text  x="797.75" y="959.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ActiveClient::numActiveStreams() const (2 samples, 0.01%)</title><rect x="994.7" y="997" width="0.2" height="15.0" fill="rgb(208,190,19)" rx="2" ry="2" />
<text  x="997.72" y="1007.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (2 samples, 0.01%)</title><rect x="539.5" y="1141" width="0.2" height="15.0" fill="rgb(234,226,7)" rx="2" ry="2" />
<text  x="542.52" y="1151.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (23 samples, 0.14%)</title><rect x="198.2" y="1125" width="1.7" height="15.0" fill="rgb(232,86,41)" rx="2" ry="2" />
<text  x="201.24" y="1135.5" ></text>
</g>
<g >
<title>ksoftirqd/28 (3 samples, 0.02%)</title><rect x="659.3" y="1381" width="0.2" height="15.0" fill="rgb(215,194,32)" rx="2" ry="2" />
<text  x="662.27" y="1391.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::ServerConnectionImpl::maybeAddSentinelBufferFragment(Envoy::Buffer::Instance&amp;) (4 samples, 0.02%)</title><rect x="1000.3" y="933" width="0.3" height="15.0" fill="rgb(246,95,15)" rx="2" ry="2" />
<text  x="1003.34" y="943.5" ></text>
</g>
<g >
<title>finish_task_switch (39 samples, 0.24%)</title><rect x="619.4" y="981" width="2.8" height="15.0" fill="rgb(254,31,46)" rx="2" ry="2" />
<text  x="622.45" y="991.5" ></text>
</g>
<g >
<title>ip_rcv (90 samples, 0.54%)</title><rect x="1157.5" y="485" width="6.4" height="15.0" fill="rgb(242,163,52)" rx="2" ry="2" />
<text  x="1160.50" y="495.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (7 samples, 0.04%)</title><rect x="513.4" y="965" width="0.5" height="15.0" fill="rgb(237,86,6)" rx="2" ry="2" />
<text  x="516.42" y="975.5" ></text>
</g>
<g >
<title>inet_sendmsg (196 samples, 1.18%)</title><rect x="1153.9" y="1013" width="14.0" height="15.0" fill="rgb(222,183,24)" rx="2" ry="2" />
<text  x="1156.95" y="1023.5" ></text>
</g>
<g >
<title>runtime.schedule (17 samples, 0.10%)</title><rect x="113.3" y="1285" width="1.2" height="15.0" fill="rgb(248,179,24)" rx="2" ry="2" />
<text  x="116.33" y="1295.5" ></text>
</g>
<g >
<title>proxy_wasm::null_plugin::MetadataExchange::Plugin::PluginContext::onRequestHeaders(unsigned int, bool) (13 samples, 0.08%)</title><rect x="860.3" y="965" width="0.9" height="15.0" fill="rgb(249,92,21)" rx="2" ry="2" />
<text  x="863.31" y="975.5" ></text>
</g>
<g >
<title>kfree_skbmem (5 samples, 0.03%)</title><rect x="565.1" y="517" width="0.4" height="15.0" fill="rgb(244,211,45)" rx="2" ry="2" />
<text  x="568.12" y="527.5" ></text>
</g>
<g >
<title>Envoy::Stats::HistogramCompletableTimespanImpl::complete() (2 samples, 0.01%)</title><rect x="1047.7" y="965" width="0.1" height="15.0" fill="rgb(225,182,11)" rx="2" ry="2" />
<text  x="1050.70" y="975.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::EvaluatorStack::EvaluatorStack(unsigned long) (4 samples, 0.02%)</title><rect x="789.2" y="757" width="0.3" height="15.0" fill="rgb(238,47,35)" rx="2" ry="2" />
<text  x="792.20" y="767.5" ></text>
</g>
<g >
<title>github.com/docker/docker/image.(*store).GetParent (2 samples, 0.01%)</title><rect x="251.1" y="1061" width="0.2" height="15.0" fill="rgb(208,126,46)" rx="2" ry="2" />
<text  x="254.15" y="1071.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.01%)</title><rect x="935.6" y="1045" width="0.2" height="15.0" fill="rgb(209,75,42)" rx="2" ry="2" />
<text  x="938.62" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::HeaderList::maybeMakeMap() (13 samples, 0.08%)</title><rect x="728.5" y="821" width="1.0" height="15.0" fill="rgb(245,170,11)" rx="2" ry="2" />
<text  x="731.54" y="831.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::setResponseCodeDetails(absl::string_view) (8 samples, 0.05%)</title><rect x="988.3" y="965" width="0.6" height="15.0" fill="rgb(218,155,0)" rx="2" ry="2" />
<text  x="991.32" y="975.5" ></text>
</g>
<g >
<title>Envoy::Stats::HistogramCompletableTimespanImpl::tickCount() const (2 samples, 0.01%)</title><rect x="1047.7" y="949" width="0.1" height="15.0" fill="rgb(242,11,48)" rx="2" ry="2" />
<text  x="1050.70" y="959.5" ></text>
</g>
<g >
<title>absl::string_view::find_last_not_of(absl::string_view, unsigned long) const (2 samples, 0.01%)</title><rect x="1055.9" y="1013" width="0.1" height="15.0" fill="rgb(252,229,24)" rx="2" ry="2" />
<text  x="1058.88" y="1023.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (9 samples, 0.05%)</title><rect x="586.8" y="789" width="0.6" height="15.0" fill="rgb(205,179,54)" rx="2" ry="2" />
<text  x="589.81" y="799.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (122 samples, 0.74%)</title><rect x="1156.5" y="661" width="8.7" height="15.0" fill="rgb(215,118,13)" rx="2" ry="2" />
<text  x="1159.51" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (221 samples, 1.33%)</title><rect x="84.3" y="1237" width="15.7" height="15.0" fill="rgb(220,85,18)" rx="2" ry="2" />
<text  x="87.31" y="1247.5" ></text>
</g>
<g >
<title>ip_local_deliver (149 samples, 0.90%)</title><rect x="1174.4" y="629" width="10.6" height="15.0" fill="rgb(222,55,10)" rx="2" ry="2" />
<text  x="1177.35" y="639.5" ></text>
</g>
<g >
<title>time.Time.Format (2 samples, 0.01%)</title><rect x="231.8" y="1253" width="0.1" height="15.0" fill="rgb(226,136,6)" rx="2" ry="2" />
<text  x="234.81" y="1263.5" ></text>
</g>
<g >
<title>vfs_write (25 samples, 0.15%)</title><rect x="642.5" y="1205" width="1.8" height="15.0" fill="rgb(227,61,40)" rx="2" ry="2" />
<text  x="645.49" y="1215.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.02%)</title><rect x="1131.5" y="1077" width="0.3" height="15.0" fill="rgb(240,96,5)" rx="2" ry="2" />
<text  x="1134.54" y="1087.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="617.5" y="1125" width="0.1" height="15.0" fill="rgb(220,153,41)" rx="2" ry="2" />
<text  x="620.46" y="1135.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (22 samples, 0.13%)</title><rect x="605.4" y="1157" width="1.5" height="15.0" fill="rgb(215,100,51)" rx="2" ry="2" />
<text  x="608.37" y="1167.5" ></text>
</g>
<g >
<title>new_sync_write (286 samples, 1.72%)</title><rect x="517.4" y="1077" width="20.3" height="15.0" fill="rgb(229,54,27)" rx="2" ry="2" />
<text  x="520.40" y="1087.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_28, std::__1::allocator&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_28&gt;, proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;::operator()(proxy_wasm::ContextBase*&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;) (3 samples, 0.02%)</title><rect x="1048.0" y="949" width="0.2" height="15.0" fill="rgb(241,60,1)" rx="2" ry="2" />
<text  x="1050.98" y="959.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ClientConnectionImpl::onMessageCompleteBase() (840 samples, 5.06%)</title><rect x="992.1" y="1061" width="59.7" height="15.0" fill="rgb(254,128,30)" rx="2" ry="2" />
<text  x="995.09" y="1071.5" >Envoy:..</text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::OwnedImplReservationSlicesOwnerMultiple::~OwnedImplReservationSlicesOwnerMultiple() (9 samples, 0.05%)</title><rect x="885.1" y="1141" width="0.6" height="15.0" fill="rgb(230,198,12)" rx="2" ry="2" />
<text  x="888.06" y="1151.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="660.1" y="1253" width="0.1" height="15.0" fill="rgb(242,220,3)" rx="2" ry="2" />
<text  x="663.06" y="1263.5" ></text>
</g>
<g >
<title>do_epoll_wait (4 samples, 0.02%)</title><rect x="624.3" y="1205" width="0.3" height="15.0" fill="rgb(246,178,18)" rx="2" ry="2" />
<text  x="627.29" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::Slice(unsigned long, std::__1::shared_ptr&lt;Envoy::Buffer::BufferMemoryAccount&gt;, absl::optional&lt;Envoy::Buffer::Slice::FreeListReference&gt;) (2 samples, 0.01%)</title><rect x="807.3" y="1061" width="0.2" height="15.0" fill="rgb(239,195,9)" rx="2" ry="2" />
<text  x="810.33" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Event::SchedulableCallbackImpl::enabled() (3 samples, 0.02%)</title><rect x="738.7" y="965" width="0.2" height="15.0" fill="rgb(212,135,28)" rx="2" ry="2" />
<text  x="741.71" y="975.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::traceRequest() (41 samples, 0.25%)</title><rect x="1069.0" y="1029" width="3.0" height="15.0" fill="rgb(244,82,37)" rx="2" ry="2" />
<text  x="1072.03" y="1039.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="657.1" y="1109" width="0.2" height="15.0" fill="rgb(206,7,8)" rx="2" ry="2" />
<text  x="660.14" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::addStreamDecoderFilterWorker(std::__1::shared_ptr&lt;Envoy::Http::StreamDecoderFilter&gt;, std::__1::shared_ptr&lt;Envoy::Http::FilterMatchState&gt;, bool) (3 samples, 0.02%)</title><rect x="828.5" y="965" width="0.2" height="15.0" fill="rgb(241,0,17)" rx="2" ry="2" />
<text  x="831.53" y="975.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (4 samples, 0.02%)</title><rect x="133.1" y="1077" width="0.3" height="15.0" fill="rgb(205,118,6)" rx="2" ry="2" />
<text  x="136.10" y="1087.5" ></text>
</g>
<g >
<title>std::__1::__itoa::__u32toa(unsigned int, char*) (2 samples, 0.01%)</title><rect x="759.2" y="917" width="0.1" height="15.0" fill="rgb(237,144,5)" rx="2" ry="2" />
<text  x="762.19" y="927.5" ></text>
</g>
<g >
<title>ep_insert (5 samples, 0.03%)</title><rect x="1127.3" y="901" width="0.3" height="15.0" fill="rgb(228,39,35)" rx="2" ry="2" />
<text  x="1130.28" y="911.5" ></text>
</g>
<g >
<title>__x64_sys_futex (14 samples, 0.08%)</title><rect x="510.0" y="1141" width="1.0" height="15.0" fill="rgb(234,57,30)" rx="2" ry="2" />
<text  x="513.00" y="1151.5" ></text>
</g>
<g >
<title>github.com/docker/docker/daemon/logger/jsonfilelog/jsonlog.(*JSONLogs).MarshalJSONBuf (66 samples, 0.40%)</title><rect x="227.4" y="1269" width="4.7" height="15.0" fill="rgb(214,62,21)" rx="2" ry="2" />
<text  x="230.40" y="1279.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (3 samples, 0.02%)</title><rect x="659.3" y="1333" width="0.2" height="15.0" fill="rgb(221,68,39)" rx="2" ry="2" />
<text  x="662.27" y="1343.5" ></text>
</g>
<g >
<title>Wasm::Common::populateHTTPRequestInfo(bool, bool, Wasm::Common::RequestInfo*) (267 samples, 1.61%)</title><rect x="764.7" y="853" width="19.0" height="15.0" fill="rgb(248,130,32)" rx="2" ry="2" />
<text  x="767.67" y="863.5" ></text>
</g>
<g >
<title>tcp_ack (11 samples, 0.07%)</title><rect x="924.9" y="533" width="0.8" height="15.0" fill="rgb(244,181,30)" rx="2" ry="2" />
<text  x="927.89" y="543.5" ></text>
</g>
<g >
<title>common_file_perm (3 samples, 0.02%)</title><rect x="1187.6" y="1013" width="0.2" height="15.0" fill="rgb(223,33,41)" rx="2" ry="2" />
<text  x="1190.58" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::move(Envoy::Buffer::Instance&amp;) (4 samples, 0.02%)</title><rect x="977.9" y="901" width="0.3" height="15.0" fill="rgb(208,11,46)" rx="2" ry="2" />
<text  x="980.87" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="604.6" y="1189" width="0.2" height="15.0" fill="rgb(225,57,31)" rx="2" ry="2" />
<text  x="607.59" y="1199.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::reserveWithMaxLength(unsigned long) (26 samples, 0.16%)</title><rect x="886.2" y="1173" width="1.8" height="15.0" fill="rgb(224,156,20)" rx="2" ry="2" />
<text  x="889.20" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::encodeData(Envoy::Buffer::Instance&amp;, bool) (9 samples, 0.05%)</title><rect x="802.1" y="997" width="0.7" height="15.0" fill="rgb(215,212,10)" rx="2" ry="2" />
<text  x="805.14" y="1007.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="1145.8" y="613" width="0.2" height="15.0" fill="rgb(213,57,32)" rx="2" ry="2" />
<text  x="1148.84" y="623.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.02%)</title><rect x="657.1" y="1285" width="0.3" height="15.0" fill="rgb(211,62,4)" rx="2" ry="2" />
<text  x="660.14" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="679.5" y="1317" width="0.2" height="15.0" fill="rgb(251,158,29)" rx="2" ry="2" />
<text  x="682.54" y="1327.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.02%)</title><rect x="997.8" y="693" width="0.3" height="15.0" fill="rgb(249,29,2)" rx="2" ry="2" />
<text  x="1000.85" y="703.5" ></text>
</g>
<g >
<title>futex_wake (70 samples, 0.42%)</title><rect x="203.4" y="1093" width="5.0" height="15.0" fill="rgb(223,79,53)" rx="2" ry="2" />
<text  x="206.43" y="1103.5" ></text>
</g>
<g >
<title>vfs_read (2 samples, 0.01%)</title><rect x="656.3" y="1221" width="0.1" height="15.0" fill="rgb(225,146,52)" rx="2" ry="2" />
<text  x="659.29" y="1231.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::ServerConnectionImpl::onHeadersCompleteBase() (725 samples, 4.37%)</title><rect x="1065.0" y="1077" width="51.5" height="15.0" fill="rgb(253,143,28)" rx="2" ry="2" />
<text  x="1067.98" y="1087.5" >non-v..</text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.01%)</title><rect x="33.9" y="1141" width="0.1" height="15.0" fill="rgb(226,195,50)" rx="2" ry="2" />
<text  x="36.89" y="1151.5" ></text>
</g>
<g >
<title>do_anonymous_page (2 samples, 0.01%)</title><rect x="507.0" y="1013" width="0.2" height="15.0" fill="rgb(220,114,6)" rx="2" ry="2" />
<text  x="510.02" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.07%)</title><rect x="212.6" y="1157" width="0.9" height="15.0" fill="rgb(230,155,25)" rx="2" ry="2" />
<text  x="215.60" y="1167.5" ></text>
</g>
<g >
<title>ipv4_mtu (2 samples, 0.01%)</title><rect x="908.9" y="245" width="0.1" height="15.0" fill="rgb(247,94,39)" rx="2" ry="2" />
<text  x="911.89" y="255.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="682.0" y="1349" width="0.2" height="15.0" fill="rgb(251,155,17)" rx="2" ry="2" />
<text  x="684.96" y="1359.5" ></text>
</g>
<g >
<title>Envoy::Tracing::HttpTracerImpl::startSpan(Envoy::Tracing::Config const&amp;, Envoy::Http::RequestHeaderMap&amp;, Envoy::StreamInfo::StreamInfo const&amp;, Envoy::Tracing::Decision) (33 samples, 0.20%)</title><rect x="1069.4" y="1013" width="2.3" height="15.0" fill="rgb(208,213,48)" rx="2" ry="2" />
<text  x="1072.39" y="1023.5" ></text>
</g>
<g >
<title>proxy_wasm::NullVm::setWord(unsigned long, proxy_wasm::Word) (2 samples, 0.01%)</title><rect x="784.1" y="837" width="0.1" height="15.0" fill="rgb(246,69,27)" rx="2" ry="2" />
<text  x="787.08" y="847.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::getExisting(absl::string_view) (6 samples, 0.04%)</title><rect x="860.8" y="901" width="0.4" height="15.0" fill="rgb(232,56,6)" rx="2" ry="2" />
<text  x="863.81" y="911.5" ></text>
</g>
<g >
<title>ip_finish_output2 (4 samples, 0.02%)</title><rect x="1161.8" y="325" width="0.3" height="15.0" fill="rgb(209,49,33)" rx="2" ry="2" />
<text  x="1164.77" y="335.5" ></text>
</g>
<g >
<title>do_futex (101 samples, 0.61%)</title><rect x="499.4" y="1045" width="7.2" height="15.0" fill="rgb(248,158,15)" rx="2" ry="2" />
<text  x="502.41" y="1055.5" ></text>
</g>
<g >
<title>security_file_permission (4 samples, 0.02%)</title><rect x="537.8" y="1077" width="0.3" height="15.0" fill="rgb(243,225,1)" rx="2" ry="2" />
<text  x="540.81" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (19 samples, 0.11%)</title><rect x="1127.0" y="949" width="1.3" height="15.0" fill="rgb(236,162,38)" rx="2" ry="2" />
<text  x="1129.99" y="959.5" ></text>
</g>
<g >
<title>br_nf_hook_thresh (84 samples, 0.51%)</title><rect x="908.2" y="597" width="6.0" height="15.0" fill="rgb(243,27,10)" rx="2" ry="2" />
<text  x="911.25" y="607.5" ></text>
</g>
<g >
<title>Envoy::Network::TransportSocketOptionsImpl::serverNameOverride() const (3 samples, 0.02%)</title><rect x="849.2" y="917" width="0.2" height="15.0" fill="rgb(225,160,21)" rx="2" ry="2" />
<text  x="852.22" y="927.5" ></text>
</g>
<g >
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="585.0" y="645" width="0.3" height="15.0" fill="rgb(254,201,49)" rx="2" ry="2" />
<text  x="587.96" y="655.5" ></text>
</g>
<g >
<title>std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;proxy_wasm::null_plugin::Stats::SimpleStat, std::__1::allocator&lt;proxy_wasm::null_plugin::Stats::SimpleStat&gt; &gt; &gt;, void*&gt;*&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;proxy_wasm::null_plugin::Stats::SimpleStat, std::__1::allocator&lt;proxy_wasm::null_plugin::Stats::SimpleStat&gt; &gt; &gt;, std::__1::__unordered_map_hasher&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::__hash_value_type&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;proxy_wasm::null_plugin::Stats::SimpleStat, std::__1::allocator&lt;proxy_wasm::null_plugin::Stats::SimpleStat&gt; &gt; &gt;, proxy_wasm::null_plugin::Stats::HashIstioDimensions, std::__1::equal_to&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, true&gt;, std::__1::__unordered_map_equal&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::__hash_value_type&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;proxy_wasm::null_plugin::Stats::SimpleStat, std::__1::allocator&lt;proxy_wasm::null_plugin::Stats::SimpleStat&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, proxy_wasm::null_plugin::Stats::HashIstioDimensions, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;proxy_wasm::null_plugin::Stats::SimpleStat, std::__1::allocator&lt;proxy_wasm::null_plugin::Stats::SimpleStat&gt; &gt; &gt; &gt; &gt;::find&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;) (7 samples, 0.04%)</title><rect x="792.5" y="853" width="0.5" height="15.0" fill="rgb(254,229,34)" rx="2" ry="2" />
<text  x="795.47" y="863.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::refreshDurationTimeout() (2 samples, 0.01%)</title><rect x="1067.5" y="997" width="0.2" height="15.0" fill="rgb(227,68,28)" rx="2" ry="2" />
<text  x="1070.54" y="1007.5" ></text>
</g>
<g >
<title>__mutex_lock.isra.0 (2 samples, 0.01%)</title><rect x="198.0" y="1077" width="0.1" height="15.0" fill="rgb(227,212,3)" rx="2" ry="2" />
<text  x="200.96" y="1087.5" ></text>
</g>
<g >
<title>local.runtime.resetspinning (2 samples, 0.01%)</title><rect x="131.4" y="1141" width="0.1" height="15.0" fill="rgb(226,41,28)" rx="2" ry="2" />
<text  x="134.39" y="1151.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="499.2" y="1013" width="0.1" height="15.0" fill="rgb(254,23,37)" rx="2" ry="2" />
<text  x="502.20" y="1023.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.01%)</title><rect x="744.8" y="661" width="0.1" height="15.0" fill="rgb(236,134,6)" rx="2" ry="2" />
<text  x="747.75" y="671.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.02%)</title><rect x="506.7" y="997" width="0.2" height="15.0" fill="rgb(251,9,44)" rx="2" ry="2" />
<text  x="509.73" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::ZipkinSpan::~ZipkinSpan() (6 samples, 0.04%)</title><rect x="960.1" y="1237" width="0.4" height="15.0" fill="rgb(253,50,52)" rx="2" ry="2" />
<text  x="963.09" y="1247.5" ></text>
</g>
<g >
<title>br_allowed_ingress (2 samples, 0.01%)</title><rect x="1156.8" y="581" width="0.1" height="15.0" fill="rgb(229,60,10)" rx="2" ry="2" />
<text  x="1159.79" y="591.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Extensions::NetworkFilters::HttpConnectionManager::HttpConnectionManagerConfig::localReply() const (2 samples, 0.01%)</title><rect x="813.7" y="1029" width="0.2" height="15.0" fill="rgb(214,95,36)" rx="2" ry="2" />
<text  x="816.73" y="1039.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="624.0" y="1157" width="0.1" height="15.0" fill="rgb(228,191,21)" rx="2" ry="2" />
<text  x="627.00" y="1167.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (5 samples, 0.03%)</title><rect x="557.3" y="965" width="0.4" height="15.0" fill="rgb(205,116,38)" rx="2" ry="2" />
<text  x="560.30" y="975.5" ></text>
</g>
<g >
<title>std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; Envoy::Http::HeaderMapImpl::HeaderList::insert&lt;Envoy::Http::LowerCaseString const&amp;&gt;(Envoy::Http::LowerCaseString const&amp;) (2 samples, 0.01%)</title><rect x="980.5" y="917" width="0.1" height="15.0" fill="rgb(232,228,35)" rx="2" ry="2" />
<text  x="983.50" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (247 samples, 1.49%)</title><rect x="624.1" y="1253" width="17.6" height="15.0" fill="rgb(236,198,37)" rx="2" ry="2" />
<text  x="627.14" y="1263.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Http::Http1::StreamEncoderImpl::encodeHeadersBase(Envoy::Http::RequestOrResponseHeaderMap const&amp;, absl::optional&lt;unsigned long&gt;, bool, bool)::$_0, std::__1::allocator&lt;Envoy::Http::Http1::StreamEncoderImpl::encodeHeadersBase(Envoy::Http::RequestOrResponseHeaderMap const&amp;, absl::optional&lt;unsigned long&gt;, bool, bool)::$_0&gt;, Envoy::Http::HeaderMap::Iterate (Envoy::Http::HeaderEntry const&amp;)&gt;::operator()(Envoy::Http::HeaderEntry const&amp;) (20 samples, 0.12%)</title><rect x="722.4" y="885" width="1.4" height="15.0" fill="rgb(241,58,19)" rx="2" ry="2" />
<text  x="725.35" y="895.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (126 samples, 0.76%)</title><rect x="924.3" y="757" width="9.0" height="15.0" fill="rgb(211,156,27)" rx="2" ry="2" />
<text  x="927.32" y="767.5" ></text>
</g>
<g >
<title>proxy_wasm::WasmBase::getRootContext(std::__1::shared_ptr&lt;proxy_wasm::PluginBase&gt; const&amp;, bool) (8 samples, 0.05%)</title><rect x="1078.5" y="949" width="0.6" height="15.0" fill="rgb(236,105,12)" rx="2" ry="2" />
<text  x="1081.49" y="959.5" ></text>
</g>
<g >
<title>__netif_receive_skb (325 samples, 1.96%)</title><rect x="562.9" y="725" width="23.1" height="15.0" fill="rgb(240,88,33)" rx="2" ry="2" />
<text  x="565.91" y="735.5" >_..</text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::decodeData(Envoy::Buffer::Instance&amp;, bool) (24 samples, 0.14%)</title><rect x="868.7" y="1061" width="1.7" height="15.0" fill="rgb(247,89,53)" rx="2" ry="2" />
<text  x="871.71" y="1071.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (7 samples, 0.04%)</title><rect x="515.3" y="1013" width="0.5" height="15.0" fill="rgb(246,31,15)" rx="2" ry="2" />
<text  x="518.27" y="1023.5" ></text>
</g>
<g >
<title>ip_finish_output (14 samples, 0.08%)</title><rect x="910.4" y="181" width="1.0" height="15.0" fill="rgb(241,155,31)" rx="2" ry="2" />
<text  x="913.45" y="191.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#1}::__invoke(http_parser*) (54 samples, 0.33%)</title><rect x="1060.3" y="1109" width="3.8" height="15.0" fill="rgb(227,223,39)" rx="2" ry="2" />
<text  x="1063.29" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::checkMaxHeadersSize() (2 samples, 0.01%)</title><rect x="1055.0" y="1061" width="0.2" height="15.0" fill="rgb(219,93,25)" rx="2" ry="2" />
<text  x="1058.03" y="1071.5" ></text>
</g>
<g >
<title>write_cache_pages (2 samples, 0.01%)</title><rect x="659.0" y="1253" width="0.1" height="15.0" fill="rgb(234,57,45)" rx="2" ry="2" />
<text  x="661.99" y="1263.5" ></text>
</g>
<g >
<title>absl::StrCat(absl::AlphaNum const&amp;, absl::AlphaNum const&amp;, absl::AlphaNum const&amp;) (4 samples, 0.02%)</title><rect x="787.4" y="709" width="0.2" height="15.0" fill="rgb(242,113,26)" rx="2" ry="2" />
<text  x="790.35" y="719.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::StaticLookupTable&lt;Envoy::Http::RequestHeaderMap&gt;::lookup(Envoy::Http::HeaderMapImpl&amp;, absl::string_view) (2 samples, 0.01%)</title><rect x="880.9" y="1029" width="0.1" height="15.0" fill="rgb(226,201,8)" rx="2" ry="2" />
<text  x="883.87" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*, char const*, unsigned long)#1}::__invoke(http_parser*, char const*, unsigned long) (5 samples, 0.03%)</title><rect x="879.6" y="1109" width="0.3" height="15.0" fill="rgb(246,57,18)" rx="2" ry="2" />
<text  x="882.59" y="1119.5" ></text>
</g>
<g >
<title>do_syscall_64 (173 samples, 1.04%)</title><rect x="236.1" y="1237" width="12.3" height="15.0" fill="rgb(238,180,37)" rx="2" ry="2" />
<text  x="239.07" y="1247.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (16 samples, 0.10%)</title><rect x="950.5" y="1205" width="1.1" height="15.0" fill="rgb(219,206,39)" rx="2" ry="2" />
<text  x="953.49" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onHeadersComplete() (738 samples, 4.45%)</title><rect x="1064.2" y="1093" width="52.5" height="15.0" fill="rgb(236,82,21)" rx="2" ry="2" />
<text  x="1067.20" y="1103.5" >Envoy..</text>
</g>
<g >
<title>Envoy::Http::HeaderString::setCopy(char const*, unsigned int) (2 samples, 0.01%)</title><rect x="864.7" y="1045" width="0.2" height="15.0" fill="rgb(234,105,27)" rx="2" ry="2" />
<text  x="867.72" y="1055.5" ></text>
</g>
<g >
<title>google::protobuf::Descriptor::FindFieldByName(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) const (3 samples, 0.02%)</title><rect x="1040.2" y="741" width="0.2" height="15.0" fill="rgb(233,47,14)" rx="2" ry="2" />
<text  x="1043.16" y="751.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Router::PrefixRouteEntryImpl::matches(Envoy::Http::RequestHeaderMap const&amp;, Envoy::StreamInfo::StreamInfo const&amp;, unsigned long) const (6 samples, 0.04%)</title><rect x="1068.4" y="981" width="0.4" height="15.0" fill="rgb(206,154,31)" rx="2" ry="2" />
<text  x="1071.39" y="991.5" ></text>
</g>
<g >
<title>br_nf_pre_routing_finish (103 samples, 0.62%)</title><rect x="1156.8" y="613" width="7.3" height="15.0" fill="rgb(227,120,47)" rx="2" ry="2" />
<text  x="1159.79" y="623.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.01%)</title><rect x="1047.8" y="965" width="0.2" height="15.0" fill="rgb(230,150,13)" rx="2" ry="2" />
<text  x="1050.84" y="975.5" ></text>
</g>
<g >
<title>security_file_permission (6 samples, 0.04%)</title><rect x="246.7" y="1157" width="0.5" height="15.0" fill="rgb(254,91,42)" rx="2" ry="2" />
<text  x="249.74" y="1167.5" ></text>
</g>
<g >
<title>event_add_nolock_ (25 samples, 0.15%)</title><rect x="998.6" y="869" width="1.7" height="15.0" fill="rgb(208,115,46)" rx="2" ry="2" />
<text  x="1001.56" y="879.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.01%)</title><rect x="623.4" y="1093" width="0.2" height="15.0" fill="rgb(251,118,3)" rx="2" ry="2" />
<text  x="626.43" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::getExisting(absl::string_view) (6 samples, 0.04%)</title><rect x="1110.1" y="901" width="0.4" height="15.0" fill="rgb(214,127,10)" rx="2" ry="2" />
<text  x="1113.07" y="911.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (85 samples, 0.51%)</title><rect x="925.7" y="485" width="6.0" height="15.0" fill="rgb(218,72,40)" rx="2" ry="2" />
<text  x="928.67" y="495.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="33.7" y="1109" width="0.2" height="15.0" fill="rgb(220,193,25)" rx="2" ry="2" />
<text  x="36.68" y="1119.5" ></text>
</g>
<g >
<title>ip_output (376 samples, 2.27%)</title><rect x="562.0" y="885" width="26.7" height="15.0" fill="rgb(218,14,46)" rx="2" ry="2" />
<text  x="564.99" y="895.5" >i..</text>
</g>
<g >
<title>__slab_free (3 samples, 0.02%)</title><rect x="1175.1" y="405" width="0.3" height="15.0" fill="rgb(208,142,3)" rx="2" ry="2" />
<text  x="1178.14" y="415.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="907.0" y="725" width="0.1" height="15.0" fill="rgb(245,47,49)" rx="2" ry="2" />
<text  x="909.96" y="735.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="998.1" y="757" width="0.2" height="15.0" fill="rgb(242,228,10)" rx="2" ry="2" />
<text  x="1001.13" y="767.5" ></text>
</g>
<g >
<title>parse_url_char (4 samples, 0.02%)</title><rect x="882.5" y="1109" width="0.3" height="15.0" fill="rgb(208,1,0)" rx="2" ry="2" />
<text  x="885.50" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#2}::__invoke(http_parser*) (292 samples, 1.76%)</title><rect x="971.3" y="1093" width="20.7" height="15.0" fill="rgb(224,187,34)" rx="2" ry="2" />
<text  x="974.25" y="1103.5" ></text>
</g>
<g >
<title>iptable_mangle_hook (2 samples, 0.01%)</title><rect x="1162.4" y="389" width="0.1" height="15.0" fill="rgb(240,68,11)" rx="2" ry="2" />
<text  x="1165.41" y="399.5" ></text>
</g>
<g >
<title>Envoy::Network::FilterManagerImpl::onWrite(Envoy::Network::FilterManagerImpl::ActiveWriteFilter*, Envoy::Network::WriteBufferSource&amp;) (2 samples, 0.01%)</title><rect x="1118.4" y="949" width="0.1" height="15.0" fill="rgb(228,216,1)" rx="2" ry="2" />
<text  x="1121.39" y="959.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.04%)</title><rect x="752.8" y="901" width="0.5" height="15.0" fill="rgb(246,46,29)" rx="2" ry="2" />
<text  x="755.79" y="911.5" ></text>
</g>
<g >
<title>apparmor_file_permission (4 samples, 0.02%)</title><rect x="537.8" y="1061" width="0.3" height="15.0" fill="rgb(230,35,24)" rx="2" ry="2" />
<text  x="540.81" y="1071.5" ></text>
</g>
<g >
<title>Envoy::ThreadLocal::InstanceImpl::SlotImpl::get() (2 samples, 0.01%)</title><rect x="1060.6" y="997" width="0.2" height="15.0" fill="rgb(218,129,8)" rx="2" ry="2" />
<text  x="1063.64" y="1007.5" ></text>
</g>
<g >
<title>i40e_napi_poll (2 samples, 0.01%)</title><rect x="598.1" y="1125" width="0.2" height="15.0" fill="rgb(252,213,23)" rx="2" ry="2" />
<text  x="601.12" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestEncoderWrapper::encodeHeaders(Envoy::Http::RequestHeaderMap const&amp;, bool) (65 samples, 0.39%)</title><rect x="1088.0" y="869" width="4.6" height="15.0" fill="rgb(238,179,48)" rx="2" ry="2" />
<text  x="1091.02" y="879.5" ></text>
</g>
<g >
<title>std::__1::shared_ptr&lt;Envoy::Extensions::Common::Wasm::Context&gt; std::__1::allocate_shared&lt;Envoy::Extensions::Common::Wasm::Context, std::__1::allocator&lt;Envoy::Extensions::Common::Wasm::Context&gt;, Envoy::Extensions::Common::Wasm::Wasm*&amp;, unsigned int, std::__1::shared_ptr&lt;Envoy::Extensions::Common::Wasm::PluginHandle&gt;&amp;, void&gt;(std::__1::allocator&lt;Envoy::Extensions::Common::Wasm::Context&gt; const&amp;, Envoy::Extensions::Common::Wasm::Wasm*&amp;, unsigned int&amp;&amp;, std::__1::shared_ptr&lt;Envoy::Extensions::Common::Wasm::PluginHandle&gt;&amp;) (17 samples, 0.10%)</title><rect x="1079.2" y="965" width="1.2" height="15.0" fill="rgb(249,202,37)" rx="2" ry="2" />
<text  x="1082.20" y="975.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.04%)</title><rect x="683.2" y="1333" width="0.5" height="15.0" fill="rgb(230,40,33)" rx="2" ry="2" />
<text  x="686.24" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (13 samples, 0.08%)</title><rect x="1013.3" y="869" width="0.9" height="15.0" fill="rgb(239,206,53)" rx="2" ry="2" />
<text  x="1016.28" y="879.5" ></text>
</g>
<g >
<title>local.runtime.startm (83 samples, 0.50%)</title><rect x="202.7" y="1205" width="5.9" height="15.0" fill="rgb(213,54,7)" rx="2" ry="2" />
<text  x="205.72" y="1215.5" ></text>
</g>
<g >
<title>google::protobuf::Descriptor::FindFieldByName(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) const (4 samples, 0.02%)</title><rect x="1027.1" y="741" width="0.3" height="15.0" fill="rgb(250,129,8)" rx="2" ry="2" />
<text  x="1030.08" y="751.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (22 samples, 0.13%)</title><rect x="645.9" y="1205" width="1.6" height="15.0" fill="rgb(213,74,42)" rx="2" ry="2" />
<text  x="648.90" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::~StreamEncoderImpl() (61 samples, 0.37%)</title><rect x="996.0" y="917" width="4.3" height="15.0" fill="rgb(239,128,47)" rx="2" ry="2" />
<text  x="999.00" y="927.5" ></text>
</g>
<g >
<title>finish_task_switch (19 samples, 0.11%)</title><rect x="646.1" y="1141" width="1.4" height="15.0" fill="rgb(247,170,20)" rx="2" ry="2" />
<text  x="649.12" y="1151.5" ></text>
</g>
<g >
<title>nf_conntrack_udp_packet (2 samples, 0.01%)</title><rect x="910.2" y="133" width="0.1" height="15.0" fill="rgb(207,92,11)" rx="2" ry="2" />
<text  x="913.17" y="143.5" ></text>
</g>
<g >
<title>github.com/docker/docker/daemon.(*Daemon).refreshImage (7 samples, 0.04%)</title><rect x="251.1" y="1125" width="0.5" height="15.0" fill="rgb(222,81,34)" rx="2" ry="2" />
<text  x="254.08" y="1135.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (47 samples, 0.28%)</title><rect x="625.9" y="1157" width="3.3" height="15.0" fill="rgb(245,112,28)" rx="2" ry="2" />
<text  x="628.85" y="1167.5" ></text>
</g>
<g >
<title>tcp_poll (5 samples, 0.03%)</title><rect x="950.8" y="1141" width="0.4" height="15.0" fill="rgb(241,193,11)" rx="2" ry="2" />
<text  x="953.84" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Network::SocketImpl::ioHandle() (2 samples, 0.01%)</title><rect x="1168.9" y="1253" width="0.1" height="15.0" fill="rgb(237,129,20)" rx="2" ry="2" />
<text  x="1171.88" y="1263.5" ></text>
</g>
<g >
<title>process_backlog (127 samples, 0.77%)</title><rect x="1156.5" y="709" width="9.0" height="15.0" fill="rgb(216,59,15)" rx="2" ry="2" />
<text  x="1159.51" y="719.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="131.4" y="949" width="0.1" height="15.0" fill="rgb(217,107,49)" rx="2" ry="2" />
<text  x="134.39" y="959.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::move(Envoy::Buffer::Instance&amp;) (4 samples, 0.02%)</title><rect x="802.4" y="949" width="0.3" height="15.0" fill="rgb(248,87,49)" rx="2" ry="2" />
<text  x="805.43" y="959.5" ></text>
</g>
<g >
<title>__netif_receive_skb (119 samples, 0.72%)</title><rect x="924.5" y="693" width="8.5" height="15.0" fill="rgb(239,84,53)" rx="2" ry="2" />
<text  x="927.53" y="703.5" ></text>
</g>
<g >
<title>dev_queue_xmit (13 samples, 0.08%)</title><rect x="910.4" y="133" width="1.0" height="15.0" fill="rgb(217,109,0)" rx="2" ry="2" />
<text  x="913.45" y="143.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (2 samples, 0.01%)</title><rect x="238.7" y="1077" width="0.1" height="15.0" fill="rgb(211,186,36)" rx="2" ry="2" />
<text  x="241.70" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="970.8" y="1013" width="0.2" height="15.0" fill="rgb(242,170,52)" rx="2" ry="2" />
<text  x="973.83" y="1023.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (3 samples, 0.02%)</title><rect x="237.6" y="1045" width="0.3" height="15.0" fill="rgb(214,17,46)" rx="2" ry="2" />
<text  x="240.64" y="1055.5" ></text>
</g>
<g >
<title>__lock_text_start (6 samples, 0.04%)</title><rect x="510.6" y="1061" width="0.4" height="15.0" fill="rgb(242,157,8)" rx="2" ry="2" />
<text  x="513.57" y="1071.5" ></text>
</g>
<g >
<title>__ip_finish_output (367 samples, 2.21%)</title><rect x="562.1" y="853" width="26.1" height="15.0" fill="rgb(218,108,43)" rx="2" ry="2" />
<text  x="565.06" y="863.5" >_..</text>
</g>
<g >
<title>proxy_wasm::ContextBase::onDone() (3 samples, 0.02%)</title><rect x="795.5" y="933" width="0.2" height="15.0" fill="rgb(207,80,46)" rx="2" ry="2" />
<text  x="798.46" y="943.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.01%)</title><rect x="624.4" y="1141" width="0.2" height="15.0" fill="rgb(214,186,8)" rx="2" ry="2" />
<text  x="627.43" y="1151.5" ></text>
</g>
<g >
<title>ip_forward_finish (53 samples, 0.32%)</title><rect x="908.7" y="405" width="3.7" height="15.0" fill="rgb(250,186,41)" rx="2" ry="2" />
<text  x="911.67" y="415.5" ></text>
</g>
<g >
<title>finish_task_switch (21 samples, 0.13%)</title><rect x="605.4" y="1093" width="1.5" height="15.0" fill="rgb(249,151,25)" rx="2" ry="2" />
<text  x="608.44" y="1103.5" ></text>
</g>
<g >
<title>runtime.findrunnable (17 samples, 0.10%)</title><rect x="113.3" y="1269" width="1.2" height="15.0" fill="rgb(237,49,48)" rx="2" ry="2" />
<text  x="116.33" y="1279.5" ></text>
</g>
<g >
<title>Envoy::Upstream::ManagedResourceImpl::canCreate() (3 samples, 0.02%)</title><rect x="846.2" y="949" width="0.2" height="15.0" fill="rgb(249,175,18)" rx="2" ry="2" />
<text  x="849.23" y="959.5" ></text>
</g>
<g >
<title>Envoy::Api::Impl::timeSource() (2 samples, 0.01%)</title><rect x="946.1" y="1301" width="0.2" height="15.0" fill="rgb(249,153,17)" rx="2" ry="2" />
<text  x="949.15" y="1311.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderUtility::isEnvoyInternalRequest(Envoy::Http::RequestHeaderMap const&amp;) (2 samples, 0.01%)</title><rect x="798.6" y="965" width="0.1" height="15.0" fill="rgb(228,169,30)" rx="2" ry="2" />
<text  x="801.59" y="975.5" ></text>
</g>
<g >
<title>aa_file_perm (5 samples, 0.03%)</title><rect x="246.7" y="1093" width="0.4" height="15.0" fill="rgb(251,116,33)" rx="2" ry="2" />
<text  x="249.74" y="1103.5" ></text>
</g>
<g >
<title>tcp_sendmsg (196 samples, 1.18%)</title><rect x="1153.9" y="997" width="14.0" height="15.0" fill="rgb(251,173,29)" rx="2" ry="2" />
<text  x="1156.95" y="1007.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.10%)</title><rect x="134.1" y="1061" width="1.2" height="15.0" fill="rgb(253,129,24)" rx="2" ry="2" />
<text  x="137.09" y="1071.5" ></text>
</g>
<g >
<title>finish_task_switch (59 samples, 0.36%)</title><rect x="599.0" y="1077" width="4.2" height="15.0" fill="rgb(225,109,47)" rx="2" ry="2" />
<text  x="601.97" y="1087.5" ></text>
</g>
<g >
<title>schedule (86 samples, 0.52%)</title><rect x="952.3" y="1173" width="6.1" height="15.0" fill="rgb(214,154,28)" rx="2" ry="2" />
<text  x="955.26" y="1183.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="623.4" y="1029" width="0.2" height="15.0" fill="rgb(221,60,33)" rx="2" ry="2" />
<text  x="626.43" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Extensions::NetworkFilters::HttpConnectionManager::HttpConnectionManagerConfig::createFilterChainForFactories(Envoy::Http::FilterChainFactoryCallbacks&amp;, std::__1::list&lt;std::__1::unique_ptr&lt;Envoy::Config::ExtensionConfigProvider&lt;Envoy::Server::Configuration::NamedHttpFilterConfigFactory, std::__1::function&lt;void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt; &gt;, std::__1::default_delete&lt;Envoy::Config::ExtensionConfigProvider&lt;Envoy::Server::Configuration::NamedHttpFilterConfigFactory, std::__1::function&lt;void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt; &gt; &gt; &gt;, std::__1::allocator&lt;std::__1::unique_ptr&lt;Envoy::Config::ExtensionConfigProvider&lt;Envoy::Server::Configuration::NamedHttpFilterConfigFactory, std::__1::function&lt;void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt; &gt;, std::__1::default_delete&lt;Envoy::Config::ExtensionConfigProvider&lt;Envoy::Server::Configuration::NamedHttpFilterConfigFactory, std::__1::function&lt;void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt; &gt; &gt; &gt; &gt; &gt; const&amp;) (50 samples, 0.30%)</title><rect x="827.9" y="1013" width="3.5" height="15.0" fill="rgb(221,80,10)" rx="2" ry="2" />
<text  x="830.89" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::setRoute(std::__1::shared_ptr&lt;Envoy::Router::Route const&gt;) (38 samples, 0.23%)</title><rect x="816.7" y="1013" width="2.7" height="15.0" fill="rgb(233,165,46)" rx="2" ry="2" />
<text  x="819.72" y="1023.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ThreadSafeArena::AllocateAlignedWithCleanupFallback(unsigned long, std::type_info const*) (4 samples, 0.02%)</title><rect x="781.2" y="789" width="0.3" height="15.0" fill="rgb(221,29,3)" rx="2" ry="2" />
<text  x="784.23" y="799.5" ></text>
</g>
<g >
<title>do_syscall_64 (715 samples, 4.31%)</title><rect x="438.7" y="997" width="50.8" height="15.0" fill="rgb(237,150,17)" rx="2" ry="2" />
<text  x="441.68" y="1007.5" >do_sy..</text>
</g>
<g >
<title>encoding/json.mapEncoder.encode-fm (4 samples, 0.02%)</title><rect x="251.6" y="997" width="0.3" height="15.0" fill="rgb(229,159,47)" rx="2" ry="2" />
<text  x="254.58" y="1007.5" ></text>
</g>
<g >
<title>runtime.notesleep (166 samples, 1.00%)</title><rect x="213.8" y="1189" width="11.8" height="15.0" fill="rgb(215,91,16)" rx="2" ry="2" />
<text  x="216.81" y="1199.5" ></text>
</g>
<g >
<title>absl::Status::Status(absl::StatusCode, absl::string_view) (3 samples, 0.02%)</title><rect x="1039.3" y="709" width="0.2" height="15.0" fill="rgb(228,184,15)" rx="2" ry="2" />
<text  x="1042.31" y="719.5" ></text>
</g>
<g >
<title>rw_verify_area (4 samples, 0.02%)</title><rect x="1187.6" y="1061" width="0.3" height="15.0" fill="rgb(252,14,34)" rx="2" ry="2" />
<text  x="1190.58" y="1071.5" ></text>
</g>
<g >
<title>local.runtime.reentersyscall (2 samples, 0.01%)</title><rect x="248.4" y="1237" width="0.1" height="15.0" fill="rgb(226,111,7)" rx="2" ry="2" />
<text  x="251.38" y="1247.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (10 samples, 0.06%)</title><rect x="238.0" y="1045" width="0.7" height="15.0" fill="rgb(243,78,17)" rx="2" ry="2" />
<text  x="240.99" y="1055.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.02%)</title><rect x="907.2" y="645" width="0.3" height="15.0" fill="rgb(254,114,27)" rx="2" ry="2" />
<text  x="910.25" y="655.5" ></text>
</g>
<g >
<title>Envoy::Upstream::ConnPoolMap&lt;std::__1::vector&lt;unsigned char, std::__1::allocator&lt;unsigned char&gt; &gt;, Envoy::Http::ConnectionPool::Instance&gt;::getPool(std::__1::vector&lt;unsigned char, std::__1::allocator&lt;unsigned char&gt; &gt; const&amp;, std::__1::function&lt;std::__1::unique_ptr&lt;Envoy::Http::ConnectionPool::Instance, std::__1::default_delete&lt;Envoy::Http::ConnectionPool::Instance&gt; &gt; ()&gt; const&amp;) (3 samples, 0.02%)</title><rect x="849.5" y="917" width="0.2" height="15.0" fill="rgb(248,128,41)" rx="2" ry="2" />
<text  x="852.50" y="927.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::chargeUpstreamCode(unsigned long, Envoy::Http::ResponseHeaderMap const&amp;, std::__1::shared_ptr&lt;Envoy::Upstream::HostDescription const&gt;, bool) (49 samples, 0.30%)</title><rect x="984.5" y="981" width="3.5" height="15.0" fill="rgb(212,202,34)" rx="2" ry="2" />
<text  x="987.48" y="991.5" ></text>
</g>
<g >
<title>std::__1::__shared_ptr_emplace&lt;Envoy::StreamInfo::FilterStateImpl, std::__1::allocator&lt;Envoy::StreamInfo::FilterStateImpl&gt; &gt;::__shared_ptr_emplace&lt;std::__1::pair&lt;std::__1::shared_ptr&lt;Envoy::StreamInfo::FilterState&gt;, Envoy::StreamInfo::FilterState::LifeSpan&gt;, Envoy::StreamInfo::FilterState::LifeSpan&gt;(std::__1::allocator&lt;Envoy::StreamInfo::FilterStateImpl&gt;, std::__1::pair&lt;std::__1::shared_ptr&lt;Envoy::StreamInfo::FilterState&gt;, Envoy::StreamInfo::FilterState::LifeSpan&gt;&amp;&amp;, Envoy::StreamInfo::FilterState::LifeSpan&amp;&amp;) (2 samples, 0.01%)</title><rect x="1063.1" y="981" width="0.1" height="15.0" fill="rgb(209,79,48)" rx="2" ry="2" />
<text  x="1066.06" y="991.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::get_property(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (121 samples, 0.73%)</title><rect x="770.0" y="821" width="8.6" height="15.0" fill="rgb(251,192,2)" rx="2" ry="2" />
<text  x="773.00" y="831.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerUtility::mutateXfccRequestHeader(Envoy::Http::RequestHeaderMap&amp;, Envoy::Network::Connection&amp;, Envoy::Http::ConnectionManagerConfig&amp;) (2 samples, 0.01%)</title><rect x="825.1" y="1013" width="0.2" height="15.0" fill="rgb(245,70,19)" rx="2" ry="2" />
<text  x="828.11" y="1023.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::EnvoyInternalRequest() const (2 samples, 0.01%)</title><rect x="798.6" y="949" width="0.1" height="15.0" fill="rgb(247,210,3)" rx="2" ry="2" />
<text  x="801.59" y="959.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="893.0" y="1125" width="0.2" height="15.0" fill="rgb(234,183,42)" rx="2" ry="2" />
<text  x="896.03" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Network::RawBufferSocket::doWrite(Envoy::Buffer::Instance&amp;, bool) (217 samples, 1.31%)</title><rect x="920.8" y="1221" width="15.4" height="15.0" fill="rgb(248,32,47)" rx="2" ry="2" />
<text  x="923.76" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::encodeHeadersBase(Envoy::Http::RequestOrResponseHeaderMap const&amp;, absl::optional&lt;unsigned long&gt;, bool, bool) (40 samples, 0.24%)</title><rect x="838.8" y="821" width="2.9" height="15.0" fill="rgb(207,64,35)" rx="2" ry="2" />
<text  x="841.84" y="831.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.02%)</title><rect x="921.9" y="1045" width="0.2" height="15.0" fill="rgb(227,178,15)" rx="2" ry="2" />
<text  x="924.90" y="1055.5" ></text>
</g>
<g >
<title>iptunnel_handle_offloads (2 samples, 0.01%)</title><rect x="908.7" y="245" width="0.2" height="15.0" fill="rgb(214,71,25)" rx="2" ry="2" />
<text  x="911.74" y="255.5" ></text>
</g>
<g >
<title>Envoy::BasicResourceLimitImpl::max() (2 samples, 0.01%)</title><rect x="1095.8" y="917" width="0.2" height="15.0" fill="rgb(250,177,8)" rx="2" ry="2" />
<text  x="1098.84" y="927.5" ></text>
</g>
<g >
<title>absl::Mutex::Unlock() (3 samples, 0.02%)</title><rect x="1019.7" y="725" width="0.2" height="15.0" fill="rgb(206,167,15)" rx="2" ry="2" />
<text  x="1022.68" y="735.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_manip_pkt (2 samples, 0.01%)</title><rect x="1166.7" y="741" width="0.2" height="15.0" fill="rgb(206,175,48)" rx="2" ry="2" />
<text  x="1169.75" y="751.5" ></text>
</g>
<g >
<title>ip_forward_finish (2 samples, 0.01%)</title><rect x="1156.3" y="565" width="0.1" height="15.0" fill="rgb(221,48,12)" rx="2" ry="2" />
<text  x="1159.29" y="575.5" ></text>
</g>
<g >
<title>ip_forward (73 samples, 0.44%)</title><rect x="1157.7" y="421" width="5.2" height="15.0" fill="rgb(236,112,35)" rx="2" ry="2" />
<text  x="1160.71" y="431.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::ExecutionFrame::GetIterVar(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, google::api::expr::runtime::CelValue*) const (10 samples, 0.06%)</title><rect x="786.9" y="741" width="0.7" height="15.0" fill="rgb(227,144,47)" rx="2" ry="2" />
<text  x="789.92" y="751.5" ></text>
</g>
<g >
<title>pipe_poll (4 samples, 0.02%)</title><rect x="35.7" y="997" width="0.3" height="15.0" fill="rgb(250,88,49)" rx="2" ry="2" />
<text  x="38.67" y="1007.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::hasDataWithName(absl::string_view) const (2 samples, 0.01%)</title><rect x="847.5" y="949" width="0.2" height="15.0" fill="rgb(213,98,32)" rx="2" ry="2" />
<text  x="850.51" y="959.5" ></text>
</g>
<g >
<title>__cxxabiv1::__class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const (3 samples, 0.02%)</title><rect x="683.7" y="1365" width="0.3" height="15.0" fill="rgb(234,103,25)" rx="2" ry="2" />
<text  x="686.74" y="1375.5" ></text>
</g>
<g >
<title>tcp_ack (19 samples, 0.11%)</title><rect x="1174.9" y="533" width="1.3" height="15.0" fill="rgb(224,197,11)" rx="2" ry="2" />
<text  x="1177.85" y="543.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.01%)</title><rect x="642.2" y="1189" width="0.1" height="15.0" fill="rgb(238,19,20)" rx="2" ry="2" />
<text  x="645.21" y="1199.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelProtoWrapper::CreateMessage(google::protobuf::Message const*, google::protobuf::Arena*) (5 samples, 0.03%)</title><rect x="1025.5" y="757" width="0.4" height="15.0" fill="rgb(208,155,43)" rx="2" ry="2" />
<text  x="1028.51" y="767.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ConnectionManagerImpl::ActiveStream::route(std::__1::function&lt;Envoy::Router::RouteMatchStatus (std::__1::shared_ptr&lt;Envoy::Router::Route const&gt;, Envoy::Router::RouteEvalStatus)&gt; const&amp;) (3 samples, 0.02%)</title><rect x="1081.8" y="965" width="0.2" height="15.0" fill="rgb(241,172,42)" rx="2" ry="2" />
<text  x="1084.84" y="975.5" ></text>
</g>
<g >
<title>do_writev (202 samples, 1.22%)</title><rect x="1153.9" y="1109" width="14.4" height="15.0" fill="rgb(225,79,41)" rx="2" ry="2" />
<text  x="1156.95" y="1119.5" ></text>
</g>
<g >
<title>hash_conntrack_raw (2 samples, 0.01%)</title><rect x="1155.6" y="773" width="0.1" height="15.0" fill="rgb(223,62,29)" rx="2" ry="2" />
<text  x="1158.58" y="783.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::staticLookup(absl::string_view) (2 samples, 0.01%)</title><rect x="1031.4" y="773" width="0.2" height="15.0" fill="rgb(241,3,10)" rx="2" ry="2" />
<text  x="1034.42" y="783.5" ></text>
</g>
<g >
<title>Wasm::Common::extractEmptyNodeFlatBuffer() (5 samples, 0.03%)</title><rect x="1015.3" y="837" width="0.4" height="15.0" fill="rgb(225,106,18)" rx="2" ry="2" />
<text  x="1018.34" y="847.5" ></text>
</g>
<g >
<title>futex_wait (65 samples, 0.39%)</title><rect x="598.8" y="1157" width="4.6" height="15.0" fill="rgb(239,30,20)" rx="2" ry="2" />
<text  x="601.76" y="1167.5" ></text>
</g>
<g >
<title>[Missed User Stack] (26 samples, 0.16%)</title><rect x="939.0" y="1365" width="1.9" height="15.0" fill="rgb(217,70,8)" rx="2" ry="2" />
<text  x="942.04" y="1375.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="623.4" y="1189" width="0.2" height="15.0" fill="rgb(235,29,36)" rx="2" ry="2" />
<text  x="626.36" y="1199.5" ></text>
</g>
<g >
<title>rw_verify_area (4 samples, 0.02%)</title><rect x="918.1" y="1061" width="0.3" height="15.0" fill="rgb(237,52,35)" rx="2" ry="2" />
<text  x="921.13" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::StaticLookupTable&lt;Envoy::Http::ResponseHeaderMap&gt;::lookup(Envoy::Http::HeaderMapImpl&amp;, absl::string_view) (3 samples, 0.02%)</title><rect x="729.5" y="805" width="0.2" height="15.0" fill="rgb(241,3,22)" rx="2" ry="2" />
<text  x="732.46" y="815.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::HeaderList::maybeMakeMap() (7 samples, 0.04%)</title><rect x="983.1" y="821" width="0.5" height="15.0" fill="rgb(239,70,25)" rx="2" ry="2" />
<text  x="986.06" y="831.5" ></text>
</g>
<g >
<title>ipt_do_table (3 samples, 0.02%)</title><rect x="912.2" y="325" width="0.2" height="15.0" fill="rgb(216,49,11)" rx="2" ry="2" />
<text  x="915.16" y="335.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (2 samples, 0.01%)</title><rect x="1165.8" y="677" width="0.2" height="15.0" fill="rgb(234,223,42)" rx="2" ry="2" />
<text  x="1168.82" y="687.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (22 samples, 0.13%)</title><rect x="605.4" y="1141" width="1.5" height="15.0" fill="rgb(228,85,43)" rx="2" ry="2" />
<text  x="608.37" y="1151.5" ></text>
</g>
<g >
<title>futex_wake (362 samples, 2.18%)</title><rect x="459.3" y="949" width="25.7" height="15.0" fill="rgb(216,27,3)" rx="2" ry="2" />
<text  x="462.30" y="959.5" >f..</text>
</g>
<g >
<title>gro_normal_list.part.0 (2 samples, 0.01%)</title><rect x="598.1" y="1093" width="0.2" height="15.0" fill="rgb(216,24,46)" rx="2" ry="2" />
<text  x="601.12" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::setRoute(std::__1::shared_ptr&lt;Envoy::Router::Route const&gt;) (31 samples, 0.19%)</title><rect x="1066.1" y="1013" width="2.2" height="15.0" fill="rgb(241,37,21)" rx="2" ry="2" />
<text  x="1069.12" y="1023.5" ></text>
</g>
<g >
<title>__virt_addr_valid (2 samples, 0.01%)</title><rect x="896.2" y="917" width="0.2" height="15.0" fill="rgb(248,72,29)" rx="2" ry="2" />
<text  x="899.23" y="927.5" ></text>
</g>
<g >
<title>std::__1::__murmur2_or_cityhash&lt;unsigned long, 64ul&gt;::operator()(void const*, unsigned long) (3 samples, 0.02%)</title><rect x="1078.8" y="917" width="0.3" height="15.0" fill="rgb(206,38,34)" rx="2" ry="2" />
<text  x="1081.85" y="927.5" ></text>
</g>
<g >
<title>Envoy::Http::CodecClient::onData(Envoy::Buffer::Instance&amp;) (1,255 samples, 7.56%)</title><rect x="968.0" y="1189" width="89.2" height="15.0" fill="rgb(245,161,38)" rx="2" ry="2" />
<text  x="970.98" y="1199.5" >Envoy::Htt..</text>
</g>
<g >
<title>Envoy::Http::HeaderString::append(char const*, unsigned int) (3 samples, 0.02%)</title><rect x="1129.1" y="1077" width="0.2" height="15.0" fill="rgb(209,118,47)" rx="2" ry="2" />
<text  x="1132.06" y="1087.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::getMethodValue() const (2 samples, 0.01%)</title><rect x="1111.3" y="1013" width="0.2" height="15.0" fill="rgb(211,31,31)" rx="2" ry="2" />
<text  x="1114.35" y="1023.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (131 samples, 0.79%)</title><rect x="1156.3" y="741" width="9.3" height="15.0" fill="rgb(220,125,42)" rx="2" ry="2" />
<text  x="1159.29" y="751.5" ></text>
</g>
<g >
<title>finish_task_switch (3 samples, 0.02%)</title><rect x="597.9" y="1093" width="0.2" height="15.0" fill="rgb(210,91,34)" rx="2" ry="2" />
<text  x="600.90" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*, char const*, unsigned long)#3}::__invoke(http_parser*, char const*, unsigned long) (9 samples, 0.05%)</title><rect x="1056.2" y="1093" width="0.6" height="15.0" fill="rgb(215,156,51)" rx="2" ry="2" />
<text  x="1059.16" y="1103.5" ></text>
</g>
<g >
<title>google::protobuf::Symbol::parent_key() const (5 samples, 0.03%)</title><rect x="1028.1" y="757" width="0.3" height="15.0" fill="rgb(240,98,38)" rx="2" ry="2" />
<text  x="1031.07" y="767.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ClientConnectionImpl::newStream(Envoy::Http::ResponseDecoder&amp;) (3 samples, 0.02%)</title><rect x="1094.8" y="885" width="0.3" height="15.0" fill="rgb(232,26,25)" rx="2" ry="2" />
<text  x="1097.85" y="895.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const (9 samples, 0.05%)</title><rect x="684.0" y="1365" width="0.6" height="15.0" fill="rgb(209,150,30)" rx="2" ry="2" />
<text  x="686.95" y="1375.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="498.8" y="1013" width="0.2" height="15.0" fill="rgb(209,204,39)" rx="2" ry="2" />
<text  x="501.84" y="1023.5" ></text>
</g>
<g >
<title>ip_output (16 samples, 0.10%)</title><rect x="910.4" y="197" width="1.2" height="15.0" fill="rgb(235,225,11)" rx="2" ry="2" />
<text  x="913.45" y="207.5" ></text>
</g>
<g >
<title>nf_conntrack_in (6 samples, 0.04%)</title><rect x="923.8" y="805" width="0.4" height="15.0" fill="rgb(243,158,44)" rx="2" ry="2" />
<text  x="926.82" y="815.5" ></text>
</g>
<g >
<title>[unknown] (1,560 samples, 9.40%)</title><rect x="395.8" y="1109" width="110.9" height="15.0" fill="rgb(214,110,14)" rx="2" ry="2" />
<text  x="398.80" y="1119.5" >[unknown]</text>
</g>
<g >
<title>__dev_queue_xmit (7 samples, 0.04%)</title><rect x="1185.4" y="773" width="0.5" height="15.0" fill="rgb(225,45,45)" rx="2" ry="2" />
<text  x="1188.38" y="783.5" ></text>
</g>
<g >
<title>__block_commit_write.isra.0 (5 samples, 0.03%)</title><rect x="242.6" y="1061" width="0.4" height="15.0" fill="rgb(221,40,54)" rx="2" ry="2" />
<text  x="245.61" y="1071.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="734.9" y="933" width="0.1" height="15.0" fill="rgb(213,128,4)" rx="2" ry="2" />
<text  x="737.87" y="943.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.02%)</title><rect x="893.3" y="1061" width="0.2" height="15.0" fill="rgb(232,11,38)" rx="2" ry="2" />
<text  x="896.31" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="682.0" y="1333" width="0.2" height="15.0" fill="rgb(236,24,6)" rx="2" ry="2" />
<text  x="684.96" y="1343.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (3 samples, 0.02%)</title><rect x="119.5" y="1285" width="0.2" height="15.0" fill="rgb(220,110,31)" rx="2" ry="2" />
<text  x="122.52" y="1295.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (2 samples, 0.01%)</title><rect x="906.3" y="821" width="0.1" height="15.0" fill="rgb(226,20,40)" rx="2" ry="2" />
<text  x="909.25" y="831.5" ></text>
</g>
<g >
<title>start_thread (3,421 samples, 20.62%)</title><rect x="945.7" y="1365" width="243.3" height="15.0" fill="rgb(224,206,41)" rx="2" ry="2" />
<text  x="948.72" y="1375.5" >start_thread</text>
</g>
<g >
<title>nf_hook_slow (3 samples, 0.02%)</title><rect x="932.6" y="645" width="0.2" height="15.0" fill="rgb(254,229,50)" rx="2" ry="2" />
<text  x="935.57" y="655.5" ></text>
</g>
<g >
<title>__sched_text_start (12 samples, 0.07%)</title><rect x="212.6" y="1077" width="0.9" height="15.0" fill="rgb(244,125,46)" rx="2" ry="2" />
<text  x="215.60" y="1087.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.02%)</title><rect x="657.4" y="1285" width="0.2" height="15.0" fill="rgb(239,150,27)" rx="2" ry="2" />
<text  x="660.35" y="1295.5" ></text>
</g>
<g >
<title>std::__1::__shared_ptr_emplace&lt;Envoy::Extensions::Common::Wasm::Context, std::__1::allocator&lt;Envoy::Extensions::Common::Wasm::Context&gt; &gt;::__shared_ptr_emplace&lt;Envoy::Extensions::Common::Wasm::Wasm*&amp;, unsigned int, std::__1::shared_ptr&lt;Envoy::Extensions::Common::Wasm::PluginHandle&gt;&amp;&gt;(std::__1::allocator&lt;Envoy::Extensions::Common::Wasm::Context&gt;, Envoy::Extensions::Common::Wasm::Wasm*&amp;, unsigned int&amp;&amp;, std::__1::shared_ptr&lt;Envoy::Extensions::Common::Wasm::PluginHandle&gt;&amp;) (14 samples, 0.08%)</title><rect x="1079.4" y="949" width="1.0" height="15.0" fill="rgb(206,88,52)" rx="2" ry="2" />
<text  x="1082.42" y="959.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (3 samples, 0.02%)</title><rect x="95.5" y="1125" width="0.2" height="15.0" fill="rgb(210,119,42)" rx="2" ry="2" />
<text  x="98.48" y="1135.5" ></text>
</g>
<g >
<title>schedule (99 samples, 0.60%)</title><rect x="217.5" y="1061" width="7.1" height="15.0" fill="rgb(221,212,6)" rx="2" ry="2" />
<text  x="220.51" y="1071.5" ></text>
</g>
<g >
<title>sock_def_readable (2 samples, 0.01%)</title><rect x="623.4" y="965" width="0.2" height="15.0" fill="rgb(244,224,48)" rx="2" ry="2" />
<text  x="626.43" y="975.5" ></text>
</g>
<g >
<title>i40e_xmit_frame_ring (6 samples, 0.04%)</title><rect x="910.9" y="37" width="0.4" height="15.0" fill="rgb(235,108,12)" rx="2" ry="2" />
<text  x="913.88" y="47.5" ></text>
</g>
<g >
<title>ext4_write_end (59 samples, 0.36%)</title><rect x="241.8" y="1093" width="4.2" height="15.0" fill="rgb(238,113,53)" rx="2" ry="2" />
<text  x="244.76" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="1004.8" y="821" width="0.2" height="15.0" fill="rgb(225,180,19)" rx="2" ry="2" />
<text  x="1007.82" y="831.5" ></text>
</g>
<g >
<title>std::__1::vector&lt;google::api::expr::runtime::CelValue, std::__1::allocator&lt;google::api::expr::runtime::CelValue&gt; &gt;::__append(unsigned long) (2 samples, 0.01%)</title><rect x="789.3" y="741" width="0.2" height="15.0" fill="rgb(233,143,7)" rx="2" ry="2" />
<text  x="792.34" y="751.5" ></text>
</g>
<g >
<title>vxlan_xmit (49 samples, 0.30%)</title><rect x="1158.3" y="277" width="3.5" height="15.0" fill="rgb(236,215,44)" rx="2" ry="2" />
<text  x="1161.28" y="287.5" ></text>
</g>
<g >
<title>Envoy::Tracing::HttpTracerImpl::startSpan(Envoy::Tracing::Config const&amp;, Envoy::Http::RequestHeaderMap&amp;, Envoy::StreamInfo::StreamInfo const&amp;, Envoy::Tracing::Decision) (37 samples, 0.22%)</title><rect x="820.9" y="1013" width="2.6" height="15.0" fill="rgb(253,196,12)" rx="2" ry="2" />
<text  x="823.92" y="1023.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (338 samples, 2.04%)</title><rect x="562.2" y="773" width="24.0" height="15.0" fill="rgb(252,68,49)" rx="2" ry="2" />
<text  x="565.20" y="783.5" >_..</text>
</g>
<g >
<title>Envoy::Runtime::runtimeFeatureEnabled(absl::string_view) (5 samples, 0.03%)</title><rect x="1008.2" y="901" width="0.4" height="15.0" fill="rgb(237,87,2)" rx="2" ry="2" />
<text  x="1011.23" y="911.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="851.3" y="949" width="0.1" height="15.0" fill="rgb(220,9,50)" rx="2" ry="2" />
<text  x="854.28" y="959.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="979.9" y="949" width="0.2" height="15.0" fill="rgb(213,206,34)" rx="2" ry="2" />
<text  x="982.93" y="959.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::refreshCachedTracingCustomTags() (18 samples, 0.11%)</title><rect x="1066.3" y="997" width="1.2" height="15.0" fill="rgb(208,205,20)" rx="2" ry="2" />
<text  x="1069.26" y="1007.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (4 samples, 0.02%)</title><rect x="490.9" y="949" width="0.3" height="15.0" fill="rgb(246,149,29)" rx="2" ry="2" />
<text  x="493.95" y="959.5" ></text>
</g>
<g >
<title>github.com/docker/docker/daemon.(*Daemon).Containers (11 samples, 0.07%)</title><rect x="250.8" y="1189" width="0.8" height="15.0" fill="rgb(216,193,44)" rx="2" ry="2" />
<text  x="253.79" y="1199.5" ></text>
</g>
<g >
<title>vfs_write (2 samples, 0.01%)</title><rect x="247.2" y="1173" width="0.1" height="15.0" fill="rgb(251,11,33)" rx="2" ry="2" />
<text  x="250.17" y="1183.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::hasDataWithName(absl::string_view) const (2 samples, 0.01%)</title><rect x="1016.5" y="789" width="0.1" height="15.0" fill="rgb(240,168,42)" rx="2" ry="2" />
<text  x="1019.48" y="799.5" ></text>
</g>
<g >
<title>__lock_text_start (34 samples, 0.20%)</title><rect x="614.9" y="1125" width="2.4" height="15.0" fill="rgb(250,14,51)" rx="2" ry="2" />
<text  x="617.90" y="1135.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.01%)</title><rect x="925.0" y="469" width="0.2" height="15.0" fill="rgb(216,41,22)" rx="2" ry="2" />
<text  x="928.03" y="479.5" ></text>
</g>
<g >
<title>absl::StrCat(absl::AlphaNum const&amp;, absl::AlphaNum const&amp;) (2 samples, 0.01%)</title><rect x="834.4" y="965" width="0.1" height="15.0" fill="rgb(212,197,46)" rx="2" ry="2" />
<text  x="837.36" y="975.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::commit(unsigned long, absl::Span&lt;Envoy::Buffer::RawSlice&gt;, std::__1::unique_ptr&lt;Envoy::Buffer::ReservationSlicesOwner, std::__1::default_delete&lt;Envoy::Buffer::ReservationSlicesOwner&gt; &gt;) (17 samples, 0.10%)</title><rect x="884.8" y="1173" width="1.3" height="15.0" fill="rgb(249,166,13)" rx="2" ry="2" />
<text  x="887.85" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ClientConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (1,345 samples, 8.11%)</title><rect x="712.3" y="1173" width="95.6" height="15.0" fill="rgb(238,15,29)" rx="2" ry="2" />
<text  x="715.25" y="1183.5" >Envoy::Http..</text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::read(Envoy::Buffer::Instance&amp;, absl::optional&lt;unsigned long&gt;) (247 samples, 1.49%)</title><rect x="1133.7" y="1205" width="17.5" height="15.0" fill="rgb(226,141,2)" rx="2" ry="2" />
<text  x="1136.68" y="1215.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Extensions::Common::Wasm::Context::unknown_paths() const (2 samples, 0.01%)</title><rect x="1040.7" y="773" width="0.1" height="15.0" fill="rgb(250,86,45)" rx="2" ry="2" />
<text  x="1043.66" y="783.5" ></text>
</g>
<g >
<title>common_file_perm (3 samples, 0.02%)</title><rect x="622.3" y="1109" width="0.2" height="15.0" fill="rgb(217,17,45)" rx="2" ry="2" />
<text  x="625.29" y="1119.5" ></text>
</g>
<g >
<title>local.os.(*File).Read (575 samples, 3.47%)</title><rect x="130.0" y="1269" width="40.9" height="15.0" fill="rgb(215,33,40)" rx="2" ry="2" />
<text  x="132.97" y="1279.5" >loc..</text>
</g>
<g >
<title>local.github.com/docker/docker/pkg/ioutils.getBuffer (17 samples, 0.10%)</title><rect x="122.4" y="1253" width="1.2" height="15.0" fill="rgb(233,67,35)" rx="2" ry="2" />
<text  x="125.43" y="1263.5" ></text>
</g>
<g >
<title>fsnotify (2 samples, 0.01%)</title><rect x="898.9" y="1061" width="0.1" height="15.0" fill="rgb(254,152,47)" rx="2" ry="2" />
<text  x="901.86" y="1071.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Extensions::HttpFilters::Cors::CorsFilterFactory::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::cors::v3::Cors const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0, std::__1::allocator&lt;Envoy::Extensions::HttpFilters::Cors::CorsFilterFactory::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::cors::v3::Cors const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0&gt;, void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt;::operator()(Envoy::Http::FilterChainFactoryCallbacks&amp;) (3 samples, 0.02%)</title><rect x="828.5" y="997" width="0.2" height="15.0" fill="rgb(218,27,23)" rx="2" ry="2" />
<text  x="831.53" y="1007.5" ></text>
</g>
<g >
<title>local.runtime.startm (49 samples, 0.30%)</title><rect x="126.2" y="1141" width="3.5" height="15.0" fill="rgb(241,36,53)" rx="2" ry="2" />
<text  x="129.20" y="1151.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Extensions::NetworkFilters::HttpConnectionManager::HttpConnectionManagerConfig::idleTimeout() const (3 samples, 0.02%)</title><rect x="796.0" y="965" width="0.2" height="15.0" fill="rgb(220,221,24)" rx="2" ry="2" />
<text  x="798.96" y="975.5" ></text>
</g>
<g >
<title>__libc_cfree (2 samples, 0.01%)</title><rect x="802.5" y="901" width="0.1" height="15.0" fill="rgb(210,83,33)" rx="2" ry="2" />
<text  x="805.50" y="911.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::ServerConnectionImpl::onHeadersCompleteBase() (736 samples, 4.44%)</title><rect x="815.7" y="1077" width="52.3" height="15.0" fill="rgb(221,132,47)" rx="2" ry="2" />
<text  x="818.65" y="1087.5" >non-v..</text>
</g>
<g >
<title>__x64_sys_read (77 samples, 0.46%)</title><rect x="511.2" y="1141" width="5.5" height="15.0" fill="rgb(244,211,24)" rx="2" ry="2" />
<text  x="514.21" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::move(Envoy::Buffer::Instance&amp;) (2 samples, 0.01%)</title><rect x="802.2" y="965" width="0.2" height="15.0" fill="rgb(238,129,38)" rx="2" ry="2" />
<text  x="805.21" y="975.5" ></text>
</g>
<g >
<title>local.runtime.(*lfstack).push (7 samples, 0.04%)</title><rect x="254.5" y="1253" width="0.5" height="15.0" fill="rgb(214,115,45)" rx="2" ry="2" />
<text  x="257.49" y="1263.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (5 samples, 0.03%)</title><rect x="545.6" y="1157" width="0.4" height="15.0" fill="rgb(249,132,29)" rx="2" ry="2" />
<text  x="548.63" y="1167.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (4 samples, 0.02%)</title><rect x="922.7" y="965" width="0.3" height="15.0" fill="rgb(228,55,28)" rx="2" ry="2" />
<text  x="925.68" y="975.5" ></text>
</g>
<g >
<title>Envoy::Network::ProxyProtocolFilterState const&amp; Envoy::StreamInfo::FilterState::getDataReadOnly&lt;Envoy::Network::ProxyProtocolFilterState&gt;(absl::string_view) const (2 samples, 0.01%)</title><rect x="846.9" y="981" width="0.2" height="15.0" fill="rgb(247,59,49)" rx="2" ry="2" />
<text  x="849.94" y="991.5" ></text>
</g>
<g >
<title>__sched_text_start (2 samples, 0.01%)</title><rect x="679.3" y="1301" width="0.1" height="15.0" fill="rgb(230,138,48)" rx="2" ry="2" />
<text  x="682.26" y="1311.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (175 samples, 1.05%)</title><rect x="1154.9" y="917" width="12.4" height="15.0" fill="rgb(240,134,37)" rx="2" ry="2" />
<text  x="1157.87" y="927.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="830.4" y="885" width="0.1" height="15.0" fill="rgb(210,128,42)" rx="2" ry="2" />
<text  x="833.37" y="895.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (4 samples, 0.02%)</title><rect x="115.1" y="1221" width="0.3" height="15.0" fill="rgb(210,63,15)" rx="2" ry="2" />
<text  x="118.11" y="1231.5" ></text>
</g>
<g >
<title>__x64_sys_futex (109 samples, 0.66%)</title><rect x="217.2" y="1125" width="7.7" height="15.0" fill="rgb(246,36,44)" rx="2" ry="2" />
<text  x="220.16" y="1135.5" ></text>
</g>
<g >
<title>ip_finish_output (2 samples, 0.01%)</title><rect x="1156.3" y="533" width="0.1" height="15.0" fill="rgb(248,204,7)" rx="2" ry="2" />
<text  x="1159.29" y="543.5" ></text>
</g>
<g >
<title>new_sync_read (379 samples, 2.28%)</title><rect x="140.0" y="1125" width="26.9" height="15.0" fill="rgb(254,151,39)" rx="2" ry="2" />
<text  x="143.00" y="1135.5" >n..</text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="875.9" y="853" width="0.1" height="15.0" fill="rgb(235,141,42)" rx="2" ry="2" />
<text  x="878.89" y="863.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (3 samples, 0.02%)</title><rect x="914.4" y="549" width="0.2" height="15.0" fill="rgb(249,105,6)" rx="2" ry="2" />
<text  x="917.43" y="559.5" ></text>
</g>
<g >
<title>Envoy::Stats::Counter&amp; Envoy::Stats::ThreadLocalStoreImpl::ScopeImpl::safeMakeStat&lt;Envoy::Stats::Counter&gt;(Envoy::Stats::StatName, Envoy::Stats::StatName, absl::optional&lt;std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; &gt; const&amp;, absl::flat_hash_map&lt;Envoy::Stats::StatName, Envoy::Stats::RefcountPtr&lt;Envoy::Stats::Counter&gt;, absl::hash_internal::Hash&lt;Envoy::Stats::StatName&gt;, std::__1::equal_to&lt;Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName const, Envoy::Stats::RefcountPtr&lt;Envoy::Stats::Counter&gt; &gt; &gt; &gt;&amp;, Envoy::Stats::StatsMatcher::FastResult, Envoy::Stats::StatNameStorageSet&amp;, std::__1::function&lt;Envoy::Stats::RefcountPtr&lt;Envoy::Stats::Counter&gt; (Envoy::Stats::Allocator&amp;, Envoy::Stats::StatName, Envoy::Stats::StatName, std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; const&amp;)&gt;, absl::flat_hash_map&lt;Envoy::Stats::StatName, std::__1::reference_wrapper&lt;Envoy::Stats::Counter&gt;, absl::hash_internal::Hash&lt;Envoy::Stats::StatName&gt;, std::__1::equal_to&lt;Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName const, std::__1::reference_wrapper&lt;Envoy::Stats::Counter&gt; &gt; &gt; &gt;*, absl::flat_hash_set&lt;Envoy::Stats::StatName, absl::hash_internal::Hash&lt;Envoy::Stats::StatName&gt;, std::__1::equal_to&lt;Envoy::Stats::StatName&gt;, std::__1::allocator&lt;Envoy::Stats::StatName&gt; &gt;*, Envoy::Stats::Counter&amp;) (4 samples, 0.02%)</title><rect x="985.4" y="901" width="0.3" height="15.0" fill="rgb(236,117,20)" rx="2" ry="2" />
<text  x="988.40" y="911.5" ></text>
</g>
<g >
<title>sock_poll (3 samples, 0.02%)</title><rect x="491.0" y="933" width="0.2" height="15.0" fill="rgb(231,125,19)" rx="2" ry="2" />
<text  x="494.02" y="943.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.01%)</title><rect x="743.0" y="709" width="0.1" height="15.0" fill="rgb(212,65,42)" rx="2" ry="2" />
<text  x="745.98" y="719.5" ></text>
</g>
<g >
<title>std::__1::pair&lt;unsigned long, bool&gt; absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::shared_ptr&lt;Envoy::Tracing::CustomTag const&gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::shared_ptr&lt;Envoy::Tracing::CustomTag const&gt; &gt; &gt; &gt;::find_or_prepare_insert&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) (9 samples, 0.05%)</title><rect x="1066.9" y="981" width="0.6" height="15.0" fill="rgb(224,75,19)" rx="2" ry="2" />
<text  x="1069.90" y="991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.25%)</title><rect x="116.5" y="1269" width="2.9" height="15.0" fill="rgb(206,221,49)" rx="2" ry="2" />
<text  x="119.46" y="1279.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::get_header_map_value(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (10 samples, 0.06%)</title><rect x="860.5" y="949" width="0.7" height="15.0" fill="rgb(242,46,54)" rx="2" ry="2" />
<text  x="863.53" y="959.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.02%)</title><rect x="484.6" y="853" width="0.3" height="15.0" fill="rgb(205,8,41)" rx="2" ry="2" />
<text  x="487.62" y="863.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="201.4" y="1173" width="0.1" height="15.0" fill="rgb(239,63,36)" rx="2" ry="2" />
<text  x="204.37" y="1183.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.02%)</title><rect x="641.7" y="1221" width="0.2" height="15.0" fill="rgb(233,151,38)" rx="2" ry="2" />
<text  x="644.71" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="672.5" y="1093" width="0.3" height="15.0" fill="rgb(228,72,52)" rx="2" ry="2" />
<text  x="675.50" y="1103.5" ></text>
</g>
<g >
<title>kmem_cache_free (4 samples, 0.02%)</title><rect x="565.2" y="501" width="0.3" height="15.0" fill="rgb(251,163,21)" rx="2" ry="2" />
<text  x="568.19" y="511.5" ></text>
</g>
<g >
<title>Envoy::Http::CodeStatsImpl::chargeResponseTiming(Envoy::Http::CodeStats::ResponseTimingInfo const&amp;) const (13 samples, 0.08%)</title><rect x="1048.6" y="965" width="0.9" height="15.0" fill="rgb(236,159,44)" rx="2" ry="2" />
<text  x="1051.55" y="975.5" ></text>
</g>
<g >
<title>Envoy::Network::ProxyProtocolFilterState const&amp; Envoy::StreamInfo::FilterState::getDataReadOnly&lt;Envoy::Network::ProxyProtocolFilterState&gt;(absl::string_view) const (2 samples, 0.01%)</title><rect x="846.7" y="997" width="0.1" height="15.0" fill="rgb(253,150,30)" rx="2" ry="2" />
<text  x="849.66" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::ResponseHeaderMap&gt;::~TypedHeaderMapImpl() (4 samples, 0.02%)</title><rect x="709.5" y="1221" width="0.3" height="15.0" fill="rgb(210,175,15)" rx="2" ry="2" />
<text  x="712.48" y="1231.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Extensions::NetworkFilters::HttpConnectionManager::HttpConnectionManagerConfig::idleTimeout() const (2 samples, 0.01%)</title><rect x="1047.3" y="965" width="0.2" height="15.0" fill="rgb(250,217,41)" rx="2" ry="2" />
<text  x="1050.34" y="975.5" ></text>
</g>
<g >
<title>security_file_permission (7 samples, 0.04%)</title><rect x="899.1" y="1045" width="0.5" height="15.0" fill="rgb(238,100,23)" rx="2" ry="2" />
<text  x="902.07" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Runtime::getInteger(absl::string_view, unsigned long) (7 samples, 0.04%)</title><rect x="1060.4" y="1029" width="0.5" height="15.0" fill="rgb(233,133,1)" rx="2" ry="2" />
<text  x="1063.43" y="1039.5" ></text>
</g>
<g >
<title>do_syscall_64 (123 samples, 0.74%)</title><rect x="893.2" y="1141" width="8.8" height="15.0" fill="rgb(247,18,35)" rx="2" ry="2" />
<text  x="896.24" y="1151.5" ></text>
</g>
<g >
<title>proxy_wasm::WasmBase::getForeignFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;) (4 samples, 0.02%)</title><rect x="1041.4" y="821" width="0.3" height="15.0" fill="rgb(205,77,4)" rx="2" ry="2" />
<text  x="1044.44" y="831.5" ></text>
</g>
<g >
<title>__lock_text_start (6 samples, 0.04%)</title><rect x="38.2" y="1013" width="0.4" height="15.0" fill="rgb(249,125,7)" rx="2" ry="2" />
<text  x="41.16" y="1023.5" ></text>
</g>
<g >
<title>read_tsc (2 samples, 0.01%)</title><rect x="36.7" y="1045" width="0.2" height="15.0" fill="rgb(239,182,21)" rx="2" ry="2" />
<text  x="39.74" y="1055.5" ></text>
</g>
<g >
<title>runtime.netpollblock (66 samples, 0.40%)</title><rect x="130.8" y="1205" width="4.6" height="15.0" fill="rgb(249,96,10)" rx="2" ry="2" />
<text  x="133.75" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::addImpl(void const*, unsigned long) (3 samples, 0.02%)</title><rect x="1090.4" y="725" width="0.2" height="15.0" fill="rgb(207,36,0)" rx="2" ry="2" />
<text  x="1093.37" y="735.5" ></text>
</g>
<g >
<title>skb_entail (2 samples, 0.01%)</title><rect x="923.0" y="965" width="0.1" height="15.0" fill="rgb(211,59,30)" rx="2" ry="2" />
<text  x="925.97" y="975.5" ></text>
</g>
<g >
<title>i40e_xmit_frame_ring (6 samples, 0.04%)</title><rect x="1160.0" y="53" width="0.4" height="15.0" fill="rgb(233,206,10)" rx="2" ry="2" />
<text  x="1162.99" y="63.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::Slice(Envoy::Buffer::Slice&amp;&amp;) (4 samples, 0.02%)</title><rect x="886.8" y="1157" width="0.3" height="15.0" fill="rgb(206,10,10)" rx="2" ry="2" />
<text  x="889.84" y="1167.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (92 samples, 0.55%)</title><rect x="951.8" y="1189" width="6.6" height="15.0" fill="rgb(238,144,4)" rx="2" ry="2" />
<text  x="954.84" y="1199.5" ></text>
</g>
<g >
<title>runtime.mDoFixup (2 samples, 0.01%)</title><rect x="213.7" y="1189" width="0.1" height="15.0" fill="rgb(209,134,41)" rx="2" ry="2" />
<text  x="216.67" y="1199.5" ></text>
</g>
<g >
<title>ip_finish_output2 (14 samples, 0.08%)</title><rect x="910.4" y="149" width="1.0" height="15.0" fill="rgb(239,19,27)" rx="2" ry="2" />
<text  x="913.45" y="159.5" ></text>
</g>
<g >
<title>ep_insert (5 samples, 0.03%)</title><rect x="744.3" y="741" width="0.3" height="15.0" fill="rgb(207,200,4)" rx="2" ry="2" />
<text  x="747.26" y="751.5" ></text>
</g>
<g >
<title>runtime.systemstack (59 samples, 0.36%)</title><rect x="125.5" y="1205" width="4.2" height="15.0" fill="rgb(241,63,48)" rx="2" ry="2" />
<text  x="128.49" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatchSlice(char const*, unsigned long) (1,246 samples, 7.51%)</title><rect x="968.3" y="1141" width="88.6" height="15.0" fill="rgb(243,81,36)" rx="2" ry="2" />
<text  x="971.34" y="1151.5" >Envoy::Htt..</text>
</g>
<g >
<title>Envoy::MemBlockBuilder&lt;unsigned char&gt;::appendData(absl::Span&lt;unsigned char const&gt;) (2 samples, 0.01%)</title><rect x="733.2" y="917" width="0.1" height="15.0" fill="rgb(227,209,53)" rx="2" ry="2" />
<text  x="736.16" y="927.5" ></text>
</g>
<g >
<title>skb_ext_add (4 samples, 0.02%)</title><rect x="914.9" y="613" width="0.3" height="15.0" fill="rgb(235,219,26)" rx="2" ry="2" />
<text  x="917.93" y="623.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::ConnectionPool::ConnPoolImplBase::ConnPoolImplBase(std::__1::shared_ptr&lt;Envoy::Upstream::Host const&gt;, Envoy::Upstream::ResourcePriority, Envoy::Event::Dispatcher&amp;, std::__1::shared_ptr&lt;std::__1::vector&lt;std::__1::shared_ptr&lt;Envoy::Network::Socket::Option const&gt;, std::__1::allocator&lt;std::__1::shared_ptr&lt;Envoy::Network::Socket::Option const&gt; &gt; &gt; &gt; const&amp;, std::__1::shared_ptr&lt;Envoy::Network::TransportSocketOptions const&gt; const&amp;, Envoy::Upstream::ClusterConnectivityState&amp;)::$_0, std::__1::allocator&lt;Envoy::ConnectionPool::ConnPoolImplBase::ConnPoolImplBase(std::__1::shared_ptr&lt;Envoy::Upstream::Host const&gt;, Envoy::Upstream::ResourcePriority, Envoy::Event::Dispatcher&amp;, std::__1::shared_ptr&lt;std::__1::vector&lt;std::__1::shared_ptr&lt;Envoy::Network::Socket::Option const&gt;, std::__1::allocator&lt;std::__1::shared_ptr&lt;Envoy::Network::Socket::Option const&gt; &gt; &gt; &gt; const&amp;, std::__1::shared_ptr&lt;Envoy::Network::TransportSocketOptions const&gt; const&amp;, Envoy::Upstream::ClusterConnectivityState&amp;)::$_0&gt;, void ()&gt;::operator()() (2 samples, 0.01%)</title><rect x="936.9" y="1301" width="0.1" height="15.0" fill="rgb(247,5,16)" rx="2" ry="2" />
<text  x="939.90" y="1311.5" ></text>
</g>
<g >
<title>__lock_text_start (8 samples, 0.05%)</title><rect x="630.0" y="1141" width="0.5" height="15.0" fill="rgb(231,60,16)" rx="2" ry="2" />
<text  x="632.97" y="1151.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (4 samples, 0.02%)</title><rect x="915.6" y="757" width="0.3" height="15.0" fill="rgb(253,118,37)" rx="2" ry="2" />
<text  x="918.57" y="767.5" ></text>
</g>
<g >
<title>local.runtime.memmove (3 samples, 0.02%)</title><rect x="250.6" y="1349" width="0.2" height="15.0" fill="rgb(235,219,8)" rx="2" ry="2" />
<text  x="253.58" y="1359.5" ></text>
</g>
<g >
<title>__lock_text_start (23 samples, 0.14%)</title><rect x="642.5" y="1109" width="1.6" height="15.0" fill="rgb(251,127,39)" rx="2" ry="2" />
<text  x="645.49" y="1119.5" ></text>
</g>
<g >
<title>__vfs_read (49 samples, 0.30%)</title><rect x="618.7" y="1157" width="3.5" height="15.0" fill="rgb(245,136,21)" rx="2" ry="2" />
<text  x="621.74" y="1167.5" ></text>
</g>
<g >
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="507.4" y="1029" width="0.4" height="15.0" fill="rgb(226,130,38)" rx="2" ry="2" />
<text  x="510.44" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Http::ActiveStreamFilterBase::maybeEvaluateMatchTreeWithNewData(std::__1::function&lt;void (Envoy::Http::Matching::HttpMatchingDataImpl&amp;)&gt;) (2 samples, 0.01%)</title><rect x="974.7" y="965" width="0.1" height="15.0" fill="rgb(239,175,19)" rx="2" ry="2" />
<text  x="977.67" y="975.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::write(Envoy::Buffer::Instance&amp;, bool, bool) (11 samples, 0.07%)</title><rect x="840.8" y="805" width="0.7" height="15.0" fill="rgb(224,136,37)" rx="2" ry="2" />
<text  x="843.76" y="815.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::HttpConnPoolImplBase::newStream(Envoy::Http::ResponseDecoder&amp;, Envoy::Http::ConnectionPool::Callbacks&amp;) (160 samples, 0.96%)</title><rect x="1086.3" y="981" width="11.4" height="15.0" fill="rgb(213,160,51)" rx="2" ry="2" />
<text  x="1089.32" y="991.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::add(void const*, unsigned long) (3 samples, 0.02%)</title><rect x="837.8" y="837" width="0.3" height="15.0" fill="rgb(225,213,45)" rx="2" ry="2" />
<text  x="840.84" y="847.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.01%)</title><rect x="598.1" y="1141" width="0.2" height="15.0" fill="rgb(254,38,48)" rx="2" ry="2" />
<text  x="601.12" y="1151.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::RenderField(google::protobuf::Field const*, google::protobuf::stringpiece_internal::StringPiece, google::protobuf::util::converter::ObjectWriter*) const (3 samples, 0.02%)</title><rect x="1004.4" y="629" width="0.2" height="15.0" fill="rgb(222,67,0)" rx="2" ry="2" />
<text  x="1007.39" y="639.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::execute(char const*, int) (1,329 samples, 8.01%)</title><rect x="713.0" y="1125" width="94.5" height="15.0" fill="rgb(251,118,9)" rx="2" ry="2" />
<text  x="716.04" y="1135.5" >Envoy::Http..</text>
</g>
<g >
<title>runtime.futex (2 samples, 0.01%)</title><rect x="131.4" y="1077" width="0.1" height="15.0" fill="rgb(253,74,30)" rx="2" ry="2" />
<text  x="134.39" y="1087.5" ></text>
</g>
<g >
<title>__x64_sys_futex (16 samples, 0.10%)</title><rect x="134.1" y="1029" width="1.1" height="15.0" fill="rgb(244,76,19)" rx="2" ry="2" />
<text  x="137.09" y="1039.5" ></text>
</g>
<g >
<title>void proxy_wasm::exports::marshalPairs&lt;std::__1::vector&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;(std::__1::vector&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, char*) (3 samples, 0.02%)</title><rect x="1021.0" y="757" width="0.2" height="15.0" fill="rgb(252,47,31)" rx="2" ry="2" />
<text  x="1024.03" y="767.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::Slice(unsigned long, std::__1::shared_ptr&lt;Envoy::Buffer::BufferMemoryAccount&gt;, absl::optional&lt;Envoy::Buffer::Slice::FreeListReference&gt;) (2 samples, 0.01%)</title><rect x="1131.0" y="1077" width="0.1" height="15.0" fill="rgb(215,196,52)" rx="2" ry="2" />
<text  x="1133.98" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Extensions::RequestId::UUIDRequestIDExtension::getTraceReason(Envoy::Http::RequestHeaderMap const&amp;) (2 samples, 0.01%)</title><rect x="826.6" y="1013" width="0.1" height="15.0" fill="rgb(241,93,24)" rx="2" ry="2" />
<text  x="829.61" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Network::FilterManagerImpl::onWrite(Envoy::Network::FilterManagerImpl::ActiveWriteFilter*, Envoy::Network::WriteBufferSource&amp;) (2 samples, 0.01%)</title><rect x="724.3" y="901" width="0.1" height="15.0" fill="rgb(217,58,40)" rx="2" ry="2" />
<text  x="727.27" y="911.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.01%)</title><rect x="506.6" y="1045" width="0.1" height="15.0" fill="rgb(244,21,48)" rx="2" ry="2" />
<text  x="509.59" y="1055.5" ></text>
</g>
<g >
<title>i40e_lan_xmit_frame (8 samples, 0.05%)</title><rect x="1159.8" y="69" width="0.6" height="15.0" fill="rgb(228,95,42)" rx="2" ry="2" />
<text  x="1162.85" y="79.5" ></text>
</g>
<g >
<title>__vfs_write (4 samples, 0.02%)</title><rect x="497.1" y="981" width="0.3" height="15.0" fill="rgb(240,75,15)" rx="2" ry="2" />
<text  x="500.13" y="991.5" ></text>
</g>
<g >
<title>Envoy::Runtime::LoaderImpl::snapshot() (2 samples, 0.01%)</title><rect x="739.6" y="965" width="0.2" height="15.0" fill="rgb(252,55,38)" rx="2" ry="2" />
<text  x="742.63" y="975.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (5 samples, 0.03%)</title><rect x="197.1" y="1077" width="0.4" height="15.0" fill="rgb(253,221,50)" rx="2" ry="2" />
<text  x="200.10" y="1087.5" ></text>
</g>
<g >
<title>tcp_write_xmit (162 samples, 0.98%)</title><rect x="923.2" y="933" width="11.5" height="15.0" fill="rgb(245,95,3)" rx="2" ry="2" />
<text  x="926.18" y="943.5" ></text>
</g>
<g >
<title>dev_queue_xmit (17 samples, 0.10%)</title><rect x="586.5" y="821" width="1.2" height="15.0" fill="rgb(244,112,10)" rx="2" ry="2" />
<text  x="589.45" y="831.5" ></text>
</g>
<g >
<title>Envoy::Stats::ThreadLocalStoreImpl::ScopeImpl::histogramFromStatNameWithTags(Envoy::Stats::StatName const&amp;, absl::optional&lt;std::__1::reference_wrapper&lt;std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; const&gt; &gt;, Envoy::Stats::Histogram::Unit) (4 samples, 0.02%)</title><rect x="1048.9" y="949" width="0.3" height="15.0" fill="rgb(212,178,42)" rx="2" ry="2" />
<text  x="1051.91" y="959.5" ></text>
</g>
<g >
<title>nf_nat_inet_fn (2 samples, 0.01%)</title><rect x="933.8" y="789" width="0.2" height="15.0" fill="rgb(209,132,19)" rx="2" ry="2" />
<text  x="936.85" y="799.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::getExisting(absl::string_view) (3 samples, 0.02%)</title><rect x="822.0" y="933" width="0.2" height="15.0" fill="rgb(253,207,54)" rx="2" ry="2" />
<text  x="824.98" y="943.5" ></text>
</g>
<g >
<title>finish_task_switch (23 samples, 0.14%)</title><rect x="198.2" y="1061" width="1.7" height="15.0" fill="rgb(216,30,37)" rx="2" ry="2" />
<text  x="201.24" y="1071.5" ></text>
</g>
<g >
<title>finish_task_switch (104 samples, 0.63%)</title><rect x="607.4" y="1093" width="7.4" height="15.0" fill="rgb(247,115,19)" rx="2" ry="2" />
<text  x="610.36" y="1103.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (150 samples, 0.90%)</title><rect x="923.3" y="885" width="10.7" height="15.0" fill="rgb(215,193,52)" rx="2" ry="2" />
<text  x="926.32" y="895.5" ></text>
</g>
<g >
<title>ipv4_conntrack_defrag (3 samples, 0.02%)</title><rect x="923.6" y="821" width="0.2" height="15.0" fill="rgb(235,45,44)" rx="2" ry="2" />
<text  x="926.61" y="831.5" ></text>
</g>
<g >
<title>std::__1::__itoa::__u32toa(unsigned int, char*) (2 samples, 0.01%)</title><rect x="1011.9" y="917" width="0.2" height="15.0" fill="rgb(225,22,14)" rx="2" ry="2" />
<text  x="1014.93" y="927.5" ></text>
</g>
<g >
<title>std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, std::__1::__unordered_map_hasher&lt;long, std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, std::__1::hash&lt;long&gt;, std::__1::equal_to&lt;long&gt;, true&gt;, std::__1::__unordered_map_equal&lt;long, std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, std::__1::equal_to&lt;long&gt;, std::__1::hash&lt;long&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt; &gt; &gt;::remove(std::__1::__hash_const_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, void*&gt;*&gt;) (2 samples, 0.01%)</title><rect x="795.2" y="901" width="0.1" height="15.0" fill="rgb(254,206,1)" rx="2" ry="2" />
<text  x="798.17" y="911.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.02%)</title><rect x="489.7" y="997" width="0.2" height="15.0" fill="rgb(219,115,31)" rx="2" ry="2" />
<text  x="492.67" y="1007.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::ValueFromMessage(google::protobuf::Value const*, google::protobuf::Arena*) (5 samples, 0.03%)</title><rect x="767.7" y="757" width="0.4" height="15.0" fill="rgb(254,44,13)" rx="2" ry="2" />
<text  x="770.72" y="767.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (8 samples, 0.05%)</title><rect x="96.3" y="1125" width="0.6" height="15.0" fill="rgb(220,131,25)" rx="2" ry="2" />
<text  x="99.33" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onMessageComplete() (880 samples, 5.30%)</title><rect x="992.1" y="1077" width="62.6" height="15.0" fill="rgb(239,126,50)" rx="2" ry="2" />
<text  x="995.09" y="1087.5" >Envoy:..</text>
</g>
<g >
<title>runtime.nanotime1 (3 samples, 0.02%)</title><rect x="208.6" y="1221" width="0.2" height="15.0" fill="rgb(251,77,10)" rx="2" ry="2" />
<text  x="211.62" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::handlePath(Envoy::Http::RequestHeaderMap&amp;, absl::string_view) (19 samples, 0.11%)</title><rect x="1114.3" y="1045" width="1.3" height="15.0" fill="rgb(237,173,50)" rx="2" ry="2" />
<text  x="1117.26" y="1055.5" ></text>
</g>
<g >
<title>containerd-shim (1,451 samples, 8.74%)</title><rect x="10.1" y="1381" width="103.2" height="15.0" fill="rgb(243,25,22)" rx="2" ry="2" />
<text  x="13.07" y="1391.5" >containerd-s..</text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ConnectionManagerImpl::ActiveStream::endStream() (4 samples, 0.02%)</title><rect x="1047.6" y="981" width="0.2" height="15.0" fill="rgb(239,13,8)" rx="2" ry="2" />
<text  x="1050.56" y="991.5" ></text>
</g>
<g >
<title>aa_label_sk_perm.part.0 (4 samples, 0.02%)</title><rect x="1147.9" y="965" width="0.3" height="15.0" fill="rgb(232,182,28)" rx="2" ry="2" />
<text  x="1150.90" y="975.5" ></text>
</g>
<g >
<title>syscall.Syscall (229 samples, 1.38%)</title><rect x="232.7" y="1269" width="16.2" height="15.0" fill="rgb(235,188,28)" rx="2" ry="2" />
<text  x="235.66" y="1279.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (9 samples, 0.05%)</title><rect x="874.5" y="901" width="0.7" height="15.0" fill="rgb(249,11,47)" rx="2" ry="2" />
<text  x="877.54" y="911.5" ></text>
</g>
<g >
<title>ipt_do_table (4 samples, 0.02%)</title><rect x="1158.9" y="133" width="0.3" height="15.0" fill="rgb(253,212,20)" rx="2" ry="2" />
<text  x="1161.92" y="143.5" ></text>
</g>
<g >
<title>ext4_map_blocks (2 samples, 0.01%)</title><rect x="240.3" y="1029" width="0.2" height="15.0" fill="rgb(247,56,37)" rx="2" ry="2" />
<text  x="243.34" y="1039.5" ></text>
</g>
<g >
<title>__virt_addr_valid (3 samples, 0.02%)</title><rect x="514.2" y="917" width="0.2" height="15.0" fill="rgb(211,34,14)" rx="2" ry="2" />
<text  x="517.20" y="927.5" ></text>
</g>
<g >
<title>parse_url_char (2 samples, 0.01%)</title><rect x="1131.8" y="1125" width="0.1" height="15.0" fill="rgb(247,210,52)" rx="2" ry="2" />
<text  x="1134.76" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderUtility::isConnect(Envoy::Http::RequestHeaderMap const&amp;) (2 samples, 0.01%)</title><rect x="1089.0" y="805" width="0.2" height="15.0" fill="rgb(238,226,41)" rx="2" ry="2" />
<text  x="1092.02" y="815.5" ></text>
</g>
<g >
<title>mutex_lock (4 samples, 0.02%)</title><rect x="198.0" y="1109" width="0.2" height="15.0" fill="rgb(218,103,34)" rx="2" ry="2" />
<text  x="200.96" y="1119.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="1131.5" y="933" width="0.2" height="15.0" fill="rgb(232,193,31)" rx="2" ry="2" />
<text  x="1134.54" y="943.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::setInline(Envoy::Http::CustomInlineHeaderRegistry::Handle&lt;(Envoy::Http::CustomInlineHeaderRegistry::Type)0&gt;, absl::string_view) (2 samples, 0.01%)</title><rect x="1114.5" y="1029" width="0.2" height="15.0" fill="rgb(245,107,53)" rx="2" ry="2" />
<text  x="1117.55" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getHeaderMapValue(proxy_wasm::WasmHeaderMapType, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;*) (25 samples, 0.15%)</title><rect x="728.1" y="885" width="1.8" height="15.0" fill="rgb(243,41,47)" rx="2" ry="2" />
<text  x="731.11" y="895.5" ></text>
</g>
<g >
<title>run_rebalance_domains (3 samples, 0.02%)</title><rect x="509.6" y="1109" width="0.2" height="15.0" fill="rgb(218,174,3)" rx="2" ry="2" />
<text  x="512.58" y="1119.5" ></text>
</g>
<g >
<title>ip_rcv_finish (77 samples, 0.46%)</title><rect x="908.5" y="437" width="5.5" height="15.0" fill="rgb(226,132,22)" rx="2" ry="2" />
<text  x="911.53" y="447.5" ></text>
</g>
<g >
<title>proxy_wasm::NullPlugin::getContext(unsigned long) (4 samples, 0.02%)</title><rect x="981.7" y="917" width="0.3" height="15.0" fill="rgb(248,66,43)" rx="2" ry="2" />
<text  x="984.71" y="927.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (9 samples, 0.05%)</title><rect x="630.0" y="1173" width="0.6" height="15.0" fill="rgb(207,58,34)" rx="2" ry="2" />
<text  x="632.97" y="1183.5" ></text>
</g>
<g >
<title>do_syscall_64 (31 samples, 0.19%)</title><rect x="642.2" y="1253" width="2.2" height="15.0" fill="rgb(210,15,38)" rx="2" ry="2" />
<text  x="645.21" y="1263.5" ></text>
</g>
<g >
<title>__sched_text_start (2 samples, 0.01%)</title><rect x="114.0" y="1109" width="0.2" height="15.0" fill="rgb(238,3,33)" rx="2" ry="2" />
<text  x="117.04" y="1119.5" ></text>
</g>
<g >
<title>wake_up_q (6 samples, 0.04%)</title><rect x="496.4" y="981" width="0.4" height="15.0" fill="rgb(245,102,5)" rx="2" ry="2" />
<text  x="499.42" y="991.5" ></text>
</g>
<g >
<title>fib_table_lookup (3 samples, 0.02%)</title><rect x="913.0" y="357" width="0.2" height="15.0" fill="rgb(252,13,4)" rx="2" ry="2" />
<text  x="916.01" y="367.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::DynamicMap::operator[](google::api::expr::runtime::CelValue) const (16 samples, 0.10%)</title><rect x="1025.2" y="789" width="1.2" height="15.0" fill="rgb(221,146,35)" rx="2" ry="2" />
<text  x="1028.23" y="799.5" ></text>
</g>
<g >
<title>__alloc_skb (2 samples, 0.01%)</title><rect x="922.7" y="949" width="0.1" height="15.0" fill="rgb(207,186,42)" rx="2" ry="2" />
<text  x="925.68" y="959.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.02%)</title><rect x="506.9" y="1109" width="0.3" height="15.0" fill="rgb(237,170,21)" rx="2" ry="2" />
<text  x="509.95" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::coalesceOrAddSlice(Envoy::Buffer::Slice&amp;&amp;) (2 samples, 0.01%)</title><rect x="1052.9" y="933" width="0.1" height="15.0" fill="rgb(212,217,26)" rx="2" ry="2" />
<text  x="1055.89" y="943.5" ></text>
</g>
<g >
<title>envoy (6 samples, 0.04%)</title><rect x="658.3" y="1381" width="0.4" height="15.0" fill="rgb(205,92,30)" rx="2" ry="2" />
<text  x="661.28" y="1391.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::decodeData(Envoy::Buffer::Instance&amp;, bool) (12 samples, 0.07%)</title><rect x="1117.8" y="1029" width="0.9" height="15.0" fill="rgb(242,168,3)" rx="2" ry="2" />
<text  x="1120.82" y="1039.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::Path() const (2 samples, 0.01%)</title><rect x="758.6" y="917" width="0.2" height="15.0" fill="rgb(212,10,40)" rx="2" ry="2" />
<text  x="761.62" y="927.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getHeaderMapValue(proxy_wasm::WasmHeaderMapType, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;*) (24 samples, 0.14%)</title><rect x="982.3" y="885" width="1.8" height="15.0" fill="rgb(211,91,28)" rx="2" ry="2" />
<text  x="985.35" y="895.5" ></text>
</g>
<g >
<title>google::protobuf::util::MessageToJsonString(google::protobuf::Message const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, google::protobuf::util::JsonPrintOptions const&amp;) (8 samples, 0.05%)</title><rect x="1004.1" y="837" width="0.6" height="15.0" fill="rgb(211,78,43)" rx="2" ry="2" />
<text  x="1007.11" y="847.5" ></text>
</g>
<g >
<title>ip_finish_output2 (2 samples, 0.01%)</title><rect x="1156.3" y="501" width="0.1" height="15.0" fill="rgb(218,27,49)" rx="2" ry="2" />
<text  x="1159.29" y="511.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const (2 samples, 0.01%)</title><rect x="682.4" y="1317" width="0.1" height="15.0" fill="rgb(210,75,3)" rx="2" ry="2" />
<text  x="685.39" y="1327.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="701.6" y="1077" width="0.1" height="15.0" fill="rgb(218,7,52)" rx="2" ry="2" />
<text  x="704.59" y="1087.5" ></text>
</g>
<g >
<title>iptunnel_handle_offloads (2 samples, 0.01%)</title><rect x="908.7" y="229" width="0.2" height="15.0" fill="rgb(228,67,32)" rx="2" ry="2" />
<text  x="911.74" y="239.5" ></text>
</g>
<g >
<title>__lock_text_start (136 samples, 0.82%)</title><rect x="547.0" y="965" width="9.7" height="15.0" fill="rgb(238,191,17)" rx="2" ry="2" />
<text  x="549.98" y="975.5" ></text>
</g>
<g >
<title>ext4_write_begin (4 samples, 0.02%)</title><rect x="237.4" y="1109" width="0.2" height="15.0" fill="rgb(216,90,0)" rx="2" ry="2" />
<text  x="240.35" y="1119.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="1095.3" y="885" width="0.2" height="15.0" fill="rgb(224,61,38)" rx="2" ry="2" />
<text  x="1098.35" y="895.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="490.0" y="1045" width="0.2" height="15.0" fill="rgb(232,196,47)" rx="2" ry="2" />
<text  x="493.02" y="1055.5" ></text>
</g>
<g >
<title>Envoy::StringUtil::ltrim(absl::string_view) (4 samples, 0.02%)</title><rect x="1130.6" y="1077" width="0.3" height="15.0" fill="rgb(243,103,28)" rx="2" ry="2" />
<text  x="1133.62" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Router::RouteEntryImplBase::finalizeRequestHeaders(Envoy::Http::RequestHeaderMap&amp;, Envoy::StreamInfo::StreamInfo const&amp;, bool) const (3 samples, 0.02%)</title><rect x="1102.5" y="997" width="0.2" height="15.0" fill="rgb(250,105,43)" rx="2" ry="2" />
<text  x="1105.46" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#1}::__invoke(http_parser*) (13 samples, 0.08%)</title><rect x="970.3" y="1093" width="1.0" height="15.0" fill="rgb(232,226,53)" rx="2" ry="2" />
<text  x="973.33" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::StaticLookupTable&lt;Envoy::Http::RequestHeaderMap&gt;::lookup(Envoy::Http::HeaderMapImpl&amp;, absl::string_view) (4 samples, 0.02%)</title><rect x="860.8" y="869" width="0.3" height="15.0" fill="rgb(240,44,42)" rx="2" ry="2" />
<text  x="863.81" y="879.5" ></text>
</g>
<g >
<title>event_del_nolock_ (31 samples, 0.19%)</title><rect x="996.1" y="853" width="2.2" height="15.0" fill="rgb(222,154,10)" rx="2" ry="2" />
<text  x="999.07" y="863.5" ></text>
</g>
<g >
<title>finish_task_switch (3 samples, 0.02%)</title><rect x="545.7" y="1077" width="0.2" height="15.0" fill="rgb(228,196,29)" rx="2" ry="2" />
<text  x="548.70" y="1087.5" ></text>
</g>
<g >
<title>ext4_do_update_inode (4 samples, 0.02%)</title><rect x="238.1" y="997" width="0.3" height="15.0" fill="rgb(236,181,15)" rx="2" ry="2" />
<text  x="241.13" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::callAndClearDrainTrackersAndCharges() (3 samples, 0.02%)</title><rect x="1152.7" y="1141" width="0.2" height="15.0" fill="rgb(251,68,29)" rx="2" ry="2" />
<text  x="1155.66" y="1151.5" ></text>
</g>
<g >
<title>epoll_nochangelist_add (28 samples, 0.17%)</title><rect x="1126.4" y="997" width="1.9" height="15.0" fill="rgb(254,78,53)" rx="2" ry="2" />
<text  x="1129.35" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Extensions::HttpFilters::Cors::CorsFilter::decodeHeaders(Envoy::Http::RequestHeaderMap&amp;, bool) (5 samples, 0.03%)</title><rect x="1081.8" y="1013" width="0.3" height="15.0" fill="rgb(206,138,51)" rx="2" ry="2" />
<text  x="1084.76" y="1023.5" ></text>
</g>
<g >
<title>finish_task_switch (21 samples, 0.13%)</title><rect x="605.4" y="1077" width="1.5" height="15.0" fill="rgb(222,145,5)" rx="2" ry="2" />
<text  x="608.44" y="1087.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (42 samples, 0.25%)</title><rect x="243.0" y="1077" width="3.0" height="15.0" fill="rgb(213,124,31)" rx="2" ry="2" />
<text  x="245.97" y="1087.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::RenderField(google::protobuf::Field const*, google::protobuf::stringpiece_internal::StringPiece, google::protobuf::util::converter::ObjectWriter*) const (2 samples, 0.01%)</title><rect x="751.4" y="661" width="0.2" height="15.0" fill="rgb(252,26,27)" rx="2" ry="2" />
<text  x="754.44" y="671.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.02%)</title><rect x="644.6" y="1269" width="0.2" height="15.0" fill="rgb(236,40,3)" rx="2" ry="2" />
<text  x="647.55" y="1279.5" ></text>
</g>
<g >
<title>nf_hook_slow (2 samples, 0.01%)</title><rect x="588.6" y="853" width="0.1" height="15.0" fill="rgb(232,70,16)" rx="2" ry="2" />
<text  x="591.59" y="863.5" ></text>
</g>
<g >
<title>Envoy::Registry::FactoryRegistry&lt;Envoy::Router::GenericConnPoolFactory&gt;::getFactory(absl::string_view) (4 samples, 0.02%)</title><rect x="851.2" y="965" width="0.3" height="15.0" fill="rgb(218,65,40)" rx="2" ry="2" />
<text  x="854.21" y="975.5" ></text>
</g>
<g >
<title>proxy_wasm::WasmBase::getForeignFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;) (13 samples, 0.08%)</title><rect x="790.0" y="821" width="0.9" height="15.0" fill="rgb(251,36,41)" rx="2" ry="2" />
<text  x="792.98" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (59 samples, 0.36%)</title><rect x="196.2" y="1189" width="4.2" height="15.0" fill="rgb(206,42,27)" rx="2" ry="2" />
<text  x="199.25" y="1199.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void (proxy_wasm::ContextBase*, proxy_wasm::Word)&gt;*)::$_1, std::__1::allocator&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void (proxy_wasm::ContextBase*, proxy_wasm::Word)&gt;*)::$_1&gt;, void (proxy_wasm::ContextBase*, proxy_wasm::Word)&gt;::operator()(proxy_wasm::ContextBase*&amp;&amp;, proxy_wasm::Word&amp;&amp;) (455 samples, 2.74%)</title><rect x="1012.8" y="901" width="32.3" height="15.0" fill="rgb(237,104,0)" rx="2" ry="2" />
<text  x="1015.78" y="911.5" >st..</text>
</g>
<g >
<title>__wake_up_sync_key (276 samples, 1.66%)</title><rect x="517.7" y="1045" width="19.6" height="15.0" fill="rgb(225,117,29)" rx="2" ry="2" />
<text  x="520.69" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestHeaderMapImpl::create() (14 samples, 0.08%)</title><rect x="1060.4" y="1061" width="1.0" height="15.0" fill="rgb(218,57,39)" rx="2" ry="2" />
<text  x="1063.36" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::Context(Envoy::Extensions::Common::Wasm::Wasm*, unsigned int, std::__1::shared_ptr&lt;Envoy::Extensions::Common::Wasm::PluginHandle&gt;) (12 samples, 0.07%)</title><rect x="1079.6" y="933" width="0.8" height="15.0" fill="rgb(214,18,21)" rx="2" ry="2" />
<text  x="1082.56" y="943.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::setAndCheckCallbackStatusOr(absl::StatusOr&lt;Envoy::Http::Http1::ParserStatus&gt;&amp;&amp;) (2 samples, 0.01%)</title><rect x="868.0" y="1093" width="0.1" height="15.0" fill="rgb(237,50,2)" rx="2" ry="2" />
<text  x="870.99" y="1103.5" ></text>
</g>
<g >
<title>do_futex (14 samples, 0.08%)</title><rect x="510.0" y="1125" width="1.0" height="15.0" fill="rgb(235,156,27)" rx="2" ry="2" />
<text  x="513.00" y="1135.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;absl::string_view, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;absl::string_view const, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt; &gt; &gt;::prepare_insert(unsigned long) (7 samples, 0.04%)</title><rect x="1085.0" y="917" width="0.5" height="15.0" fill="rgb(213,167,2)" rx="2" ry="2" />
<text  x="1087.96" y="927.5" ></text>
</g>
<g >
<title>[unknown] (2,467 samples, 14.87%)</title><rect x="364.7" y="1189" width="175.5" height="15.0" fill="rgb(212,210,14)" rx="2" ry="2" />
<text  x="367.72" y="1199.5" >[unknown]</text>
</g>
<g >
<title>__ip_finish_output (128 samples, 0.77%)</title><rect x="907.0" y="821" width="9.1" height="15.0" fill="rgb(220,150,22)" rx="2" ry="2" />
<text  x="909.96" y="831.5" ></text>
</g>
<g >
<title>google::protobuf::FileDescriptorTables::FindNestedSymbol(void const*, google::protobuf::stringpiece_internal::StringPiece) const (4 samples, 0.02%)</title><rect x="777.0" y="773" width="0.3" height="15.0" fill="rgb(237,158,12)" rx="2" ry="2" />
<text  x="779.97" y="783.5" ></text>
</g>
<g >
<title>do_futex (2 samples, 0.01%)</title><rect x="607.0" y="1173" width="0.1" height="15.0" fill="rgb(242,215,42)" rx="2" ry="2" />
<text  x="610.00" y="1183.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (7 samples, 0.04%)</title><rect x="1165.6" y="757" width="0.5" height="15.0" fill="rgb(229,52,46)" rx="2" ry="2" />
<text  x="1168.61" y="767.5" ></text>
</g>
<g >
<title>security_file_permission (4 samples, 0.02%)</title><rect x="98.2" y="1157" width="0.3" height="15.0" fill="rgb(217,72,35)" rx="2" ry="2" />
<text  x="101.18" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="1018.9" y="757" width="0.2" height="15.0" fill="rgb(206,107,41)" rx="2" ry="2" />
<text  x="1021.90" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (174 samples, 1.05%)</title><rect x="690.8" y="1285" width="12.4" height="15.0" fill="rgb(206,136,14)" rx="2" ry="2" />
<text  x="693.78" y="1295.5" ></text>
</g>
<g >
<title>do_futex (48 samples, 0.29%)</title><rect x="594.3" y="1157" width="3.5" height="15.0" fill="rgb(211,203,24)" rx="2" ry="2" />
<text  x="597.35" y="1167.5" ></text>
</g>
<g >
<title>proxy_wasm::ContextBase::onLog() (457 samples, 2.75%)</title><rect x="1012.6" y="917" width="32.5" height="15.0" fill="rgb(222,190,35)" rx="2" ry="2" />
<text  x="1015.64" y="927.5" >pr..</text>
</g>
<g >
<title>do_send_specific (3 samples, 0.02%)</title><rect x="622.6" y="1173" width="0.2" height="15.0" fill="rgb(238,153,3)" rx="2" ry="2" />
<text  x="625.58" y="1183.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::ClientTraceId() const (2 samples, 0.01%)</title><rect x="1076.5" y="1013" width="0.1" height="15.0" fill="rgb(247,65,48)" rx="2" ry="2" />
<text  x="1079.50" y="1023.5" ></text>
</g>
<g >
<title>unsigned long std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, Wasm::Common::RequestInfo*&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, Wasm::Common::RequestInfo*&gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, Wasm::Common::RequestInfo*&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, Wasm::Common::RequestInfo*&gt; &gt; &gt;::__erase_unique&lt;unsigned int&gt;(unsigned int const&amp;) (2 samples, 0.01%)</title><rect x="793.8" y="869" width="0.1" height="15.0" fill="rgb(239,27,27)" rx="2" ry="2" />
<text  x="796.75" y="879.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="1156.3" y="645" width="0.1" height="15.0" fill="rgb(215,126,40)" rx="2" ry="2" />
<text  x="1159.29" y="655.5" ></text>
</g>
<g >
<title>unsigned long std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, std::__1::__unordered_map_hasher&lt;long, std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, std::__1::hash&lt;long&gt;, std::__1::equal_to&lt;long&gt;, true&gt;, std::__1::__unordered_map_equal&lt;long, std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, std::__1::equal_to&lt;long&gt;, std::__1::hash&lt;long&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt; &gt; &gt;::__erase_unique&lt;long&gt;(long const&amp;) (7 samples, 0.04%)</title><rect x="1045.7" y="917" width="0.5" height="15.0" fill="rgb(252,46,28)" rx="2" ry="2" />
<text  x="1048.71" y="927.5" ></text>
</g>
<g >
<title>evmap_io_active_ (10 samples, 0.06%)</title><rect x="687.4" y="1285" width="0.7" height="15.0" fill="rgb(229,135,28)" rx="2" ry="2" />
<text  x="690.36" y="1295.5" ></text>
</g>
<g >
<title>napi_complete_done (2 samples, 0.01%)</title><rect x="498.8" y="965" width="0.2" height="15.0" fill="rgb(205,117,17)" rx="2" ry="2" />
<text  x="501.84" y="975.5" ></text>
</g>
<g >
<title>[unknown] (1,440 samples, 8.68%)</title><rect x="397.0" y="1093" width="102.4" height="15.0" fill="rgb(249,154,10)" rx="2" ry="2" />
<text  x="400.00" y="1103.5" >[unknown]</text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::addImpl(void const*, unsigned long) (4 samples, 0.02%)</title><rect x="977.2" y="837" width="0.3" height="15.0" fill="rgb(249,229,13)" rx="2" ry="2" />
<text  x="980.23" y="847.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::HeaderList::~HeaderList() (5 samples, 0.03%)</title><rect x="964.5" y="1237" width="0.4" height="15.0" fill="rgb(233,103,19)" rx="2" ry="2" />
<text  x="967.50" y="1247.5" ></text>
</g>
<g >
<title>Envoy::Runtime::SnapshotImpl::getInteger(absl::string_view, unsigned long) const (2 samples, 0.01%)</title><rect x="1096.1" y="917" width="0.2" height="15.0" fill="rgb(218,167,16)" rx="2" ry="2" />
<text  x="1099.13" y="927.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerUtility::maybeNormalizePath(Envoy::Http::RequestHeaderMap&amp;, Envoy::Http::ConnectionManagerConfig const&amp;) (8 samples, 0.05%)</title><rect x="823.8" y="1029" width="0.6" height="15.0" fill="rgb(217,51,16)" rx="2" ry="2" />
<text  x="826.83" y="1039.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.01%)</title><rect x="796.4" y="965" width="0.1" height="15.0" fill="rgb(216,200,35)" rx="2" ry="2" />
<text  x="799.38" y="975.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (3 samples, 0.02%)</title><rect x="589.9" y="933" width="0.2" height="15.0" fill="rgb(210,84,42)" rx="2" ry="2" />
<text  x="592.87" y="943.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (172 samples, 1.04%)</title><rect x="100.5" y="1253" width="12.3" height="15.0" fill="rgb(220,3,52)" rx="2" ry="2" />
<text  x="103.53" y="1263.5" ></text>
</g>
<g >
<title>unsigned long std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, std::__1::__unordered_map_hasher&lt;long, std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, std::__1::hash&lt;long&gt;, std::__1::equal_to&lt;long&gt;, true&gt;, std::__1::__unordered_map_equal&lt;long, std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, std::__1::equal_to&lt;long&gt;, std::__1::hash&lt;long&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt; &gt; &gt;::__erase_unique&lt;long&gt;(long const&amp;) (2 samples, 0.01%)</title><rect x="795.2" y="917" width="0.1" height="15.0" fill="rgb(206,25,22)" rx="2" ry="2" />
<text  x="798.17" y="927.5" ></text>
</g>
<g >
<title>proxy_wasm::WasmBase::allocContextId() (2 samples, 0.01%)</title><rect x="1080.0" y="901" width="0.1" height="15.0" fill="rgb(245,75,34)" rx="2" ry="2" />
<text  x="1082.99" y="911.5" ></text>
</g>
<g >
<title>__ip_finish_output (2 samples, 0.01%)</title><rect x="1131.5" y="837" width="0.2" height="15.0" fill="rgb(239,34,39)" rx="2" ry="2" />
<text  x="1134.54" y="847.5" ></text>
</g>
<g >
<title>event_base_loop (3,418 samples, 20.60%)</title><rect x="945.7" y="1317" width="243.1" height="15.0" fill="rgb(245,2,18)" rx="2" ry="2" />
<text  x="948.72" y="1327.5" >event_base_loop</text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onMessageComplete() (168 samples, 1.01%)</title><rect x="1116.9" y="1093" width="11.9" height="15.0" fill="rgb(210,204,40)" rx="2" ry="2" />
<text  x="1119.89" y="1103.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="623.4" y="1061" width="0.2" height="15.0" fill="rgb(209,214,18)" rx="2" ry="2" />
<text  x="626.43" y="1071.5" ></text>
</g>
<g >
<title>tcp_rcv_established (139 samples, 0.84%)</title><rect x="1174.7" y="549" width="9.9" height="15.0" fill="rgb(254,8,21)" rx="2" ry="2" />
<text  x="1177.71" y="559.5" ></text>
</g>
<g >
<title>runtime.entersyscall_sysmon (13 samples, 0.08%)</title><rect x="169.4" y="1189" width="0.9" height="15.0" fill="rgb(234,153,50)" rx="2" ry="2" />
<text  x="172.37" y="1199.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::move(Envoy::Buffer::Instance&amp;) (2 samples, 0.01%)</title><rect x="840.8" y="789" width="0.2" height="15.0" fill="rgb(244,53,17)" rx="2" ry="2" />
<text  x="843.83" y="799.5" ></text>
</g>
<g >
<title>sock_write_iter (220 samples, 1.33%)</title><rect x="1171.9" y="1045" width="15.6" height="15.0" fill="rgb(249,61,14)" rx="2" ry="2" />
<text  x="1174.87" y="1055.5" ></text>
</g>
<g >
<title>event_del_nolock_ (2 samples, 0.01%)</title><rect x="1095.2" y="869" width="0.1" height="15.0" fill="rgb(213,67,9)" rx="2" ry="2" />
<text  x="1098.20" y="879.5" ></text>
</g>
<g >
<title>absl::hash_internal::Wyhash(void const*, unsigned long, unsigned long, unsigned long const*) (2 samples, 0.01%)</title><rect x="729.7" y="789" width="0.1" height="15.0" fill="rgb(215,55,50)" rx="2" ry="2" />
<text  x="732.68" y="799.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="1184.6" y="565" width="0.1" height="15.0" fill="rgb(227,9,14)" rx="2" ry="2" />
<text  x="1187.60" y="575.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (1,252 samples, 7.55%)</title><rect x="968.0" y="1157" width="89.0" height="15.0" fill="rgb(212,173,12)" rx="2" ry="2" />
<text  x="970.98" y="1167.5" >Envoy::Htt..</text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::encodeData(Envoy::Buffer::Instance&amp;, bool) (12 samples, 0.07%)</title><rect x="1117.8" y="1013" width="0.9" height="15.0" fill="rgb(217,221,20)" rx="2" ry="2" />
<text  x="1120.82" y="1023.5" ></text>
</g>
<g >
<title>__x64_sys_writev (202 samples, 1.22%)</title><rect x="1153.9" y="1125" width="14.4" height="15.0" fill="rgb(243,76,28)" rx="2" ry="2" />
<text  x="1156.95" y="1135.5" ></text>
</g>
<g >
<title>runtime.schedule (11 samples, 0.07%)</title><rect x="257.3" y="1333" width="0.7" height="15.0" fill="rgb(212,197,8)" rx="2" ry="2" />
<text  x="260.26" y="1343.5" ></text>
</g>
<g >
<title>proxy_wasm::ContextBase::onCreate() (48 samples, 0.29%)</title><rect x="856.5" y="997" width="3.4" height="15.0" fill="rgb(213,35,43)" rx="2" ry="2" />
<text  x="859.47" y="1007.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::ServerConnectionImpl::onMessageBeginBase() (37 samples, 0.22%)</title><rect x="1061.4" y="1077" width="2.6" height="15.0" fill="rgb(226,63,23)" rx="2" ry="2" />
<text  x="1064.35" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Stats::TagUtility::TagStatNameJoiner::TagStatNameJoiner(Envoy::Stats::StatName, Envoy::Stats::StatName, absl::optional&lt;std::__1::reference_wrapper&lt;std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; const&gt; &gt;, Envoy::Stats::SymbolTable&amp;) (6 samples, 0.04%)</title><rect x="733.6" y="917" width="0.4" height="15.0" fill="rgb(227,59,12)" rx="2" ry="2" />
<text  x="736.59" y="927.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="625.6" y="1125" width="0.1" height="15.0" fill="rgb(235,53,46)" rx="2" ry="2" />
<text  x="628.57" y="1135.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="1025.7" y="693" width="0.2" height="15.0" fill="rgb(249,201,41)" rx="2" ry="2" />
<text  x="1028.73" y="703.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (4 samples, 0.02%)</title><rect x="656.4" y="1141" width="0.3" height="15.0" fill="rgb(239,24,20)" rx="2" ry="2" />
<text  x="659.43" y="1151.5" ></text>
</g>
<g >
<title>[unknown] (1,725 samples, 10.40%)</title><rect x="385.7" y="1157" width="122.7" height="15.0" fill="rgb(240,227,2)" rx="2" ry="2" />
<text  x="388.70" y="1167.5" >[unknown]</text>
</g>
<g >
<title>nf_conntrack_in (21 samples, 0.13%)</title><rect x="560.3" y="837" width="1.5" height="15.0" fill="rgb(252,221,38)" rx="2" ry="2" />
<text  x="563.28" y="847.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5, std::__1::allocator&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5&gt;, void (unsigned int)&gt;::operator()(unsigned int&amp;&amp;) (2,858 samples, 17.22%)</title><rect x="965.8" y="1269" width="203.3" height="15.0" fill="rgb(233,165,17)" rx="2" ry="2" />
<text  x="968.85" y="1279.5" >std::__1::__function::__fu..</text>
</g>
<g >
<title>Envoy::Http::Http1::ActiveClient::StreamWrapper::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool) (258 samples, 1.55%)</title><rect x="972.8" y="1029" width="18.4" height="15.0" fill="rgb(242,101,51)" rx="2" ry="2" />
<text  x="975.82" y="1039.5" ></text>
</g>
<g >
<title>skb_release_data (3 samples, 0.02%)</title><rect x="925.2" y="469" width="0.2" height="15.0" fill="rgb(215,36,9)" rx="2" ry="2" />
<text  x="928.17" y="479.5" ></text>
</g>
<g >
<title>local.runtime.bgscavenge (3 samples, 0.02%)</title><rect x="250.4" y="1349" width="0.2" height="15.0" fill="rgb(225,103,13)" rx="2" ry="2" />
<text  x="253.37" y="1359.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (5 samples, 0.03%)</title><rect x="691.8" y="1157" width="0.4" height="15.0" fill="rgb(208,50,21)" rx="2" ry="2" />
<text  x="694.84" y="1167.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::RequestId() const (2 samples, 0.01%)</title><rect x="1011.6" y="917" width="0.2" height="15.0" fill="rgb(250,59,14)" rx="2" ry="2" />
<text  x="1014.65" y="927.5" ></text>
</g>
<g >
<title>apparmor_file_permission (6 samples, 0.04%)</title><rect x="246.7" y="1141" width="0.5" height="15.0" fill="rgb(221,5,35)" rx="2" ry="2" />
<text  x="249.74" y="1151.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::StreamInfoImpl(absl::optional&lt;Envoy::Http::Protocol&gt;, Envoy::TimeSource&amp;, std::__1::shared_ptr&lt;Envoy::Network::ConnectionInfoProvider const&gt; const&amp;, std::__1::shared_ptr&lt;Envoy::StreamInfo::FilterState&gt;) (2 samples, 0.01%)</title><rect x="1063.2" y="997" width="0.1" height="15.0" fill="rgb(218,23,27)" rx="2" ry="2" />
<text  x="1066.20" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.03%)</title><rect x="672.4" y="1125" width="0.4" height="15.0" fill="rgb(220,114,50)" rx="2" ry="2" />
<text  x="675.43" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::reserveWithMaxLength(unsigned long) (35 samples, 0.21%)</title><rect x="1135.4" y="1173" width="2.5" height="15.0" fill="rgb(222,20,11)" rx="2" ry="2" />
<text  x="1138.38" y="1183.5" ></text>
</g>
<g >
<title>sock_def_readable (110 samples, 0.66%)</title><rect x="1176.2" y="517" width="7.8" height="15.0" fill="rgb(247,193,27)" rx="2" ry="2" />
<text  x="1179.20" y="527.5" ></text>
</g>
<g >
<title>std::__1::vector&lt;google::api::expr::runtime::CelValue, std::__1::allocator&lt;google::api::expr::runtime::CelValue&gt; &gt;::__append(unsigned long) (2 samples, 0.01%)</title><rect x="1041.0" y="741" width="0.2" height="15.0" fill="rgb(213,170,47)" rx="2" ry="2" />
<text  x="1044.02" y="751.5" ></text>
</g>
<g >
<title>__libc_cfree (6 samples, 0.04%)</title><rect x="963.2" y="1221" width="0.4" height="15.0" fill="rgb(228,133,43)" rx="2" ry="2" />
<text  x="966.22" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Http::OriginalIPDetection::Xff::XffIPDetection::detect(Envoy::Http::OriginalIPDetectionParams&amp;) (4 samples, 0.02%)</title><rect x="1065.5" y="1029" width="0.3" height="15.0" fill="rgb(254,166,13)" rx="2" ry="2" />
<text  x="1068.55" y="1039.5" ></text>
</g>
<g >
<title>__vfs_read (381 samples, 2.30%)</title><rect x="139.9" y="1141" width="27.0" height="15.0" fill="rgb(252,179,23)" rx="2" ry="2" />
<text  x="142.85" y="1151.5" >_..</text>
</g>
<g >
<title>event_add (3 samples, 0.02%)</title><rect x="978.4" y="869" width="0.2" height="15.0" fill="rgb(225,171,34)" rx="2" ry="2" />
<text  x="981.43" y="879.5" ></text>
</g>
<g >
<title>gro_normal_list.part.0 (2 samples, 0.01%)</title><rect x="657.1" y="1173" width="0.2" height="15.0" fill="rgb(239,197,34)" rx="2" ry="2" />
<text  x="660.14" y="1183.5" ></text>
</g>
<g >
<title>do_nanosleep (4 samples, 0.02%)</title><rect x="597.8" y="1141" width="0.3" height="15.0" fill="rgb(222,109,17)" rx="2" ry="2" />
<text  x="600.83" y="1151.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelProtoWrapper::CreateMessage(google::protobuf::Message const*, google::protobuf::Arena*) (3 samples, 0.02%)</title><rect x="788.3" y="725" width="0.2" height="15.0" fill="rgb(224,194,14)" rx="2" ry="2" />
<text  x="791.28" y="735.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (13 samples, 0.08%)</title><rect x="563.8" y="549" width="1.0" height="15.0" fill="rgb(225,132,38)" rx="2" ry="2" />
<text  x="566.84" y="559.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.02%)</title><rect x="119.9" y="1125" width="0.3" height="15.0" fill="rgb(237,183,0)" rx="2" ry="2" />
<text  x="122.87" y="1135.5" ></text>
</g>
<g >
<title>__sched_text_start (20 samples, 0.12%)</title><rect x="646.0" y="1157" width="1.5" height="15.0" fill="rgb(249,213,13)" rx="2" ry="2" />
<text  x="649.05" y="1167.5" ></text>
</g>
<g >
<title>__sched_text_start (2 samples, 0.01%)</title><rect x="33.7" y="981" width="0.1" height="15.0" fill="rgb(214,171,11)" rx="2" ry="2" />
<text  x="36.68" y="991.5" ></text>
</g>
<g >
<title>wake_up_q (12 samples, 0.07%)</title><rect x="169.4" y="1061" width="0.8" height="15.0" fill="rgb(239,199,4)" rx="2" ry="2" />
<text  x="172.37" y="1071.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="983.9" y="869" width="0.2" height="15.0" fill="rgb(235,128,43)" rx="2" ry="2" />
<text  x="986.91" y="879.5" ></text>
</g>
<g >
<title>Envoy::Stats::ThreadLocalStoreImpl::symbolTable() (2 samples, 0.01%)</title><rect x="1049.2" y="949" width="0.1" height="15.0" fill="rgb(244,29,5)" rx="2" ry="2" />
<text  x="1052.19" y="959.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::decodeHeaders(Envoy::Http::RequestHeaderMap&amp;, bool) (319 samples, 1.92%)</title><rect x="833.1" y="1013" width="22.7" height="15.0" fill="rgb(219,134,12)" rx="2" ry="2" />
<text  x="836.15" y="1023.5" >E..</text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::readDisable(bool) (76 samples, 0.46%)</title><rect x="740.8" y="901" width="5.4" height="15.0" fill="rgb(238,11,7)" rx="2" ry="2" />
<text  x="743.77" y="911.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.02%)</title><rect x="484.6" y="885" width="0.3" height="15.0" fill="rgb(228,74,52)" rx="2" ry="2" />
<text  x="487.62" y="895.5" ></text>
</g>
<g >
<title>do_syscall_64 (254 samples, 1.53%)</title><rect x="605.2" y="1221" width="18.1" height="15.0" fill="rgb(208,119,38)" rx="2" ry="2" />
<text  x="608.23" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Http::ActiveStreamDecoderFilter::~ActiveStreamDecoderFilter() (29 samples, 0.17%)</title><rect x="705.4" y="1221" width="2.1" height="15.0" fill="rgb(249,37,5)" rx="2" ry="2" />
<text  x="708.43" y="1231.5" ></text>
</g>
<g >
<title>proxy_wasm::null_plugin::Stats::PluginContext::onLog() (450 samples, 2.71%)</title><rect x="1013.1" y="885" width="32.0" height="15.0" fill="rgb(230,64,23)" rx="2" ry="2" />
<text  x="1016.14" y="895.5" >pr..</text>
</g>
<g >
<title>do_nanosleep (121 samples, 0.73%)</title><rect x="647.7" y="1221" width="8.6" height="15.0" fill="rgb(208,199,16)" rx="2" ry="2" />
<text  x="650.68" y="1231.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (4 samples, 0.02%)</title><rect x="557.7" y="965" width="0.2" height="15.0" fill="rgb(225,119,8)" rx="2" ry="2" />
<text  x="560.65" y="975.5" ></text>
</g>
<g >
<title>mutex_lock (17 samples, 0.10%)</title><rect x="165.0" y="1077" width="1.2" height="15.0" fill="rgb(221,173,29)" rx="2" ry="2" />
<text  x="167.96" y="1087.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (2 samples, 0.01%)</title><rect x="598.8" y="1109" width="0.1" height="15.0" fill="rgb(249,4,50)" rx="2" ry="2" />
<text  x="601.76" y="1119.5" ></text>
</g>
<g >
<title>tcp_recvmsg (5 samples, 0.03%)</title><rect x="514.9" y="997" width="0.4" height="15.0" fill="rgb(218,35,52)" rx="2" ry="2" />
<text  x="517.91" y="1007.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (107 samples, 0.64%)</title><rect x="607.2" y="1157" width="7.6" height="15.0" fill="rgb(249,106,53)" rx="2" ry="2" />
<text  x="610.22" y="1167.5" ></text>
</g>
<g >
<title>__x64_sys_futex (101 samples, 0.61%)</title><rect x="499.4" y="1061" width="7.2" height="15.0" fill="rgb(239,66,18)" rx="2" ry="2" />
<text  x="502.41" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::write(Envoy::Buffer::Instance&amp;, bool, bool) (18 samples, 0.11%)</title><rect x="1091.1" y="805" width="1.3" height="15.0" fill="rgb(210,27,1)" rx="2" ry="2" />
<text  x="1094.08" y="815.5" ></text>
</g>
<g >
<title>ipt_do_table (3 samples, 0.02%)</title><rect x="1164.3" y="581" width="0.2" height="15.0" fill="rgb(236,160,43)" rx="2" ry="2" />
<text  x="1167.26" y="591.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.03%)</title><rect x="725.4" y="949" width="0.4" height="15.0" fill="rgb(225,57,53)" rx="2" ry="2" />
<text  x="728.41" y="959.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ResponseHeaderMapImpl::getStatusValue() const (3 samples, 0.02%)</title><rect x="973.4" y="981" width="0.2" height="15.0" fill="rgb(215,17,33)" rx="2" ry="2" />
<text  x="976.39" y="991.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (4 samples, 0.02%)</title><rect x="35.4" y="1013" width="0.3" height="15.0" fill="rgb(206,68,20)" rx="2" ry="2" />
<text  x="38.39" y="1023.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (41 samples, 0.25%)</title><rect x="625.9" y="1141" width="2.9" height="15.0" fill="rgb(227,137,23)" rx="2" ry="2" />
<text  x="628.85" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Runtime::SnapshotImpl::getInteger(absl::string_view, unsigned long) const (2 samples, 0.01%)</title><rect x="1096.3" y="917" width="0.2" height="15.0" fill="rgb(241,155,52)" rx="2" ry="2" />
<text  x="1099.34" y="927.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (5 samples, 0.03%)</title><rect x="562.9" y="693" width="0.4" height="15.0" fill="rgb(244,186,7)" rx="2" ry="2" />
<text  x="565.91" y="703.5" ></text>
</g>
<g >
<title>proxy_wasm::contextOrEffectiveContext() (2 samples, 0.01%)</title><rect x="783.4" y="821" width="0.2" height="15.0" fill="rgb(242,103,41)" rx="2" ry="2" />
<text  x="786.44" y="831.5" ></text>
</g>
<g >
<title>Envoy::Stats::ThreadLocalStoreImpl::ScopeImpl::counterFromStatNameWithTags(Envoy::Stats::StatName const&amp;, absl::optional&lt;std::__1::reference_wrapper&lt;std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; const&gt; &gt;) (15 samples, 0.09%)</title><rect x="731.4" y="917" width="1.1" height="15.0" fill="rgb(253,70,53)" rx="2" ry="2" />
<text  x="734.38" y="927.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::iterate(std::__1::function&lt;Envoy::Http::HeaderMap::Iterate (Envoy::Http::HeaderEntry const&amp;)&gt;) const (24 samples, 0.14%)</title><rect x="839.1" y="789" width="1.7" height="15.0" fill="rgb(249,100,27)" rx="2" ry="2" />
<text  x="842.05" y="799.5" ></text>
</g>
<g >
<title>br_handle_frame (122 samples, 0.74%)</title><rect x="1156.5" y="645" width="8.7" height="15.0" fill="rgb(220,195,48)" rx="2" ry="2" />
<text  x="1159.51" y="655.5" ></text>
</g>
<g >
<title>runtime.wakep (35 samples, 0.21%)</title><rect x="173.2" y="1221" width="2.5" height="15.0" fill="rgb(246,90,47)" rx="2" ry="2" />
<text  x="176.21" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation::BinaryAnnotation(absl::string_view, absl::string_view) (4 samples, 0.02%)</title><rect x="752.5" y="901" width="0.3" height="15.0" fill="rgb(212,189,1)" rx="2" ry="2" />
<text  x="755.50" y="911.5" ></text>
</g>
<g >
<title>read_tsc (2 samples, 0.01%)</title><rect x="589.6" y="933" width="0.1" height="15.0" fill="rgb(253,108,38)" rx="2" ry="2" />
<text  x="592.58" y="943.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5, std::__1::allocator&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5&gt;, void (unsigned int)&gt;::operator()(unsigned int&amp;&amp;) (223 samples, 1.34%)</title><rect x="920.5" y="1269" width="15.8" height="15.0" fill="rgb(229,206,20)" rx="2" ry="2" />
<text  x="923.48" y="1279.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ResponseHeaderMapImpl::setEnvoyUpstreamServiceTime(unsigned long) (2 samples, 0.01%)</title><rect x="734.9" y="981" width="0.1" height="15.0" fill="rgb(208,63,19)" rx="2" ry="2" />
<text  x="737.87" y="991.5" ></text>
</g>
<g >
<title>do_syscall_64 (16 samples, 0.10%)</title><rect x="488.4" y="981" width="1.1" height="15.0" fill="rgb(237,187,2)" rx="2" ry="2" />
<text  x="491.39" y="991.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.01%)</title><rect x="644.4" y="1253" width="0.2" height="15.0" fill="rgb(213,225,10)" rx="2" ry="2" />
<text  x="647.41" y="1263.5" ></text>
</g>
<g >
<title>Envoy::ConnectionPool::ConnPoolImplBase::attachStreamToClient(Envoy::ConnectionPool::ActiveClient&amp;, Envoy::ConnectionPool::AttachContext&amp;) (129 samples, 0.78%)</title><rect x="836.7" y="949" width="9.2" height="15.0" fill="rgb(209,192,10)" rx="2" ry="2" />
<text  x="839.70" y="959.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5, std::__1::allocator&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5&gt;, void (unsigned int)&gt;::operator()(unsigned int&amp;&amp;) (2 samples, 0.01%)</title><rect x="1169.3" y="1285" width="0.1" height="15.0" fill="rgb(251,193,42)" rx="2" ry="2" />
<text  x="1172.31" y="1295.5" ></text>
</g>
<g >
<title>common_file_perm (2 samples, 0.01%)</title><rect x="516.0" y="1045" width="0.1" height="15.0" fill="rgb(235,191,11)" rx="2" ry="2" />
<text  x="518.98" y="1055.5" ></text>
</g>
<g >
<title>__getblk_gfp (15 samples, 0.09%)</title><rect x="244.7" y="1029" width="1.0" height="15.0" fill="rgb(231,61,53)" rx="2" ry="2" />
<text  x="247.68" y="1039.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::EnvoyInternalRequest() const (3 samples, 0.02%)</title><rect x="987.7" y="965" width="0.2" height="15.0" fill="rgb(212,95,47)" rx="2" ry="2" />
<text  x="990.68" y="975.5" ></text>
</g>
<g >
<title>Envoy::Http::ResponseDecoderWrapper::decodeData(Envoy::Buffer::Instance&amp;, bool) (30 samples, 0.18%)</title><rect x="801.6" y="1045" width="2.2" height="15.0" fill="rgb(220,73,44)" rx="2" ry="2" />
<text  x="804.64" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onHeadersComplete() (298 samples, 1.80%)</title><rect x="716.4" y="1077" width="21.2" height="15.0" fill="rgb(236,43,16)" rx="2" ry="2" />
<text  x="719.45" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::HeaderMapImpl() (11 samples, 0.07%)</title><rect x="811.3" y="1045" width="0.8" height="15.0" fill="rgb(240,0,6)" rx="2" ry="2" />
<text  x="814.32" y="1055.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::getPathValue() const (2 samples, 0.01%)</title><rect x="1033.6" y="789" width="0.2" height="15.0" fill="rgb(229,40,43)" rx="2" ry="2" />
<text  x="1036.62" y="799.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.02%)</title><rect x="511.4" y="1109" width="0.2" height="15.0" fill="rgb(239,219,36)" rx="2" ry="2" />
<text  x="514.36" y="1119.5" ></text>
</g>
<g >
<title>do_syscall_64 (17 samples, 0.10%)</title><rect x="436.5" y="901" width="1.2" height="15.0" fill="rgb(219,4,38)" rx="2" ry="2" />
<text  x="439.47" y="911.5" ></text>
</g>
<g >
<title>sock_recvmsg (62 samples, 0.37%)</title><rect x="894.4" y="1029" width="4.4" height="15.0" fill="rgb(252,111,10)" rx="2" ry="2" />
<text  x="897.38" y="1039.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.01%)</title><rect x="896.6" y="741" width="0.1" height="15.0" fill="rgb(238,113,9)" rx="2" ry="2" />
<text  x="899.58" y="751.5" ></text>
</g>
<g >
<title>ep_poll (22 samples, 0.13%)</title><rect x="605.4" y="1173" width="1.5" height="15.0" fill="rgb(211,146,18)" rx="2" ry="2" />
<text  x="608.37" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::encodeData(Envoy::Http::ActiveStreamEncoderFilter*, Envoy::Buffer::Instance&amp;, bool, Envoy::Http::FilterManager::FilterIterationStartState) (19 samples, 0.11%)</title><rect x="801.9" y="1013" width="1.4" height="15.0" fill="rgb(254,217,27)" rx="2" ry="2" />
<text  x="804.93" y="1023.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).Lock (7 samples, 0.04%)</title><rect x="249.0" y="1301" width="0.5" height="15.0" fill="rgb(224,121,2)" rx="2" ry="2" />
<text  x="252.02" y="1311.5" ></text>
</g>
<g >
<title>event_add_nolock_ (30 samples, 0.18%)</title><rect x="1126.2" y="1029" width="2.1" height="15.0" fill="rgb(245,110,3)" rx="2" ry="2" />
<text  x="1129.21" y="1039.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::getHostValue() const (2 samples, 0.01%)</title><rect x="755.6" y="901" width="0.2" height="15.0" fill="rgb(233,175,7)" rx="2" ry="2" />
<text  x="758.63" y="911.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="893.0" y="1061" width="0.2" height="15.0" fill="rgb(209,146,45)" rx="2" ry="2" />
<text  x="896.03" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::encodeData(Envoy::Buffer::Instance&amp;, bool) (3 samples, 0.02%)</title><rect x="1121.9" y="1013" width="0.3" height="15.0" fill="rgb(225,193,9)" rx="2" ry="2" />
<text  x="1124.94" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::StaticLookupTable&lt;Envoy::Http::RequestHeaderMap&gt;::lookup(Envoy::Http::HeaderMapImpl&amp;, absl::string_view) (2 samples, 0.01%)</title><rect x="1031.4" y="757" width="0.2" height="15.0" fill="rgb(237,69,7)" rx="2" ry="2" />
<text  x="1034.42" y="767.5" ></text>
</g>
<g >
<title>i40e_clean_rx_irq (2 samples, 0.01%)</title><rect x="484.7" y="789" width="0.1" height="15.0" fill="rgb(209,152,49)" rx="2" ry="2" />
<text  x="487.69" y="799.5" ></text>
</g>
<g >
<title>__vfs_read (26 samples, 0.16%)</title><rect x="96.3" y="1173" width="1.8" height="15.0" fill="rgb(221,167,17)" rx="2" ry="2" />
<text  x="99.26" y="1183.5" ></text>
</g>
<g >
<title>do_iter_read (85 samples, 0.51%)</title><rect x="1143.2" y="1077" width="6.1" height="15.0" fill="rgb(214,34,12)" rx="2" ry="2" />
<text  x="1146.21" y="1087.5" ></text>
</g>
<g >
<title>ip_output (158 samples, 0.95%)</title><rect x="1156.0" y="853" width="11.2" height="15.0" fill="rgb(222,92,17)" rx="2" ry="2" />
<text  x="1159.01" y="863.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestHeaderMapImpl::constInlineHeaders() const (2 samples, 0.01%)</title><rect x="1008.1" y="917" width="0.1" height="15.0" fill="rgb(244,38,47)" rx="2" ry="2" />
<text  x="1011.09" y="927.5" ></text>
</g>
<g >
<title>[unknown] (867 samples, 5.23%)</title><rect x="428.4" y="1061" width="61.6" height="15.0" fill="rgb(231,208,16)" rx="2" ry="2" />
<text  x="431.37" y="1071.5" >[unkno..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="658.8" y="1365" width="0.1" height="15.0" fill="rgb(249,126,47)" rx="2" ry="2" />
<text  x="661.78" y="1375.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatchSlice(char const*, unsigned long) (1,048 samples, 6.32%)</title><rect x="808.5" y="1157" width="74.6" height="15.0" fill="rgb(214,79,32)" rx="2" ry="2" />
<text  x="811.54" y="1167.5" >Envoy::H..</text>
</g>
<g >
<title>mod_timer (3 samples, 0.02%)</title><rect x="934.3" y="869" width="0.2" height="15.0" fill="rgb(253,89,45)" rx="2" ry="2" />
<text  x="937.27" y="879.5" ></text>
</g>
<g >
<title>proxy_wasm::NullPlugin::ensureContext(unsigned long, unsigned long) (35 samples, 0.21%)</title><rect x="1106.4" y="965" width="2.5" height="15.0" fill="rgb(248,116,49)" rx="2" ry="2" />
<text  x="1109.44" y="975.5" ></text>
</g>
<g >
<title>do_iter_write (227 samples, 1.37%)</title><rect x="1171.7" y="1077" width="16.2" height="15.0" fill="rgb(213,13,47)" rx="2" ry="2" />
<text  x="1174.72" y="1087.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (10 samples, 0.06%)</title><rect x="1144.7" y="981" width="0.7" height="15.0" fill="rgb(244,219,42)" rx="2" ry="2" />
<text  x="1147.70" y="991.5" ></text>
</g>
<g >
<title>nf_hook_slow (2 samples, 0.01%)</title><rect x="1145.7" y="853" width="0.1" height="15.0" fill="rgb(253,168,29)" rx="2" ry="2" />
<text  x="1148.70" y="863.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::drain(unsigned long) (9 samples, 0.05%)</title><rect x="903.3" y="1189" width="0.7" height="15.0" fill="rgb(254,5,35)" rx="2" ry="2" />
<text  x="906.34" y="1199.5" ></text>
</g>
<g >
<title>Envoy::Server::InstanceImpl::run() (6 samples, 0.04%)</title><rect x="658.3" y="1301" width="0.4" height="15.0" fill="rgb(253,40,35)" rx="2" ry="2" />
<text  x="661.28" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (101 samples, 0.61%)</title><rect x="671.6" y="1237" width="7.2" height="15.0" fill="rgb(220,191,47)" rx="2" ry="2" />
<text  x="674.58" y="1247.5" ></text>
</g>
<g >
<title>vfs_writev (194 samples, 1.17%)</title><rect x="904.8" y="1093" width="13.8" height="15.0" fill="rgb(210,90,24)" rx="2" ry="2" />
<text  x="907.76" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::write(Envoy::Buffer::Instance&amp;, bool, bool) (6 samples, 0.04%)</title><rect x="802.4" y="965" width="0.4" height="15.0" fill="rgb(212,58,27)" rx="2" ry="2" />
<text  x="805.36" y="975.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::addImpl(void const*, unsigned long) (7 samples, 0.04%)</title><rect x="839.9" y="725" width="0.5" height="15.0" fill="rgb(247,109,3)" rx="2" ry="2" />
<text  x="842.90" y="735.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (2 samples, 0.01%)</title><rect x="624.4" y="1173" width="0.2" height="15.0" fill="rgb(245,142,39)" rx="2" ry="2" />
<text  x="627.43" y="1183.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::get_property(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (63 samples, 0.38%)</title><rect x="1018.0" y="805" width="4.5" height="15.0" fill="rgb(227,47,45)" rx="2" ry="2" />
<text  x="1021.05" y="815.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::staticLookup(absl::string_view) (5 samples, 0.03%)</title><rect x="814.8" y="1045" width="0.4" height="15.0" fill="rgb(221,217,31)" rx="2" ry="2" />
<text  x="817.80" y="1055.5" ></text>
</g>
<g >
<title>runtime.scanstack (6 samples, 0.04%)</title><rect x="115.0" y="1269" width="0.4" height="15.0" fill="rgb(226,45,34)" rx="2" ry="2" />
<text  x="117.96" y="1279.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (2 samples, 0.01%)</title><rect x="491.1" y="917" width="0.1" height="15.0" fill="rgb(211,210,12)" rx="2" ry="2" />
<text  x="494.09" y="927.5" ></text>
</g>
<g >
<title>Envoy::Router::ProdFilter::createRetryState(Envoy::Router::RetryPolicy const&amp;, Envoy::Http::RequestHeaderMap&amp;, Envoy::Upstream::ClusterInfo const&amp;, Envoy::Router::VirtualCluster const*, Envoy::Runtime::Loader&amp;, Envoy::Random::RandomGenerator&amp;, Envoy::Event::Dispatcher&amp;, Envoy::TimeSource&amp;, Envoy::Upstream::ResourcePriority) (5 samples, 0.03%)</title><rect x="1102.0" y="997" width="0.3" height="15.0" fill="rgb(249,0,19)" rx="2" ry="2" />
<text  x="1104.96" y="1007.5" ></text>
</g>
<g >
<title>long google::api::expr::runtime::CelValue::GetValueOrDie&lt;long&gt;(google::api::expr::runtime::CelValue::Type) const (3 samples, 0.02%)</title><rect x="858.7" y="885" width="0.2" height="15.0" fill="rgb(212,197,4)" rx="2" ry="2" />
<text  x="861.68" y="895.5" ></text>
</g>
<g >
<title>common_file_perm (2 samples, 0.01%)</title><rect x="516.0" y="1029" width="0.1" height="15.0" fill="rgb(216,20,12)" rx="2" ry="2" />
<text  x="518.98" y="1039.5" ></text>
</g>
<g >
<title>dev_queue_xmit (16 samples, 0.10%)</title><rect x="1159.5" y="133" width="1.1" height="15.0" fill="rgb(239,54,37)" rx="2" ry="2" />
<text  x="1162.49" y="143.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getProperty(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (22 samples, 0.13%)</title><rect x="1015.9" y="821" width="1.6" height="15.0" fill="rgb(241,168,50)" rx="2" ry="2" />
<text  x="1018.91" y="831.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::findValue(absl::string_view, google::protobuf::Arena*, bool) const (8 samples, 0.05%)</title><rect x="857.9" y="885" width="0.6" height="15.0" fill="rgb(209,76,42)" rx="2" ry="2" />
<text  x="860.90" y="895.5" ></text>
</g>
<g >
<title>runtime.selectnbrecv (2 samples, 0.01%)</title><rect x="171.0" y="1269" width="0.1" height="15.0" fill="rgb(249,95,28)" rx="2" ry="2" />
<text  x="174.00" y="1279.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Extensions::HttpFilters::Fault::FaultFilter::encodeHeaders(Envoy::Http::ResponseHeaderMap&amp;, bool) (2 samples, 0.01%)</title><rect x="735.2" y="981" width="0.2" height="15.0" fill="rgb(215,103,31)" rx="2" ry="2" />
<text  x="738.22" y="991.5" ></text>
</g>
<g >
<title>do_syscall_64 (19 samples, 0.11%)</title><rect x="538.2" y="1141" width="1.3" height="15.0" fill="rgb(206,53,7)" rx="2" ry="2" />
<text  x="541.17" y="1151.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="257.7" y="1285" width="0.1" height="15.0" fill="rgb(241,33,17)" rx="2" ry="2" />
<text  x="260.69" y="1295.5" ></text>
</g>
<g >
<title>pipe_write (4 samples, 0.02%)</title><rect x="656.4" y="1173" width="0.3" height="15.0" fill="rgb(232,142,22)" rx="2" ry="2" />
<text  x="659.43" y="1183.5" ></text>
</g>
<g >
<title>vxlan_xmit (45 samples, 0.27%)</title><rect x="908.7" y="277" width="3.2" height="15.0" fill="rgb(219,178,41)" rx="2" ry="2" />
<text  x="911.74" y="287.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (5 samples, 0.03%)</title><rect x="910.0" y="165" width="0.3" height="15.0" fill="rgb(246,166,50)" rx="2" ry="2" />
<text  x="912.95" y="175.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (2 samples, 0.01%)</title><rect x="657.1" y="949" width="0.2" height="15.0" fill="rgb(216,35,45)" rx="2" ry="2" />
<text  x="660.14" y="959.5" ></text>
</g>
<g >
<title>pipe_read (3 samples, 0.02%)</title><rect x="496.9" y="949" width="0.2" height="15.0" fill="rgb(247,148,32)" rx="2" ry="2" />
<text  x="499.92" y="959.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (4 samples, 0.02%)</title><rect x="119.9" y="1157" width="0.3" height="15.0" fill="rgb(233,205,38)" rx="2" ry="2" />
<text  x="122.87" y="1167.5" ></text>
</g>
<g >
<title>futex_wait (40 samples, 0.24%)</title><rect x="540.4" y="1125" width="2.9" height="15.0" fill="rgb(230,46,5)" rx="2" ry="2" />
<text  x="543.44" y="1135.5" ></text>
</g>
<g >
<title>dst_release (2 samples, 0.01%)</title><rect x="1144.1" y="917" width="0.2" height="15.0" fill="rgb(215,26,46)" rx="2" ry="2" />
<text  x="1147.13" y="927.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::addStreamFilter(std::__1::shared_ptr&lt;Envoy::Http::StreamFilter&gt;) (4 samples, 0.02%)</title><rect x="1080.4" y="981" width="0.3" height="15.0" fill="rgb(244,62,46)" rx="2" ry="2" />
<text  x="1083.41" y="991.5" ></text>
</g>
<g >
<title>sk_reset_timer (3 samples, 0.02%)</title><rect x="934.3" y="885" width="0.2" height="15.0" fill="rgb(213,225,52)" rx="2" ry="2" />
<text  x="937.27" y="895.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ResponseHeaderMapImpl::ProxyConnection() const (2 samples, 0.01%)</title><rect x="990.8" y="1013" width="0.2" height="15.0" fill="rgb(223,179,22)" rx="2" ry="2" />
<text  x="993.81" y="1023.5" ></text>
</g>
<g >
<title>__lock_text_start (6 samples, 0.04%)</title><rect x="496.4" y="949" width="0.4" height="15.0" fill="rgb(214,193,49)" rx="2" ry="2" />
<text  x="499.42" y="959.5" ></text>
</g>
<g >
<title>http_parser_execute (1,246 samples, 7.51%)</title><rect x="968.3" y="1109" width="88.6" height="15.0" fill="rgb(237,26,50)" rx="2" ry="2" />
<text  x="971.34" y="1119.5" >http_parse..</text>
</g>
<g >
<title>__lock_text_start (7 samples, 0.04%)</title><rect x="96.4" y="1077" width="0.5" height="15.0" fill="rgb(240,120,39)" rx="2" ry="2" />
<text  x="99.40" y="1087.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (3 samples, 0.02%)</title><rect x="822.8" y="981" width="0.3" height="15.0" fill="rgb(237,125,0)" rx="2" ry="2" />
<text  x="825.84" y="991.5" ></text>
</g>
<g >
<title>skb_release_all (3 samples, 0.02%)</title><rect x="925.2" y="485" width="0.2" height="15.0" fill="rgb(227,180,45)" rx="2" ry="2" />
<text  x="928.17" y="495.5" ></text>
</g>
<g >
<title>github.com/docker/docker/container.(*memdbView).All (2 samples, 0.01%)</title><rect x="250.8" y="1141" width="0.1" height="15.0" fill="rgb(210,52,6)" rx="2" ry="2" />
<text  x="253.79" y="1151.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (2 samples, 0.01%)</title><rect x="584.2" y="549" width="0.1" height="15.0" fill="rgb(221,121,42)" rx="2" ry="2" />
<text  x="587.18" y="559.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (3 samples, 0.02%)</title><rect x="1172.6" y="917" width="0.3" height="15.0" fill="rgb(247,110,21)" rx="2" ry="2" />
<text  x="1175.65" y="927.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.02%)</title><rect x="1131.5" y="1093" width="0.3" height="15.0" fill="rgb(236,87,20)" rx="2" ry="2" />
<text  x="1134.54" y="1103.5" ></text>
</g>
<g >
<title>__errno_location (4 samples, 0.02%)</title><rect x="1138.5" y="1173" width="0.3" height="15.0" fill="rgb(249,73,46)" rx="2" ry="2" />
<text  x="1141.51" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::move(Envoy::Buffer::Instance&amp;) (4 samples, 0.02%)</title><rect x="1118.1" y="933" width="0.3" height="15.0" fill="rgb(243,164,51)" rx="2" ry="2" />
<text  x="1121.10" y="943.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::StreamInfoImpl(Envoy::TimeSource&amp;, std::__1::shared_ptr&lt;Envoy::Network::ConnectionInfoProvider const&gt; const&amp;, Envoy::StreamInfo::FilterState::LifeSpan) (7 samples, 0.04%)</title><rect x="853.3" y="981" width="0.5" height="15.0" fill="rgb(230,190,23)" rx="2" ry="2" />
<text  x="856.27" y="991.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::operator=(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) (9 samples, 0.05%)</title><rect x="757.2" y="869" width="0.6" height="15.0" fill="rgb(236,77,38)" rx="2" ry="2" />
<text  x="760.20" y="879.5" ></text>
</g>
<g >
<title>Envoy::Upstream::ClusterManagerImpl::ThreadLocalClusterManagerImpl::ClusterEntry::httpConnPool(Envoy::Upstream::ResourcePriority, absl::optional&lt;Envoy::Http::Protocol&gt;, Envoy::Upstream::LoadBalancerContext*) (32 samples, 0.19%)</title><rect x="848.8" y="949" width="2.3" height="15.0" fill="rgb(213,190,5)" rx="2" ry="2" />
<text  x="851.79" y="959.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="490.0" y="1029" width="0.2" height="15.0" fill="rgb(244,1,27)" rx="2" ry="2" />
<text  x="493.02" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::log() (461 samples, 2.78%)</title><rect x="1012.4" y="949" width="32.7" height="15.0" fill="rgb(210,147,9)" rx="2" ry="2" />
<text  x="1015.36" y="959.5" >En..</text>
</g>
<g >
<title>process_backlog (4 samples, 0.02%)</title><rect x="933.0" y="693" width="0.3" height="15.0" fill="rgb(254,66,51)" rx="2" ry="2" />
<text  x="935.99" y="703.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Annotation::Annotation(Envoy::Extensions::Tracers::Zipkin::Annotation const&amp;) (2 samples, 0.01%)</title><rect x="1005.4" y="885" width="0.1" height="15.0" fill="rgb(211,190,39)" rx="2" ry="2" />
<text  x="1008.39" y="895.5" ></text>
</g>
<g >
<title>futex_wake (39 samples, 0.24%)</title><rect x="126.6" y="1029" width="2.8" height="15.0" fill="rgb(218,92,9)" rx="2" ry="2" />
<text  x="129.63" y="1039.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="438.3" y="965" width="0.3" height="15.0" fill="rgb(232,38,31)" rx="2" ry="2" />
<text  x="441.25" y="975.5" ></text>
</g>
<g >
<title>do_syscall_64 (20 samples, 0.12%)</title><rect x="497.4" y="1029" width="1.4" height="15.0" fill="rgb(245,200,11)" rx="2" ry="2" />
<text  x="500.42" y="1039.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (6 samples, 0.04%)</title><rect x="945.2" y="1365" width="0.5" height="15.0" fill="rgb(249,133,18)" rx="2" ry="2" />
<text  x="948.22" y="1375.5" ></text>
</g>
<g >
<title>proxy_wasm::null_plugin::Stats::PluginRootContext::report(Wasm::Common::RequestInfo&amp;, bool) (421 samples, 2.54%)</title><rect x="1014.4" y="869" width="30.0" height="15.0" fill="rgb(220,84,12)" rx="2" ry="2" />
<text  x="1017.42" y="879.5" >pr..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.26%)</title><rect x="126.6" y="1093" width="3.1" height="15.0" fill="rgb(221,133,3)" rx="2" ry="2" />
<text  x="129.63" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_futex (39 samples, 0.24%)</title><rect x="126.6" y="1061" width="2.8" height="15.0" fill="rgb(252,221,40)" rx="2" ry="2" />
<text  x="129.63" y="1071.5" ></text>
</g>
<g >
<title>local.runtime.usleep (52 samples, 0.31%)</title><rect x="115.7" y="1285" width="3.7" height="15.0" fill="rgb(228,4,2)" rx="2" ry="2" />
<text  x="118.75" y="1295.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::ContentLength() const (5 samples, 0.03%)</title><rect x="841.7" y="821" width="0.3" height="15.0" fill="rgb(218,5,19)" rx="2" ry="2" />
<text  x="844.68" y="831.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="682.0" y="1285" width="0.2" height="15.0" fill="rgb(235,57,31)" rx="2" ry="2" />
<text  x="684.96" y="1295.5" ></text>
</g>
<g >
<title>cgroup_seqfile_show (81 samples, 0.49%)</title><rect x="672.9" y="997" width="5.7" height="15.0" fill="rgb(230,124,0)" rx="2" ry="2" />
<text  x="675.86" y="1007.5" ></text>
</g>
<g >
<title>google::protobuf::Struct::_InternalSerialize(unsigned char*, google::protobuf::io::EpsCopyOutputStream*) const (2 samples, 0.01%)</title><rect x="750.9" y="757" width="0.1" height="15.0" fill="rgb(209,96,9)" rx="2" ry="2" />
<text  x="753.87" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (3 samples, 0.02%)</title><rect x="642.2" y="1237" width="0.2" height="15.0" fill="rgb(246,154,16)" rx="2" ry="2" />
<text  x="645.21" y="1247.5" ></text>
</g>
<g >
<title>mutex_lock (2 samples, 0.01%)</title><rect x="97.3" y="1125" width="0.2" height="15.0" fill="rgb(211,26,30)" rx="2" ry="2" />
<text  x="100.33" y="1135.5" ></text>
</g>
<g >
<title>schedule (23 samples, 0.14%)</title><rect x="198.2" y="1093" width="1.7" height="15.0" fill="rgb(227,192,46)" rx="2" ry="2" />
<text  x="201.24" y="1103.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (2 samples, 0.01%)</title><rect x="1144.7" y="949" width="0.1" height="15.0" fill="rgb(240,56,48)" rx="2" ry="2" />
<text  x="1147.70" y="959.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.02%)</title><rect x="934.3" y="853" width="0.2" height="15.0" fill="rgb(214,59,0)" rx="2" ry="2" />
<text  x="937.27" y="863.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (2 samples, 0.01%)</title><rect x="1171.9" y="1013" width="0.1" height="15.0" fill="rgb(247,134,6)" rx="2" ry="2" />
<text  x="1174.87" y="1023.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="657.1" y="1141" width="0.2" height="15.0" fill="rgb(208,126,25)" rx="2" ry="2" />
<text  x="660.14" y="1151.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="743.2" y="757" width="0.1" height="15.0" fill="rgb(226,32,49)" rx="2" ry="2" />
<text  x="746.19" y="767.5" ></text>
</g>
<g >
<title>Envoy::Grpc::Common::hasGrpcContentType(Envoy::Http::RequestOrResponseHeaderMap const&amp;) (3 samples, 0.02%)</title><rect x="1097.8" y="997" width="0.2" height="15.0" fill="rgb(208,70,6)" rx="2" ry="2" />
<text  x="1100.84" y="1007.5" ></text>
</g>
<g >
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="438.3" y="853" width="0.3" height="15.0" fill="rgb(207,96,9)" rx="2" ry="2" />
<text  x="441.25" y="863.5" ></text>
</g>
<g >
<title>proxy_wasm::ContextBase::onLog() (474 samples, 2.86%)</title><rect x="760.3" y="917" width="33.7" height="15.0" fill="rgb(249,86,47)" rx="2" ry="2" />
<text  x="763.33" y="927.5" >pr..</text>
</g>
<g >
<title>main (6 samples, 0.04%)</title><rect x="658.3" y="1349" width="0.4" height="15.0" fill="rgb(235,80,16)" rx="2" ry="2" />
<text  x="661.28" y="1359.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="623.4" y="1045" width="0.2" height="15.0" fill="rgb(212,203,38)" rx="2" ry="2" />
<text  x="626.43" y="1055.5" ></text>
</g>
<g >
<title>runtime.stopm (20 samples, 0.12%)</title><rect x="133.9" y="1125" width="1.4" height="15.0" fill="rgb(229,40,16)" rx="2" ry="2" />
<text  x="136.88" y="1135.5" ></text>
</g>
<g >
<title>new_sync_read (7 samples, 0.04%)</title><rect x="140.4" y="1109" width="0.5" height="15.0" fill="rgb(243,50,19)" rx="2" ry="2" />
<text  x="143.35" y="1119.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (4 samples, 0.02%)</title><rect x="999.8" y="709" width="0.3" height="15.0" fill="rgb(207,53,7)" rx="2" ry="2" />
<text  x="1002.77" y="719.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Driver::startSpan(Envoy::Tracing::Config const&amp;, Envoy::Tracing::TraceContext&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::chrono::time_point&lt;std::__1::chrono::system_clock, std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000000l&gt; &gt; &gt;, Envoy::Tracing::Decision) (2 samples, 0.01%)</title><rect x="1069.1" y="1013" width="0.1" height="15.0" fill="rgb(233,98,17)" rx="2" ry="2" />
<text  x="1072.11" y="1023.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (333 samples, 2.01%)</title><rect x="140.9" y="1093" width="23.6" height="15.0" fill="rgb(244,107,23)" rx="2" ry="2" />
<text  x="143.85" y="1103.5" >_..</text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.01%)</title><rect x="896.6" y="805" width="0.1" height="15.0" fill="rgb(247,25,28)" rx="2" ry="2" />
<text  x="899.58" y="815.5" ></text>
</g>
<g >
<title>event_process_active_single_queue (3,224 samples, 19.43%)</title><rect x="959.1" y="1301" width="229.3" height="15.0" fill="rgb(229,23,8)" rx="2" ry="2" />
<text  x="962.09" y="1311.5" >event_process_active_single_qu..</text>
</g>
<g >
<title>tcp_event_new_data_sent (2 samples, 0.01%)</title><rect x="1186.7" y="901" width="0.2" height="15.0" fill="rgb(251,150,22)" rx="2" ry="2" />
<text  x="1189.73" y="911.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::~UpstreamRequest() (20 samples, 0.12%)</title><rect x="1049.5" y="949" width="1.4" height="15.0" fill="rgb(216,215,10)" rx="2" ry="2" />
<text  x="1052.48" y="959.5" ></text>
</g>
<g >
<title>runtime.notewakeup (35 samples, 0.21%)</title><rect x="173.2" y="1189" width="2.5" height="15.0" fill="rgb(225,60,35)" rx="2" ry="2" />
<text  x="176.21" y="1199.5" ></text>
</g>
<g >
<title>__lock_text_start (10 samples, 0.06%)</title><rect x="647.8" y="1189" width="0.7" height="15.0" fill="rgb(253,119,9)" rx="2" ry="2" />
<text  x="650.75" y="1199.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.02%)</title><rect x="490.2" y="949" width="0.2" height="15.0" fill="rgb(245,118,25)" rx="2" ry="2" />
<text  x="493.24" y="959.5" ></text>
</g>
<g >
<title>nf_hook_slow (2 samples, 0.01%)</title><rect x="1185.2" y="645" width="0.1" height="15.0" fill="rgb(248,145,8)" rx="2" ry="2" />
<text  x="1188.16" y="655.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::completeRequest() (144 samples, 0.87%)</title><rect x="1002.1" y="949" width="10.3" height="15.0" fill="rgb(221,163,23)" rx="2" ry="2" />
<text  x="1005.12" y="959.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.01%)</title><rect x="509.3" y="1157" width="0.1" height="15.0" fill="rgb(224,47,42)" rx="2" ry="2" />
<text  x="512.29" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="682.0" y="1221" width="0.2" height="15.0" fill="rgb(218,175,13)" rx="2" ry="2" />
<text  x="685.03" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Event::SchedulableCallbackImpl::scheduleCallbackNextIteration() (2 samples, 0.01%)</title><rect x="841.0" y="789" width="0.2" height="15.0" fill="rgb(206,0,48)" rx="2" ry="2" />
<text  x="844.04" y="799.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="916.8" y="837" width="0.2" height="15.0" fill="rgb(229,55,6)" rx="2" ry="2" />
<text  x="919.85" y="847.5" ></text>
</g>
<g >
<title>_copy_from_user (2 samples, 0.01%)</title><rect x="899.6" y="1029" width="0.2" height="15.0" fill="rgb(209,127,47)" rx="2" ry="2" />
<text  x="902.64" y="1039.5" ></text>
</g>
<g >
<title>ep_remove (12 samples, 0.07%)</title><rect x="875.2" y="901" width="0.8" height="15.0" fill="rgb(209,53,35)" rx="2" ry="2" />
<text  x="878.18" y="911.5" ></text>
</g>
<g >
<title>__ip_finish_output (56 samples, 0.34%)</title><rect x="1158.1" y="357" width="4.0" height="15.0" fill="rgb(241,10,51)" rx="2" ry="2" />
<text  x="1161.07" y="367.5" ></text>
</g>
<g >
<title>Envoy::Router::ConfigImpl::mostSpecificHeaderMutationsWins() const (2 samples, 0.01%)</title><rect x="853.0" y="981" width="0.1" height="15.0" fill="rgb(242,92,7)" rx="2" ry="2" />
<text  x="855.99" y="991.5" ></text>
</g>
<g >
<title>read_tsc (2 samples, 0.01%)</title><rect x="589.6" y="949" width="0.1" height="15.0" fill="rgb(208,70,33)" rx="2" ry="2" />
<text  x="592.58" y="959.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::Slice(Envoy::Buffer::Slice&amp;&amp;) (9 samples, 0.05%)</title><rect x="1136.2" y="1157" width="0.7" height="15.0" fill="rgb(249,221,32)" rx="2" ry="2" />
<text  x="1139.24" y="1167.5" ></text>
</g>
<g >
<title>do_futex (7 samples, 0.04%)</title><rect x="496.4" y="1013" width="0.4" height="15.0" fill="rgb(234,124,29)" rx="2" ry="2" />
<text  x="499.35" y="1023.5" ></text>
</g>
<g >
<title>__x64_sys_futex (7 samples, 0.04%)</title><rect x="437.7" y="901" width="0.5" height="15.0" fill="rgb(253,65,26)" rx="2" ry="2" />
<text  x="440.68" y="911.5" ></text>
</g>
<g >
<title>local.runtime.park_m (11 samples, 0.07%)</title><rect x="257.3" y="1349" width="0.7" height="15.0" fill="rgb(249,157,11)" rx="2" ry="2" />
<text  x="260.26" y="1359.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::bufferBody(char const*, unsigned long) (2 samples, 0.01%)</title><rect x="810.7" y="1109" width="0.1" height="15.0" fill="rgb(232,141,1)" rx="2" ry="2" />
<text  x="813.68" y="1119.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Router::Filter::decodeHeaders(Envoy::Http::RequestHeaderMap&amp;, bool)::$_0, std::__1::allocator&lt;Envoy::Router::Filter::decodeHeaders(Envoy::Http::RequestHeaderMap&amp;, bool)::$_0&gt;, void (Envoy::Http::ResponseHeaderMap&amp;)&gt;::operator()(Envoy::Http::ResponseHeaderMap&amp;) (2 samples, 0.01%)</title><rect x="736.0" y="997" width="0.1" height="15.0" fill="rgb(238,144,2)" rx="2" ry="2" />
<text  x="739.01" y="1007.5" ></text>
</g>
<g >
<title>mark_wake_futex (3 samples, 0.02%)</title><rect x="543.3" y="1109" width="0.2" height="15.0" fill="rgb(227,25,41)" rx="2" ry="2" />
<text  x="546.29" y="1119.5" ></text>
</g>
<g >
<title>unmap_single_vma (4 samples, 0.02%)</title><rect x="629.3" y="1173" width="0.2" height="15.0" fill="rgb(245,104,45)" rx="2" ry="2" />
<text  x="632.26" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.07%)</title><rect x="760.8" y="869" width="0.8" height="15.0" fill="rgb(221,104,23)" rx="2" ry="2" />
<text  x="763.75" y="879.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.01%)</title><rect x="196.2" y="1125" width="0.2" height="15.0" fill="rgb(209,12,51)" rx="2" ry="2" />
<text  x="199.25" y="1135.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::DynamicList::operator[](int) const (2 samples, 0.01%)</title><rect x="1025.0" y="789" width="0.2" height="15.0" fill="rgb(215,78,43)" rx="2" ry="2" />
<text  x="1028.01" y="799.5" ></text>
</g>
<g >
<title>std::__1::pair&lt;google::protobuf::Map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, google::protobuf::Value&gt;::InnerMap::iterator_base&lt;google::protobuf::MapPair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, google::protobuf::Value&gt; const&gt;, unsigned long&gt; google::protobuf::Map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, google::protobuf::Value&gt;::InnerMap::FindHelper&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::__map_iterator&lt;std::__1::__tree_iterator&lt;std::__1::__value_type&lt;std::__1::reference_wrapper&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt;, void*&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::reference_wrapper&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt;, void*&gt;, void*&gt;*, long&gt; &gt;*) const (3 samples, 0.02%)</title><rect x="1021.6" y="757" width="0.2" height="15.0" fill="rgb(240,28,11)" rx="2" ry="2" />
<text  x="1024.60" y="767.5" ></text>
</g>
<g >
<title>ip_queue_xmit (152 samples, 0.92%)</title><rect x="906.0" y="901" width="10.8" height="15.0" fill="rgb(222,112,31)" rx="2" ry="2" />
<text  x="908.97" y="911.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (2 samples, 0.01%)</title><rect x="562.1" y="789" width="0.1" height="15.0" fill="rgb(236,35,25)" rx="2" ry="2" />
<text  x="565.06" y="799.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::ExecutionFrame::GetIterVar(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, google::api::expr::runtime::CelValue*) const (8 samples, 0.05%)</title><rect x="1039.0" y="741" width="0.6" height="15.0" fill="rgb(209,36,34)" rx="2" ry="2" />
<text  x="1042.02" y="751.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::encodeHeaders(Envoy::Http::ResponseHeaderMap&amp;, bool) (84 samples, 0.51%)</title><rect x="974.9" y="965" width="6.0" height="15.0" fill="rgb(224,1,50)" rx="2" ry="2" />
<text  x="977.88" y="975.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (2 samples, 0.01%)</title><rect x="916.8" y="917" width="0.2" height="15.0" fill="rgb(233,1,42)" rx="2" ry="2" />
<text  x="919.85" y="927.5" ></text>
</g>
<g >
<title>sock_poll (4 samples, 0.02%)</title><rect x="999.3" y="725" width="0.3" height="15.0" fill="rgb(238,229,53)" rx="2" ry="2" />
<text  x="1002.27" y="735.5" ></text>
</g>
<g >
<title>ep_send_events_proc (5 samples, 0.03%)</title><rect x="490.9" y="965" width="0.4" height="15.0" fill="rgb(247,58,8)" rx="2" ry="2" />
<text  x="493.95" y="975.5" ></text>
</g>
<g >
<title>do_writev (195 samples, 1.18%)</title><rect x="904.7" y="1109" width="13.9" height="15.0" fill="rgb(220,98,10)" rx="2" ry="2" />
<text  x="907.69" y="1119.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (16 samples, 0.10%)</title><rect x="997.0" y="757" width="1.1" height="15.0" fill="rgb(247,142,35)" rx="2" ry="2" />
<text  x="1000.00" y="767.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="942.5" y="1333" width="0.1" height="15.0" fill="rgb(251,102,44)" rx="2" ry="2" />
<text  x="945.45" y="1343.5" ></text>
</g>
<g >
<title>ip_local_out (172 samples, 1.04%)</title><rect x="1155.0" y="869" width="12.2" height="15.0" fill="rgb(246,114,11)" rx="2" ry="2" />
<text  x="1158.01" y="879.5" ></text>
</g>
<g >
<title>absl::string_view::find(absl::string_view, unsigned long) const (4 samples, 0.02%)</title><rect x="1004.8" y="837" width="0.3" height="15.0" fill="rgb(246,34,46)" rx="2" ry="2" />
<text  x="1007.82" y="847.5" ></text>
</g>
<g >
<title>try_to_wake_up (6 samples, 0.04%)</title><rect x="496.4" y="965" width="0.4" height="15.0" fill="rgb(219,135,5)" rx="2" ry="2" />
<text  x="499.42" y="975.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::NamedWriteTo(google::protobuf::stringpiece_internal::StringPiece, google::protobuf::util::converter::ObjectWriter*) const (7 samples, 0.04%)</title><rect x="1004.2" y="805" width="0.5" height="15.0" fill="rgb(250,78,30)" rx="2" ry="2" />
<text  x="1007.18" y="815.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (18 samples, 0.11%)</title><rect x="617.4" y="1205" width="1.3" height="15.0" fill="rgb(253,137,14)" rx="2" ry="2" />
<text  x="620.39" y="1215.5" ></text>
</g>
<g >
<title>__ip_local_out (11 samples, 0.07%)</title><rect x="1173.2" y="853" width="0.8" height="15.0" fill="rgb(219,1,46)" rx="2" ry="2" />
<text  x="1176.22" y="863.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (3 samples, 0.02%)</title><rect x="629.0" y="1109" width="0.2" height="15.0" fill="rgb(208,169,49)" rx="2" ry="2" />
<text  x="631.98" y="1119.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::hasDataWithName(absl::string_view) const (2 samples, 0.01%)</title><rect x="787.8" y="693" width="0.2" height="15.0" fill="rgb(227,161,5)" rx="2" ry="2" />
<text  x="790.85" y="703.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.02%)</title><rect x="623.4" y="1173" width="0.2" height="15.0" fill="rgb(236,79,6)" rx="2" ry="2" />
<text  x="626.36" y="1183.5" ></text>
</g>
<g >
<title>__fdget_pos (8 samples, 0.05%)</title><rect x="139.2" y="1157" width="0.6" height="15.0" fill="rgb(237,126,37)" rx="2" ry="2" />
<text  x="142.21" y="1167.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="623.9" y="1205" width="0.2" height="15.0" fill="rgb(241,132,42)" rx="2" ry="2" />
<text  x="626.93" y="1215.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Network::ConnectionImpl::streamInfo() (2 samples, 0.01%)</title><rect x="883.9" y="1205" width="0.2" height="15.0" fill="rgb(248,15,21)" rx="2" ry="2" />
<text  x="886.92" y="1215.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ConnectionManagerImpl::ActiveStream::resetIdleTimer() (4 samples, 0.02%)</title><rect x="1119.7" y="1045" width="0.3" height="15.0" fill="rgb(239,58,18)" rx="2" ry="2" />
<text  x="1122.67" y="1055.5" ></text>
</g>
<g >
<title>absl::hash_internal::Wyhash(void const*, unsigned long, unsigned long, unsigned long const*) (2 samples, 0.01%)</title><rect x="1067.1" y="917" width="0.2" height="15.0" fill="rgb(251,79,14)" rx="2" ry="2" />
<text  x="1070.11" y="927.5" ></text>
</g>
<g >
<title>Envoy::Extensions::HttpFilters::Wasm::FilterConfig::createFilter() (17 samples, 0.10%)</title><rect x="829.3" y="981" width="1.2" height="15.0" fill="rgb(243,153,4)" rx="2" ry="2" />
<text  x="832.31" y="991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.11%)</title><rect x="997.0" y="789" width="1.3" height="15.0" fill="rgb(211,24,48)" rx="2" ry="2" />
<text  x="1000.00" y="799.5" ></text>
</g>
<g >
<title>github.com/docker/docker/daemon.(*Daemon).filterByNameIDMatches (2 samples, 0.01%)</title><rect x="250.8" y="1157" width="0.1" height="15.0" fill="rgb(233,45,46)" rx="2" ry="2" />
<text  x="253.79" y="1167.5" ></text>
</g>
<g >
<title>__lock_text_start (11 samples, 0.07%)</title><rect x="508.4" y="1045" width="0.8" height="15.0" fill="rgb(240,183,47)" rx="2" ry="2" />
<text  x="511.44" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Stats::NullCounterImpl::inc() (2 samples, 0.01%)</title><rect x="979.8" y="949" width="0.1" height="15.0" fill="rgb(212,89,3)" rx="2" ry="2" />
<text  x="982.79" y="959.5" ></text>
</g>
<g >
<title>Envoy::Event::TimerImpl::disableTimer() (2 samples, 0.01%)</title><rect x="1094.6" y="901" width="0.1" height="15.0" fill="rgb(239,163,43)" rx="2" ry="2" />
<text  x="1097.56" y="911.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (2 samples, 0.01%)</title><rect x="242.8" y="1045" width="0.2" height="15.0" fill="rgb(213,129,7)" rx="2" ry="2" />
<text  x="245.83" y="1055.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::DefaultValueObjectWriter::RenderString(google::protobuf::stringpiece_internal::StringPiece, google::protobuf::stringpiece_internal::StringPiece) (2 samples, 0.01%)</title><rect x="1004.5" y="597" width="0.1" height="15.0" fill="rgb(232,188,8)" rx="2" ry="2" />
<text  x="1007.46" y="607.5" ></text>
</g>
<g >
<title>ip_output (137 samples, 0.83%)</title><rect x="924.2" y="853" width="9.8" height="15.0" fill="rgb(242,75,38)" rx="2" ry="2" />
<text  x="927.25" y="863.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::encodeData(Envoy::Buffer::Instance&amp;, bool) (7 samples, 0.04%)</title><rect x="872.2" y="1013" width="0.5" height="15.0" fill="rgb(235,64,13)" rx="2" ry="2" />
<text  x="875.19" y="1023.5" ></text>
</g>
<g >
<title>vfs_writev (194 samples, 1.17%)</title><rect x="922.2" y="1093" width="13.8" height="15.0" fill="rgb(243,78,27)" rx="2" ry="2" />
<text  x="925.18" y="1103.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::RenderField(google::protobuf::Field const*, google::protobuf::stringpiece_internal::StringPiece, google::protobuf::util::converter::ObjectWriter*) const (4 samples, 0.02%)</title><rect x="751.4" y="709" width="0.3" height="15.0" fill="rgb(249,133,7)" rx="2" ry="2" />
<text  x="754.37" y="719.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="946.4" y="1301" width="0.3" height="15.0" fill="rgb(254,157,40)" rx="2" ry="2" />
<text  x="949.43" y="1311.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::null_plugin::Stats::PluginRootContext::defaultMetrics()::$_7, std::__1::allocator&lt;proxy_wasm::null_plugin::Stats::PluginRootContext::defaultMetrics()::$_7&gt;, unsigned long (Wasm::Common::RequestInfo&amp;)&gt;::operator()(Wasm::Common::RequestInfo&amp;) (3 samples, 0.02%)</title><rect x="1044.4" y="869" width="0.2" height="15.0" fill="rgb(205,207,24)" rx="2" ry="2" />
<text  x="1047.43" y="879.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::checkHighAndOverflowWatermarks() (2 samples, 0.01%)</title><rect x="723.6" y="853" width="0.2" height="15.0" fill="rgb(225,52,16)" rx="2" ry="2" />
<text  x="726.63" y="863.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderString::append(char const*, unsigned int) (3 samples, 0.02%)</title><rect x="880.2" y="1077" width="0.2" height="15.0" fill="rgb(222,199,23)" rx="2" ry="2" />
<text  x="883.15" y="1087.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::operator=(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) (2 samples, 0.01%)</title><rect x="793.6" y="869" width="0.2" height="15.0" fill="rgb(212,5,54)" rx="2" ry="2" />
<text  x="796.61" y="879.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::insertByKey(Envoy::Http::HeaderString&amp;&amp;, Envoy::Http::HeaderString&amp;&amp;) (4 samples, 0.02%)</title><rect x="971.8" y="1045" width="0.2" height="15.0" fill="rgb(229,148,34)" rx="2" ry="2" />
<text  x="974.75" y="1055.5" ></text>
</g>
<g >
<title>__netif_receive_skb (114 samples, 0.69%)</title><rect x="907.2" y="693" width="8.2" height="15.0" fill="rgb(245,82,43)" rx="2" ry="2" />
<text  x="910.25" y="703.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onHeaderValue(char const*, unsigned long) (8 samples, 0.05%)</title><rect x="1056.2" y="1077" width="0.6" height="15.0" fill="rgb(254,144,35)" rx="2" ry="2" />
<text  x="1059.23" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::refreshCachedRoute(std::__1::function&lt;Envoy::Router::RouteMatchStatus (std::__1::shared_ptr&lt;Envoy::Router::Route const&gt;, Envoy::Router::RouteEvalStatus)&gt; const&amp;) (52 samples, 0.31%)</title><rect x="816.6" y="1029" width="3.7" height="15.0" fill="rgb(230,169,24)" rx="2" ry="2" />
<text  x="819.65" y="1039.5" ></text>
</g>
<g >
<title>ep_poll (2 samples, 0.01%)</title><rect x="114.0" y="1173" width="0.2" height="15.0" fill="rgb(253,121,50)" rx="2" ry="2" />
<text  x="117.04" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Http::LowerCaseString::LowerCaseString(absl::string_view) (2 samples, 0.01%)</title><rect x="728.2" y="869" width="0.1" height="15.0" fill="rgb(242,226,4)" rx="2" ry="2" />
<text  x="731.18" y="879.5" ></text>
</g>
<g >
<title>remove_wait_queue (3 samples, 0.02%)</title><rect x="997.8" y="709" width="0.3" height="15.0" fill="rgb(225,121,26)" rx="2" ry="2" />
<text  x="1000.85" y="719.5" ></text>
</g>
<g >
<title>Envoy::Runtime::SnapshotImpl::runtimeFeatureEnabled(absl::string_view) const (2 samples, 0.01%)</title><rect x="869.9" y="1013" width="0.2" height="15.0" fill="rgb(242,156,3)" rx="2" ry="2" />
<text  x="872.91" y="1023.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::operator=(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) (6 samples, 0.04%)</title><rect x="938.4" y="1365" width="0.4" height="15.0" fill="rgb(233,139,44)" rx="2" ry="2" />
<text  x="941.40" y="1375.5" ></text>
</g>
<g >
<title>Wasm::Common::getTrafficDirection() (18 samples, 0.11%)</title><rect x="1106.7" y="933" width="1.3" height="15.0" fill="rgb(223,81,24)" rx="2" ry="2" />
<text  x="1109.73" y="943.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::encodeFormattedHeader(absl::string_view, absl::string_view, Envoy::OptRef&lt;Envoy::Http::HeaderKeyFormatter const&gt;) (19 samples, 0.11%)</title><rect x="1089.7" y="757" width="1.3" height="15.0" fill="rgb(215,161,40)" rx="2" ry="2" />
<text  x="1092.66" y="767.5" ></text>
</g>
<g >
<title>__ip_finish_output (19 samples, 0.11%)</title><rect x="1159.5" y="165" width="1.3" height="15.0" fill="rgb(241,169,49)" rx="2" ry="2" />
<text  x="1162.49" y="175.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Extensions::Common::Wasm::Context::log(Envoy::Http::RequestHeaderMap const*, Envoy::Http::ResponseHeaderMap const*, Envoy::Http::ResponseTrailerMap const*, Envoy::StreamInfo::StreamInfo const&amp;) (458 samples, 2.76%)</title><rect x="1012.6" y="933" width="32.5" height="15.0" fill="rgb(233,55,39)" rx="2" ry="2" />
<text  x="1015.57" y="943.5" >no..</text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="1138.3" y="1173" width="0.2" height="15.0" fill="rgb(231,183,21)" rx="2" ry="2" />
<text  x="1141.30" y="1183.5" ></text>
</g>
<g >
<title>iptunnel_xmit (37 samples, 0.22%)</title><rect x="909.1" y="229" width="2.6" height="15.0" fill="rgb(231,32,6)" rx="2" ry="2" />
<text  x="912.10" y="239.5" ></text>
</g>
<g >
<title>__libc_start_main (6 samples, 0.04%)</title><rect x="658.3" y="1365" width="0.4" height="15.0" fill="rgb(234,15,42)" rx="2" ry="2" />
<text  x="661.28" y="1375.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::HeaderEntryImpl::value() const (2 samples, 0.01%)</title><rect x="838.5" y="805" width="0.1" height="15.0" fill="rgb(227,114,28)" rx="2" ry="2" />
<text  x="841.48" y="815.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::coalesceOrAddSlice(Envoy::Buffer::Slice&amp;&amp;) (2 samples, 0.01%)</title><rect x="977.9" y="869" width="0.1" height="15.0" fill="rgb(222,46,39)" rx="2" ry="2" />
<text  x="980.87" y="879.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (9 samples, 0.05%)</title><rect x="925.0" y="517" width="0.7" height="15.0" fill="rgb(210,195,3)" rx="2" ry="2" />
<text  x="928.03" y="527.5" ></text>
</g>
<g >
<title>ip_finish_output (172 samples, 1.04%)</title><rect x="1174.0" y="837" width="12.2" height="15.0" fill="rgb(205,174,16)" rx="2" ry="2" />
<text  x="1177.00" y="847.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (4 samples, 0.02%)</title><rect x="1172.2" y="949" width="0.2" height="15.0" fill="rgb(246,49,28)" rx="2" ry="2" />
<text  x="1175.15" y="959.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (195 samples, 1.18%)</title><rect x="1154.0" y="981" width="13.9" height="15.0" fill="rgb(212,56,22)" rx="2" ry="2" />
<text  x="1157.02" y="991.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="1145.8" y="773" width="0.2" height="15.0" fill="rgb(215,35,49)" rx="2" ry="2" />
<text  x="1148.84" y="783.5" ></text>
</g>
<g >
<title>time.Time.AppendFormat (25 samples, 0.15%)</title><rect x="228.6" y="1221" width="1.8" height="15.0" fill="rgb(232,219,49)" rx="2" ry="2" />
<text  x="231.61" y="1231.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.01%)</title><rect x="1125.2" y="869" width="0.2" height="15.0" fill="rgb(233,110,25)" rx="2" ry="2" />
<text  x="1128.21" y="879.5" ></text>
</g>
<g >
<title>iptable_filter_hook (5 samples, 0.03%)</title><rect x="1158.9" y="165" width="0.3" height="15.0" fill="rgb(205,141,24)" rx="2" ry="2" />
<text  x="1161.85" y="175.5" ></text>
</g>
<g >
<title>Envoy::Server::WorkerImpl::threadRoutine(Envoy::Server::GuardDog&amp;, std::__1::function&lt;void ()&gt; const&amp;) (3,421 samples, 20.62%)</title><rect x="945.7" y="1333" width="243.3" height="15.0" fill="rgb(230,102,0)" rx="2" ry="2" />
<text  x="948.72" y="1343.5" >Envoy::Server::WorkerImpl::threa..</text>
</g>
<g >
<title>wake_up_q (26 samples, 0.16%)</title><rect x="173.7" y="1077" width="1.9" height="15.0" fill="rgb(227,224,42)" rx="2" ry="2" />
<text  x="176.71" y="1087.5" ></text>
</g>
<g >
<title>__ip_finish_output (134 samples, 0.81%)</title><rect x="924.2" y="821" width="9.6" height="15.0" fill="rgb(250,159,33)" rx="2" ry="2" />
<text  x="927.25" y="831.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::call_foreign_function(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (95 samples, 0.57%)</title><rect x="784.4" y="837" width="6.8" height="15.0" fill="rgb(235,160,46)" rx="2" ry="2" />
<text  x="787.44" y="847.5" ></text>
</g>
<g >
<title>__alloc_skb (6 samples, 0.04%)</title><rect x="1172.5" y="949" width="0.4" height="15.0" fill="rgb(229,174,18)" rx="2" ry="2" />
<text  x="1175.51" y="959.5" ></text>
</g>
<g >
<title>__fget (4 samples, 0.02%)</title><rect x="997.0" y="693" width="0.3" height="15.0" fill="rgb(208,39,10)" rx="2" ry="2" />
<text  x="1000.00" y="703.5" ></text>
</g>
<g >
<title>event_add (6 samples, 0.04%)</title><rect x="1091.4" y="757" width="0.4" height="15.0" fill="rgb(207,216,15)" rx="2" ry="2" />
<text  x="1094.36" y="767.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (113 samples, 0.68%)</title><rect x="907.2" y="661" width="8.1" height="15.0" fill="rgb(246,117,9)" rx="2" ry="2" />
<text  x="910.25" y="671.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (17 samples, 0.10%)</title><rect x="586.5" y="805" width="1.2" height="15.0" fill="rgb(245,72,34)" rx="2" ry="2" />
<text  x="589.45" y="815.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::~FilterStateImpl() (2 samples, 0.01%)</title><rect x="799.4" y="901" width="0.1" height="15.0" fill="rgb(241,122,10)" rx="2" ry="2" />
<text  x="802.37" y="911.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::writev(Envoy::Buffer::RawSlice const*, unsigned long) (212 samples, 1.28%)</title><rect x="921.1" y="1189" width="15.1" height="15.0" fill="rgb(212,69,24)" rx="2" ry="2" />
<text  x="924.12" y="1199.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.01%)</title><rect x="624.4" y="1093" width="0.2" height="15.0" fill="rgb(220,229,37)" rx="2" ry="2" />
<text  x="627.43" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Stats::NullCounterImpl::add(unsigned long) (2 samples, 0.01%)</title><rect x="919.3" y="1237" width="0.1" height="15.0" fill="rgb(246,22,26)" rx="2" ry="2" />
<text  x="922.27" y="1247.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (71 samples, 0.43%)</title><rect x="203.4" y="1157" width="5.1" height="15.0" fill="rgb(212,48,25)" rx="2" ry="2" />
<text  x="206.43" y="1167.5" ></text>
</g>
<g >
<title>Envoy::StringUtil::rtrim(absl::string_view) (2 samples, 0.01%)</title><rect x="1055.9" y="1029" width="0.1" height="15.0" fill="rgb(238,179,41)" rx="2" ry="2" />
<text  x="1058.88" y="1039.5" ></text>
</g>
<g >
<title>std::__1::pair&lt;unsigned long, bool&gt; absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;absl::string_view, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;absl::string_view const, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt; &gt; &gt;::find_or_prepare_insert&lt;absl::string_view&gt;(absl::string_view const&amp;) (12 samples, 0.07%)</title><rect x="728.6" y="805" width="0.9" height="15.0" fill="rgb(254,191,0)" rx="2" ry="2" />
<text  x="731.61" y="815.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::maybeCreateInline(Envoy::Http::HeaderMapImpl::HeaderEntryImpl**, Envoy::Http::LowerCaseString const&amp;) (2 samples, 0.01%)</title><rect x="980.5" y="933" width="0.1" height="15.0" fill="rgb(211,119,14)" rx="2" ry="2" />
<text  x="983.50" y="943.5" ></text>
</g>
<g >
<title>runtime.netpoll (7 samples, 0.04%)</title><rect x="208.8" y="1221" width="0.5" height="15.0" fill="rgb(252,190,42)" rx="2" ry="2" />
<text  x="211.84" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="1078.5" y="933" width="0.3" height="15.0" fill="rgb(226,70,53)" rx="2" ry="2" />
<text  x="1081.49" y="943.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::maybeEndDecode(bool) (2 samples, 0.01%)</title><rect x="873.2" y="1045" width="0.1" height="15.0" fill="rgb(216,115,25)" rx="2" ry="2" />
<text  x="876.19" y="1055.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (4 samples, 0.02%)</title><rect x="591.7" y="1029" width="0.3" height="15.0" fill="rgb(250,141,44)" rx="2" ry="2" />
<text  x="594.72" y="1039.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.01%)</title><rect x="251.3" y="981" width="0.1" height="15.0" fill="rgb(237,161,48)" rx="2" ry="2" />
<text  x="254.29" y="991.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::execute(char const*, int) (1,042 samples, 6.28%)</title><rect x="1057.8" y="1141" width="74.1" height="15.0" fill="rgb(218,168,16)" rx="2" ry="2" />
<text  x="1060.80" y="1151.5" >Envoy::H..</text>
</g>
<g >
<title>google::api::expr::runtime::FieldBackedMapImpl::LookupMapValue(google::api::expr::runtime::CelValue const&amp;, google::protobuf::MapValueConstRef*) const (7 samples, 0.04%)</title><rect x="1027.1" y="773" width="0.5" height="15.0" fill="rgb(253,219,43)" rx="2" ry="2" />
<text  x="1030.08" y="783.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (4 samples, 0.02%)</title><rect x="625.9" y="1125" width="0.2" height="15.0" fill="rgb(205,31,37)" rx="2" ry="2" />
<text  x="628.85" y="1135.5" ></text>
</g>
<g >
<title>pthread_self (3 samples, 0.02%)</title><rect x="1125.9" y="1013" width="0.2" height="15.0" fill="rgb(229,131,54)" rx="2" ry="2" />
<text  x="1128.93" y="1023.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (45 samples, 0.27%)</title><rect x="485.2" y="981" width="3.2" height="15.0" fill="rgb(219,198,18)" rx="2" ry="2" />
<text  x="488.19" y="991.5" ></text>
</g>
<g >
<title>ep_send_events_proc (13 samples, 0.08%)</title><rect x="35.4" y="1045" width="0.9" height="15.0" fill="rgb(219,142,46)" rx="2" ry="2" />
<text  x="38.39" y="1055.5" ></text>
</g>
<g >
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="497.1" y="885" width="0.3" height="15.0" fill="rgb(237,213,23)" rx="2" ry="2" />
<text  x="500.13" y="895.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::readv(unsigned long, Envoy::Buffer::RawSlice*, unsigned long) (187 samples, 1.13%)</title><rect x="1137.9" y="1189" width="13.3" height="15.0" fill="rgb(240,84,27)" rx="2" ry="2" />
<text  x="1140.94" y="1199.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (110 samples, 0.66%)</title><rect x="75.7" y="1109" width="7.8" height="15.0" fill="rgb(211,14,53)" rx="2" ry="2" />
<text  x="78.71" y="1119.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__assign_external(char const*, unsigned long) (3 samples, 0.02%)</title><rect x="1044.0" y="853" width="0.2" height="15.0" fill="rgb(246,130,38)" rx="2" ry="2" />
<text  x="1047.00" y="863.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Span::setTag(absl::string_view, absl::string_view) (33 samples, 0.20%)</title><rect x="1005.7" y="917" width="2.3" height="15.0" fill="rgb(205,114,2)" rx="2" ry="2" />
<text  x="1008.67" y="927.5" ></text>
</g>
<g >
<title>event_base_loop (2 samples, 0.01%)</title><rect x="938.9" y="1349" width="0.1" height="15.0" fill="rgb(245,11,12)" rx="2" ry="2" />
<text  x="941.90" y="1359.5" ></text>
</g>
<g >
<title>local.runtime.memmove (2 samples, 0.01%)</title><rect x="229.2" y="1205" width="0.2" height="15.0" fill="rgb(228,202,24)" rx="2" ry="2" />
<text  x="232.25" y="1215.5" ></text>
</g>
<g >
<title>ksys_write (4 samples, 0.02%)</title><rect x="497.1" y="1013" width="0.3" height="15.0" fill="rgb(229,68,10)" rx="2" ry="2" />
<text  x="500.13" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::maybeCreateInline(Envoy::Http::HeaderMapImpl::HeaderEntryImpl**, Envoy::Http::LowerCaseString const&amp;) (2 samples, 0.01%)</title><rect x="980.6" y="933" width="0.2" height="15.0" fill="rgb(229,107,30)" rx="2" ry="2" />
<text  x="983.64" y="943.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::HeaderMapImpl() (12 samples, 0.07%)</title><rect x="715.4" y="1029" width="0.8" height="15.0" fill="rgb(254,134,31)" rx="2" ry="2" />
<text  x="718.38" y="1039.5" ></text>
</g>
<g >
<title>runtime.mcall (3 samples, 0.02%)</title><rect x="250.4" y="1317" width="0.2" height="15.0" fill="rgb(233,54,52)" rx="2" ry="2" />
<text  x="253.37" y="1327.5" ></text>
</g>
<g >
<title>__sched_text_start (60 samples, 0.36%)</title><rect x="598.9" y="1109" width="4.3" height="15.0" fill="rgb(248,18,30)" rx="2" ry="2" />
<text  x="601.90" y="1119.5" ></text>
</g>
<g >
<title>runtime.markroot (8 samples, 0.05%)</title><rect x="114.8" y="1301" width="0.6" height="15.0" fill="rgb(219,22,36)" rx="2" ry="2" />
<text  x="117.82" y="1311.5" ></text>
</g>
<g >
<title>__lock_text_start (19 samples, 0.11%)</title><rect x="596.4" y="1077" width="1.4" height="15.0" fill="rgb(251,40,46)" rx="2" ry="2" />
<text  x="599.41" y="1087.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (3 samples, 0.02%)</title><rect x="742.1" y="741" width="0.2" height="15.0" fill="rgb(208,102,7)" rx="2" ry="2" />
<text  x="745.12" y="751.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (276 samples, 1.66%)</title><rect x="439.2" y="933" width="19.7" height="15.0" fill="rgb(227,91,9)" rx="2" ry="2" />
<text  x="442.25" y="943.5" ></text>
</g>
<g >
<title>local.time.nextStdChunk (13 samples, 0.08%)</title><rect x="229.4" y="1205" width="0.9" height="15.0" fill="rgb(208,198,31)" rx="2" ry="2" />
<text  x="232.39" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::connectionLocalAddress() (2 samples, 0.01%)</title><rect x="1095.6" y="917" width="0.1" height="15.0" fill="rgb(230,122,8)" rx="2" ry="2" />
<text  x="1098.56" y="927.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (341 samples, 2.06%)</title><rect x="562.2" y="789" width="24.3" height="15.0" fill="rgb(252,187,8)" rx="2" ry="2" />
<text  x="565.20" y="799.5" >d..</text>
</g>
<g >
<title>common_file_perm (2 samples, 0.01%)</title><rect x="1149.0" y="1013" width="0.1" height="15.0" fill="rgb(220,145,45)" rx="2" ry="2" />
<text  x="1151.97" y="1023.5" ></text>
</g>
<g >
<title>gro_cell_poll (2 samples, 0.01%)</title><rect x="657.1" y="1205" width="0.2" height="15.0" fill="rgb(253,108,34)" rx="2" ry="2" />
<text  x="660.14" y="1215.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.01%)</title><rect x="1143.0" y="1077" width="0.1" height="15.0" fill="rgb(223,195,33)" rx="2" ry="2" />
<text  x="1145.99" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::decodeData(Envoy::Buffer::Instance&amp;, bool) (35 samples, 0.21%)</title><rect x="1052.0" y="1029" width="2.5" height="15.0" fill="rgb(242,194,49)" rx="2" ry="2" />
<text  x="1054.97" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Stats::SymbolTableImpl::join(absl::InlinedVector&lt;Envoy::Stats::StatName, 8ul, std::__1::allocator&lt;Envoy::Stats::StatName&gt; &gt; const&amp;) const (3 samples, 0.02%)</title><rect x="733.1" y="933" width="0.2" height="15.0" fill="rgb(230,97,22)" rx="2" ry="2" />
<text  x="736.09" y="943.5" ></text>
</g>
<g >
<title>ip_vs_local_request4 (3 samples, 0.02%)</title><rect x="559.4" y="853" width="0.2" height="15.0" fill="rgb(223,200,23)" rx="2" ry="2" />
<text  x="562.36" y="863.5" ></text>
</g>
<g >
<title>ip_rcv (77 samples, 0.46%)</title><rect x="908.5" y="485" width="5.5" height="15.0" fill="rgb(233,31,9)" rx="2" ry="2" />
<text  x="911.53" y="495.5" ></text>
</g>
<g >
<title>futex_wait (286 samples, 1.72%)</title><rect x="439.0" y="949" width="20.3" height="15.0" fill="rgb(233,121,43)" rx="2" ry="2" />
<text  x="441.96" y="959.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (7 samples, 0.04%)</title><rect x="96.4" y="1109" width="0.5" height="15.0" fill="rgb(218,23,46)" rx="2" ry="2" />
<text  x="99.40" y="1119.5" ></text>
</g>
<g >
<title>aa_sk_perm (7 samples, 0.04%)</title><rect x="898.1" y="981" width="0.5" height="15.0" fill="rgb(238,222,13)" rx="2" ry="2" />
<text  x="901.15" y="991.5" ></text>
</g>
<g >
<title>uncharge_batch (3 samples, 0.02%)</title><rect x="629.0" y="1077" width="0.2" height="15.0" fill="rgb(225,201,3)" rx="2" ry="2" />
<text  x="631.98" y="1087.5" ></text>
</g>
<g >
<title>aa_sk_perm (4 samples, 0.02%)</title><rect x="917.7" y="981" width="0.3" height="15.0" fill="rgb(245,198,48)" rx="2" ry="2" />
<text  x="920.70" y="991.5" ></text>
</g>
<g >
<title>wake_up_q (34 samples, 0.20%)</title><rect x="614.9" y="1157" width="2.4" height="15.0" fill="rgb(222,152,14)" rx="2" ry="2" />
<text  x="617.90" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="977.5" y="837" width="0.2" height="15.0" fill="rgb(208,53,23)" rx="2" ry="2" />
<text  x="980.51" y="847.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="644.8" y="1269" width="0.1" height="15.0" fill="rgb(254,132,33)" rx="2" ry="2" />
<text  x="647.77" y="1279.5" ></text>
</g>
<g >
<title>do_epoll_wait (34 samples, 0.20%)</title><rect x="645.1" y="1237" width="2.4" height="15.0" fill="rgb(207,99,38)" rx="2" ry="2" />
<text  x="648.12" y="1247.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::get_property(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (24 samples, 0.14%)</title><rect x="1015.8" y="837" width="1.7" height="15.0" fill="rgb(206,143,54)" rx="2" ry="2" />
<text  x="1018.84" y="847.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (5 samples, 0.03%)</title><rect x="913.4" y="405" width="0.4" height="15.0" fill="rgb(230,87,48)" rx="2" ry="2" />
<text  x="916.44" y="415.5" ></text>
</g>
<g >
<title>std::__1::vector&lt;absl::strings_internal::ViableSubstitution, std::__1::allocator&lt;absl::strings_internal::ViableSubstitution&gt; &gt; absl::strings_internal::FindSubstitutions&lt;absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;(absl::string_view, absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;) (5 samples, 0.03%)</title><rect x="988.4" y="933" width="0.3" height="15.0" fill="rgb(235,67,2)" rx="2" ry="2" />
<text  x="991.39" y="943.5" ></text>
</g>
<g >
<title>Envoy::Extensions::RequestId::UUIDRequestIDExtension::set(Envoy::Http::RequestHeaderMap&amp;, bool) (2 samples, 0.01%)</title><rect x="816.4" y="1029" width="0.2" height="15.0" fill="rgb(230,148,27)" rx="2" ry="2" />
<text  x="819.44" y="1039.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ResponseHeaderMapImpl::setStatus(unsigned long) (2 samples, 0.01%)</title><rect x="737.0" y="1029" width="0.1" height="15.0" fill="rgb(252,137,3)" rx="2" ry="2" />
<text  x="740.00" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="834.2" y="965" width="0.2" height="15.0" fill="rgb(231,151,48)" rx="2" ry="2" />
<text  x="837.22" y="975.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (2 samples, 0.01%)</title><rect x="947.4" y="1269" width="0.2" height="15.0" fill="rgb(236,20,17)" rx="2" ry="2" />
<text  x="950.43" y="1279.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (6 samples, 0.04%)</title><rect x="934.8" y="965" width="0.4" height="15.0" fill="rgb(236,91,35)" rx="2" ry="2" />
<text  x="937.77" y="975.5" ></text>
</g>
<g >
<title>br_fdb_update (3 samples, 0.02%)</title><rect x="1157.0" y="565" width="0.2" height="15.0" fill="rgb(207,192,32)" rx="2" ry="2" />
<text  x="1160.00" y="575.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CreateValueFromSingleField(google::protobuf::Message const*, google::protobuf::FieldDescriptor const*, google::protobuf::Arena*, google::api::expr::runtime::CelValue*) (5 samples, 0.03%)</title><rect x="788.2" y="741" width="0.4" height="15.0" fill="rgb(208,12,26)" rx="2" ry="2" />
<text  x="791.20" y="751.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="1104.6" y="997" width="0.1" height="15.0" fill="rgb(254,112,40)" rx="2" ry="2" />
<text  x="1107.59" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="100.1" y="1269" width="0.3" height="15.0" fill="rgb(246,109,27)" rx="2" ry="2" />
<text  x="103.10" y="1279.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::decodeData(Envoy::Buffer::Instance&amp;, bool) (8 samples, 0.05%)</title><rect x="869.2" y="1029" width="0.6" height="15.0" fill="rgb(243,52,39)" rx="2" ry="2" />
<text  x="872.20" y="1039.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (3 samples, 0.02%)</title><rect x="935.6" y="1061" width="0.2" height="15.0" fill="rgb(210,167,19)" rx="2" ry="2" />
<text  x="938.55" y="1071.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (11 samples, 0.07%)</title><rect x="624.6" y="1173" width="0.8" height="15.0" fill="rgb(237,214,33)" rx="2" ry="2" />
<text  x="627.57" y="1183.5" ></text>
</g>
<g >
<title>__do_sys_newuname (7 samples, 0.04%)</title><rect x="546.0" y="1141" width="0.5" height="15.0" fill="rgb(230,103,22)" rx="2" ry="2" />
<text  x="548.99" y="1151.5" ></text>
</g>
<g >
<title>runtime.findrunnable (3 samples, 0.02%)</title><rect x="120.4" y="1301" width="0.3" height="15.0" fill="rgb(211,34,51)" rx="2" ry="2" />
<text  x="123.44" y="1311.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (5 samples, 0.03%)</title><rect x="693.7" y="1173" width="0.3" height="15.0" fill="rgb(207,212,11)" rx="2" ry="2" />
<text  x="696.69" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Event::FileEventImpl::setEnabled(unsigned int) (43 samples, 0.26%)</title><rect x="1123.1" y="1045" width="3.0" height="15.0" fill="rgb(221,157,37)" rx="2" ry="2" />
<text  x="1126.08" y="1055.5" ></text>
</g>
<g >
<title>proxy_wasm::ContextBase::onResponseBody(unsigned int, bool) (5 samples, 0.03%)</title><rect x="1053.7" y="981" width="0.4" height="15.0" fill="rgb(222,200,17)" rx="2" ry="2" />
<text  x="1056.74" y="991.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (3 samples, 0.02%)</title><rect x="896.6" y="901" width="0.2" height="15.0" fill="rgb(216,196,25)" rx="2" ry="2" />
<text  x="899.58" y="911.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="829.1" y="965" width="0.1" height="15.0" fill="rgb(232,25,53)" rx="2" ry="2" />
<text  x="832.09" y="975.5" ></text>
</g>
<g >
<title>ip_local_out (4 samples, 0.02%)</title><rect x="1145.7" y="885" width="0.3" height="15.0" fill="rgb(241,15,53)" rx="2" ry="2" />
<text  x="1148.70" y="895.5" ></text>
</g>
<g >
<title>Envoy::Http::ActiveStreamFilterBase::commonHandleAfterHeadersCallback(Envoy::Http::FilterHeadersStatus, bool&amp;) (2 samples, 0.01%)</title><rect x="1082.8" y="1013" width="0.2" height="15.0" fill="rgb(223,52,3)" rx="2" ry="2" />
<text  x="1085.83" y="1023.5" ></text>
</g>
<g >
<title>__x64_sys_futex (12 samples, 0.07%)</title><rect x="508.4" y="1125" width="0.8" height="15.0" fill="rgb(247,91,53)" rx="2" ry="2" />
<text  x="511.37" y="1135.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (3 samples, 0.02%)</title><rect x="1186.7" y="917" width="0.2" height="15.0" fill="rgb(238,133,6)" rx="2" ry="2" />
<text  x="1189.73" y="927.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::createConnPool(Envoy::Upstream::ThreadLocalCluster&amp;) (43 samples, 0.26%)</title><rect x="848.6" y="997" width="3.0" height="15.0" fill="rgb(240,128,49)" rx="2" ry="2" />
<text  x="851.58" y="1007.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.01%)</title><rect x="946.9" y="1301" width="0.1" height="15.0" fill="rgb(243,193,32)" rx="2" ry="2" />
<text  x="949.86" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (124 samples, 0.75%)</title><rect x="75.4" y="1237" width="8.8" height="15.0" fill="rgb(221,198,2)" rx="2" ry="2" />
<text  x="78.43" y="1247.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::push_back(char) (3 samples, 0.02%)</title><rect x="834.5" y="965" width="0.2" height="15.0" fill="rgb(221,38,45)" rx="2" ry="2" />
<text  x="837.50" y="975.5" ></text>
</g>
<g >
<title>kernfs_fop_read (81 samples, 0.49%)</title><rect x="672.9" y="1045" width="5.7" height="15.0" fill="rgb(233,11,16)" rx="2" ry="2" />
<text  x="675.86" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::isOpen() const (4 samples, 0.02%)</title><rect x="1168.6" y="1253" width="0.3" height="15.0" fill="rgb(234,154,35)" rx="2" ry="2" />
<text  x="1171.59" y="1263.5" ></text>
</g>
<g >
<title>proxy_wasm::ContextBase::onRequestHeaders(unsigned int, bool) (24 samples, 0.14%)</title><rect x="859.9" y="997" width="1.7" height="15.0" fill="rgb(243,99,54)" rx="2" ry="2" />
<text  x="862.89" y="1007.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (343 samples, 2.07%)</title><rect x="562.1" y="821" width="24.4" height="15.0" fill="rgb(228,78,23)" rx="2" ry="2" />
<text  x="565.06" y="831.5" >_..</text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::StaticLookupTable&lt;Envoy::Http::ResponseHeaderMap&gt;::lookup(Envoy::Http::HeaderMapImpl&amp;, absl::string_view) (2 samples, 0.01%)</title><rect x="716.7" y="1013" width="0.1" height="15.0" fill="rgb(211,186,18)" rx="2" ry="2" />
<text  x="719.66" y="1023.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.01%)</title><rect x="114.0" y="1125" width="0.2" height="15.0" fill="rgb(205,162,16)" rx="2" ry="2" />
<text  x="117.04" y="1135.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (22 samples, 0.13%)</title><rect x="645.9" y="1189" width="1.6" height="15.0" fill="rgb(206,56,28)" rx="2" ry="2" />
<text  x="648.90" y="1199.5" ></text>
</g>
<g >
<title>aa_file_perm (4 samples, 0.02%)</title><rect x="1148.5" y="997" width="0.3" height="15.0" fill="rgb(236,97,16)" rx="2" ry="2" />
<text  x="1151.54" y="1007.5" ></text>
</g>
<g >
<title>local.runtime.reentersyscall (3 samples, 0.02%)</title><rect x="169.2" y="1205" width="0.2" height="15.0" fill="rgb(244,197,10)" rx="2" ry="2" />
<text  x="172.15" y="1215.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="893.0" y="1045" width="0.2" height="15.0" fill="rgb(243,18,43)" rx="2" ry="2" />
<text  x="896.03" y="1055.5" ></text>
</g>
<g >
<title>do_user_addr_fault (6 samples, 0.04%)</title><rect x="593.8" y="1141" width="0.4" height="15.0" fill="rgb(214,105,33)" rx="2" ry="2" />
<text  x="596.78" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Event::TimerImpl::enableTimer(std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000l&gt; &gt;, Envoy::ScopeTrackedObject const*) (7 samples, 0.04%)</title><rect x="748.0" y="933" width="0.5" height="15.0" fill="rgb(252,161,39)" rx="2" ry="2" />
<text  x="750.95" y="943.5" ></text>
</g>
<g >
<title>Envoy::Http::Utility::getResponseStatus(Envoy::Http::ResponseHeaderMap const&amp;) (3 samples, 0.02%)</title><rect x="975.2" y="933" width="0.2" height="15.0" fill="rgb(216,38,39)" rx="2" ry="2" />
<text  x="978.16" y="943.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (6 samples, 0.04%)</title><rect x="115.0" y="1285" width="0.4" height="15.0" fill="rgb(230,190,25)" rx="2" ry="2" />
<text  x="117.96" y="1295.5" ></text>
</g>
<g >
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="585.7" y="677" width="0.3" height="15.0" fill="rgb(248,149,15)" rx="2" ry="2" />
<text  x="588.67" y="687.5" ></text>
</g>
<g >
<title>ep_insert (15 samples, 0.09%)</title><rect x="1127.3" y="917" width="1.0" height="15.0" fill="rgb(245,21,49)" rx="2" ry="2" />
<text  x="1130.28" y="927.5" ></text>
</g>
<g >
<title>runtime.futex (80 samples, 0.48%)</title><rect x="202.8" y="1173" width="5.7" height="15.0" fill="rgb(218,229,31)" rx="2" ry="2" />
<text  x="205.79" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="942.4" y="1349" width="0.2" height="15.0" fill="rgb(239,23,33)" rx="2" ry="2" />
<text  x="945.38" y="1359.5" ></text>
</g>
<g >
<title>nf_xfrm_me_harder (4 samples, 0.02%)</title><rect x="1167.0" y="805" width="0.2" height="15.0" fill="rgb(225,70,21)" rx="2" ry="2" />
<text  x="1169.96" y="815.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (3 samples, 0.02%)</title><rect x="906.5" y="821" width="0.2" height="15.0" fill="rgb(239,109,44)" rx="2" ry="2" />
<text  x="909.47" y="831.5" ></text>
</g>
<g >
<title>Envoy::Matchers::StringMatcherImpl&lt;envoy::type::matcher::v3::StringMatcher&gt;::match(absl::string_view) const (2 samples, 0.01%)</title><rect x="1068.5" y="965" width="0.1" height="15.0" fill="rgb(252,35,31)" rx="2" ry="2" />
<text  x="1071.47" y="975.5" ></text>
</g>
<g >
<title>ep_remove (7 samples, 0.04%)</title><rect x="1124.9" y="901" width="0.5" height="15.0" fill="rgb(210,77,20)" rx="2" ry="2" />
<text  x="1127.93" y="911.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ActiveClient::StreamWrapper::onDecodeComplete() (15 samples, 0.09%)</title><rect x="739.1" y="1029" width="1.0" height="15.0" fill="rgb(223,43,47)" rx="2" ry="2" />
<text  x="742.06" y="1039.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.01%)</title><rect x="196.2" y="1109" width="0.2" height="15.0" fill="rgb(251,49,16)" rx="2" ry="2" />
<text  x="199.25" y="1119.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (7 samples, 0.04%)</title><rect x="895.9" y="965" width="0.5" height="15.0" fill="rgb(227,72,3)" rx="2" ry="2" />
<text  x="898.87" y="975.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.02%)</title><rect x="119.9" y="1141" width="0.3" height="15.0" fill="rgb(219,127,1)" rx="2" ry="2" />
<text  x="122.87" y="1151.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (2 samples, 0.01%)</title><rect x="33.7" y="1013" width="0.1" height="15.0" fill="rgb(234,63,49)" rx="2" ry="2" />
<text  x="36.68" y="1023.5" ></text>
</g>
<g >
<title>aa_sk_perm (7 samples, 0.04%)</title><rect x="515.3" y="997" width="0.5" height="15.0" fill="rgb(228,68,18)" rx="2" ry="2" />
<text  x="518.27" y="1007.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Network::ConnectionImpl::state() const (2 samples, 0.01%)</title><rect x="902.1" y="1221" width="0.2" height="15.0" fill="rgb(237,89,10)" rx="2" ry="2" />
<text  x="905.13" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (4,272 samples, 25.75%)</title><rect x="319.8" y="1253" width="303.8" height="15.0" fill="rgb(233,141,37)" rx="2" ry="2" />
<text  x="322.77" y="1263.5" >[unknown]</text>
</g>
<g >
<title>ip_protocol_deliver_rcu (302 samples, 1.82%)</title><rect x="563.3" y="629" width="21.5" height="15.0" fill="rgb(228,105,12)" rx="2" ry="2" />
<text  x="566.34" y="639.5" >i..</text>
</g>
<g >
<title>tcp_cleanup_rbuf (5 samples, 0.03%)</title><rect x="896.4" y="981" width="0.4" height="15.0" fill="rgb(220,106,51)" rx="2" ry="2" />
<text  x="899.44" y="991.5" ></text>
</g>
<g >
<title>[unknown] (140 samples, 0.84%)</title><rect x="668.9" y="1269" width="9.9" height="15.0" fill="rgb(214,16,16)" rx="2" ry="2" />
<text  x="671.87" y="1279.5" ></text>
</g>
<g >
<title>do_syscall_64 (123 samples, 0.74%)</title><rect x="75.5" y="1221" width="8.7" height="15.0" fill="rgb(225,213,8)" rx="2" ry="2" />
<text  x="78.50" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*, char const*, unsigned long)#4}::__invoke(http_parser*, char const*, unsigned long) (3 samples, 0.02%)</title><rect x="882.3" y="1109" width="0.2" height="15.0" fill="rgb(252,187,20)" rx="2" ry="2" />
<text  x="885.29" y="1119.5" ></text>
</g>
<g >
<title>proxy_wasm::NullVm::setWord(unsigned long, proxy_wasm::Word) (2 samples, 0.01%)</title><rect x="1031.3" y="837" width="0.1" height="15.0" fill="rgb(208,202,35)" rx="2" ry="2" />
<text  x="1034.27" y="847.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (4 samples, 0.02%)</title><rect x="905.0" y="965" width="0.3" height="15.0" fill="rgb(231,111,5)" rx="2" ry="2" />
<text  x="908.04" y="975.5" ></text>
</g>
<g >
<title>ep_poll (356 samples, 2.15%)</title><rect x="34.5" y="1077" width="25.4" height="15.0" fill="rgb(244,86,41)" rx="2" ry="2" />
<text  x="37.53" y="1087.5" >e..</text>
</g>
<g >
<title>vfs_readv (94 samples, 0.57%)</title><rect x="893.7" y="1093" width="6.7" height="15.0" fill="rgb(207,205,54)" rx="2" ry="2" />
<text  x="896.67" y="1103.5" ></text>
</g>
<g >
<title>local.encoding/json.sliceEncoder.encode-fm (6 samples, 0.04%)</title><rect x="251.6" y="1125" width="0.4" height="15.0" fill="rgb(250,31,11)" rx="2" ry="2" />
<text  x="254.58" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::refreshCachedRoute(std::__1::function&lt;Envoy::Router::RouteMatchStatus (std::__1::shared_ptr&lt;Envoy::Router::Route const&gt;, Envoy::Router::RouteEvalStatus)&gt; const&amp;) (42 samples, 0.25%)</title><rect x="1066.0" y="1029" width="3.0" height="15.0" fill="rgb(209,162,26)" rx="2" ry="2" />
<text  x="1069.05" y="1039.5" ></text>
</g>
<g >
<title>br_netif_receive_skb (93 samples, 0.56%)</title><rect x="1157.4" y="549" width="6.6" height="15.0" fill="rgb(205,48,40)" rx="2" ry="2" />
<text  x="1160.36" y="559.5" ></text>
</g>
<g >
<title>sock_sendmsg (182 samples, 1.10%)</title><rect x="922.3" y="1029" width="13.0" height="15.0" fill="rgb(243,173,11)" rx="2" ry="2" />
<text  x="925.33" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="766.3" y="741" width="0.1" height="15.0" fill="rgb(222,201,48)" rx="2" ry="2" />
<text  x="769.30" y="751.5" ></text>
</g>
<g >
<title>ip_local_out (3 samples, 0.02%)</title><rect x="896.6" y="885" width="0.2" height="15.0" fill="rgb(242,219,52)" rx="2" ry="2" />
<text  x="899.58" y="895.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (2 samples, 0.01%)</title><rect x="238.7" y="1061" width="0.1" height="15.0" fill="rgb(217,28,52)" rx="2" ry="2" />
<text  x="241.70" y="1071.5" ></text>
</g>
<g >
<title>mutex_lock (2 samples, 0.01%)</title><rect x="951.6" y="1205" width="0.2" height="15.0" fill="rgb(236,213,3)" rx="2" ry="2" />
<text  x="954.62" y="1215.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Extensions::Common::Wasm::Context::decodeData(Envoy::Buffer::Instance&amp;, bool) (3 samples, 0.02%)</title><rect x="873.0" y="1029" width="0.2" height="15.0" fill="rgb(253,50,41)" rx="2" ry="2" />
<text  x="875.97" y="1039.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (2 samples, 0.01%)</title><rect x="243.1" y="1013" width="0.2" height="15.0" fill="rgb(229,113,2)" rx="2" ry="2" />
<text  x="246.11" y="1023.5" ></text>
</g>
<g >
<title>ip_finish_output2 (169 samples, 1.02%)</title><rect x="1174.1" y="805" width="12.0" height="15.0" fill="rgb(226,212,9)" rx="2" ry="2" />
<text  x="1177.07" y="815.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::~FilterStateImpl() (4 samples, 0.02%)</title><rect x="1050.0" y="917" width="0.3" height="15.0" fill="rgb(223,205,18)" rx="2" ry="2" />
<text  x="1053.05" y="927.5" ></text>
</g>
<g >
<title>finish_task_switch (106 samples, 0.64%)</title><rect x="694.2" y="1141" width="7.5" height="15.0" fill="rgb(232,196,10)" rx="2" ry="2" />
<text  x="697.19" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::setAndCheckCallbackStatus(absl::Status&amp;&amp;) (2 samples, 0.01%)</title><rect x="970.2" y="1093" width="0.1" height="15.0" fill="rgb(252,107,9)" rx="2" ry="2" />
<text  x="973.19" y="1103.5" ></text>
</g>
<g >
<title>std::__1::to_string(int) (2 samples, 0.01%)</title><rect x="1045.0" y="869" width="0.1" height="15.0" fill="rgb(245,132,36)" rx="2" ry="2" />
<text  x="1048.00" y="879.5" ></text>
</g>
<g >
<title>try_to_wake_up (36 samples, 0.22%)</title><rect x="126.8" y="997" width="2.6" height="15.0" fill="rgb(234,74,15)" rx="2" ry="2" />
<text  x="129.84" y="1007.5" ></text>
</g>
<g >
<title>github.com/docker/docker/image.(*fs).get (2 samples, 0.01%)</title><rect x="251.1" y="1029" width="0.2" height="15.0" fill="rgb(240,186,36)" rx="2" ry="2" />
<text  x="254.15" y="1039.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; absl::StrReplaceAll&lt;std::__1::vector&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt; &gt; &gt; &gt;(absl::string_view, std::__1::vector&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt; &gt; &gt; const&amp;) (5 samples, 0.03%)</title><rect x="1004.7" y="869" width="0.4" height="15.0" fill="rgb(236,190,19)" rx="2" ry="2" />
<text  x="1007.75" y="879.5" ></text>
</g>
<g >
<title>find_next_bit (2 samples, 0.01%)</title><rect x="676.8" y="949" width="0.1" height="15.0" fill="rgb(206,152,21)" rx="2" ry="2" />
<text  x="679.77" y="959.5" ></text>
</g>
<g >
<title>Envoy::Router::StaticRouteConfigProviderImpl::config() (2 samples, 0.01%)</title><rect x="1112.1" y="1029" width="0.2" height="15.0" fill="rgb(227,37,42)" rx="2" ry="2" />
<text  x="1115.13" y="1039.5" ></text>
</g>
<g >
<title>mutex_lock (2 samples, 0.01%)</title><rect x="198.1" y="1093" width="0.1" height="15.0" fill="rgb(253,22,13)" rx="2" ry="2" />
<text  x="201.10" y="1103.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="598.1" y="1173" width="0.2" height="15.0" fill="rgb(208,173,29)" rx="2" ry="2" />
<text  x="601.12" y="1183.5" ></text>
</g>
<g >
<title>mutex_lock (3 samples, 0.02%)</title><rect x="951.3" y="1173" width="0.3" height="15.0" fill="rgb(207,189,24)" rx="2" ry="2" />
<text  x="954.34" y="1183.5" ></text>
</g>
<g >
<title>schedule (29 samples, 0.17%)</title><rect x="594.3" y="1109" width="2.1" height="15.0" fill="rgb(215,137,10)" rx="2" ry="2" />
<text  x="597.35" y="1119.5" ></text>
</g>
<g >
<title>ip_local_out (421 samples, 2.54%)</title><rect x="559.1" y="901" width="30.0" height="15.0" fill="rgb(234,115,24)" rx="2" ry="2" />
<text  x="562.14" y="911.5" >ip..</text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_26, std::__1::allocator&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_26&gt;, proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;::operator()(proxy_wasm::ContextBase*&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;) (2 samples, 0.01%)</title><rect x="873.0" y="997" width="0.2" height="15.0" fill="rgb(232,112,2)" rx="2" ry="2" />
<text  x="876.04" y="1007.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="1137.4" y="1141" width="0.1" height="15.0" fill="rgb(233,2,16)" rx="2" ry="2" />
<text  x="1140.38" y="1151.5" ></text>
</g>
<g >
<title>ip_finish_output2 (133 samples, 0.80%)</title><rect x="924.3" y="805" width="9.5" height="15.0" fill="rgb(220,203,0)" rx="2" ry="2" />
<text  x="927.32" y="815.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="489.7" y="965" width="0.2" height="15.0" fill="rgb(222,171,26)" rx="2" ry="2" />
<text  x="492.74" y="975.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (4 samples, 0.02%)</title><rect x="497.1" y="933" width="0.3" height="15.0" fill="rgb(252,33,22)" rx="2" ry="2" />
<text  x="500.13" y="943.5" ></text>
</g>
<g >
<title>ep_insert (19 samples, 0.11%)</title><rect x="744.2" y="757" width="1.3" height="15.0" fill="rgb(221,57,19)" rx="2" ry="2" />
<text  x="747.18" y="767.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (5 samples, 0.03%)</title><rect x="917.6" y="1013" width="0.4" height="15.0" fill="rgb(248,111,47)" rx="2" ry="2" />
<text  x="920.63" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Router::RouteEntryImplBase::finalizeRequestHeaders(Envoy::Http::RequestHeaderMap&amp;, Envoy::StreamInfo::StreamInfo const&amp;, bool) const (4 samples, 0.02%)</title><rect x="852.9" y="997" width="0.3" height="15.0" fill="rgb(212,151,38)" rx="2" ry="2" />
<text  x="855.92" y="1007.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::operator=(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) (7 samples, 0.04%)</title><rect x="1189.5" y="1365" width="0.5" height="15.0" fill="rgb(210,48,18)" rx="2" ry="2" />
<text  x="1192.50" y="1375.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::StaticLookupTable&lt;Envoy::Http::ResponseHeaderMap&gt;::lookup(Envoy::Http::HeaderMapImpl&amp;, absl::string_view) (6 samples, 0.04%)</title><rect x="1055.5" y="1013" width="0.4" height="15.0" fill="rgb(220,129,33)" rx="2" ry="2" />
<text  x="1058.45" y="1023.5" ></text>
</g>
<g >
<title>event_del (42 samples, 0.25%)</title><rect x="1123.2" y="1029" width="2.9" height="15.0" fill="rgb(248,98,48)" rx="2" ry="2" />
<text  x="1126.15" y="1039.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (8 samples, 0.05%)</title><rect x="895.9" y="981" width="0.5" height="15.0" fill="rgb(241,204,2)" rx="2" ry="2" />
<text  x="898.87" y="991.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="628.8" y="1093" width="0.1" height="15.0" fill="rgb(242,80,5)" rx="2" ry="2" />
<text  x="631.77" y="1103.5" ></text>
</g>
<g >
<title>finish_task_switch (12 samples, 0.07%)</title><rect x="212.6" y="1061" width="0.9" height="15.0" fill="rgb(250,226,19)" rx="2" ry="2" />
<text  x="215.60" y="1071.5" ></text>
</g>
<g >
<title>std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, std::__1::__unordered_map_hasher&lt;long, std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, std::__1::hash&lt;long&gt;, std::__1::equal_to&lt;long&gt;, true&gt;, std::__1::__unordered_map_equal&lt;long, std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, std::__1::equal_to&lt;long&gt;, std::__1::hash&lt;long&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt; &gt; &gt;::__emplace_unique_impl&lt;std::__1::pair&lt;unsigned long, decltype(nullptr)&gt; &gt;(std::__1::pair&lt;unsigned long, decltype(nullptr)&gt;&amp;&amp;) (2 samples, 0.01%)</title><rect x="859.3" y="949" width="0.2" height="15.0" fill="rgb(206,36,12)" rx="2" ry="2" />
<text  x="862.32" y="959.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.02%)</title><rect x="741.8" y="725" width="0.3" height="15.0" fill="rgb(237,178,27)" rx="2" ry="2" />
<text  x="744.84" y="735.5" ></text>
</g>
<g >
<title>void absl::inlined_vector_internal::Storage&lt;char, 128ul, std::__1::allocator&lt;char&gt; &gt;::Assign&lt;absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt; &gt;(absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt;, unsigned long) (3 samples, 0.02%)</title><rect x="835.6" y="949" width="0.2" height="15.0" fill="rgb(213,84,34)" rx="2" ry="2" />
<text  x="838.57" y="959.5" ></text>
</g>
<g >
<title>do_syscall_64 (30 samples, 0.18%)</title><rect x="60.1" y="1109" width="2.1" height="15.0" fill="rgb(236,194,16)" rx="2" ry="2" />
<text  x="63.06" y="1119.5" ></text>
</g>
<g >
<title>http_parser_parse_url (14 samples, 0.08%)</title><rect x="865.4" y="1013" width="1.0" height="15.0" fill="rgb(247,191,2)" rx="2" ry="2" />
<text  x="868.43" y="1023.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/daemon/logger/jsonfilelog.(*JSONFileLogger).Log (331 samples, 1.99%)</title><rect x="226.3" y="1333" width="23.5" height="15.0" fill="rgb(235,198,44)" rx="2" ry="2" />
<text  x="229.26" y="1343.5" >l..</text>
</g>
<g >
<title>local.runtime.epollwait (4 samples, 0.02%)</title><rect x="257.5" y="1301" width="0.3" height="15.0" fill="rgb(240,112,6)" rx="2" ry="2" />
<text  x="260.55" y="1311.5" ></text>
</g>
<g >
<title>find_next_bit (2 samples, 0.01%)</title><rect x="676.8" y="933" width="0.1" height="15.0" fill="rgb(240,44,40)" rx="2" ry="2" />
<text  x="679.77" y="943.5" ></text>
</g>
<g >
<title>__x64_sys_write (647 samples, 3.90%)</title><rect x="546.6" y="1157" width="46.0" height="15.0" fill="rgb(243,37,17)" rx="2" ry="2" />
<text  x="549.56" y="1167.5" >__x6..</text>
</g>
<g >
<title>kthread (2 samples, 0.01%)</title><rect x="659.0" y="1349" width="0.1" height="15.0" fill="rgb(244,90,24)" rx="2" ry="2" />
<text  x="661.99" y="1359.5" ></text>
</g>
<g >
<title>google::protobuf::Descriptor::FindFieldByName(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) const (9 samples, 0.05%)</title><rect x="1027.8" y="789" width="0.6" height="15.0" fill="rgb(238,55,1)" rx="2" ry="2" />
<text  x="1030.79" y="799.5" ></text>
</g>
<g >
<title>__alloc_skb (3 samples, 0.02%)</title><rect x="905.4" y="949" width="0.2" height="15.0" fill="rgb(242,28,45)" rx="2" ry="2" />
<text  x="908.40" y="959.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::iterate(std::__1::function&lt;Envoy::Http::HeaderMap::Iterate (Envoy::Http::HeaderEntry const&amp;)&gt;) const (15 samples, 0.09%)</title><rect x="976.7" y="901" width="1.0" height="15.0" fill="rgb(244,5,23)" rx="2" ry="2" />
<text  x="979.66" y="911.5" ></text>
</g>
<g >
<title>ep_poll (78 samples, 0.47%)</title><rect x="490.6" y="997" width="5.5" height="15.0" fill="rgb(227,32,27)" rx="2" ry="2" />
<text  x="493.59" y="1007.5" ></text>
</g>
<g >
<title>ep_remove (2 samples, 0.01%)</title><rect x="875.2" y="885" width="0.2" height="15.0" fill="rgb(247,147,13)" rx="2" ry="2" />
<text  x="878.25" y="895.5" ></text>
</g>
<g >
<title>new_sync_read (3 samples, 0.02%)</title><rect x="511.8" y="1061" width="0.2" height="15.0" fill="rgb(229,181,28)" rx="2" ry="2" />
<text  x="514.78" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Extensions::RequestId::UUIDRequestIDExtension::set(Envoy::Http::RequestHeaderMap&amp;, bool) (2 samples, 0.01%)</title><rect x="824.8" y="1013" width="0.2" height="15.0" fill="rgb(221,218,28)" rx="2" ry="2" />
<text  x="827.83" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::write(Envoy::Buffer::Instance&amp;, bool, bool) (3 samples, 0.02%)</title><rect x="869.5" y="965" width="0.2" height="15.0" fill="rgb(214,47,3)" rx="2" ry="2" />
<text  x="872.49" y="975.5" ></text>
</g>
<g >
<title>runtime.mcall (63 samples, 0.38%)</title><rect x="131.0" y="1189" width="4.4" height="15.0" fill="rgb(207,88,13)" rx="2" ry="2" />
<text  x="133.97" y="1199.5" ></text>
</g>
<g >
<title>nf_conntrack_in (3 samples, 0.02%)</title><rect x="585.7" y="645" width="0.2" height="15.0" fill="rgb(247,164,42)" rx="2" ry="2" />
<text  x="588.67" y="655.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::~RequestHeaderMapImpl() (6 samples, 0.04%)</title><rect x="709.9" y="1253" width="0.4" height="15.0" fill="rgb(227,185,33)" rx="2" ry="2" />
<text  x="712.91" y="1263.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::staticLookup(absl::string_view) (4 samples, 0.02%)</title><rect x="1075.0" y="981" width="0.3" height="15.0" fill="rgb(244,177,31)" rx="2" ry="2" />
<text  x="1078.01" y="991.5" ></text>
</g>
<g >
<title>nf_hook_slow (8 samples, 0.05%)</title><rect x="1166.7" y="837" width="0.5" height="15.0" fill="rgb(234,75,1)" rx="2" ry="2" />
<text  x="1169.67" y="847.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestHeaderMapImpl::constInlineHeaders() const (2 samples, 0.01%)</title><rect x="862.6" y="1013" width="0.1" height="15.0" fill="rgb(248,28,23)" rx="2" ry="2" />
<text  x="865.59" y="1023.5" ></text>
</g>
<g >
<title>absl::hash_internal::Wyhash(void const*, unsigned long, unsigned long, unsigned long const*) (2 samples, 0.01%)</title><rect x="1074.3" y="965" width="0.1" height="15.0" fill="rgb(206,70,51)" rx="2" ry="2" />
<text  x="1077.30" y="975.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (12 samples, 0.07%)</title><rect x="557.3" y="997" width="0.8" height="15.0" fill="rgb(207,50,0)" rx="2" ry="2" />
<text  x="560.30" y="1007.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (18 samples, 0.11%)</title><rect x="691.8" y="1173" width="1.3" height="15.0" fill="rgb(226,15,23)" rx="2" ry="2" />
<text  x="694.84" y="1183.5" ></text>
</g>
<g >
<title>local.runtime.mstart (69 samples, 0.42%)</title><rect x="115.4" y="1333" width="4.9" height="15.0" fill="rgb(227,218,51)" rx="2" ry="2" />
<text  x="118.39" y="1343.5" ></text>
</g>
<g >
<title>absl::hash_internal::Wyhash(void const*, unsigned long, unsigned long, unsigned long const*) (2 samples, 0.01%)</title><rect x="983.4" y="773" width="0.2" height="15.0" fill="rgb(227,194,53)" rx="2" ry="2" />
<text  x="986.41" y="783.5" ></text>
</g>
<g >
<title>__x64_sys_write (26 samples, 0.16%)</title><rect x="642.4" y="1237" width="1.9" height="15.0" fill="rgb(210,78,30)" rx="2" ry="2" />
<text  x="645.42" y="1247.5" ></text>
</g>
<g >
<title>Envoy::Runtime::LoaderImpl::snapshot() (2 samples, 0.01%)</title><rect x="1096.0" y="917" width="0.1" height="15.0" fill="rgb(240,55,38)" rx="2" ry="2" />
<text  x="1098.99" y="927.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (4 samples, 0.02%)</title><rect x="1172.2" y="933" width="0.2" height="15.0" fill="rgb(219,202,35)" rx="2" ry="2" />
<text  x="1175.15" y="943.5" ></text>
</g>
<g >
<title>runc (2 samples, 0.01%)</title><rect x="679.8" y="1381" width="0.1" height="15.0" fill="rgb(215,32,40)" rx="2" ry="2" />
<text  x="682.75" y="1391.5" ></text>
</g>
<g >
<title>skb_entail (3 samples, 0.02%)</title><rect x="1154.6" y="965" width="0.2" height="15.0" fill="rgb(210,223,34)" rx="2" ry="2" />
<text  x="1157.59" y="975.5" ></text>
</g>
<g >
<title>std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;proxy_wasm::null_plugin::Stats::SimpleStat, std::__1::allocator&lt;proxy_wasm::null_plugin::Stats::SimpleStat&gt; &gt; &gt;, void*&gt;*&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;proxy_wasm::null_plugin::Stats::SimpleStat, std::__1::allocator&lt;proxy_wasm::null_plugin::Stats::SimpleStat&gt; &gt; &gt;, std::__1::__unordered_map_hasher&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::__hash_value_type&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;proxy_wasm::null_plugin::Stats::SimpleStat, std::__1::allocator&lt;proxy_wasm::null_plugin::Stats::SimpleStat&gt; &gt; &gt;, proxy_wasm::null_plugin::Stats::HashIstioDimensions, std::__1::equal_to&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, true&gt;, std::__1::__unordered_map_equal&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::__hash_value_type&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;proxy_wasm::null_plugin::Stats::SimpleStat, std::__1::allocator&lt;proxy_wasm::null_plugin::Stats::SimpleStat&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, proxy_wasm::null_plugin::Stats::HashIstioDimensions, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;proxy_wasm::null_plugin::Stats::SimpleStat, std::__1::allocator&lt;proxy_wasm::null_plugin::Stats::SimpleStat&gt; &gt; &gt; &gt; &gt;::find&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;) (2 samples, 0.01%)</title><rect x="1044.6" y="869" width="0.2" height="15.0" fill="rgb(234,108,53)" rx="2" ry="2" />
<text  x="1047.64" y="879.5" ></text>
</g>
<g >
<title>ip_forward (62 samples, 0.37%)</title><rect x="908.5" y="421" width="4.4" height="15.0" fill="rgb(235,13,31)" rx="2" ry="2" />
<text  x="911.53" y="431.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (3 samples, 0.02%)</title><rect x="629.3" y="1141" width="0.2" height="15.0" fill="rgb(229,176,4)" rx="2" ry="2" />
<text  x="632.33" y="1151.5" ></text>
</g>
<g >
<title>dev_queue_xmit (46 samples, 0.28%)</title><rect x="908.7" y="325" width="3.3" height="15.0" fill="rgb(212,221,47)" rx="2" ry="2" />
<text  x="911.74" y="335.5" ></text>
</g>
<g >
<title>jbd2__journal_start (16 samples, 0.10%)</title><rect x="238.9" y="1061" width="1.2" height="15.0" fill="rgb(235,85,9)" rx="2" ry="2" />
<text  x="241.92" y="1071.5" ></text>
</g>
<g >
<title>sock_poll (9 samples, 0.05%)</title><rect x="950.6" y="1157" width="0.7" height="15.0" fill="rgb(213,190,32)" rx="2" ry="2" />
<text  x="953.63" y="1167.5" ></text>
</g>
<g >
<title>std::__1::__shared_ptr_emplace&lt;std::__1::vector&lt;std::__1::shared_ptr&lt;Envoy::Network::Socket::Option const&gt;, std::__1::allocator&lt;std::__1::shared_ptr&lt;Envoy::Network::Socket::Option const&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;std::__1::shared_ptr&lt;Envoy::Network::Socket::Option const&gt;, std::__1::allocator&lt;std::__1::shared_ptr&lt;Envoy::Network::Socket::Option const&gt; &gt; &gt; &gt; &gt;::__on_zero_shared() (2 samples, 0.01%)</title><rect x="709.8" y="1237" width="0.1" height="15.0" fill="rgb(250,150,48)" rx="2" ry="2" />
<text  x="712.76" y="1247.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::serializeValue(google::api::expr::runtime::CelValue, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (3 samples, 0.02%)</title><rect x="781.5" y="805" width="0.2" height="15.0" fill="rgb(222,217,23)" rx="2" ry="2" />
<text  x="784.52" y="815.5" ></text>
</g>
<g >
<title>ep_send_events_proc (5 samples, 0.03%)</title><rect x="36.0" y="1029" width="0.3" height="15.0" fill="rgb(215,109,14)" rx="2" ry="2" />
<text  x="38.96" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Event::SchedulableCallbackImpl::scheduleCallbackNextIteration() (8 samples, 0.05%)</title><rect x="1091.3" y="773" width="0.6" height="15.0" fill="rgb(218,48,25)" rx="2" ry="2" />
<text  x="1094.29" y="783.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getProperty(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (2 samples, 0.01%)</title><rect x="763.0" y="837" width="0.2" height="15.0" fill="rgb(207,162,52)" rx="2" ry="2" />
<text  x="766.03" y="847.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::onMessageCompleteBase() (122 samples, 0.74%)</title><rect x="1120.1" y="1077" width="8.7" height="15.0" fill="rgb(238,182,44)" rx="2" ry="2" />
<text  x="1123.09" y="1087.5" ></text>
</g>
<g >
<title>ext4_write_begin (41 samples, 0.25%)</title><rect x="238.8" y="1093" width="3.0" height="15.0" fill="rgb(222,77,51)" rx="2" ry="2" />
<text  x="241.85" y="1103.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::hasDataWithName(absl::string_view) const (2 samples, 0.01%)</title><rect x="1102.5" y="981" width="0.2" height="15.0" fill="rgb(239,56,5)" rx="2" ry="2" />
<text  x="1105.53" y="991.5" ></text>
</g>
<g >
<title>do_tkill (3 samples, 0.02%)</title><rect x="622.6" y="1189" width="0.2" height="15.0" fill="rgb(212,59,22)" rx="2" ry="2" />
<text  x="625.58" y="1199.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::endEncode() (87 samples, 0.52%)</title><rect x="740.6" y="949" width="6.1" height="15.0" fill="rgb(237,83,6)" rx="2" ry="2" />
<text  x="743.56" y="959.5" ></text>
</g>
<g >
<title>local.runtime.growslice (12 samples, 0.07%)</title><rect x="123.6" y="1253" width="0.9" height="15.0" fill="rgb(239,41,52)" rx="2" ry="2" />
<text  x="126.64" y="1263.5" ></text>
</g>
<g >
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="507.4" y="997" width="0.4" height="15.0" fill="rgb(221,93,30)" rx="2" ry="2" />
<text  x="510.44" y="1007.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::CheckIterAccess(google::api::expr::runtime::CelExpressionFlatEvaluationState*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) (7 samples, 0.04%)</title><rect x="787.1" y="725" width="0.5" height="15.0" fill="rgb(226,144,25)" rx="2" ry="2" />
<text  x="790.14" y="735.5" ></text>
</g>
<g >
<title>nf_hook_slow (6 samples, 0.04%)</title><rect x="923.8" y="837" width="0.4" height="15.0" fill="rgb(246,6,3)" rx="2" ry="2" />
<text  x="926.82" y="847.5" ></text>
</g>
<g >
<title>finish_task_switch (14 samples, 0.08%)</title><rect x="617.7" y="1109" width="1.0" height="15.0" fill="rgb(249,33,18)" rx="2" ry="2" />
<text  x="620.67" y="1119.5" ></text>
</g>
<g >
<title>__sched_text_start (2 samples, 0.01%)</title><rect x="624.4" y="1125" width="0.2" height="15.0" fill="rgb(238,129,8)" rx="2" ry="2" />
<text  x="627.43" y="1135.5" ></text>
</g>
<g >
<title>fsnotify (2 samples, 0.01%)</title><rect x="898.9" y="1045" width="0.1" height="15.0" fill="rgb(205,92,25)" rx="2" ry="2" />
<text  x="901.86" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderUtility::shouldCloseConnection(Envoy::Http::Protocol, Envoy::Http::RequestOrResponseHeaderMap const&amp;) (2 samples, 0.01%)</title><rect x="862.6" y="1029" width="0.1" height="15.0" fill="rgb(249,149,10)" rx="2" ry="2" />
<text  x="865.59" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Http::ResponseDecoderWrapper::decodeData(Envoy::Buffer::Instance&amp;, bool) (793 samples, 4.78%)</title><rect x="995.3" y="1029" width="56.4" height="15.0" fill="rgb(220,65,52)" rx="2" ry="2" />
<text  x="998.29" y="1039.5" >Envoy..</text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::ServerConnectionImpl::allocHeaders(std::__1::unique_ptr&lt;Envoy::Http::StatefulHeaderKeyFormatter, std::__1::default_delete&lt;Envoy::Http::StatefulHeaderKeyFormatter&gt; &gt;&amp;&amp;) (12 samples, 0.07%)</title><rect x="811.2" y="1077" width="0.9" height="15.0" fill="rgb(247,122,38)" rx="2" ry="2" />
<text  x="814.25" y="1087.5" ></text>
</g>
<g >
<title>proxy_wasm::contextOrEffectiveContext() (2 samples, 0.01%)</title><rect x="1035.4" y="821" width="0.1" height="15.0" fill="rgb(234,60,32)" rx="2" ry="2" />
<text  x="1038.40" y="831.5" ></text>
</g>
<g >
<title>pipe_read (6 samples, 0.04%)</title><rect x="97.5" y="1125" width="0.4" height="15.0" fill="rgb(229,40,12)" rx="2" ry="2" />
<text  x="100.47" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Event::SchedulableCallbackImpl::enabled() (4 samples, 0.02%)</title><rect x="978.2" y="869" width="0.2" height="15.0" fill="rgb(220,5,49)" rx="2" ry="2" />
<text  x="981.15" y="879.5" ></text>
</g>
<g >
<title>schedule (37 samples, 0.22%)</title><rect x="540.5" y="1093" width="2.6" height="15.0" fill="rgb(251,126,26)" rx="2" ry="2" />
<text  x="543.51" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::write(Envoy::Buffer::Instance&amp;) (255 samples, 1.54%)</title><rect x="1170.0" y="1205" width="18.2" height="15.0" fill="rgb(251,224,18)" rx="2" ry="2" />
<text  x="1173.02" y="1215.5" ></text>
</g>
<g >
<title>nf_hook_slow (2 samples, 0.01%)</title><rect x="1162.5" y="405" width="0.2" height="15.0" fill="rgb(252,206,18)" rx="2" ry="2" />
<text  x="1165.55" y="415.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::operator=(Envoy::Buffer::Slice&amp;&amp;) (3 samples, 0.02%)</title><rect x="1118.2" y="917" width="0.2" height="15.0" fill="rgb(207,88,22)" rx="2" ry="2" />
<text  x="1121.17" y="927.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="1188.6" y="1301" width="0.1" height="15.0" fill="rgb(223,130,12)" rx="2" ry="2" />
<text  x="1191.58" y="1311.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="490.0" y="949" width="0.2" height="15.0" fill="rgb(209,132,27)" rx="2" ry="2" />
<text  x="493.02" y="959.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Upstreams::Http::Http::HttpConnPool::HttpConnPool(Envoy::Upstream::ThreadLocalCluster&amp;, bool, Envoy::Router::RouteEntry const&amp;, absl::optional&lt;Envoy::Http::Protocol&gt;, Envoy::Upstream::LoadBalancerContext*) (33 samples, 0.20%)</title><rect x="848.7" y="965" width="2.4" height="15.0" fill="rgb(230,208,13)" rx="2" ry="2" />
<text  x="851.72" y="975.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::~Slice() (3 samples, 0.02%)</title><rect x="1135.0" y="1125" width="0.2" height="15.0" fill="rgb(225,7,50)" rx="2" ry="2" />
<text  x="1137.96" y="1135.5" ></text>
</g>
<g >
<title>__fget (4 samples, 0.02%)</title><rect x="645.1" y="1173" width="0.3" height="15.0" fill="rgb(218,93,23)" rx="2" ry="2" />
<text  x="648.12" y="1183.5" ></text>
</g>
<g >
<title>Envoy::BasicResourceLimitImpl::max() (2 samples, 0.01%)</title><rect x="845.7" y="917" width="0.1" height="15.0" fill="rgb(210,209,38)" rx="2" ry="2" />
<text  x="848.66" y="927.5" ></text>
</g>
<g >
<title>ip_finish_output (47 samples, 0.28%)</title><rect x="908.7" y="373" width="3.3" height="15.0" fill="rgb(225,132,16)" rx="2" ry="2" />
<text  x="911.67" y="383.5" ></text>
</g>
<g >
<title>[unknown] (759 samples, 4.57%)</title><rect x="21.4" y="1237" width="54.0" height="15.0" fill="rgb(244,192,36)" rx="2" ry="2" />
<text  x="24.45" y="1247.5" >[unkn..</text>
</g>
<g >
<title>__x64_sys_futex (17 samples, 0.10%)</title><rect x="436.5" y="885" width="1.2" height="15.0" fill="rgb(218,19,45)" rx="2" ry="2" />
<text  x="439.47" y="895.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderString::setInteger(unsigned long) (2 samples, 0.01%)</title><rect x="991.5" y="1013" width="0.2" height="15.0" fill="rgb(253,114,43)" rx="2" ry="2" />
<text  x="994.52" y="1023.5" ></text>
</g>
<g >
<title>try_to_wake_up (357 samples, 2.15%)</title><rect x="459.5" y="917" width="25.4" height="15.0" fill="rgb(223,133,5)" rx="2" ry="2" />
<text  x="462.51" y="927.5" >t..</text>
</g>
<g >
<title>udp_tunnel_xmit_skb (38 samples, 0.23%)</title><rect x="1158.5" y="245" width="2.7" height="15.0" fill="rgb(212,81,24)" rx="2" ry="2" />
<text  x="1161.50" y="255.5" ></text>
</g>
<g >
<title>Envoy::Runtime::SnapshotImpl::runtimeFeatureEnabled(absl::string_view) const (2 samples, 0.01%)</title><rect x="970.7" y="997" width="0.1" height="15.0" fill="rgb(236,70,17)" rx="2" ry="2" />
<text  x="973.68" y="1007.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.01%)</title><rect x="641.8" y="1189" width="0.1" height="15.0" fill="rgb(243,77,14)" rx="2" ry="2" />
<text  x="644.78" y="1199.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::ContainerAccessStep::Evaluate(google::api::expr::runtime::ExecutionFrame*) const (3 samples, 0.02%)</title><rect x="1038.2" y="757" width="0.3" height="15.0" fill="rgb(207,183,31)" rx="2" ry="2" />
<text  x="1041.24" y="767.5" ></text>
</g>
<g >
<title>epoll_apply_one_change (4 samples, 0.02%)</title><rect x="1123.5" y="965" width="0.3" height="15.0" fill="rgb(235,137,48)" rx="2" ry="2" />
<text  x="1126.51" y="975.5" ></text>
</g>
<g >
<title>__sched_text_start (2 samples, 0.01%)</title><rect x="604.3" y="1125" width="0.1" height="15.0" fill="rgb(221,78,19)" rx="2" ry="2" />
<text  x="607.30" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::getExisting(absl::string_view) (4 samples, 0.02%)</title><rect x="778.7" y="773" width="0.3" height="15.0" fill="rgb(229,186,36)" rx="2" ry="2" />
<text  x="781.67" y="783.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (11 samples, 0.07%)</title><rect x="114.6" y="1333" width="0.8" height="15.0" fill="rgb(231,188,9)" rx="2" ry="2" />
<text  x="117.61" y="1343.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (15 samples, 0.09%)</title><rect x="237.6" y="1077" width="1.1" height="15.0" fill="rgb(231,173,37)" rx="2" ry="2" />
<text  x="240.64" y="1087.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__grow_by(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) (2 samples, 0.01%)</title><rect x="787.5" y="693" width="0.1" height="15.0" fill="rgb(229,144,36)" rx="2" ry="2" />
<text  x="790.49" y="703.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelValue::CheckNullPointer(void const*, google::api::expr::runtime::CelValue::Type) (2 samples, 0.01%)</title><rect x="1033.1" y="789" width="0.1" height="15.0" fill="rgb(213,180,11)" rx="2" ry="2" />
<text  x="1036.05" y="799.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::hasDataWithName(absl::string_view) const (2 samples, 0.01%)</title><rect x="1033.8" y="805" width="0.2" height="15.0" fill="rgb(205,77,33)" rx="2" ry="2" />
<text  x="1036.83" y="815.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (396 samples, 2.39%)</title><rect x="34.1" y="1141" width="28.2" height="15.0" fill="rgb(251,143,47)" rx="2" ry="2" />
<text  x="37.11" y="1151.5" >e..</text>
</g>
<g >
<title>ksys_read (4 samples, 0.02%)</title><rect x="496.8" y="1013" width="0.3" height="15.0" fill="rgb(237,170,11)" rx="2" ry="2" />
<text  x="499.85" y="1023.5" ></text>
</g>
<g >
<title>futex_wake (6 samples, 0.04%)</title><rect x="510.6" y="1109" width="0.4" height="15.0" fill="rgb(208,27,49)" rx="2" ry="2" />
<text  x="513.57" y="1119.5" ></text>
</g>
<g >
<title>char* absl::inlined_vector_internal::Storage&lt;char, 128ul, std::__1::allocator&lt;char&gt; &gt;::Insert&lt;absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt; &gt;(char const*, absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt;, unsigned long) (3 samples, 0.02%)</title><rect x="879.7" y="1061" width="0.2" height="15.0" fill="rgb(222,92,39)" rx="2" ry="2" />
<text  x="882.66" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Event::SchedulableCallbackImpl::scheduleCallbackNextIteration() (9 samples, 0.05%)</title><rect x="978.2" y="885" width="0.6" height="15.0" fill="rgb(231,160,17)" rx="2" ry="2" />
<text  x="981.15" y="895.5" ></text>
</g>
<g >
<title>read_tsc (2 samples, 0.01%)</title><rect x="36.7" y="1061" width="0.2" height="15.0" fill="rgb(229,106,47)" rx="2" ry="2" />
<text  x="39.74" y="1071.5" ></text>
</g>
<g >
<title>vfs_read (70 samples, 0.42%)</title><rect x="511.7" y="1109" width="5.0" height="15.0" fill="rgb(217,190,24)" rx="2" ry="2" />
<text  x="514.71" y="1119.5" ></text>
</g>
<g >
<title>nf_ct_seq_offset (2 samples, 0.01%)</title><rect x="924.1" y="741" width="0.1" height="15.0" fill="rgb(247,108,14)" rx="2" ry="2" />
<text  x="927.10" y="751.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (5 samples, 0.03%)</title><rect x="895.5" y="965" width="0.4" height="15.0" fill="rgb(234,213,50)" rx="2" ry="2" />
<text  x="898.52" y="975.5" ></text>
</g>
<g >
<title>Envoy::Http::Utility::buildOriginalUri(Envoy::Http::RequestHeaderMap const&amp;, absl::optional&lt;unsigned int&gt;) (10 samples, 0.06%)</title><rect x="1008.2" y="917" width="0.7" height="15.0" fill="rgb(215,32,47)" rx="2" ry="2" />
<text  x="1011.23" y="927.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Span::Span(Envoy::Extensions::Tracers::Zipkin::Span const&amp;) (3 samples, 0.02%)</title><rect x="1069.8" y="981" width="0.2" height="15.0" fill="rgb(248,55,5)" rx="2" ry="2" />
<text  x="1072.82" y="991.5" ></text>
</g>
<g >
<title>unsigned long std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, proxy_wasm::ContextBase*&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, proxy_wasm::ContextBase*&gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, proxy_wasm::ContextBase*&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, proxy_wasm::ContextBase*&gt; &gt; &gt;::__erase_unique&lt;unsigned int&gt;(unsigned int const&amp;) (6 samples, 0.04%)</title><rect x="706.6" y="1189" width="0.5" height="15.0" fill="rgb(246,217,5)" rx="2" ry="2" />
<text  x="709.64" y="1199.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*, char const*, unsigned long)#3}::__invoke(http_parser*, char const*, unsigned long) (7 samples, 0.04%)</title><rect x="881.8" y="1109" width="0.5" height="15.0" fill="rgb(220,223,20)" rx="2" ry="2" />
<text  x="884.79" y="1119.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (2 samples, 0.01%)</title><rect x="923.8" y="789" width="0.2" height="15.0" fill="rgb(219,58,31)" rx="2" ry="2" />
<text  x="926.82" y="799.5" ></text>
</g>
<g >
<title>futex_wait (108 samples, 0.65%)</title><rect x="607.1" y="1173" width="7.7" height="15.0" fill="rgb(206,202,41)" rx="2" ry="2" />
<text  x="610.15" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::processNewlyAddedMetadata() (4 samples, 0.02%)</title><rect x="861.9" y="1029" width="0.3" height="15.0" fill="rgb(206,159,39)" rx="2" ry="2" />
<text  x="864.95" y="1039.5" ></text>
</g>
<g >
<title>[Missed Kernel Stack] (2 samples, 0.01%)</title><rect x="1142.9" y="1157" width="0.1" height="15.0" fill="rgb(230,44,4)" rx="2" ry="2" />
<text  x="1145.85" y="1167.5" ></text>
</g>
<g >
<title>local.encoding/json.(*decodeState).object (2 samples, 0.01%)</title><rect x="251.3" y="997" width="0.1" height="15.0" fill="rgb(221,77,4)" rx="2" ry="2" />
<text  x="254.29" y="1007.5" ></text>
</g>
<g >
<title>mutex_lock (3 samples, 0.02%)</title><rect x="951.3" y="1189" width="0.3" height="15.0" fill="rgb(250,107,11)" rx="2" ry="2" />
<text  x="954.34" y="1199.5" ></text>
</g>
<g >
<title>Envoy::Extensions::HttpFilters::Wasm::FilterConfig::createFilter() (30 samples, 0.18%)</title><rect x="1078.3" y="981" width="2.1" height="15.0" fill="rgb(240,132,23)" rx="2" ry="2" />
<text  x="1081.28" y="991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="499.1" y="1077" width="0.1" height="15.0" fill="rgb(244,14,25)" rx="2" ry="2" />
<text  x="502.05" y="1087.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Extensions::HttpFilters::RouterFilter::RouterFilterConfig::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::router::v3::Router const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0, std::__1::allocator&lt;Envoy::Extensions::HttpFilters::RouterFilter::RouterFilterConfig::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::router::v3::Router const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0&gt;, void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt;::operator()(Envoy::Http::FilterChainFactoryCallbacks&amp;) (4 samples, 0.02%)</title><rect x="829.0" y="997" width="0.2" height="15.0" fill="rgb(216,69,32)" rx="2" ry="2" />
<text  x="831.95" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Tracing::HttpTracerUtility::setCommonTags(Envoy::Tracing::Span&amp;, Envoy::Http::ResponseHeaderMap const*, Envoy::Http::ResponseTrailerMap const*, Envoy::StreamInfo::StreamInfo const&amp;, Envoy::Tracing::Config const&amp;) (18 samples, 0.11%)</title><rect x="1009.4" y="917" width="1.2" height="15.0" fill="rgb(231,227,41)" rx="2" ry="2" />
<text  x="1012.37" y="927.5" ></text>
</g>
<g >
<title>Envoy::Http::Utility::getResponseStatus(Envoy::Http::ResponseHeaderMap const&amp;) (4 samples, 0.02%)</title><rect x="973.3" y="997" width="0.3" height="15.0" fill="rgb(229,226,13)" rx="2" ry="2" />
<text  x="976.31" y="1007.5" ></text>
</g>
<g >
<title>aa_file_perm (3 samples, 0.02%)</title><rect x="918.2" y="997" width="0.2" height="15.0" fill="rgb(234,17,30)" rx="2" ry="2" />
<text  x="921.20" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::OwnedImpl() (2 samples, 0.01%)</title><rect x="1120.3" y="1061" width="0.2" height="15.0" fill="rgb(223,46,36)" rx="2" ry="2" />
<text  x="1123.31" y="1071.5" ></text>
</g>
<g >
<title>std::__1::pair&lt;google::protobuf::Map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, google::protobuf::Struct&gt;::InnerMap::iterator_base&lt;google::protobuf::MapPair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, google::protobuf::Struct&gt; const&gt;, unsigned long&gt; google::protobuf::Map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, google::protobuf::Struct&gt;::InnerMap::FindHelper&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::__map_iterator&lt;std::__1::__tree_iterator&lt;std::__1::__value_type&lt;std::__1::reference_wrapper&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt;, void*&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::reference_wrapper&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt;, void*&gt;, void*&gt;*, long&gt; &gt;*) const (6 samples, 0.04%)</title><rect x="776.3" y="725" width="0.5" height="15.0" fill="rgb(209,191,29)" rx="2" ry="2" />
<text  x="779.33" y="735.5" ></text>
</g>
<g >
<title>apparmor_file_permission (3 samples, 0.02%)</title><rect x="515.9" y="1061" width="0.2" height="15.0" fill="rgb(222,229,50)" rx="2" ry="2" />
<text  x="518.91" y="1071.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (4 samples, 0.02%)</title><rect x="497.1" y="917" width="0.3" height="15.0" fill="rgb(239,204,12)" rx="2" ry="2" />
<text  x="500.13" y="927.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (5 samples, 0.03%)</title><rect x="951.9" y="1173" width="0.4" height="15.0" fill="rgb(221,76,42)" rx="2" ry="2" />
<text  x="954.91" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getHeaderMapValue(proxy_wasm::WasmHeaderMapType, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;*) (4 samples, 0.02%)</title><rect x="779.3" y="821" width="0.3" height="15.0" fill="rgb(253,219,43)" rx="2" ry="2" />
<text  x="782.31" y="831.5" ></text>
</g>
<g >
<title>sock_write_iter (184 samples, 1.11%)</title><rect x="922.3" y="1045" width="13.0" height="15.0" fill="rgb(227,101,1)" rx="2" ry="2" />
<text  x="925.25" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onHeaderField(char const*, unsigned long) (19 samples, 0.11%)</title><rect x="1054.8" y="1077" width="1.4" height="15.0" fill="rgb(232,192,37)" rx="2" ry="2" />
<text  x="1057.81" y="1087.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.01%)</title><rect x="657.9" y="1285" width="0.2" height="15.0" fill="rgb(244,71,19)" rx="2" ry="2" />
<text  x="660.92" y="1295.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::iterate(std::__1::function&lt;Envoy::Http::HeaderMap::Iterate (Envoy::Http::HeaderEntry const&amp;)&gt;) const (21 samples, 0.13%)</title><rect x="722.3" y="901" width="1.5" height="15.0" fill="rgb(205,182,27)" rx="2" ry="2" />
<text  x="725.28" y="911.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::encodeFormattedHeader(absl::string_view, absl::string_view, Envoy::OptRef&lt;Envoy::Http::HeaderKeyFormatter const&gt;) (11 samples, 0.07%)</title><rect x="976.9" y="869" width="0.8" height="15.0" fill="rgb(250,18,23)" rx="2" ry="2" />
<text  x="979.94" y="879.5" ></text>
</g>
<g >
<title>finish_task_switch (29 samples, 0.17%)</title><rect x="594.3" y="1077" width="2.1" height="15.0" fill="rgb(218,104,19)" rx="2" ry="2" />
<text  x="597.35" y="1087.5" ></text>
</g>
<g >
<title>skb_free_head (4 samples, 0.02%)</title><rect x="1175.1" y="453" width="0.3" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1178.14" y="463.5" ></text>
</g>
<g >
<title>__sched_text_start (3 samples, 0.02%)</title><rect x="597.9" y="1109" width="0.2" height="15.0" fill="rgb(249,93,27)" rx="2" ry="2" />
<text  x="600.90" y="1119.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (4 samples, 0.02%)</title><rect x="514.4" y="933" width="0.3" height="15.0" fill="rgb(237,123,15)" rx="2" ry="2" />
<text  x="517.41" y="943.5" ></text>
</g>
<g >
<title>Wasm::Common::getTrafficDirection() (29 samples, 0.17%)</title><rect x="857.3" y="933" width="2.0" height="15.0" fill="rgb(238,193,8)" rx="2" ry="2" />
<text  x="860.26" y="943.5" ></text>
</g>
<g >
<title>do_writev (2 samples, 0.01%)</title><rect x="1171.5" y="1093" width="0.2" height="15.0" fill="rgb(205,76,35)" rx="2" ry="2" />
<text  x="1174.51" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::onUpstreamHeaders(unsigned long, std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, Envoy::Router::UpstreamRequest&amp;, bool) (238 samples, 1.43%)</title><rect x="718.4" y="997" width="17.0" height="15.0" fill="rgb(253,136,35)" rx="2" ry="2" />
<text  x="721.44" y="1007.5" ></text>
</g>
<g >
<title>evmap_io_add_ (22 samples, 0.13%)</title><rect x="998.8" y="853" width="1.5" height="15.0" fill="rgb(231,34,6)" rx="2" ry="2" />
<text  x="1001.77" y="863.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::move(Envoy::Buffer::Instance&amp;) (2 samples, 0.01%)</title><rect x="1053.0" y="949" width="0.2" height="15.0" fill="rgb(244,216,2)" rx="2" ry="2" />
<text  x="1056.03" y="959.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapField&lt;envoy::config::core::v3::Metadata_FilterMetadataEntry_DoNotUse, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, google::protobuf::Struct, (google::protobuf::internal::WireFormatLite::FieldType)9, (google::protobuf::internal::WireFormatLite::FieldType)11&gt;::LookupMapValue(google::protobuf::MapKey const&amp;, google::protobuf::MapValueConstRef*) const (7 samples, 0.04%)</title><rect x="776.3" y="741" width="0.5" height="15.0" fill="rgb(210,160,27)" rx="2" ry="2" />
<text  x="779.26" y="751.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Extensions::Common::Wasm::Context::FindValue(absl::string_view, google::protobuf::Arena*) const (3 samples, 0.02%)</title><rect x="1039.6" y="741" width="0.2" height="15.0" fill="rgb(216,26,36)" rx="2" ry="2" />
<text  x="1042.59" y="751.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*, char const*, unsigned long)#4}::__invoke(http_parser*, char const*, unsigned long) (3 samples, 0.02%)</title><rect x="1131.0" y="1109" width="0.2" height="15.0" fill="rgb(225,40,27)" rx="2" ry="2" />
<text  x="1133.98" y="1119.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (62 samples, 0.37%)</title><rect x="598.8" y="1141" width="4.4" height="15.0" fill="rgb(233,154,9)" rx="2" ry="2" />
<text  x="601.76" y="1151.5" ></text>
</g>
<g >
<title>__lock_sock (2 samples, 0.01%)</title><rect x="619.2" y="1029" width="0.1" height="15.0" fill="rgb(248,87,27)" rx="2" ry="2" />
<text  x="622.17" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::StaticLookupTable&lt;Envoy::Http::ResponseHeaderMap&gt;::lookup(Envoy::Http::HeaderMapImpl&amp;, absl::string_view) (5 samples, 0.03%)</title><rect x="983.6" y="805" width="0.3" height="15.0" fill="rgb(205,6,12)" rx="2" ry="2" />
<text  x="986.56" y="815.5" ></text>
</g>
<g >
<title>runtime.goexit (29 samples, 0.17%)</title><rect x="113.3" y="1365" width="2.1" height="15.0" fill="rgb(218,182,9)" rx="2" ry="2" />
<text  x="116.33" y="1375.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (152 samples, 0.92%)</title><rect x="906.0" y="885" width="10.8" height="15.0" fill="rgb(243,128,23)" rx="2" ry="2" />
<text  x="908.97" y="895.5" ></text>
</g>
<g >
<title>mutex_unlock (2 samples, 0.01%)</title><rect x="876.6" y="917" width="0.1" height="15.0" fill="rgb(237,193,49)" rx="2" ry="2" />
<text  x="879.60" y="927.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (2 samples, 0.01%)</title><rect x="896.9" y="965" width="0.1" height="15.0" fill="rgb(231,91,12)" rx="2" ry="2" />
<text  x="899.87" y="975.5" ></text>
</g>
<g >
<title>skb_free_head (2 samples, 0.01%)</title><rect x="925.2" y="453" width="0.1" height="15.0" fill="rgb(227,118,19)" rx="2" ry="2" />
<text  x="928.17" y="463.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (4 samples, 0.02%)</title><rect x="1143.3" y="1045" width="0.3" height="15.0" fill="rgb(213,19,24)" rx="2" ry="2" />
<text  x="1146.35" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ClientConnectionImpl::onHeadersCompleteBase() (271 samples, 1.63%)</title><rect x="972.4" y="1045" width="19.3" height="15.0" fill="rgb(244,91,34)" rx="2" ry="2" />
<text  x="975.39" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Http::Utility::getLastAddressFromXFF(Envoy::Http::RequestHeaderMap const&amp;, unsigned int) (2 samples, 0.01%)</title><rect x="824.7" y="997" width="0.1" height="15.0" fill="rgb(216,102,21)" rx="2" ry="2" />
<text  x="827.69" y="1007.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="506.6" y="1013" width="0.1" height="15.0" fill="rgb(212,29,31)" rx="2" ry="2" />
<text  x="509.59" y="1023.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.01%)</title><rect x="624.0" y="1189" width="0.1" height="15.0" fill="rgb(208,10,0)" rx="2" ry="2" />
<text  x="627.00" y="1199.5" ></text>
</g>
<g >
<title>ep_send_events_proc (12 samples, 0.07%)</title><rect x="950.5" y="1189" width="0.8" height="15.0" fill="rgb(216,44,1)" rx="2" ry="2" />
<text  x="953.49" y="1199.5" ></text>
</g>
<g >
<title>__x64_sys_readv (99 samples, 0.60%)</title><rect x="1143.0" y="1125" width="7.0" height="15.0" fill="rgb(253,57,17)" rx="2" ry="2" />
<text  x="1145.99" y="1135.5" ></text>
</g>
<g >
<title>Envoy::BasicResourceLimitImpl::dec() (3 samples, 0.02%)</title><rect x="993.3" y="997" width="0.2" height="15.0" fill="rgb(234,217,19)" rx="2" ry="2" />
<text  x="996.30" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::ExpressionFactory::getOrCreateContext(proxy_wasm::ContextBase*) (2 samples, 0.01%)</title><rect x="1037.1" y="805" width="0.1" height="15.0" fill="rgb(213,43,14)" rx="2" ry="2" />
<text  x="1040.10" y="815.5" ></text>
</g>
<g >
<title>aa_label_sk_perm.part.0 (3 samples, 0.02%)</title><rect x="898.2" y="949" width="0.2" height="15.0" fill="rgb(231,211,31)" rx="2" ry="2" />
<text  x="901.22" y="959.5" ></text>
</g>
<g >
<title>__fget (8 samples, 0.05%)</title><rect x="139.2" y="1125" width="0.6" height="15.0" fill="rgb(239,84,52)" rx="2" ry="2" />
<text  x="142.21" y="1135.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Router::Filter::onUpstreamHeaders(unsigned long, std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, Envoy::Router::UpstreamRequest&amp;, bool) (2 samples, 0.01%)</title><rect x="991.0" y="1013" width="0.2" height="15.0" fill="rgb(242,221,22)" rx="2" ry="2" />
<text  x="994.02" y="1023.5" ></text>
</g>
<g >
<title>std::__1::equal_to&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator()(std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;) const (3 samples, 0.02%)</title><rect x="1043.8" y="837" width="0.2" height="15.0" fill="rgb(210,42,34)" rx="2" ry="2" />
<text  x="1046.79" y="847.5" ></text>
</g>
<g >
<title>wait_for_stable_page (3 samples, 0.02%)</title><rect x="241.5" y="1061" width="0.3" height="15.0" fill="rgb(220,145,30)" rx="2" ry="2" />
<text  x="244.55" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Network::SocketImpl::connectionInfoProviderSharedPtr() const (2 samples, 0.01%)</title><rect x="813.0" y="997" width="0.1" height="15.0" fill="rgb(224,141,3)" rx="2" ry="2" />
<text  x="815.95" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::addImpl(void const*, unsigned long) (2 samples, 0.01%)</title><rect x="977.1" y="821" width="0.1" height="15.0" fill="rgb(252,138,19)" rx="2" ry="2" />
<text  x="980.08" y="831.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (2 samples, 0.01%)</title><rect x="1171.9" y="997" width="0.1" height="15.0" fill="rgb(208,24,41)" rx="2" ry="2" />
<text  x="1174.87" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::decodeData(Envoy::Buffer::Instance&amp;, bool) (42 samples, 0.25%)</title><rect x="1117.0" y="1061" width="3.0" height="15.0" fill="rgb(248,213,44)" rx="2" ry="2" />
<text  x="1120.04" y="1071.5" ></text>
</g>
<g >
<title>nf_nat_inet_fn (3 samples, 0.02%)</title><rect x="1166.7" y="789" width="0.2" height="15.0" fill="rgb(243,102,16)" rx="2" ry="2" />
<text  x="1169.67" y="799.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (3 samples, 0.02%)</title><rect x="238.5" y="1029" width="0.2" height="15.0" fill="rgb(240,63,23)" rx="2" ry="2" />
<text  x="241.49" y="1039.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (24 samples, 0.14%)</title><rect x="605.2" y="1205" width="1.7" height="15.0" fill="rgb(209,222,45)" rx="2" ry="2" />
<text  x="608.23" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Span::~Span() (2 samples, 0.01%)</title><rect x="821.1" y="981" width="0.2" height="15.0" fill="rgb(247,127,53)" rx="2" ry="2" />
<text  x="824.13" y="991.5" ></text>
</g>
<g >
<title>Envoy::Stats::SymbolTableImpl::join(absl::InlinedVector&lt;Envoy::Stats::StatName, 8ul, std::__1::allocator&lt;Envoy::Stats::StatName&gt; &gt; const&amp;) const (2 samples, 0.01%)</title><rect x="986.4" y="933" width="0.1" height="15.0" fill="rgb(205,17,3)" rx="2" ry="2" />
<text  x="989.40" y="943.5" ></text>
</g>
<g >
<title>Envoy::Http::CodecClient::deleteRequest(Envoy::Http::CodecClient::ActiveRequest&amp;) (10 samples, 0.06%)</title><rect x="738.4" y="1013" width="0.7" height="15.0" fill="rgb(243,23,29)" rx="2" ry="2" />
<text  x="741.35" y="1023.5" ></text>
</g>
<g >
<title>do_epoll_wait (4 samples, 0.02%)</title><rect x="133.1" y="1061" width="0.3" height="15.0" fill="rgb(244,82,27)" rx="2" ry="2" />
<text  x="136.10" y="1071.5" ></text>
</g>
<g >
<title>do_futex (12 samples, 0.07%)</title><rect x="624.6" y="1205" width="0.8" height="15.0" fill="rgb(252,53,33)" rx="2" ry="2" />
<text  x="627.57" y="1215.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (5 samples, 0.03%)</title><rect x="999.7" y="725" width="0.4" height="15.0" fill="rgb(219,67,53)" rx="2" ry="2" />
<text  x="1002.70" y="735.5" ></text>
</g>
<g >
<title>Envoy::Upstream::ClusterManagerImpl::ThreadLocalClusterManagerImpl::ClusterEntry::httpConnPoolImpl(Envoy::Upstream::ResourcePriority, absl::optional&lt;Envoy::Http::Protocol&gt;, Envoy::Upstream::LoadBalancerContext*, bool) (25 samples, 0.15%)</title><rect x="848.9" y="933" width="1.8" height="15.0" fill="rgb(208,0,7)" rx="2" ry="2" />
<text  x="851.94" y="943.5" ></text>
</g>
<g >
<title>evmap_io_del_ (33 samples, 0.20%)</title><rect x="1123.3" y="997" width="2.3" height="15.0" fill="rgb(227,62,12)" rx="2" ry="2" />
<text  x="1126.29" y="1007.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::DynamicMap::operator[](google::api::expr::runtime::CelValue) const (10 samples, 0.06%)</title><rect x="1020.1" y="757" width="0.7" height="15.0" fill="rgb(242,170,22)" rx="2" ry="2" />
<text  x="1023.11" y="767.5" ></text>
</g>
<g >
<title>ip_finish_output2 (5 samples, 0.03%)</title><rect x="933.4" y="789" width="0.4" height="15.0" fill="rgb(208,100,25)" rx="2" ry="2" />
<text  x="936.42" y="799.5" ></text>
</g>
<g >
<title>epoll_nochangelist_del (29 samples, 0.17%)</title><rect x="996.2" y="821" width="2.1" height="15.0" fill="rgb(234,227,3)" rx="2" ry="2" />
<text  x="999.21" y="831.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::DynamicMap::operator[](google::api::expr::runtime::CelValue) const (8 samples, 0.05%)</title><rect x="767.7" y="773" width="0.6" height="15.0" fill="rgb(243,194,1)" rx="2" ry="2" />
<text  x="770.72" y="783.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="1085.3" y="885" width="0.2" height="15.0" fill="rgb(216,136,36)" rx="2" ry="2" />
<text  x="1088.32" y="895.5" ></text>
</g>
<g >
<title>__lock_text_start (6 samples, 0.04%)</title><rect x="437.8" y="821" width="0.4" height="15.0" fill="rgb(208,17,33)" rx="2" ry="2" />
<text  x="440.75" y="831.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ActiveClient::newStreamEncoder(Envoy::Http::ResponseDecoder&amp;) (6 samples, 0.04%)</title><rect x="845.1" y="917" width="0.4" height="15.0" fill="rgb(253,224,13)" rx="2" ry="2" />
<text  x="848.10" y="927.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (333 samples, 2.01%)</title><rect x="140.9" y="1077" width="23.6" height="15.0" fill="rgb(209,167,30)" rx="2" ry="2" />
<text  x="143.85" y="1087.5" >_..</text>
</g>
<g >
<title>google::api::expr::runtime::CelExpressionFlatEvaluationState::~CelExpressionFlatEvaluationState() (3 samples, 0.02%)</title><rect x="785.0" y="789" width="0.2" height="15.0" fill="rgb(227,125,9)" rx="2" ry="2" />
<text  x="788.00" y="799.5" ></text>
</g>
<g >
<title>kfree (3 samples, 0.02%)</title><rect x="565.5" y="469" width="0.2" height="15.0" fill="rgb(254,118,14)" rx="2" ry="2" />
<text  x="568.47" y="479.5" ></text>
</g>
<g >
<title>runtime.mPark (3 samples, 0.02%)</title><rect x="114.3" y="1237" width="0.2" height="15.0" fill="rgb(248,202,50)" rx="2" ry="2" />
<text  x="117.25" y="1247.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::readv(unsigned long, Envoy::Buffer::RawSlice*, unsigned long) (196 samples, 1.18%)</title><rect x="888.0" y="1189" width="14.0" height="15.0" fill="rgb(251,180,19)" rx="2" ry="2" />
<text  x="891.05" y="1199.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::ResponseHeaderMap&gt;::get(Envoy::Http::LowerCaseString const&amp;) const (22 samples, 0.13%)</title><rect x="728.3" y="869" width="1.6" height="15.0" fill="rgb(238,219,22)" rx="2" ry="2" />
<text  x="731.33" y="879.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::get(Envoy::Http::LowerCaseString const&amp;) const (2 samples, 0.01%)</title><rect x="1030.8" y="805" width="0.2" height="15.0" fill="rgb(230,210,31)" rx="2" ry="2" />
<text  x="1033.85" y="815.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (71 samples, 0.43%)</title><rect x="1143.3" y="1061" width="5.1" height="15.0" fill="rgb(205,81,53)" rx="2" ry="2" />
<text  x="1146.35" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Event::FileEventImpl::activate(unsigned int) (9 samples, 0.05%)</title><rect x="1091.2" y="789" width="0.7" height="15.0" fill="rgb(247,116,41)" rx="2" ry="2" />
<text  x="1094.22" y="799.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (159 samples, 0.96%)</title><rect x="1174.1" y="773" width="11.3" height="15.0" fill="rgb(221,75,46)" rx="2" ry="2" />
<text  x="1177.07" y="783.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.01%)</title><rect x="659.3" y="1285" width="0.1" height="15.0" fill="rgb(219,206,17)" rx="2" ry="2" />
<text  x="662.27" y="1295.5" ></text>
</g>
<g >
<title>ep_poll (2 samples, 0.01%)</title><rect x="598.5" y="1157" width="0.1" height="15.0" fill="rgb(250,171,13)" rx="2" ry="2" />
<text  x="601.47" y="1167.5" ></text>
</g>
<g >
<title>Envoy::Http::PathUtil::canonicalPath(Envoy::Http::RequestHeaderMap&amp;) (5 samples, 0.03%)</title><rect x="1072.1" y="1013" width="0.3" height="15.0" fill="rgb(241,100,49)" rx="2" ry="2" />
<text  x="1075.09" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#2}::__invoke(http_parser*) (299 samples, 1.80%)</title><rect x="716.4" y="1093" width="21.3" height="15.0" fill="rgb(224,96,51)" rx="2" ry="2" />
<text  x="719.45" y="1103.5" >E..</text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.02%)</title><rect x="506.9" y="1029" width="0.3" height="15.0" fill="rgb(222,142,52)" rx="2" ry="2" />
<text  x="509.95" y="1039.5" ></text>
</g>
<g >
<title>__lock_text_start (22 samples, 0.13%)</title><rect x="642.5" y="1093" width="1.6" height="15.0" fill="rgb(224,170,20)" rx="2" ry="2" />
<text  x="645.49" y="1103.5" ></text>
</g>
<g >
<title>ip_finish_output (129 samples, 0.78%)</title><rect x="906.9" y="837" width="9.2" height="15.0" fill="rgb(236,47,17)" rx="2" ry="2" />
<text  x="909.89" y="847.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::iterate(std::__1::function&lt;Envoy::Http::HeaderMap::Iterate (Envoy::Http::HeaderEntry const&amp;)&gt;) const (24 samples, 0.14%)</title><rect x="839.1" y="805" width="1.7" height="15.0" fill="rgb(208,8,34)" rx="2" ry="2" />
<text  x="842.05" y="815.5" ></text>
</g>
<g >
<title>try_to_wake_up (19 samples, 0.11%)</title><rect x="596.4" y="1109" width="1.4" height="15.0" fill="rgb(222,118,7)" rx="2" ry="2" />
<text  x="599.41" y="1119.5" ></text>
</g>
<g >
<title>__vfs_write (640 samples, 3.86%)</title><rect x="546.6" y="1109" width="45.5" height="15.0" fill="rgb(205,99,34)" rx="2" ry="2" />
<text  x="549.63" y="1119.5" >__vf..</text>
</g>
<g >
<title>Envoy::Stats::SymbolTableImpl::join(absl::InlinedVector&lt;Envoy::Stats::StatName, 8ul, std::__1::allocator&lt;Envoy::Stats::StatName&gt; &gt; const&amp;) const (3 samples, 0.02%)</title><rect x="797.5" y="949" width="0.2" height="15.0" fill="rgb(211,139,7)" rx="2" ry="2" />
<text  x="800.52" y="959.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (6 samples, 0.04%)</title><rect x="251.6" y="1157" width="0.4" height="15.0" fill="rgb(207,30,11)" rx="2" ry="2" />
<text  x="254.58" y="1167.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::maybeCreateInline(Envoy::Http::HeaderMapImpl::HeaderEntryImpl**, Envoy::Http::LowerCaseString const&amp;, Envoy::Http::HeaderString&amp;&amp;) (2 samples, 0.01%)</title><rect x="804.6" y="1029" width="0.2" height="15.0" fill="rgb(238,151,21)" rx="2" ry="2" />
<text  x="807.63" y="1039.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (6 samples, 0.04%)</title><rect x="240.1" y="1077" width="0.4" height="15.0" fill="rgb(250,121,49)" rx="2" ry="2" />
<text  x="243.05" y="1087.5" ></text>
</g>
<g >
<title>runtime.notesleep (2 samples, 0.01%)</title><rect x="250.4" y="1221" width="0.2" height="15.0" fill="rgb(226,169,8)" rx="2" ry="2" />
<text  x="253.44" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Upstream::ClusterManagerImpl::ThreadLocalClusterManagerImpl::ClusterEntry::httpConnPool(Envoy::Upstream::ResourcePriority, absl::optional&lt;Envoy::Http::Protocol&gt;, Envoy::Upstream::LoadBalancerContext*) (24 samples, 0.14%)</title><rect x="1099.2" y="949" width="1.7" height="15.0" fill="rgb(207,49,40)" rx="2" ry="2" />
<text  x="1102.19" y="959.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (15 samples, 0.09%)</title><rect x="101.0" y="1205" width="1.0" height="15.0" fill="rgb(234,98,43)" rx="2" ry="2" />
<text  x="103.96" y="1215.5" ></text>
</g>
<g >
<title>try_to_wake_up (169 samples, 1.02%)</title><rect x="63.2" y="1077" width="12.0" height="15.0" fill="rgb(230,182,39)" rx="2" ry="2" />
<text  x="66.19" y="1087.5" ></text>
</g>
<g >
<title>br_allowed_ingress (2 samples, 0.01%)</title><rect x="1156.8" y="565" width="0.1" height="15.0" fill="rgb(229,220,51)" rx="2" ry="2" />
<text  x="1159.79" y="575.5" ></text>
</g>
<g >
<title>new_sync_write (2 samples, 0.01%)</title><rect x="517.5" y="1061" width="0.2" height="15.0" fill="rgb(237,223,34)" rx="2" ry="2" />
<text  x="520.54" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation::BinaryAnnotation(absl::string_view, absl::string_view) (5 samples, 0.03%)</title><rect x="1005.9" y="901" width="0.3" height="15.0" fill="rgb(248,188,51)" rx="2" ry="2" />
<text  x="1008.89" y="911.5" ></text>
</g>
<g >
<title>Envoy::ThreadLocal::InstanceImpl::SlotImpl::get() (2 samples, 0.01%)</title><rect x="994.3" y="933" width="0.1" height="15.0" fill="rgb(228,189,11)" rx="2" ry="2" />
<text  x="997.29" y="943.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OverflowDetectingUInt64::operator+=(unsigned long) (2 samples, 0.01%)</title><rect x="1090.1" y="693" width="0.1" height="15.0" fill="rgb(252,64,43)" rx="2" ry="2" />
<text  x="1093.08" y="703.5" ></text>
</g>
<g >
<title>__libc_cfree (2 samples, 0.01%)</title><rect x="1045.8" y="901" width="0.1" height="15.0" fill="rgb(244,224,4)" rx="2" ry="2" />
<text  x="1048.78" y="911.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::RenderStructValue(google::protobuf::util::converter::ProtoStreamObjectSource const*, google::protobuf::Type const&amp;, google::protobuf::stringpiece_internal::StringPiece, google::protobuf::util::converter::ObjectWriter*) (3 samples, 0.02%)</title><rect x="1004.4" y="645" width="0.2" height="15.0" fill="rgb(250,128,21)" rx="2" ry="2" />
<text  x="1007.39" y="655.5" ></text>
</g>
<g >
<title>do_epoll_wait (2 samples, 0.01%)</title><rect x="114.0" y="1189" width="0.2" height="15.0" fill="rgb(231,93,29)" rx="2" ry="2" />
<text  x="117.04" y="1199.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::ActiveStream(Envoy::Http::ConnectionManagerImpl&amp;, unsigned int, std::__1::shared_ptr&lt;Envoy::Buffer::BufferMemoryAccount&gt;) (10 samples, 0.06%)</title><rect x="1062.7" y="1029" width="0.7" height="15.0" fill="rgb(222,30,0)" rx="2" ry="2" />
<text  x="1065.71" y="1039.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::operator=(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) (7 samples, 0.04%)</title><rect x="754.1" y="885" width="0.5" height="15.0" fill="rgb(226,202,35)" rx="2" ry="2" />
<text  x="757.07" y="895.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="916.8" y="853" width="0.2" height="15.0" fill="rgb(214,176,18)" rx="2" ry="2" />
<text  x="919.85" y="863.5" ></text>
</g>
<g >
<title>do_epoll_wait (157 samples, 0.95%)</title><rect x="690.9" y="1237" width="11.2" height="15.0" fill="rgb(205,163,10)" rx="2" ry="2" />
<text  x="693.92" y="1247.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::ResponseHeaderMap&gt;::~TypedHeaderMapImpl() (4 samples, 0.02%)</title><rect x="964.1" y="1221" width="0.3" height="15.0" fill="rgb(252,173,19)" rx="2" ry="2" />
<text  x="967.07" y="1231.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (3 samples, 0.02%)</title><rect x="243.0" y="1029" width="0.3" height="15.0" fill="rgb(238,94,36)" rx="2" ry="2" />
<text  x="246.04" y="1039.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.01%)</title><rect x="250.4" y="1205" width="0.2" height="15.0" fill="rgb(205,181,27)" rx="2" ry="2" />
<text  x="253.44" y="1215.5" ></text>
</g>
<g >
<title>io.CopyBuffer (714 samples, 4.30%)</title><rect x="120.7" y="1317" width="50.7" height="15.0" fill="rgb(248,32,21)" rx="2" ry="2" />
<text  x="123.65" y="1327.5" >io.Co..</text>
</g>
<g >
<title>Envoy::Http::Http1::ActiveClient::newStreamEncoder(Envoy::Http::ResponseDecoder&amp;) (14 samples, 0.08%)</title><rect x="1094.6" y="917" width="1.0" height="15.0" fill="rgb(245,99,51)" rx="2" ry="2" />
<text  x="1097.56" y="927.5" ></text>
</g>
<g >
<title>Wasm::Common::getServiceNameFallback() (65 samples, 0.39%)</title><rect x="764.9" y="821" width="4.6" height="15.0" fill="rgb(226,215,22)" rx="2" ry="2" />
<text  x="767.88" y="831.5" ></text>
</g>
<g >
<title>do_epoll_wait (51 samples, 0.31%)</title><rect x="196.2" y="1157" width="3.7" height="15.0" fill="rgb(252,72,38)" rx="2" ry="2" />
<text  x="199.25" y="1167.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="257.7" y="1269" width="0.1" height="15.0" fill="rgb(238,40,38)" rx="2" ry="2" />
<text  x="260.69" y="1279.5" ></text>
</g>
<g >
<title>bool proxy_wasm::null_plugin::evaluateExpression&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;(unsigned int, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (77 samples, 0.46%)</title><rect x="1036.6" y="853" width="5.5" height="15.0" fill="rgb(252,38,1)" rx="2" ry="2" />
<text  x="1039.61" y="863.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.01%)</title><rect x="1145.8" y="661" width="0.2" height="15.0" fill="rgb(216,144,10)" rx="2" ry="2" />
<text  x="1148.84" y="671.5" ></text>
</g>
<g >
<title>nf_conntrack_in (5 samples, 0.03%)</title><rect x="914.4" y="581" width="0.4" height="15.0" fill="rgb(208,97,43)" rx="2" ry="2" />
<text  x="917.43" y="591.5" ></text>
</g>
<g >
<title>Envoy::Http::AsyncRequestImpl::initialize() (2 samples, 0.01%)</title><rect x="1005.1" y="869" width="0.1" height="15.0" fill="rgb(212,67,12)" rx="2" ry="2" />
<text  x="1008.10" y="879.5" ></text>
</g>
<g >
<title>runtime.chanrecv (2 samples, 0.01%)</title><rect x="170.9" y="1269" width="0.1" height="15.0" fill="rgb(252,69,54)" rx="2" ry="2" />
<text  x="173.86" y="1279.5" ></text>
</g>
<g >
<title>mutex_unlock (2 samples, 0.01%)</title><rect x="517.4" y="1061" width="0.1" height="15.0" fill="rgb(239,122,12)" rx="2" ry="2" />
<text  x="520.40" y="1071.5" ></text>
</g>
<g >
<title>__sched_text_start (147 samples, 0.89%)</title><rect x="630.6" y="1157" width="10.5" height="15.0" fill="rgb(248,29,26)" rx="2" ry="2" />
<text  x="633.61" y="1167.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::ServerConnectionImpl::onUrl(char const*, unsigned long) (6 samples, 0.04%)</title><rect x="1129.1" y="1093" width="0.4" height="15.0" fill="rgb(252,106,1)" rx="2" ry="2" />
<text  x="1132.06" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ActiveClient::StreamWrapper::onDecodeComplete() (30 samples, 0.18%)</title><rect x="993.1" y="1029" width="2.1" height="15.0" fill="rgb(238,39,37)" rx="2" ry="2" />
<text  x="996.08" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Stats::SymbolTableImpl::join(absl::InlinedVector&lt;Envoy::Stats::StatName, 8ul, std::__1::allocator&lt;Envoy::Stats::StatName&gt; &gt; const&amp;) const (6 samples, 0.04%)</title><rect x="986.8" y="901" width="0.4" height="15.0" fill="rgb(245,200,31)" rx="2" ry="2" />
<text  x="989.76" y="911.5" ></text>
</g>
<g >
<title>do_futex (12 samples, 0.07%)</title><rect x="169.4" y="1093" width="0.8" height="15.0" fill="rgb(212,194,35)" rx="2" ry="2" />
<text  x="172.37" y="1103.5" ></text>
</g>
<g >
<title>ip_finish_output2 (3 samples, 0.02%)</title><rect x="1185.9" y="789" width="0.2" height="15.0" fill="rgb(248,58,46)" rx="2" ry="2" />
<text  x="1188.88" y="799.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__assign_external(char const*, unsigned long) (2 samples, 0.01%)</title><rect x="766.8" y="757" width="0.1" height="15.0" fill="rgb(251,102,44)" rx="2" ry="2" />
<text  x="769.80" y="767.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (4 samples, 0.02%)</title><rect x="878.4" y="901" width="0.3" height="15.0" fill="rgb(231,171,51)" rx="2" ry="2" />
<text  x="881.38" y="911.5" ></text>
</g>
<g >
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="497.1" y="901" width="0.3" height="15.0" fill="rgb(211,134,11)" rx="2" ry="2" />
<text  x="500.13" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (126 samples, 0.76%)</title><rect x="949.9" y="1269" width="9.0" height="15.0" fill="rgb(248,28,21)" rx="2" ry="2" />
<text  x="952.92" y="1279.5" ></text>
</g>
<g >
<title>ipt_do_table (5 samples, 0.03%)</title><rect x="909.5" y="133" width="0.3" height="15.0" fill="rgb(245,198,20)" rx="2" ry="2" />
<text  x="912.45" y="143.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::ReporterImpl::flushSpans() (17 samples, 0.10%)</title><rect x="1004.1" y="901" width="1.2" height="15.0" fill="rgb(206,99,0)" rx="2" ry="2" />
<text  x="1007.11" y="911.5" ></text>
</g>
<g >
<title>aa_profile_af_perm (4 samples, 0.02%)</title><rect x="515.5" y="949" width="0.3" height="15.0" fill="rgb(247,223,16)" rx="2" ry="2" />
<text  x="518.48" y="959.5" ></text>
</g>
<g >
<title>schedule (109 samples, 0.66%)</title><rect x="648.5" y="1205" width="7.8" height="15.0" fill="rgb(229,26,52)" rx="2" ry="2" />
<text  x="651.54" y="1215.5" ></text>
</g>
<g >
<title>process_backlog (2 samples, 0.01%)</title><rect x="1165.4" y="693" width="0.1" height="15.0" fill="rgb(253,127,40)" rx="2" ry="2" />
<text  x="1168.39" y="703.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3 samples, 0.02%)</title><rect x="1149.4" y="1045" width="0.2" height="15.0" fill="rgb(252,170,0)" rx="2" ry="2" />
<text  x="1152.39" y="1055.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (5 samples, 0.03%)</title><rect x="915.6" y="773" width="0.3" height="15.0" fill="rgb(254,71,49)" rx="2" ry="2" />
<text  x="918.57" y="783.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="1145.8" y="597" width="0.2" height="15.0" fill="rgb(220,91,7)" rx="2" ry="2" />
<text  x="1148.84" y="607.5" ></text>
</g>
<g >
<title>lock_sock_nested (43 samples, 0.26%)</title><rect x="619.2" y="1061" width="3.0" height="15.0" fill="rgb(244,100,18)" rx="2" ry="2" />
<text  x="622.17" y="1071.5" ></text>
</g>
<g >
<title>epoll_nochangelist_del (29 samples, 0.17%)</title><rect x="741.3" y="821" width="2.0" height="15.0" fill="rgb(206,158,7)" rx="2" ry="2" />
<text  x="744.27" y="831.5" ></text>
</g>
<g >
<title>tcp_sendmsg (181 samples, 1.09%)</title><rect x="922.3" y="997" width="12.9" height="15.0" fill="rgb(233,33,30)" rx="2" ry="2" />
<text  x="925.33" y="1007.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::DynamicMap::DynamicMapKeyList::CheckInit() const (10 samples, 0.06%)</title><rect x="1019.3" y="741" width="0.7" height="15.0" fill="rgb(248,168,35)" rx="2" ry="2" />
<text  x="1022.33" y="751.5" ></text>
</g>
<g >
<title>proxy_wasm::ContextBase::~ContextBase() (4 samples, 0.02%)</title><rect x="961.9" y="1205" width="0.3" height="15.0" fill="rgb(230,203,22)" rx="2" ry="2" />
<text  x="964.94" y="1215.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="507.9" y="1125" width="0.3" height="15.0" fill="rgb(224,49,33)" rx="2" ry="2" />
<text  x="510.87" y="1135.5" ></text>
</g>
<g >
<title>iptable_filter_hook (2 samples, 0.01%)</title><rect x="1162.5" y="389" width="0.2" height="15.0" fill="rgb(234,87,16)" rx="2" ry="2" />
<text  x="1165.55" y="399.5" ></text>
</g>
<g >
<title>fib_table_lookup (8 samples, 0.05%)</title><rect x="1162.9" y="357" width="0.6" height="15.0" fill="rgb(238,11,40)" rx="2" ry="2" />
<text  x="1165.91" y="367.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::add(absl::string_view) (3 samples, 0.02%)</title><rect x="722.8" y="853" width="0.3" height="15.0" fill="rgb(238,177,52)" rx="2" ry="2" />
<text  x="725.85" y="863.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="1074.0" y="981" width="0.2" height="15.0" fill="rgb(251,79,26)" rx="2" ry="2" />
<text  x="1077.01" y="991.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::callAndClearDrainTrackersAndCharges() (4 samples, 0.02%)</title><rect x="903.6" y="1141" width="0.2" height="15.0" fill="rgb(218,11,13)" rx="2" ry="2" />
<text  x="906.55" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::iterate(std::__1::function&lt;Envoy::Http::HeaderMap::Iterate (Envoy::Http::HeaderEntry const&amp;)&gt;) const (25 samples, 0.15%)</title><rect x="1089.3" y="805" width="1.8" height="15.0" fill="rgb(240,46,4)" rx="2" ry="2" />
<text  x="1092.30" y="815.5" ></text>
</g>
<g >
<title>rw_verify_area (8 samples, 0.05%)</title><rect x="899.0" y="1061" width="0.6" height="15.0" fill="rgb(232,161,29)" rx="2" ry="2" />
<text  x="902.00" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#2}::__invoke(http_parser*) (755 samples, 4.55%)</title><rect x="814.7" y="1109" width="53.6" height="15.0" fill="rgb(248,221,27)" rx="2" ry="2" />
<text  x="817.66" y="1119.5" >Envoy..</text>
</g>
<g >
<title>finish_task_switch (85 samples, 0.51%)</title><rect x="952.3" y="1125" width="6.0" height="15.0" fill="rgb(213,217,52)" rx="2" ry="2" />
<text  x="955.26" y="1135.5" ></text>
</g>
<g >
<title>__sched_text_start (14 samples, 0.08%)</title><rect x="617.7" y="1141" width="1.0" height="15.0" fill="rgb(233,205,29)" rx="2" ry="2" />
<text  x="620.67" y="1151.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.01%)</title><rect x="857.5" y="917" width="0.1" height="15.0" fill="rgb(206,48,17)" rx="2" ry="2" />
<text  x="860.47" y="927.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="659.6" y="1301" width="0.1" height="15.0" fill="rgb(238,9,6)" rx="2" ry="2" />
<text  x="662.56" y="1311.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::maybeCreateParent(Envoy::StreamInfo::FilterStateImpl::ParentAccessMode) (2 samples, 0.01%)</title><rect x="1063.1" y="949" width="0.1" height="15.0" fill="rgb(235,101,16)" rx="2" ry="2" />
<text  x="1066.06" y="959.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="679.5" y="1253" width="0.2" height="15.0" fill="rgb(232,163,45)" rx="2" ry="2" />
<text  x="682.54" y="1263.5" ></text>
</g>
<g >
<title>event_add (31 samples, 0.19%)</title><rect x="1126.2" y="1045" width="2.2" height="15.0" fill="rgb(226,162,21)" rx="2" ry="2" />
<text  x="1129.21" y="1055.5" ></text>
</g>
<g >
<title>runtime.scavengeSleep (17 samples, 0.10%)</title><rect x="113.3" y="1333" width="1.2" height="15.0" fill="rgb(224,89,11)" rx="2" ry="2" />
<text  x="116.33" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="672.5" y="1109" width="0.3" height="15.0" fill="rgb(206,199,15)" rx="2" ry="2" />
<text  x="675.50" y="1119.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="787.2" y="693" width="0.2" height="15.0" fill="rgb(229,224,32)" rx="2" ry="2" />
<text  x="790.21" y="703.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::DynamicList::operator[](int) const (5 samples, 0.03%)</title><rect x="773.1" y="789" width="0.3" height="15.0" fill="rgb(251,226,24)" rx="2" ry="2" />
<text  x="776.06" y="799.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onFileEvent(unsigned int) (262 samples, 1.58%)</title><rect x="1169.7" y="1253" width="18.6" height="15.0" fill="rgb(242,128,16)" rx="2" ry="2" />
<text  x="1172.66" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (199 samples, 1.20%)</title><rect x="904.7" y="1157" width="14.1" height="15.0" fill="rgb(254,165,41)" rx="2" ry="2" />
<text  x="907.69" y="1167.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::EnvoyForceTrace() const (2 samples, 0.01%)</title><rect x="725.8" y="949" width="0.1" height="15.0" fill="rgb(209,24,15)" rx="2" ry="2" />
<text  x="728.77" y="959.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.01%)</title><rect x="679.3" y="1317" width="0.1" height="15.0" fill="rgb(252,189,39)" rx="2" ry="2" />
<text  x="682.26" y="1327.5" ></text>
</g>
<g >
<title>__lock_text_start (332 samples, 2.00%)</title><rect x="140.9" y="1045" width="23.6" height="15.0" fill="rgb(226,54,31)" rx="2" ry="2" />
<text  x="143.85" y="1055.5" >_..</text>
</g>
<g >
<title>Envoy::Http::FilterManager::addStreamDecoderFilter(std::__1::shared_ptr&lt;Envoy::Http::StreamDecoderFilter&gt;) (4 samples, 0.02%)</title><rect x="829.0" y="981" width="0.2" height="15.0" fill="rgb(220,175,53)" rx="2" ry="2" />
<text  x="831.95" y="991.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (1,053 samples, 6.35%)</title><rect x="808.3" y="1173" width="74.9" height="15.0" fill="rgb(226,46,2)" rx="2" ry="2" />
<text  x="811.33" y="1183.5" >Envoy::H..</text>
</g>
<g >
<title>Envoy::Upstream::ClusterInfoImpl::stats() const (2 samples, 0.01%)</title><rect x="1097.2" y="949" width="0.1" height="15.0" fill="rgb(250,151,29)" rx="2" ry="2" />
<text  x="1100.20" y="959.5" ></text>
</g>
<g >
<title>__lock_text_start (17 samples, 0.10%)</title><rect x="436.5" y="805" width="1.2" height="15.0" fill="rgb(244,122,42)" rx="2" ry="2" />
<text  x="439.47" y="815.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.02%)</title><rect x="506.9" y="1045" width="0.3" height="15.0" fill="rgb(219,130,42)" rx="2" ry="2" />
<text  x="509.95" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool) (248 samples, 1.49%)</title><rect x="973.0" y="1013" width="17.6" height="15.0" fill="rgb(214,130,6)" rx="2" ry="2" />
<text  x="975.96" y="1023.5" ></text>
</g>
<g >
<title>runtime.findrunnable (53 samples, 0.32%)</title><rect x="131.5" y="1141" width="3.8" height="15.0" fill="rgb(225,170,1)" rx="2" ry="2" />
<text  x="134.53" y="1151.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (2 samples, 0.01%)</title><rect x="598.5" y="1189" width="0.1" height="15.0" fill="rgb(254,225,13)" rx="2" ry="2" />
<text  x="601.47" y="1199.5" ></text>
</g>
<g >
<title>__sched_text_start (8 samples, 0.05%)</title><rect x="624.8" y="1141" width="0.6" height="15.0" fill="rgb(227,223,44)" rx="2" ry="2" />
<text  x="627.78" y="1151.5" ></text>
</g>
<g >
<title>ipv4_conntrack_defrag (3 samples, 0.02%)</title><rect x="923.6" y="837" width="0.2" height="15.0" fill="rgb(227,201,0)" rx="2" ry="2" />
<text  x="926.61" y="847.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="114.0" y="1237" width="0.2" height="15.0" fill="rgb(206,173,5)" rx="2" ry="2" />
<text  x="117.04" y="1247.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (2 samples, 0.01%)</title><rect x="1173.0" y="901" width="0.1" height="15.0" fill="rgb(219,216,1)" rx="2" ry="2" />
<text  x="1176.00" y="911.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ConnectionManagerImpl::ActiveStream::endStream() (4 samples, 0.02%)</title><rect x="796.2" y="981" width="0.3" height="15.0" fill="rgb(254,108,11)" rx="2" ry="2" />
<text  x="799.24" y="991.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="660.1" y="1237" width="0.1" height="15.0" fill="rgb(237,203,32)" rx="2" ry="2" />
<text  x="663.06" y="1247.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (42 samples, 0.25%)</title><rect x="116.5" y="1237" width="2.9" height="15.0" fill="rgb(214,74,21)" rx="2" ry="2" />
<text  x="119.46" y="1247.5" ></text>
</g>
<g >
<title>event_add (2 samples, 0.01%)</title><rect x="724.1" y="869" width="0.1" height="15.0" fill="rgb(234,55,14)" rx="2" ry="2" />
<text  x="727.06" y="879.5" ></text>
</g>
<g >
<title>__x64_sys_write (4 samples, 0.02%)</title><rect x="497.1" y="1029" width="0.3" height="15.0" fill="rgb(219,211,6)" rx="2" ry="2" />
<text  x="500.13" y="1039.5" ></text>
</g>
<g >
<title>kfree_skbmem (2 samples, 0.01%)</title><rect x="925.0" y="485" width="0.2" height="15.0" fill="rgb(217,124,14)" rx="2" ry="2" />
<text  x="928.03" y="495.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::addStreamFilter(std::__1::shared_ptr&lt;Envoy::Http::StreamFilter&gt;) (3 samples, 0.02%)</title><rect x="828.5" y="981" width="0.2" height="15.0" fill="rgb(245,87,28)" rx="2" ry="2" />
<text  x="831.53" y="991.5" ></text>
</g>
<g >
<title>__lock_text_start (6 samples, 0.04%)</title><rect x="38.2" y="997" width="0.4" height="15.0" fill="rgb(227,193,40)" rx="2" ry="2" />
<text  x="41.16" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::addStreamDecoderFilterWorker(std::__1::shared_ptr&lt;Envoy::Http::StreamDecoderFilter&gt;, std::__1::shared_ptr&lt;Envoy::Http::FilterMatchState&gt;, bool) (5 samples, 0.03%)</title><rect x="830.7" y="965" width="0.3" height="15.0" fill="rgb(224,80,11)" rx="2" ry="2" />
<text  x="833.66" y="975.5" ></text>
</g>
<g >
<title>Envoy::Router::RetryStateImpl::create(Envoy::Router::RetryPolicy const&amp;, Envoy::Http::RequestHeaderMap&amp;, Envoy::Upstream::ClusterInfo const&amp;, Envoy::Router::VirtualCluster const*, Envoy::Runtime::Loader&amp;, Envoy::Random::RandomGenerator&amp;, Envoy::Event::Dispatcher&amp;, Envoy::TimeSource&amp;, Envoy::Upstream::ResourcePriority) (2 samples, 0.01%)</title><rect x="1102.0" y="981" width="0.1" height="15.0" fill="rgb(206,223,30)" rx="2" ry="2" />
<text  x="1104.96" y="991.5" ></text>
</g>
<g >
<title>br_nf_pre_routing (120 samples, 0.72%)</title><rect x="1156.6" y="629" width="8.5" height="15.0" fill="rgb(237,202,19)" rx="2" ry="2" />
<text  x="1159.58" y="639.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::HeaderEntryImpl::value() const (2 samples, 0.01%)</title><rect x="864.6" y="1045" width="0.1" height="15.0" fill="rgb(223,30,44)" rx="2" ry="2" />
<text  x="867.58" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::~ActiveStream() (72 samples, 0.43%)</title><rect x="959.8" y="1269" width="5.1" height="15.0" fill="rgb(222,148,14)" rx="2" ry="2" />
<text  x="962.80" y="1279.5" ></text>
</g>
<g >
<title>finish_task_switch (8 samples, 0.05%)</title><rect x="624.8" y="1109" width="0.6" height="15.0" fill="rgb(211,221,47)" rx="2" ry="2" />
<text  x="627.78" y="1119.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::getDataReadOnlyGeneric(absl::string_view) const (3 samples, 0.02%)</title><rect x="1016.3" y="773" width="0.2" height="15.0" fill="rgb(247,33,44)" rx="2" ry="2" />
<text  x="1019.27" y="783.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::freeStorage(Envoy::Buffer::Slice::FreeListReference) (3 samples, 0.02%)</title><rect x="1134.7" y="1125" width="0.3" height="15.0" fill="rgb(213,145,30)" rx="2" ry="2" />
<text  x="1137.74" y="1135.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="876.2" y="917" width="0.3" height="15.0" fill="rgb(237,18,36)" rx="2" ry="2" />
<text  x="879.24" y="927.5" ></text>
</g>
<g >
<title>Envoy::Http::ResponseHeaderMapImpl::create() (10 samples, 0.06%)</title><rect x="970.3" y="1045" width="0.7" height="15.0" fill="rgb(212,81,36)" rx="2" ry="2" />
<text  x="973.33" y="1055.5" ></text>
</g>
<g >
<title>__writepage (2 samples, 0.01%)</title><rect x="659.0" y="1237" width="0.1" height="15.0" fill="rgb(216,147,26)" rx="2" ry="2" />
<text  x="661.99" y="1247.5" ></text>
</g>
<g >
<title>tcp_write_xmit (3 samples, 0.02%)</title><rect x="590.4" y="949" width="0.2" height="15.0" fill="rgb(251,220,31)" rx="2" ry="2" />
<text  x="593.36" y="959.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Event::DispatcherImpl::pushTrackedObject(Envoy::ScopeTrackedObject const*) (2 samples, 0.01%)</title><rect x="1093.4" y="885" width="0.2" height="15.0" fill="rgb(212,106,37)" rx="2" ry="2" />
<text  x="1096.43" y="895.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="867.8" y="1061" width="0.1" height="15.0" fill="rgb(249,0,8)" rx="2" ry="2" />
<text  x="870.78" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::staticLookup(absl::string_view) (4 samples, 0.02%)</title><rect x="880.9" y="1045" width="0.3" height="15.0" fill="rgb(207,5,26)" rx="2" ry="2" />
<text  x="883.87" y="1055.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_fn (2 samples, 0.01%)</title><rect x="933.8" y="805" width="0.2" height="15.0" fill="rgb(233,158,0)" rx="2" ry="2" />
<text  x="936.85" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="499.1" y="1061" width="0.1" height="15.0" fill="rgb(216,116,43)" rx="2" ry="2" />
<text  x="502.05" y="1071.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (575 samples, 3.47%)</title><rect x="130.0" y="1253" width="40.9" height="15.0" fill="rgb(240,58,0)" rx="2" ry="2" />
<text  x="132.97" y="1263.5" >int..</text>
</g>
<g >
<title>Envoy::Http::HeaderUtility::checkRequiredRequestHeaders(Envoy::Http::RequestHeaderMap const&amp;) (5 samples, 0.03%)</title><rect x="838.4" y="821" width="0.4" height="15.0" fill="rgb(227,57,12)" rx="2" ry="2" />
<text  x="841.41" y="831.5" ></text>
</g>
<g >
<title>inet6_recvmsg (43 samples, 0.26%)</title><rect x="512.2" y="1029" width="3.1" height="15.0" fill="rgb(234,92,31)" rx="2" ry="2" />
<text  x="515.21" y="1039.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ResponseHeaderMapImpl::setReferenceServer(absl::string_view) (3 samples, 0.02%)</title><rect x="726.3" y="949" width="0.2" height="15.0" fill="rgb(237,15,1)" rx="2" ry="2" />
<text  x="729.33" y="959.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (4 samples, 0.02%)</title><rect x="692.8" y="1141" width="0.3" height="15.0" fill="rgb(233,118,42)" rx="2" ry="2" />
<text  x="695.84" y="1151.5" ></text>
</g>
<g >
<title>sync.(*Cond).Broadcast (69 samples, 0.42%)</title><rect x="124.8" y="1253" width="4.9" height="15.0" fill="rgb(213,212,17)" rx="2" ry="2" />
<text  x="127.78" y="1263.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::hasDataWithName(absl::string_view) const (4 samples, 0.02%)</title><rect x="854.1" y="997" width="0.3" height="15.0" fill="rgb(254,122,12)" rx="2" ry="2" />
<text  x="857.13" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::doEndStream(Envoy::Http::ConnectionManagerImpl::ActiveStream&amp;) (659 samples, 3.97%)</title><rect x="1000.6" y="981" width="46.9" height="15.0" fill="rgb(251,60,21)" rx="2" ry="2" />
<text  x="1003.62" y="991.5" >Envo..</text>
</g>
<g >
<title>inet6_sendmsg (633 samples, 3.81%)</title><rect x="546.7" y="1045" width="45.0" height="15.0" fill="rgb(221,8,18)" rx="2" ry="2" />
<text  x="549.70" y="1055.5" >inet..</text>
</g>
<g >
<title>std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; Envoy::Http::HeaderMapImpl::HeaderList::insert&lt;Envoy::Http::LowerCaseString const&amp;&gt;(Envoy::Http::LowerCaseString const&amp;) (2 samples, 0.01%)</title><rect x="980.6" y="917" width="0.2" height="15.0" fill="rgb(233,74,6)" rx="2" ry="2" />
<text  x="983.64" y="927.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_25, std::__1::allocator&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_25&gt;, proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;::operator()(proxy_wasm::ContextBase*&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;) (22 samples, 0.13%)</title><rect x="860.0" y="981" width="1.6" height="15.0" fill="rgb(209,127,36)" rx="2" ry="2" />
<text  x="863.03" y="991.5" ></text>
</g>
<g >
<title>l4proto_manip_pkt (2 samples, 0.01%)</title><rect x="1166.7" y="725" width="0.2" height="15.0" fill="rgb(247,7,30)" rx="2" ry="2" />
<text  x="1169.75" y="735.5" ></text>
</g>
<g >
<title>Envoy::Event::DispatcherImpl::timeSource() (2 samples, 0.01%)</title><rect x="1083.9" y="997" width="0.1" height="15.0" fill="rgb(210,84,25)" rx="2" ry="2" />
<text  x="1086.90" y="1007.5" ></text>
</g>
<g >
<title>ip_vs_local_reply4 (2 samples, 0.01%)</title><rect x="1173.3" y="821" width="0.1" height="15.0" fill="rgb(228,187,36)" rx="2" ry="2" />
<text  x="1176.29" y="831.5" ></text>
</g>
<g >
<title>ipv4_confirm (2 samples, 0.01%)</title><rect x="588.4" y="853" width="0.2" height="15.0" fill="rgb(225,143,23)" rx="2" ry="2" />
<text  x="591.44" y="863.5" ></text>
</g>
<g >
<title>Envoy::ThreadLocal::InstanceImpl::SlotImpl::get() (2 samples, 0.01%)</title><rect x="1070.9" y="981" width="0.1" height="15.0" fill="rgb(240,136,25)" rx="2" ry="2" />
<text  x="1073.88" y="991.5" ></text>
</g>
<g >
<title>Envoy::Network::TransportSocketOptionsImpl::hashKey(std::__1::vector&lt;unsigned char, std::__1::allocator&lt;unsigned char&gt; &gt;&amp;, Envoy::Network::TransportSocketFactory const&amp;) const (2 samples, 0.01%)</title><rect x="848.8" y="933" width="0.1" height="15.0" fill="rgb(252,154,26)" rx="2" ry="2" />
<text  x="851.79" y="943.5" ></text>
</g>
<g >
<title>runtime.notewakeup (12 samples, 0.07%)</title><rect x="169.4" y="1173" width="0.8" height="15.0" fill="rgb(232,28,13)" rx="2" ry="2" />
<text  x="172.37" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (5,617 samples, 33.85%)</title><rect x="258.8" y="1365" width="399.5" height="15.0" fill="rgb(230,41,51)" rx="2" ry="2" />
<text  x="261.83" y="1375.5" >[unknown]</text>
</g>
<g >
<title>Envoy::Router::Filter::decodeHeaders(Envoy::Http::RequestHeaderMap&amp;, bool) (2 samples, 0.01%)</title><rect x="1005.1" y="837" width="0.1" height="15.0" fill="rgb(217,211,7)" rx="2" ry="2" />
<text  x="1008.10" y="847.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::staticLookup(absl::string_view) (2 samples, 0.01%)</title><rect x="881.2" y="1061" width="0.2" height="15.0" fill="rgb(241,178,29)" rx="2" ry="2" />
<text  x="884.22" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (32 samples, 0.19%)</title><rect x="436.3" y="997" width="2.3" height="15.0" fill="rgb(226,21,17)" rx="2" ry="2" />
<text  x="439.33" y="1007.5" ></text>
</g>
<g >
<title>netif_rx (4 samples, 0.02%)</title><rect x="587.1" y="757" width="0.3" height="15.0" fill="rgb(223,170,6)" rx="2" ry="2" />
<text  x="590.09" y="767.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (1,339 samples, 8.07%)</title><rect x="712.5" y="1157" width="95.2" height="15.0" fill="rgb(253,86,52)" rx="2" ry="2" />
<text  x="715.47" y="1167.5" >Envoy::Http..</text>
</g>
<g >
<title>virtual thunk to Envoy::Extensions::Common::Wasm::Context::decodeData(Envoy::Buffer::Instance&amp;, bool) (2 samples, 0.01%)</title><rect x="1122.8" y="1045" width="0.1" height="15.0" fill="rgb(245,189,50)" rx="2" ry="2" />
<text  x="1125.80" y="1055.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (13 samples, 0.08%)</title><rect x="563.8" y="565" width="1.0" height="15.0" fill="rgb(226,79,48)" rx="2" ry="2" />
<text  x="566.84" y="575.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (16 samples, 0.10%)</title><rect x="134.1" y="981" width="1.1" height="15.0" fill="rgb(247,44,5)" rx="2" ry="2" />
<text  x="137.09" y="991.5" ></text>
</g>
<g >
<title>tcp_push (455 samples, 2.74%)</title><rect x="558.2" y="997" width="32.4" height="15.0" fill="rgb(206,38,13)" rx="2" ry="2" />
<text  x="561.22" y="1007.5" >tc..</text>
</g>
<g >
<title>__x64_sys_nanosleep (5 samples, 0.03%)</title><rect x="597.8" y="1173" width="0.3" height="15.0" fill="rgb(244,42,30)" rx="2" ry="2" />
<text  x="600.76" y="1183.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (36 samples, 0.22%)</title><rect x="626.1" y="1109" width="2.6" height="15.0" fill="rgb(212,120,27)" rx="2" ry="2" />
<text  x="629.13" y="1119.5" ></text>
</g>
<g >
<title>do_iter_read (83 samples, 0.50%)</title><rect x="893.7" y="1077" width="5.9" height="15.0" fill="rgb(213,36,0)" rx="2" ry="2" />
<text  x="896.67" y="1087.5" ></text>
</g>
<g >
<title>__find_get_block (14 samples, 0.08%)</title><rect x="244.7" y="997" width="1.0" height="15.0" fill="rgb(231,134,19)" rx="2" ry="2" />
<text  x="247.68" y="1007.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (89 samples, 0.54%)</title><rect x="598.5" y="1221" width="6.3" height="15.0" fill="rgb(216,18,20)" rx="2" ry="2" />
<text  x="601.47" y="1231.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.09%)</title><rect x="1150.1" y="1125" width="1.1" height="15.0" fill="rgb(215,170,25)" rx="2" ry="2" />
<text  x="1153.10" y="1135.5" ></text>
</g>
<g >
<title>do_syscall_64 (176 samples, 1.06%)</title><rect x="100.5" y="1269" width="12.5" height="15.0" fill="rgb(208,221,38)" rx="2" ry="2" />
<text  x="103.46" y="1279.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (3 samples, 0.02%)</title><rect x="878.8" y="869" width="0.2" height="15.0" fill="rgb(240,86,16)" rx="2" ry="2" />
<text  x="881.80" y="879.5" ></text>
</g>
<g >
<title>runtime.runqgrab (4 samples, 0.02%)</title><rect x="210.8" y="1221" width="0.3" height="15.0" fill="rgb(247,13,52)" rx="2" ry="2" />
<text  x="213.83" y="1231.5" ></text>
</g>
<g >
<title>do_syscall_64 (116 samples, 0.70%)</title><rect x="217.2" y="1141" width="8.2" height="15.0" fill="rgb(216,174,11)" rx="2" ry="2" />
<text  x="220.16" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::operator=(Envoy::Buffer::Slice&amp;&amp;) (2 samples, 0.01%)</title><rect x="977.9" y="853" width="0.1" height="15.0" fill="rgb(238,32,23)" rx="2" ry="2" />
<text  x="980.87" y="863.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="682.0" y="1301" width="0.2" height="15.0" fill="rgb(239,157,36)" rx="2" ry="2" />
<text  x="684.96" y="1311.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::setUpstreamConnectionId(unsigned long) (2 samples, 0.01%)</title><rect x="844.2" y="901" width="0.1" height="15.0" fill="rgb(214,156,7)" rx="2" ry="2" />
<text  x="847.17" y="911.5" ></text>
</g>
<g >
<title>tcp_recvmsg (53 samples, 0.32%)</title><rect x="1143.9" y="997" width="3.8" height="15.0" fill="rgb(245,220,51)" rx="2" ry="2" />
<text  x="1146.92" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Http::OriginalIPDetection::Xff::XffIPDetection::detect(Envoy::Http::OriginalIPDetectionParams&amp;) (2 samples, 0.01%)</title><rect x="824.7" y="1013" width="0.1" height="15.0" fill="rgb(210,211,50)" rx="2" ry="2" />
<text  x="827.69" y="1023.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2 samples, 0.01%)</title><rect x="131.4" y="1029" width="0.1" height="15.0" fill="rgb(209,184,45)" rx="2" ry="2" />
<text  x="134.39" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Router::GenericConnPoolFactory* Envoy::Config::Utility::getAndCheckFactoryByName&lt;Envoy::Router::GenericConnPoolFactory&gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, bool) (4 samples, 0.02%)</title><rect x="851.2" y="981" width="0.3" height="15.0" fill="rgb(213,152,16)" rx="2" ry="2" />
<text  x="854.21" y="991.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.01%)</title><rect x="604.3" y="1109" width="0.1" height="15.0" fill="rgb(223,154,45)" rx="2" ry="2" />
<text  x="607.30" y="1119.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.01%)</title><rect x="489.5" y="997" width="0.2" height="15.0" fill="rgb(238,35,33)" rx="2" ry="2" />
<text  x="492.52" y="1007.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (2 samples, 0.01%)</title><rect x="623.4" y="949" width="0.2" height="15.0" fill="rgb(236,127,48)" rx="2" ry="2" />
<text  x="626.43" y="959.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (2 samples, 0.01%)</title><rect x="894.8" y="981" width="0.1" height="15.0" fill="rgb(250,3,44)" rx="2" ry="2" />
<text  x="897.80" y="991.5" ></text>
</g>
<g >
<title>tcp_data_ready (249 samples, 1.50%)</title><rect x="566.3" y="565" width="17.7" height="15.0" fill="rgb(224,64,14)" rx="2" ry="2" />
<text  x="569.33" y="575.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (8 samples, 0.05%)</title><rect x="898.1" y="997" width="0.5" height="15.0" fill="rgb(243,35,33)" rx="2" ry="2" />
<text  x="901.08" y="1007.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Http::Http1::StreamEncoderImpl::encodeHeadersBase(Envoy::Http::RequestOrResponseHeaderMap const&amp;, absl::optional&lt;unsigned long&gt;, bool, bool)::$_0, std::__1::allocator&lt;Envoy::Http::Http1::StreamEncoderImpl::encodeHeadersBase(Envoy::Http::RequestOrResponseHeaderMap const&amp;, absl::optional&lt;unsigned long&gt;, bool, bool)::$_0&gt;, Envoy::Http::HeaderMap::Iterate (Envoy::Http::HeaderEntry const&amp;)&gt;::operator()(Envoy::Http::HeaderEntry const&amp;) (14 samples, 0.08%)</title><rect x="976.7" y="885" width="1.0" height="15.0" fill="rgb(248,80,27)" rx="2" ry="2" />
<text  x="979.73" y="895.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.01%)</title><rect x="511.2" y="1061" width="0.2" height="15.0" fill="rgb(252,45,33)" rx="2" ry="2" />
<text  x="514.21" y="1071.5" ></text>
</g>
<g >
<title>__set_page_dirty (2 samples, 0.01%)</title><rect x="242.8" y="1029" width="0.2" height="15.0" fill="rgb(210,31,52)" rx="2" ry="2" />
<text  x="245.83" y="1039.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::RenderNonMessageField(google::protobuf::Field const*, google::protobuf::stringpiece_internal::StringPiece, google::protobuf::util::converter::ObjectWriter*) const (3 samples, 0.02%)</title><rect x="1004.4" y="613" width="0.2" height="15.0" fill="rgb(233,141,0)" rx="2" ry="2" />
<text  x="1007.39" y="623.5" ></text>
</g>
<g >
<title>Envoy::Server::WatchDogImpl::touch() (2 samples, 0.01%)</title><rect x="965.6" y="1269" width="0.2" height="15.0" fill="rgb(206,9,53)" rx="2" ry="2" />
<text  x="968.63" y="1279.5" ></text>
</g>
<g >
<title>__clock_gettime (24 samples, 0.14%)</title><rect x="943.0" y="1365" width="1.7" height="15.0" fill="rgb(234,198,28)" rx="2" ry="2" />
<text  x="946.02" y="1375.5" ></text>
</g>
<g >
<title>tcp_sendmsg (216 samples, 1.30%)</title><rect x="1172.0" y="997" width="15.4" height="15.0" fill="rgb(222,102,22)" rx="2" ry="2" />
<text  x="1175.01" y="1007.5" ></text>
</g>
<g >
<title>std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; Envoy::Http::HeaderMapImpl::HeaderList::insert&lt;Envoy::Http::LowerCaseString const&amp;, Envoy::Http::HeaderString&gt;(Envoy::Http::LowerCaseString const&amp;, Envoy::Http::HeaderString&amp;&amp;) (3 samples, 0.02%)</title><rect x="880.7" y="1029" width="0.2" height="15.0" fill="rgb(254,203,1)" rx="2" ry="2" />
<text  x="883.65" y="1039.5" ></text>
</g>
<g >
<title>__lock_text_start (19 samples, 0.11%)</title><rect x="596.4" y="1093" width="1.4" height="15.0" fill="rgb(245,195,39)" rx="2" ry="2" />
<text  x="599.41" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="679.5" y="1269" width="0.2" height="15.0" fill="rgb(252,60,29)" rx="2" ry="2" />
<text  x="682.54" y="1279.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/pkg/pools.Copy (714 samples, 4.30%)</title><rect x="120.7" y="1333" width="50.7" height="15.0" fill="rgb(207,202,8)" rx="2" ry="2" />
<text  x="123.65" y="1343.5" >local..</text>
</g>
<g >
<title>std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::function&lt;std::__1::unique_ptr&lt;proxy_wasm::null_plugin::Context, std::__1::default_delete&lt;proxy_wasm::null_plugin::Context&gt; &gt; (unsigned int, proxy_wasm::null_plugin::RootContext*)&gt; &gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::function&lt;std::__1::unique_ptr&lt;proxy_wasm::null_plugin::Context, std::__1::default_delete&lt;proxy_wasm::null_plugin::Context&gt; &gt; (unsigned int, proxy_wasm::null_plugin::RootContext*)&gt; &gt;, std::__1::__unordered_map_hasher&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::function&lt;std::__1::unique_ptr&lt;proxy_wasm::null_plugin::Context, std::__1::default_delete&lt;proxy_wasm::null_plugin::Context&gt; &gt; (unsigned int, proxy_wasm::null_plugin::RootContext*)&gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::__unordered_map_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::function&lt;std::__1::unique_ptr&lt;proxy_wasm::null_plugin::Context, std::__1::default_delete&lt;proxy_wasm::null_plugin::Context&gt; &gt; (unsigned int, proxy_wasm::null_plugin::RootContext*)&gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::function&lt;std::__1::unique_ptr&lt;proxy_wasm::null_plugin::Context, std::__1::default_delete&lt;proxy_wasm::null_plugin::Context&gt; &gt; (unsigned int, proxy_wasm::null_plugin::RootContext*)&gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;&gt;, std::__1::tuple&lt;&gt; &gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::__1::tuple&lt;&gt;&amp;&amp;) (3 samples, 0.02%)</title><rect x="859.5" y="949" width="0.2" height="15.0" fill="rgb(223,138,36)" rx="2" ry="2" />
<text  x="862.53" y="959.5" ></text>
</g>
<g >
<title>import_iovec (4 samples, 0.02%)</title><rect x="935.5" y="1077" width="0.3" height="15.0" fill="rgb(228,134,26)" rx="2" ry="2" />
<text  x="938.48" y="1087.5" ></text>
</g>
<g >
<title>pipe_poll (2 samples, 0.01%)</title><rect x="197.8" y="1077" width="0.2" height="15.0" fill="rgb(249,61,52)" rx="2" ry="2" />
<text  x="200.81" y="1087.5" ></text>
</g>
<g >
<title>nf_hook_slow (3 samples, 0.02%)</title><rect x="588.9" y="885" width="0.2" height="15.0" fill="rgb(214,133,9)" rx="2" ry="2" />
<text  x="591.87" y="895.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getProperty(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (8 samples, 0.05%)</title><rect x="1107.2" y="901" width="0.6" height="15.0" fill="rgb(212,83,36)" rx="2" ry="2" />
<text  x="1110.22" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (121 samples, 0.73%)</title><rect x="490.2" y="1045" width="8.6" height="15.0" fill="rgb(218,30,7)" rx="2" ry="2" />
<text  x="493.24" y="1055.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="1061.2" y="1045" width="0.2" height="15.0" fill="rgb(236,177,10)" rx="2" ry="2" />
<text  x="1064.21" y="1055.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const (4 samples, 0.02%)</title><rect x="944.7" y="1365" width="0.3" height="15.0" fill="rgb(219,202,5)" rx="2" ry="2" />
<text  x="947.73" y="1375.5" ></text>
</g>
<g >
<title>pipe_write (282 samples, 1.70%)</title><rect x="517.7" y="1061" width="20.0" height="15.0" fill="rgb(247,160,16)" rx="2" ry="2" />
<text  x="520.69" y="1071.5" ></text>
</g>
<g >
<title>new_sync_write (4 samples, 0.02%)</title><rect x="656.4" y="1189" width="0.3" height="15.0" fill="rgb(253,224,30)" rx="2" ry="2" />
<text  x="659.43" y="1199.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::add(void const*, unsigned long) (3 samples, 0.02%)</title><rect x="977.0" y="837" width="0.2" height="15.0" fill="rgb(213,110,21)" rx="2" ry="2" />
<text  x="980.01" y="847.5" ></text>
</g>
<g >
<title>skb_release_all (12 samples, 0.07%)</title><rect x="512.4" y="981" width="0.8" height="15.0" fill="rgb(236,124,45)" rx="2" ry="2" />
<text  x="515.35" y="991.5" ></text>
</g>
<g >
<title>fdb_find_rcu (2 samples, 0.01%)</title><rect x="1157.0" y="533" width="0.1" height="15.0" fill="rgb(249,109,31)" rx="2" ry="2" />
<text  x="1160.00" y="543.5" ></text>
</g>
<g >
<title>encoding/json.ptrEncoder.encode-fm (6 samples, 0.04%)</title><rect x="251.6" y="1061" width="0.4" height="15.0" fill="rgb(213,208,54)" rx="2" ry="2" />
<text  x="254.58" y="1071.5" ></text>
</g>
<g >
<title>Wasm::Common::populateRequestProtocol(Wasm::Common::RequestInfo*) (5 samples, 0.03%)</title><rect x="861.2" y="949" width="0.4" height="15.0" fill="rgb(219,11,32)" rx="2" ry="2" />
<text  x="864.24" y="959.5" ></text>
</g>
<g >
<title>runtime.selectnbrecv (2 samples, 0.01%)</title><rect x="171.3" y="1285" width="0.1" height="15.0" fill="rgb(248,179,48)" rx="2" ry="2" />
<text  x="174.29" y="1295.5" ></text>
</g>
<g >
<title>do_nanosleep (3 samples, 0.02%)</title><rect x="511.0" y="1109" width="0.2" height="15.0" fill="rgb(216,27,36)" rx="2" ry="2" />
<text  x="514.00" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Buffer::clear() (2 samples, 0.01%)</title><rect x="1053.5" y="981" width="0.2" height="15.0" fill="rgb(226,202,9)" rx="2" ry="2" />
<text  x="1056.53" y="991.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::get(Envoy::Http::LowerCaseString const&amp;) const (4 samples, 0.02%)</title><rect x="1075.0" y="1013" width="0.3" height="15.0" fill="rgb(217,94,3)" rx="2" ry="2" />
<text  x="1078.01" y="1023.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (2 samples, 0.01%)</title><rect x="584.2" y="565" width="0.1" height="15.0" fill="rgb(224,110,5)" rx="2" ry="2" />
<text  x="587.18" y="575.5" ></text>
</g>
<g >
<title>nf_conntrack_in (7 samples, 0.04%)</title><rect x="1155.4" y="805" width="0.5" height="15.0" fill="rgb(244,71,9)" rx="2" ry="2" />
<text  x="1158.37" y="815.5" ></text>
</g>
<g >
<title>do_futex (2 samples, 0.01%)</title><rect x="250.4" y="1141" width="0.2" height="15.0" fill="rgb(238,127,51)" rx="2" ry="2" />
<text  x="253.44" y="1151.5" ></text>
</g>
<g >
<title>runtime.mstart1 (69 samples, 0.42%)</title><rect x="115.4" y="1317" width="4.9" height="15.0" fill="rgb(207,213,28)" rx="2" ry="2" />
<text  x="118.39" y="1327.5" ></text>
</g>
<g >
<title>process_backlog (2 samples, 0.01%)</title><rect x="1145.8" y="725" width="0.2" height="15.0" fill="rgb(254,26,52)" rx="2" ry="2" />
<text  x="1148.84" y="735.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="489.7" y="917" width="0.2" height="15.0" fill="rgb(243,139,16)" rx="2" ry="2" />
<text  x="492.74" y="927.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getProperty(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (109 samples, 0.66%)</title><rect x="770.4" y="805" width="7.7" height="15.0" fill="rgb(229,116,47)" rx="2" ry="2" />
<text  x="773.35" y="815.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (46 samples, 0.28%)</title><rect x="908.7" y="309" width="3.3" height="15.0" fill="rgb(228,85,23)" rx="2" ry="2" />
<text  x="911.74" y="319.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestEncoderWrapper::encodeData(Envoy::Buffer::Instance&amp;, bool) (3 samples, 0.02%)</title><rect x="1121.9" y="997" width="0.3" height="15.0" fill="rgb(221,96,40)" rx="2" ry="2" />
<text  x="1124.94" y="1007.5" ></text>
</g>
<g >
<title>github.com/docker/docker/pkg/ioutils.returnBuffer (3 samples, 0.02%)</title><rect x="172.5" y="1317" width="0.2" height="15.0" fill="rgb(216,38,51)" rx="2" ry="2" />
<text  x="175.50" y="1327.5" ></text>
</g>
<g >
<title>smp_call_function_many (34 samples, 0.20%)</title><rect x="626.3" y="1077" width="2.4" height="15.0" fill="rgb(253,118,54)" rx="2" ry="2" />
<text  x="629.28" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::HeaderEntryImpl::key() const (2 samples, 0.01%)</title><rect x="982.9" y="821" width="0.2" height="15.0" fill="rgb(225,39,13)" rx="2" ry="2" />
<text  x="985.92" y="831.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (136 samples, 0.82%)</title><rect x="547.0" y="981" width="9.7" height="15.0" fill="rgb(221,195,44)" rx="2" ry="2" />
<text  x="549.98" y="991.5" ></text>
</g>
<g >
<title>schedule (273 samples, 1.65%)</title><rect x="439.5" y="917" width="19.4" height="15.0" fill="rgb(252,190,6)" rx="2" ry="2" />
<text  x="442.46" y="927.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (121 samples, 0.73%)</title><rect x="907.0" y="741" width="8.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="909.96" y="751.5" ></text>
</g>
<g >
<title>Envoy::Upstream::ClusterManagerImpl::ThreadLocalClusterManagerImpl::ClusterEntry::httpConnPoolImpl(Envoy::Upstream::ResourcePriority, absl::optional&lt;Envoy::Http::Protocol&gt;, Envoy::Upstream::LoadBalancerContext*, bool) (15 samples, 0.09%)</title><rect x="1099.4" y="933" width="1.1" height="15.0" fill="rgb(209,200,5)" rx="2" ry="2" />
<text  x="1102.40" y="943.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (2 samples, 0.01%)</title><rect x="557.2" y="997" width="0.1" height="15.0" fill="rgb(216,177,30)" rx="2" ry="2" />
<text  x="560.15" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::requestHeadersInitialized() (3 samples, 0.02%)</title><rect x="1111.3" y="1029" width="0.2" height="15.0" fill="rgb(216,206,40)" rx="2" ry="2" />
<text  x="1114.28" y="1039.5" ></text>
</g>
<g >
<title>udp_tunnel_xmit_skb (38 samples, 0.23%)</title><rect x="909.0" y="245" width="2.7" height="15.0" fill="rgb(245,53,52)" rx="2" ry="2" />
<text  x="912.03" y="255.5" ></text>
</g>
<g >
<title>br_nf_hook_thresh (102 samples, 0.61%)</title><rect x="1156.8" y="597" width="7.2" height="15.0" fill="rgb(217,147,2)" rx="2" ry="2" />
<text  x="1159.79" y="607.5" ></text>
</g>
<g >
<title>Envoy::Http::HttpConnPoolImplBase::onPoolReady(Envoy::ConnectionPool::ActiveClient&amp;, Envoy::ConnectionPool::AttachContext&amp;) (125 samples, 0.75%)</title><rect x="1087.0" y="933" width="8.8" height="15.0" fill="rgb(247,188,18)" rx="2" ry="2" />
<text  x="1089.96" y="943.5" ></text>
</g>
<g >
<title>ip_forward_finish (2 samples, 0.01%)</title><rect x="657.1" y="1061" width="0.2" height="15.0" fill="rgb(216,211,18)" rx="2" ry="2" />
<text  x="660.14" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::add(void const*, unsigned long) (2 samples, 0.01%)</title><rect x="976.2" y="933" width="0.2" height="15.0" fill="rgb(210,48,24)" rx="2" ry="2" />
<text  x="979.23" y="943.5" ></text>
</g>
<g >
<title>do_futex (39 samples, 0.24%)</title><rect x="126.6" y="1045" width="2.8" height="15.0" fill="rgb(205,141,43)" rx="2" ry="2" />
<text  x="129.63" y="1055.5" ></text>
</g>
<g >
<title>net_rx_action (330 samples, 1.99%)</title><rect x="562.6" y="757" width="23.5" height="15.0" fill="rgb(224,108,17)" rx="2" ry="2" />
<text  x="565.63" y="767.5" >n..</text>
</g>
<g >
<title>Envoy::Buffer::Slice::operator=(Envoy::Buffer::Slice&amp;&amp;) (2 samples, 0.01%)</title><rect x="1000.5" y="901" width="0.1" height="15.0" fill="rgb(218,36,13)" rx="2" ry="2" />
<text  x="1003.48" y="911.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (2 samples, 0.01%)</title><rect x="1164.5" y="565" width="0.1" height="15.0" fill="rgb(241,121,5)" rx="2" ry="2" />
<text  x="1167.47" y="575.5" ></text>
</g>
<g >
<title>std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; Envoy::Http::HeaderMapImpl::HeaderList::insert&lt;Envoy::Http::LowerCaseString const&amp;&gt;(Envoy::Http::LowerCaseString const&amp;) (2 samples, 0.01%)</title><rect x="1114.5" y="1013" width="0.2" height="15.0" fill="rgb(208,227,20)" rx="2" ry="2" />
<text  x="1117.55" y="1023.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::DefaultValueObjectWriter::EndObject() (3 samples, 0.02%)</title><rect x="1004.2" y="757" width="0.2" height="15.0" fill="rgb(214,4,19)" rx="2" ry="2" />
<text  x="1007.18" y="767.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::decodeHeaders(Envoy::Http::RequestHeaderMap&amp;, bool) (303 samples, 1.83%)</title><rect x="1083.2" y="1013" width="21.5" height="15.0" fill="rgb(252,103,41)" rx="2" ry="2" />
<text  x="1086.19" y="1023.5" >E..</text>
</g>
<g >
<title>_copy_from_iter_full (6 samples, 0.04%)</title><rect x="1154.1" y="965" width="0.4" height="15.0" fill="rgb(252,76,39)" rx="2" ry="2" />
<text  x="1157.09" y="975.5" ></text>
</g>
<g >
<title>tcp_send_ack (6 samples, 0.04%)</title><rect x="1145.6" y="965" width="0.4" height="15.0" fill="rgb(221,119,44)" rx="2" ry="2" />
<text  x="1148.55" y="975.5" ></text>
</g>
<g >
<title>runtime.futex (12 samples, 0.07%)</title><rect x="169.4" y="1157" width="0.8" height="15.0" fill="rgb(228,36,33)" rx="2" ry="2" />
<text  x="172.37" y="1167.5" ></text>
</g>
<g >
<title>gro_normal_list.part.0 (2 samples, 0.01%)</title><rect x="498.8" y="949" width="0.2" height="15.0" fill="rgb(233,222,44)" rx="2" ry="2" />
<text  x="501.84" y="959.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (300 samples, 1.81%)</title><rect x="563.5" y="613" width="21.3" height="15.0" fill="rgb(236,120,10)" rx="2" ry="2" />
<text  x="566.48" y="623.5" >t..</text>
</g>
<g >
<title>google::protobuf::internal::SerialArena::AllocateAlignedWithCleanupFallback(unsigned long, google::protobuf::internal::AllocationPolicy const*) (4 samples, 0.02%)</title><rect x="773.7" y="725" width="0.3" height="15.0" fill="rgb(244,166,27)" rx="2" ry="2" />
<text  x="776.70" y="735.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (2 samples, 0.01%)</title><rect x="598.5" y="1141" width="0.1" height="15.0" fill="rgb(208,94,41)" rx="2" ry="2" />
<text  x="601.47" y="1151.5" ></text>
</g>
<g >
<title>copy_page_to_iter (6 samples, 0.04%)</title><rect x="164.5" y="1093" width="0.5" height="15.0" fill="rgb(224,89,48)" rx="2" ry="2" />
<text  x="167.53" y="1103.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Extensions::Common::Wasm::Context::IsPathUnknown(absl::string_view) const (3 samples, 0.02%)</title><rect x="788.8" y="757" width="0.3" height="15.0" fill="rgb(233,85,24)" rx="2" ry="2" />
<text  x="791.84" y="767.5" ></text>
</g>
<g >
<title>Envoy::Event::DispatcherImpl::clearDeferredDeleteList() (83 samples, 0.50%)</title><rect x="704.4" y="1285" width="5.9" height="15.0" fill="rgb(206,48,25)" rx="2" ry="2" />
<text  x="707.43" y="1295.5" ></text>
</g>
<g >
<title>new_sync_read (57 samples, 0.34%)</title><rect x="511.8" y="1077" width="4.0" height="15.0" fill="rgb(211,73,48)" rx="2" ry="2" />
<text  x="514.78" y="1087.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::FieldBackedMapImpl::operator[](google::api::expr::runtime::CelValue) const (24 samples, 0.14%)</title><rect x="775.1" y="789" width="1.7" height="15.0" fill="rgb(206,12,16)" rx="2" ry="2" />
<text  x="778.12" y="799.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (9 samples, 0.05%)</title><rect x="490.9" y="981" width="0.6" height="15.0" fill="rgb(238,109,51)" rx="2" ry="2" />
<text  x="493.88" y="991.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (2 samples, 0.01%)</title><rect x="1160.4" y="85" width="0.2" height="15.0" fill="rgb(232,186,30)" rx="2" ry="2" />
<text  x="1163.42" y="95.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Upstream::HostImpl::used(bool) (2 samples, 0.01%)</title><rect x="850.2" y="901" width="0.2" height="15.0" fill="rgb(246,10,32)" rx="2" ry="2" />
<text  x="853.22" y="911.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::hasDataWithName(absl::string_view) const (3 samples, 0.02%)</title><rect x="787.8" y="709" width="0.3" height="15.0" fill="rgb(237,181,16)" rx="2" ry="2" />
<text  x="790.85" y="719.5" ></text>
</g>
<g >
<title>Envoy::Http::ResponseDecoderWrapper::decodeData(Envoy::Buffer::Instance&amp;, bool) (837 samples, 5.04%)</title><rect x="992.2" y="1045" width="59.6" height="15.0" fill="rgb(240,34,1)" rx="2" ry="2" />
<text  x="995.23" y="1055.5" >Envoy:..</text>
</g>
<g >
<title>__sched_text_start (295 samples, 1.78%)</title><rect x="38.7" y="1013" width="20.9" height="15.0" fill="rgb(247,193,21)" rx="2" ry="2" />
<text  x="41.66" y="1023.5" ></text>
</g>
<g >
<title>aa_sk_perm (7 samples, 0.04%)</title><rect x="1147.8" y="981" width="0.5" height="15.0" fill="rgb(245,171,48)" rx="2" ry="2" />
<text  x="1150.76" y="991.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.08%)</title><rect x="702.2" y="1253" width="1.0" height="15.0" fill="rgb(249,190,24)" rx="2" ry="2" />
<text  x="705.16" y="1263.5" ></text>
</g>
<g >
<title>ep_send_events_proc (4 samples, 0.02%)</title><rect x="645.6" y="1189" width="0.3" height="15.0" fill="rgb(222,69,48)" rx="2" ry="2" />
<text  x="648.62" y="1199.5" ></text>
</g>
<g >
<title>runtime.schedule (3 samples, 0.02%)</title><rect x="120.4" y="1317" width="0.3" height="15.0" fill="rgb(206,228,23)" rx="2" ry="2" />
<text  x="123.44" y="1327.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (2 samples, 0.01%)</title><rect x="1145.7" y="789" width="0.1" height="15.0" fill="rgb(215,159,32)" rx="2" ry="2" />
<text  x="1148.70" y="799.5" ></text>
</g>
<g >
<title>event_add_nolock_ (31 samples, 0.19%)</title><rect x="743.8" y="869" width="2.2" height="15.0" fill="rgb(231,149,27)" rx="2" ry="2" />
<text  x="746.83" y="879.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (110 samples, 0.66%)</title><rect x="1176.2" y="501" width="7.8" height="15.0" fill="rgb(246,44,52)" rx="2" ry="2" />
<text  x="1179.20" y="511.5" ></text>
</g>
<g >
<title>Envoy::Http::ResponseDecoderWrapper::decodeData(Envoy::Buffer::Instance&amp;, bool) (30 samples, 0.18%)</title><rect x="801.6" y="1061" width="2.2" height="15.0" fill="rgb(225,149,27)" rx="2" ry="2" />
<text  x="804.64" y="1071.5" ></text>
</g>
<g >
<title>__fdget_pos (3 samples, 0.02%)</title><rect x="1171.3" y="1093" width="0.2" height="15.0" fill="rgb(208,175,39)" rx="2" ry="2" />
<text  x="1174.30" y="1103.5" ></text>
</g>
<g >
<title>tcp_write_xmit (161 samples, 0.97%)</title><rect x="905.8" y="933" width="11.5" height="15.0" fill="rgb(229,56,38)" rx="2" ry="2" />
<text  x="908.83" y="943.5" ></text>
</g>
<g >
<title>net/http.(*conn).serve (19 samples, 0.11%)</title><rect x="250.8" y="1349" width="1.3" height="15.0" fill="rgb(252,227,35)" rx="2" ry="2" />
<text  x="253.79" y="1359.5" ></text>
</g>
<g >
<title>__fget (4 samples, 0.02%)</title><rect x="741.8" y="709" width="0.3" height="15.0" fill="rgb(214,45,47)" rx="2" ry="2" />
<text  x="744.84" y="719.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void (proxy_wasm::ContextBase*, proxy_wasm::Word)&gt;*)::$_2, std::__1::allocator&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void (proxy_wasm::ContextBase*, proxy_wasm::Word)&gt;*)::$_2&gt;, void (proxy_wasm::ContextBase*, proxy_wasm::Word)&gt;::operator()(proxy_wasm::ContextBase*&amp;&amp;, proxy_wasm::Word&amp;&amp;) (2 samples, 0.01%)</title><rect x="1046.2" y="949" width="0.1" height="15.0" fill="rgb(249,206,28)" rx="2" ry="2" />
<text  x="1049.21" y="959.5" ></text>
</g>
<g >
<title>do_futex (2 samples, 0.01%)</title><rect x="33.7" y="1045" width="0.1" height="15.0" fill="rgb(221,209,21)" rx="2" ry="2" />
<text  x="36.68" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onMessageComplete() (158 samples, 0.95%)</title><rect x="868.3" y="1093" width="11.3" height="15.0" fill="rgb(206,18,27)" rx="2" ry="2" />
<text  x="871.35" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*, char const*, unsigned long)#4}::__invoke(http_parser*, char const*, unsigned long) (2 samples, 0.01%)</title><rect x="1056.8" y="1093" width="0.1" height="15.0" fill="rgb(233,42,42)" rx="2" ry="2" />
<text  x="1059.80" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Runtime::SnapshotImpl::~SnapshotImpl() (2 samples, 0.01%)</title><rect x="681.8" y="1349" width="0.2" height="15.0" fill="rgb(230,215,34)" rx="2" ry="2" />
<text  x="684.82" y="1359.5" ></text>
</g>
<g >
<title>ip_finish_output (2 samples, 0.01%)</title><rect x="1145.8" y="853" width="0.2" height="15.0" fill="rgb(238,152,22)" rx="2" ry="2" />
<text  x="1148.84" y="863.5" ></text>
</g>
<g >
<title>ip_finish_output2 (3 samples, 0.02%)</title><rect x="896.6" y="821" width="0.2" height="15.0" fill="rgb(210,151,14)" rx="2" ry="2" />
<text  x="899.58" y="831.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.01%)</title><rect x="641.8" y="1093" width="0.1" height="15.0" fill="rgb(229,82,13)" rx="2" ry="2" />
<text  x="644.78" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="1006.2" y="901" width="0.2" height="15.0" fill="rgb(221,133,45)" rx="2" ry="2" />
<text  x="1009.24" y="911.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::decodeData(Envoy::Buffer::Instance&amp;, bool) (40 samples, 0.24%)</title><rect x="870.6" y="1061" width="2.9" height="15.0" fill="rgb(221,184,32)" rx="2" ry="2" />
<text  x="873.63" y="1071.5" ></text>
</g>
<g >
<title>Wasm::Common::PeerNodeInfo::PeerNodeInfo(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;) (32 samples, 0.19%)</title><rect x="1015.3" y="853" width="2.2" height="15.0" fill="rgb(239,99,5)" rx="2" ry="2" />
<text  x="1018.27" y="863.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getHeaderMapValue(proxy_wasm::WasmHeaderMapType, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;*) (9 samples, 0.05%)</title><rect x="860.6" y="933" width="0.6" height="15.0" fill="rgb(229,102,13)" rx="2" ry="2" />
<text  x="863.60" y="943.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Extensions::HttpFilters::Cors::CorsFilter::encodeHeaders(Envoy::Http::ResponseHeaderMap&amp;, bool) (2 samples, 0.01%)</title><rect x="984.3" y="965" width="0.1" height="15.0" fill="rgb(236,143,17)" rx="2" ry="2" />
<text  x="987.27" y="975.5" ></text>
</g>
<g >
<title>new_sync_write (137 samples, 0.83%)</title><rect x="237.0" y="1157" width="9.7" height="15.0" fill="rgb(221,158,25)" rx="2" ry="2" />
<text  x="240.00" y="1167.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (5 samples, 0.03%)</title><rect x="623.6" y="1253" width="0.3" height="15.0" fill="rgb(221,159,41)" rx="2" ry="2" />
<text  x="626.57" y="1263.5" ></text>
</g>
<g >
<title>schedule (3 samples, 0.02%)</title><rect x="511.0" y="1093" width="0.2" height="15.0" fill="rgb(233,61,19)" rx="2" ry="2" />
<text  x="514.00" y="1103.5" ></text>
</g>
<g >
<title>std::__1::pair&lt;google::protobuf::Map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, google::protobuf::Struct&gt;::InnerMap::iterator_base&lt;google::protobuf::MapPair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, google::protobuf::Struct&gt; const&gt;, unsigned long&gt; google::protobuf::Map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, google::protobuf::Struct&gt;::InnerMap::FindHelper&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::__map_iterator&lt;std::__1::__tree_iterator&lt;std::__1::__value_type&lt;std::__1::reference_wrapper&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt;, void*&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::reference_wrapper&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt;, void*&gt;, void*&gt;*, long&gt; &gt;*) const (2 samples, 0.01%)</title><rect x="758.2" y="885" width="0.1" height="15.0" fill="rgb(209,157,31)" rx="2" ry="2" />
<text  x="761.19" y="895.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="507.2" y="1109" width="0.2" height="15.0" fill="rgb(226,156,53)" rx="2" ry="2" />
<text  x="510.23" y="1119.5" ></text>
</g>
<g >
<title>sock_read_iter (67 samples, 0.40%)</title><rect x="1143.6" y="1045" width="4.8" height="15.0" fill="rgb(210,175,49)" rx="2" ry="2" />
<text  x="1146.63" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::ActiveStream(Envoy::Http::ConnectionManagerImpl&amp;, unsigned int, std::__1::shared_ptr&lt;Envoy::Buffer::BufferMemoryAccount&gt;) (12 samples, 0.07%)</title><rect x="812.7" y="1029" width="0.8" height="15.0" fill="rgb(238,156,38)" rx="2" ry="2" />
<text  x="815.67" y="1039.5" ></text>
</g>
<g >
<title>sock_poll (13 samples, 0.08%)</title><rect x="692.2" y="1157" width="0.9" height="15.0" fill="rgb(239,175,41)" rx="2" ry="2" />
<text  x="695.20" y="1167.5" ></text>
</g>
<g >
<title>aa_file_perm (2 samples, 0.01%)</title><rect x="537.8" y="1013" width="0.2" height="15.0" fill="rgb(239,51,42)" rx="2" ry="2" />
<text  x="540.81" y="1023.5" ></text>
</g>
<g >
<title>google::protobuf::Symbol::parent_key() const (3 samples, 0.02%)</title><rect x="1027.1" y="709" width="0.3" height="15.0" fill="rgb(213,24,36)" rx="2" ry="2" />
<text  x="1030.15" y="719.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="888.3" y="1173" width="0.2" height="15.0" fill="rgb(226,164,17)" rx="2" ry="2" />
<text  x="891.33" y="1183.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="598.1" y="1029" width="0.2" height="15.0" fill="rgb(234,39,15)" rx="2" ry="2" />
<text  x="601.12" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerUtility::maybeNormalizePath(Envoy::Http::RequestHeaderMap&amp;, Envoy::Http::ConnectionManagerConfig const&amp;) (8 samples, 0.05%)</title><rect x="1072.0" y="1029" width="0.6" height="15.0" fill="rgb(240,27,51)" rx="2" ry="2" />
<text  x="1075.02" y="1039.5" ></text>
</g>
<g >
<title>tcp_send_ack (4 samples, 0.02%)</title><rect x="896.5" y="965" width="0.3" height="15.0" fill="rgb(216,217,7)" rx="2" ry="2" />
<text  x="899.51" y="975.5" ></text>
</g>
<g >
<title>runtime.checkTimers (14 samples, 0.08%)</title><rect x="201.7" y="1221" width="0.9" height="15.0" fill="rgb(243,214,33)" rx="2" ry="2" />
<text  x="204.65" y="1231.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::ClientConnectionImpl::onHeadersCompleteBase() (272 samples, 1.64%)</title><rect x="972.4" y="1061" width="19.3" height="15.0" fill="rgb(213,146,9)" rx="2" ry="2" />
<text  x="975.39" y="1071.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="658.8" y="1349" width="0.1" height="15.0" fill="rgb(206,55,13)" rx="2" ry="2" />
<text  x="661.78" y="1359.5" ></text>
</g>
<g >
<title>br_handle_vlan (2 samples, 0.01%)</title><rect x="1157.2" y="549" width="0.2" height="15.0" fill="rgb(253,28,49)" rx="2" ry="2" />
<text  x="1160.22" y="559.5" ></text>
</g>
<g >
<title>do_futex (178 samples, 1.07%)</title><rect x="62.6" y="1125" width="12.6" height="15.0" fill="rgb(243,127,7)" rx="2" ry="2" />
<text  x="65.55" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::findValue(absl::string_view, google::protobuf::Arena*, bool) const (4 samples, 0.02%)</title><rect x="765.3" y="773" width="0.3" height="15.0" fill="rgb(252,201,14)" rx="2" ry="2" />
<text  x="768.31" y="783.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (86 samples, 0.52%)</title><rect x="490.2" y="1029" width="6.2" height="15.0" fill="rgb(211,120,24)" rx="2" ry="2" />
<text  x="493.24" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="823.1" y="981" width="0.2" height="15.0" fill="rgb(209,210,33)" rx="2" ry="2" />
<text  x="826.12" y="991.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::DynamicMap::size() const (3 samples, 0.02%)</title><rect x="768.3" y="773" width="0.2" height="15.0" fill="rgb(208,170,50)" rx="2" ry="2" />
<text  x="771.29" y="783.5" ></text>
</g>
<g >
<title>iptable_filter_hook (3 samples, 0.02%)</title><rect x="912.6" y="389" width="0.2" height="15.0" fill="rgb(237,225,27)" rx="2" ry="2" />
<text  x="915.58" y="399.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#2}::__invoke(http_parser*) (741 samples, 4.47%)</title><rect x="1064.1" y="1109" width="52.7" height="15.0" fill="rgb(227,135,30)" rx="2" ry="2" />
<text  x="1067.13" y="1119.5" >Envoy..</text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::parent() const (3 samples, 0.02%)</title><rect x="844.0" y="901" width="0.2" height="15.0" fill="rgb(236,218,6)" rx="2" ry="2" />
<text  x="846.96" y="911.5" ></text>
</g>
<g >
<title>epoll_wait (2 samples, 0.01%)</title><rect x="658.3" y="1269" width="0.2" height="15.0" fill="rgb(210,220,5)" rx="2" ry="2" />
<text  x="661.35" y="1279.5" ></text>
</g>
<g >
<title>skb_entail (3 samples, 0.02%)</title><rect x="1154.6" y="949" width="0.2" height="15.0" fill="rgb(254,25,23)" rx="2" ry="2" />
<text  x="1157.59" y="959.5" ></text>
</g>
<g >
<title>kworker/u132:1 (2 samples, 0.01%)</title><rect x="679.3" y="1381" width="0.1" height="15.0" fill="rgb(210,90,45)" rx="2" ry="2" />
<text  x="682.26" y="1391.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::HeaderList::maybeMakeMap() (5 samples, 0.03%)</title><rect x="1070.2" y="917" width="0.3" height="15.0" fill="rgb(224,227,1)" rx="2" ry="2" />
<text  x="1073.17" y="927.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.01%)</title><rect x="641.8" y="1125" width="0.1" height="15.0" fill="rgb(210,176,49)" rx="2" ry="2" />
<text  x="644.78" y="1135.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializeAsString() const (4 samples, 0.02%)</title><rect x="750.7" y="821" width="0.3" height="15.0" fill="rgb(209,210,39)" rx="2" ry="2" />
<text  x="753.73" y="831.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="818.2" y="933" width="0.2" height="15.0" fill="rgb(217,176,6)" rx="2" ry="2" />
<text  x="821.21" y="943.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (3 samples, 0.02%)</title><rect x="217.3" y="1061" width="0.2" height="15.0" fill="rgb(211,132,20)" rx="2" ry="2" />
<text  x="220.30" y="1071.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (16 samples, 0.10%)</title><rect x="1159.5" y="117" width="1.1" height="15.0" fill="rgb(233,58,4)" rx="2" ry="2" />
<text  x="1162.49" y="127.5" ></text>
</g>
<g >
<title>Envoy::MessageUtil::getJsonStringFromMessage(google::protobuf::Message const&amp;, bool, bool) (8 samples, 0.05%)</title><rect x="1004.1" y="853" width="0.6" height="15.0" fill="rgb(242,191,13)" rx="2" ry="2" />
<text  x="1007.11" y="863.5" ></text>
</g>
<g >
<title>Envoy::Http::Utility::buildOriginalUri(Envoy::Http::RequestHeaderMap const&amp;, absl::optional&lt;unsigned int&gt;) (15 samples, 0.09%)</title><rect x="754.9" y="917" width="1.0" height="15.0" fill="rgb(231,122,43)" rx="2" ry="2" />
<text  x="757.85" y="927.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="489.5" y="965" width="0.2" height="15.0" fill="rgb(236,53,14)" rx="2" ry="2" />
<text  x="492.52" y="975.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (10 samples, 0.06%)</title><rect x="1144.7" y="965" width="0.7" height="15.0" fill="rgb(237,71,47)" rx="2" ry="2" />
<text  x="1147.70" y="975.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::getDataReadOnlyGeneric(absl::string_view) const (4 samples, 0.02%)</title><rect x="847.2" y="981" width="0.3" height="15.0" fill="rgb(219,123,42)" rx="2" ry="2" />
<text  x="850.23" y="991.5" ></text>
</g>
<g >
<title>__fget (7 samples, 0.04%)</title><rect x="516.8" y="1077" width="0.5" height="15.0" fill="rgb(240,187,10)" rx="2" ry="2" />
<text  x="519.76" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::readDisable(bool) (78 samples, 0.47%)</title><rect x="1123.0" y="1061" width="5.6" height="15.0" fill="rgb(239,194,27)" rx="2" ry="2" />
<text  x="1126.01" y="1071.5" ></text>
</g>
<g >
<title>std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::function&lt;std::__1::unique_ptr&lt;proxy_wasm::null_plugin::Context, std::__1::default_delete&lt;proxy_wasm::null_plugin::Context&gt; &gt; (unsigned int, proxy_wasm::null_plugin::RootContext*)&gt; &gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::function&lt;std::__1::unique_ptr&lt;proxy_wasm::null_plugin::Context, std::__1::default_delete&lt;proxy_wasm::null_plugin::Context&gt; &gt; (unsigned int, proxy_wasm::null_plugin::RootContext*)&gt; &gt;, std::__1::__unordered_map_hasher&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::function&lt;std::__1::unique_ptr&lt;proxy_wasm::null_plugin::Context, std::__1::default_delete&lt;proxy_wasm::null_plugin::Context&gt; &gt; (unsigned int, proxy_wasm::null_plugin::RootContext*)&gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::__unordered_map_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::function&lt;std::__1::unique_ptr&lt;proxy_wasm::null_plugin::Context, std::__1::default_delete&lt;proxy_wasm::null_plugin::Context&gt; &gt; (unsigned int, proxy_wasm::null_plugin::RootContext*)&gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::function&lt;std::__1::unique_ptr&lt;proxy_wasm::null_plugin::Context, std::__1::default_delete&lt;proxy_wasm::null_plugin::Context&gt; &gt; (unsigned int, proxy_wasm::null_plugin::RootContext*)&gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;&gt;, std::__1::tuple&lt;&gt; &gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::__1::tuple&lt;&gt;&amp;&amp;) (6 samples, 0.04%)</title><rect x="1108.5" y="949" width="0.4" height="15.0" fill="rgb(246,117,24)" rx="2" ry="2" />
<text  x="1111.50" y="959.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (2 samples, 0.01%)</title><rect x="1131.5" y="789" width="0.2" height="15.0" fill="rgb(205,79,18)" rx="2" ry="2" />
<text  x="1134.54" y="799.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelExpressionFlatImpl::Trace(google::api::expr::runtime::BaseActivation const&amp;, google::api::expr::runtime::CelEvaluationState*, std::__1::function&lt;absl::Status (long, google::api::expr::runtime::CelValue const&amp;, google::protobuf::Arena*)&gt;) const (35 samples, 0.21%)</title><rect x="1038.0" y="773" width="2.5" height="15.0" fill="rgb(243,144,9)" rx="2" ry="2" />
<text  x="1041.03" y="783.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const (2 samples, 0.01%)</title><rect x="942.7" y="1317" width="0.2" height="15.0" fill="rgb(250,58,48)" rx="2" ry="2" />
<text  x="945.74" y="1327.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;absl::string_view, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;absl::string_view const, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt; &gt; &gt;::prepare_insert(unsigned long) (10 samples, 0.06%)</title><rect x="728.7" y="789" width="0.7" height="15.0" fill="rgb(253,4,3)" rx="2" ry="2" />
<text  x="731.68" y="799.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (3 samples, 0.02%)</title><rect x="835.3" y="933" width="0.2" height="15.0" fill="rgb(238,143,52)" rx="2" ry="2" />
<text  x="838.28" y="943.5" ></text>
</g>
<g >
<title>Envoy::Event::FileEventImpl::assignEvents(unsigned int, event_base*)::$_1::__invoke(int, short, void*) (2,870 samples, 17.30%)</title><rect x="965.0" y="1285" width="204.1" height="15.0" fill="rgb(218,151,25)" rx="2" ry="2" />
<text  x="967.99" y="1295.5" >Envoy::Event::FileEventImp..</text>
</g>
<g >
<title>Envoy::Http::HeaderUtility::requestHeadersValid(Envoy::Http::RequestHeaderMap const&amp;) (2 samples, 0.01%)</title><rect x="864.9" y="1045" width="0.1" height="15.0" fill="rgb(245,209,8)" rx="2" ry="2" />
<text  x="867.87" y="1055.5" ></text>
</g>
<g >
<title>wake_up_q (11 samples, 0.07%)</title><rect x="508.4" y="1077" width="0.8" height="15.0" fill="rgb(212,221,10)" rx="2" ry="2" />
<text  x="511.44" y="1087.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::get_property(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (96 samples, 0.58%)</title><rect x="1022.9" y="821" width="6.8" height="15.0" fill="rgb(227,209,15)" rx="2" ry="2" />
<text  x="1025.88" y="831.5" ></text>
</g>
<g >
<title>local.time.nextStdChunk (4 samples, 0.02%)</title><rect x="228.0" y="1221" width="0.2" height="15.0" fill="rgb(241,61,39)" rx="2" ry="2" />
<text  x="230.97" y="1231.5" ></text>
</g>
<g >
<title>ip_output (2 samples, 0.01%)</title><rect x="1131.5" y="869" width="0.2" height="15.0" fill="rgb(248,215,51)" rx="2" ry="2" />
<text  x="1134.54" y="879.5" ></text>
</g>
<g >
<title>mem_cgroup_node_nr_lru_pages (53 samples, 0.32%)</title><rect x="673.0" y="965" width="3.8" height="15.0" fill="rgb(211,58,8)" rx="2" ry="2" />
<text  x="676.00" y="975.5" ></text>
</g>
<g >
<title>local.runtime.(*lfstack).push (2 samples, 0.01%)</title><rect x="255.2" y="1269" width="0.1" height="15.0" fill="rgb(215,46,45)" rx="2" ry="2" />
<text  x="258.20" y="1279.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::drain(unsigned long) (3 samples, 0.02%)</title><rect x="1057.6" y="1157" width="0.2" height="15.0" fill="rgb(249,169,46)" rx="2" ry="2" />
<text  x="1060.59" y="1167.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::RequestEncoderImpl::encodeHeaders(Envoy::Http::RequestHeaderMap const&amp;, bool) (70 samples, 0.42%)</title><rect x="837.8" y="853" width="5.0" height="15.0" fill="rgb(221,176,21)" rx="2" ry="2" />
<text  x="840.84" y="863.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::staticLookup(absl::string_view) (5 samples, 0.03%)</title><rect x="1064.4" y="1045" width="0.4" height="15.0" fill="rgb(232,25,33)" rx="2" ry="2" />
<text  x="1067.41" y="1055.5" ></text>
</g>
<g >
<title>iptable_mangle_hook (3 samples, 0.02%)</title><rect x="912.2" y="357" width="0.2" height="15.0" fill="rgb(231,163,12)" rx="2" ry="2" />
<text  x="915.16" y="367.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/daemon/logger/loggerutils.(*LogFile).WriteLogEntry (325 samples, 1.96%)</title><rect x="226.7" y="1317" width="23.1" height="15.0" fill="rgb(219,26,26)" rx="2" ry="2" />
<text  x="229.69" y="1327.5" >l..</text>
</g>
<g >
<title>google::protobuf::internal::SerialArena::AllocateAlignedWithCleanupFallback(unsigned long, google::protobuf::internal::AllocationPolicy const*) (2 samples, 0.01%)</title><rect x="767.9" y="709" width="0.1" height="15.0" fill="rgb(250,0,37)" rx="2" ry="2" />
<text  x="770.87" y="719.5" ></text>
</g>
<g >
<title>pskb_expand_head (2 samples, 0.01%)</title><rect x="1162.8" y="389" width="0.1" height="15.0" fill="rgb(220,178,14)" rx="2" ry="2" />
<text  x="1165.76" y="399.5" ></text>
</g>
<g >
<title>common_file_perm (2 samples, 0.01%)</title><rect x="538.0" y="1029" width="0.1" height="15.0" fill="rgb(218,190,47)" rx="2" ry="2" />
<text  x="540.95" y="1039.5" ></text>
</g>
<g >
<title>tcp_sendmsg (179 samples, 1.08%)</title><rect x="904.8" y="997" width="12.8" height="15.0" fill="rgb(228,119,26)" rx="2" ry="2" />
<text  x="907.83" y="1007.5" ></text>
</g>
<g >
<title>ip_finish_output2 (147 samples, 0.89%)</title><rect x="1156.1" y="805" width="10.4" height="15.0" fill="rgb(246,182,13)" rx="2" ry="2" />
<text  x="1159.08" y="815.5" ></text>
</g>
<g >
<title>__lock_text_start (246 samples, 1.48%)</title><rect x="566.3" y="501" width="17.5" height="15.0" fill="rgb(205,58,34)" rx="2" ry="2" />
<text  x="569.33" y="511.5" ></text>
</g>
<g >
<title>Envoy::ConnectionPool::ConnPoolImplBase::newStreamImpl(Envoy::ConnectionPool::AttachContext&amp;) (3 samples, 0.02%)</title><rect x="1086.1" y="981" width="0.2" height="15.0" fill="rgb(242,143,6)" rx="2" ry="2" />
<text  x="1089.10" y="991.5" ></text>
</g>
<g >
<title>Envoy::Network::RawBufferSocket::doRead(Envoy::Buffer::Instance&amp;) (256 samples, 1.54%)</title><rect x="1133.0" y="1221" width="18.2" height="15.0" fill="rgb(248,208,3)" rx="2" ry="2" />
<text  x="1136.04" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="679.5" y="1365" width="0.2" height="15.0" fill="rgb(247,78,14)" rx="2" ry="2" />
<text  x="682.54" y="1375.5" ></text>
</g>
<g >
<title>__lock_text_start (16 samples, 0.10%)</title><rect x="37.0" y="997" width="1.1" height="15.0" fill="rgb(217,124,32)" rx="2" ry="2" />
<text  x="39.95" y="1007.5" ></text>
</g>
<g >
<title>runtime.stopm (2 samples, 0.01%)</title><rect x="250.4" y="1253" width="0.2" height="15.0" fill="rgb(228,105,12)" rx="2" ry="2" />
<text  x="253.44" y="1263.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.01%)</title><rect x="878.7" y="885" width="0.1" height="15.0" fill="rgb(225,74,43)" rx="2" ry="2" />
<text  x="881.66" y="895.5" ></text>
</g>
<g >
<title>page_frag_free (3 samples, 0.02%)</title><rect x="895.0" y="917" width="0.2" height="15.0" fill="rgb(216,193,0)" rx="2" ry="2" />
<text  x="898.02" y="927.5" ></text>
</g>
<g >
<title>epoll_nochangelist_add (31 samples, 0.19%)</title><rect x="877.0" y="997" width="2.2" height="15.0" fill="rgb(226,184,22)" rx="2" ry="2" />
<text  x="880.03" y="1007.5" ></text>
</g>
<g >
<title>event_pending (3 samples, 0.02%)</title><rect x="978.2" y="853" width="0.2" height="15.0" fill="rgb(246,206,43)" rx="2" ry="2" />
<text  x="981.15" y="863.5" ></text>
</g>
<g >
<title>runtime.getempty (7 samples, 0.04%)</title><rect x="254.0" y="1269" width="0.5" height="15.0" fill="rgb(242,30,54)" rx="2" ry="2" />
<text  x="256.99" y="1279.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::FileEventImpl::FileEventImpl(Envoy::Event::DispatcherImpl&amp;, int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_0, std::__1::allocator&lt;Envoy::Event::FileEventImpl::FileEventImpl(Envoy::Event::DispatcherImpl&amp;, int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_0&gt;, void ()&gt;::operator()() (265 samples, 1.60%)</title><rect x="1169.5" y="1285" width="18.9" height="15.0" fill="rgb(228,179,0)" rx="2" ry="2" />
<text  x="1172.52" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="1011.3" y="917" width="0.1" height="15.0" fill="rgb(244,141,49)" rx="2" ry="2" />
<text  x="1014.29" y="927.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (2 samples, 0.01%)</title><rect x="624.1" y="1221" width="0.2" height="15.0" fill="rgb(239,169,40)" rx="2" ry="2" />
<text  x="627.14" y="1231.5" ></text>
</g>
<g >
<title>wake_up_q (29 samples, 0.17%)</title><rect x="543.5" y="1109" width="2.1" height="15.0" fill="rgb(206,26,19)" rx="2" ry="2" />
<text  x="546.50" y="1119.5" ></text>
</g>
<g >
<title>vfs_read (392 samples, 2.36%)</title><rect x="139.9" y="1157" width="27.8" height="15.0" fill="rgb(231,193,0)" rx="2" ry="2" />
<text  x="142.85" y="1167.5" >v..</text>
</g>
<g >
<title>finish_task_switch (145 samples, 0.87%)</title><rect x="630.8" y="1125" width="10.3" height="15.0" fill="rgb(247,149,41)" rx="2" ry="2" />
<text  x="633.76" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Upstreams::Http::Http::HttpUpstream::setAccount(std::__1::shared_ptr&lt;Envoy::Buffer::BufferMemoryAccount&gt;) (2 samples, 0.01%)</title><rect x="837.1" y="901" width="0.1" height="15.0" fill="rgb(253,160,51)" rx="2" ry="2" />
<text  x="840.06" y="911.5" ></text>
</g>
<g >
<title>nf_hook_slow (2 samples, 0.01%)</title><rect x="1185.0" y="645" width="0.2" height="15.0" fill="rgb(231,136,52)" rx="2" ry="2" />
<text  x="1188.02" y="655.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::Method() const (2 samples, 0.01%)</title><rect x="1089.0" y="789" width="0.2" height="15.0" fill="rgb(208,40,15)" rx="2" ry="2" />
<text  x="1092.02" y="799.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="743.6" y="869" width="0.2" height="15.0" fill="rgb(209,29,2)" rx="2" ry="2" />
<text  x="746.62" y="879.5" ></text>
</g>
<g >
<title>Envoy::Runtime::SnapshotImpl::getBoolean(absl::string_view, bool) const (2 samples, 0.01%)</title><rect x="1008.2" y="869" width="0.2" height="15.0" fill="rgb(239,215,48)" rx="2" ry="2" />
<text  x="1011.23" y="879.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (2 samples, 0.01%)</title><rect x="917.3" y="965" width="0.2" height="15.0" fill="rgb(217,62,17)" rx="2" ry="2" />
<text  x="920.35" y="975.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::StaticLookupTable&lt;Envoy::Http::RequestHeaderMap&gt;::lookup(Envoy::Http::HeaderMapImpl&amp;, absl::string_view) (3 samples, 0.02%)</title><rect x="826.4" y="965" width="0.2" height="15.0" fill="rgb(218,186,41)" rx="2" ry="2" />
<text  x="829.39" y="975.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onHeaderValue(char const*, unsigned long) (8 samples, 0.05%)</title><rect x="806.6" y="1077" width="0.6" height="15.0" fill="rgb(206,84,34)" rx="2" ry="2" />
<text  x="809.62" y="1087.5" ></text>
</g>
<g >
<title>common_file_perm (4 samples, 0.02%)</title><rect x="537.8" y="1045" width="0.3" height="15.0" fill="rgb(208,176,48)" rx="2" ry="2" />
<text  x="540.81" y="1055.5" ></text>
</g>
<g >
<title>absl::hash_internal::MixingHashState::combine_contiguous(absl::hash_internal::MixingHashState, unsigned char const*, unsigned long) (2 samples, 0.01%)</title><rect x="1085.2" y="885" width="0.1" height="15.0" fill="rgb(253,163,27)" rx="2" ry="2" />
<text  x="1088.18" y="895.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::FieldBackedMapImpl::FieldBackedMapImpl(google::protobuf::Message const*, google::protobuf::FieldDescriptor const*, google::protobuf::Arena*) (9 samples, 0.05%)</title><rect x="774.4" y="789" width="0.6" height="15.0" fill="rgb(208,125,30)" rx="2" ry="2" />
<text  x="777.41" y="799.5" ></text>
</g>
<g >
<title>inet_recvmsg (3 samples, 0.02%)</title><rect x="894.6" y="997" width="0.2" height="15.0" fill="rgb(208,104,43)" rx="2" ry="2" />
<text  x="897.59" y="1007.5" ></text>
</g>
<g >
<title>__qdisc_run (2 samples, 0.01%)</title><rect x="910.4" y="101" width="0.2" height="15.0" fill="rgb(206,174,0)" rx="2" ry="2" />
<text  x="913.45" y="111.5" ></text>
</g>
<g >
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="951.9" y="1141" width="0.3" height="15.0" fill="rgb(208,194,51)" rx="2" ry="2" />
<text  x="954.91" y="1151.5" ></text>
</g>
<g >
<title>br_dev_xmit (2 samples, 0.01%)</title><rect x="657.1" y="933" width="0.2" height="15.0" fill="rgb(232,142,6)" rx="2" ry="2" />
<text  x="660.14" y="943.5" ></text>
</g>
<g >
<title>sock_recvmsg (51 samples, 0.31%)</title><rect x="512.1" y="1045" width="3.7" height="15.0" fill="rgb(248,201,30)" rx="2" ry="2" />
<text  x="515.14" y="1055.5" ></text>
</g>
<g >
<title>__x64_sys_read (38 samples, 0.23%)</title><rect x="96.0" y="1221" width="2.7" height="15.0" fill="rgb(222,212,50)" rx="2" ry="2" />
<text  x="98.98" y="1231.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (4 samples, 0.02%)</title><rect x="1185.4" y="757" width="0.3" height="15.0" fill="rgb(223,25,15)" rx="2" ry="2" />
<text  x="1188.45" y="767.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::FieldBackedMapImpl::FieldBackedMapImpl(google::protobuf::Message const*, google::protobuf::FieldDescriptor const*, google::protobuf::Arena*) (5 samples, 0.03%)</title><rect x="1026.4" y="789" width="0.4" height="15.0" fill="rgb(219,121,8)" rx="2" ry="2" />
<text  x="1029.44" y="799.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="1075.7" y="997" width="0.2" height="15.0" fill="rgb(214,157,14)" rx="2" ry="2" />
<text  x="1078.72" y="1007.5" ></text>
</g>
<g >
<title>inet_recvmsg (49 samples, 0.30%)</title><rect x="894.6" y="1013" width="3.5" height="15.0" fill="rgb(212,7,9)" rx="2" ry="2" />
<text  x="897.59" y="1023.5" ></text>
</g>
<g >
<title>__ip_finish_output (3 samples, 0.02%)</title><rect x="896.6" y="837" width="0.2" height="15.0" fill="rgb(215,178,10)" rx="2" ry="2" />
<text  x="899.58" y="847.5" ></text>
</g>
<g >
<title>__wake_up (136 samples, 0.82%)</title><rect x="547.0" y="997" width="9.7" height="15.0" fill="rgb(252,20,13)" rx="2" ry="2" />
<text  x="549.98" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Http::CodeStatsImpl::chargeResponseStat(Envoy::Http::CodeStats::ResponseStatInfo const&amp;, bool) const (47 samples, 0.28%)</title><rect x="730.8" y="965" width="3.4" height="15.0" fill="rgb(239,151,43)" rx="2" ry="2" />
<text  x="733.81" y="975.5" ></text>
</g>
<g >
<title>nf_hook_slow (8 samples, 0.05%)</title><rect x="914.3" y="613" width="0.6" height="15.0" fill="rgb(215,31,49)" rx="2" ry="2" />
<text  x="917.29" y="623.5" ></text>
</g>
<g >
<title>__libc_cfree (2 samples, 0.01%)</title><rect x="963.7" y="1237" width="0.2" height="15.0" fill="rgb(235,70,50)" rx="2" ry="2" />
<text  x="966.71" y="1247.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (9 samples, 0.05%)</title><rect x="898.1" y="1013" width="0.6" height="15.0" fill="rgb(206,55,41)" rx="2" ry="2" />
<text  x="901.08" y="1023.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (12 samples, 0.07%)</title><rect x="241.8" y="1077" width="0.8" height="15.0" fill="rgb(219,118,49)" rx="2" ry="2" />
<text  x="244.76" y="1087.5" ></text>
</g>
<g >
<title>__lock_text_start (17 samples, 0.10%)</title><rect x="436.5" y="789" width="1.2" height="15.0" fill="rgb(224,28,4)" rx="2" ry="2" />
<text  x="439.47" y="799.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="1110.5" y="933" width="0.1" height="15.0" fill="rgb(206,81,40)" rx="2" ry="2" />
<text  x="1113.49" y="943.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderString::setCopy(char const*, unsigned int) (3 samples, 0.02%)</title><rect x="835.6" y="965" width="0.2" height="15.0" fill="rgb(254,131,19)" rx="2" ry="2" />
<text  x="838.57" y="975.5" ></text>
</g>
<g >
<title>Envoy::Runtime::runtimeFeatureEnabled(absl::string_view) (4 samples, 0.02%)</title><rect x="1074.2" y="1013" width="0.3" height="15.0" fill="rgb(240,100,27)" rx="2" ry="2" />
<text  x="1077.23" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getProperty(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (57 samples, 0.34%)</title><rect x="765.1" y="789" width="4.0" height="15.0" fill="rgb(232,39,26)" rx="2" ry="2" />
<text  x="768.09" y="799.5" ></text>
</g>
<g >
<title>try_to_wake_up (26 samples, 0.16%)</title><rect x="173.7" y="1061" width="1.9" height="15.0" fill="rgb(250,56,33)" rx="2" ry="2" />
<text  x="176.71" y="1071.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::get(Envoy::Http::LowerCaseString const&amp;) const (3 samples, 0.02%)</title><rect x="861.2" y="901" width="0.3" height="15.0" fill="rgb(221,141,50)" rx="2" ry="2" />
<text  x="864.24" y="911.5" ></text>
</g>
<g >
<title>event_del_nolock_ (3 samples, 0.02%)</title><rect x="958.9" y="1301" width="0.2" height="15.0" fill="rgb(215,138,45)" rx="2" ry="2" />
<text  x="961.88" y="1311.5" ></text>
</g>
<g >
<title>sock_def_readable (2 samples, 0.01%)</title><rect x="583.9" y="533" width="0.1" height="15.0" fill="rgb(216,107,20)" rx="2" ry="2" />
<text  x="586.89" y="543.5" ></text>
</g>
<g >
<title>do_nanosleep (159 samples, 0.96%)</title><rect x="629.8" y="1189" width="11.3" height="15.0" fill="rgb(230,152,13)" rx="2" ry="2" />
<text  x="632.76" y="1199.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (2 samples, 0.01%)</title><rect x="923.2" y="901" width="0.1" height="15.0" fill="rgb(230,148,6)" rx="2" ry="2" />
<text  x="926.18" y="911.5" ></text>
</g>
<g >
<title>proxy_wasm::WasmBase::doAfterVmCallActions() (2 samples, 0.01%)</title><rect x="794.0" y="917" width="0.2" height="15.0" fill="rgb(232,121,42)" rx="2" ry="2" />
<text  x="797.04" y="927.5" ></text>
</g>
<g >
<title>io.copyBuffer (712 samples, 4.29%)</title><rect x="120.8" y="1301" width="50.6" height="15.0" fill="rgb(222,81,23)" rx="2" ry="2" />
<text  x="123.80" y="1311.5" >io.co..</text>
</g>
<g >
<title>sock_recvmsg (47 samples, 0.28%)</title><rect x="618.9" y="1109" width="3.3" height="15.0" fill="rgb(238,62,23)" rx="2" ry="2" />
<text  x="621.88" y="1119.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::hasDataWithName(absl::string_view) const (3 samples, 0.02%)</title><rect x="763.8" y="789" width="0.2" height="15.0" fill="rgb(244,19,53)" rx="2" ry="2" />
<text  x="766.81" y="799.5" ></text>
</g>
<g >
<title>evthread_posix_unlock (2 samples, 0.01%)</title><rect x="1188.4" y="1301" width="0.1" height="15.0" fill="rgb(218,109,5)" rx="2" ry="2" />
<text  x="1191.36" y="1311.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (2 samples, 0.01%)</title><rect x="905.8" y="901" width="0.2" height="15.0" fill="rgb(251,208,22)" rx="2" ry="2" />
<text  x="908.83" y="911.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onHeaderField(char const*, unsigned long) (25 samples, 0.15%)</title><rect x="879.9" y="1093" width="1.8" height="15.0" fill="rgb(214,8,23)" rx="2" ry="2" />
<text  x="882.94" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::encodeHeadersBase(Envoy::Http::RequestOrResponseHeaderMap const&amp;, absl::optional&lt;unsigned long&gt;, bool, bool) (44 samples, 0.27%)</title><rect x="1089.3" y="821" width="3.1" height="15.0" fill="rgb(205,52,6)" rx="2" ry="2" />
<text  x="1092.30" y="831.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::record_metric(proxy_wasm::Word, unsigned long) (13 samples, 0.08%)</title><rect x="1042.4" y="853" width="0.9" height="15.0" fill="rgb(249,208,30)" rx="2" ry="2" />
<text  x="1045.37" y="863.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (3 samples, 0.02%)</title><rect x="511.0" y="1141" width="0.2" height="15.0" fill="rgb(216,1,36)" rx="2" ry="2" />
<text  x="514.00" y="1151.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="491.6" y="933" width="0.1" height="15.0" fill="rgb(230,108,26)" rx="2" ry="2" />
<text  x="494.59" y="943.5" ></text>
</g>
<g >
<title>do_futex (7 samples, 0.04%)</title><rect x="437.7" y="885" width="0.5" height="15.0" fill="rgb(236,172,1)" rx="2" ry="2" />
<text  x="440.68" y="895.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelExpressionFlatImpl::InitializeState(google::protobuf::Arena*) const (5 samples, 0.03%)</title><rect x="789.2" y="789" width="0.4" height="15.0" fill="rgb(210,193,48)" rx="2" ry="2" />
<text  x="792.20" y="799.5" ></text>
</g>
<g >
<title>std::__1::pair&lt;unsigned long, bool&gt; absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;absl::string_view, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;absl::string_view const, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt; &gt; &gt;::find_or_prepare_insert&lt;absl::string_view&gt;(absl::string_view const&amp;) (5 samples, 0.03%)</title><rect x="983.2" y="805" width="0.4" height="15.0" fill="rgb(208,212,28)" rx="2" ry="2" />
<text  x="986.20" y="815.5" ></text>
</g>
<g >
<title>Envoy::Event::SchedulableCallbackImpl::scheduleCallbackCurrentIteration() (2 samples, 0.01%)</title><rect x="739.1" y="1013" width="0.2" height="15.0" fill="rgb(221,72,40)" rx="2" ry="2" />
<text  x="742.14" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (17 samples, 0.10%)</title><rect x="134.1" y="1045" width="1.2" height="15.0" fill="rgb(236,43,42)" rx="2" ry="2" />
<text  x="137.09" y="1055.5" ></text>
</g>
<g >
<title>local.runtime.startm (2 samples, 0.01%)</title><rect x="131.4" y="1109" width="0.1" height="15.0" fill="rgb(254,77,35)" rx="2" ry="2" />
<text  x="134.39" y="1119.5" ></text>
</g>
<g >
<title>validate_xmit_skb (2 samples, 0.01%)</title><rect x="1185.7" y="757" width="0.2" height="15.0" fill="rgb(209,93,2)" rx="2" ry="2" />
<text  x="1188.73" y="767.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (16 samples, 0.10%)</title><rect x="244.6" y="1045" width="1.1" height="15.0" fill="rgb(206,109,30)" rx="2" ry="2" />
<text  x="247.61" y="1055.5" ></text>
</g>
<g >
<title>skb_release_all (4 samples, 0.02%)</title><rect x="1144.0" y="965" width="0.3" height="15.0" fill="rgb(215,36,42)" rx="2" ry="2" />
<text  x="1146.99" y="975.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::write(Envoy::Buffer::Instance&amp;, bool, bool) (9 samples, 0.05%)</title><rect x="723.8" y="917" width="0.6" height="15.0" fill="rgb(242,20,33)" rx="2" ry="2" />
<text  x="726.77" y="927.5" ></text>
</g>
<g >
<title>Envoy::Stats::ThreadLocalHistogramImpl::recordValue(unsigned long) (3 samples, 0.02%)</title><rect x="1042.6" y="805" width="0.2" height="15.0" fill="rgb(233,188,42)" rx="2" ry="2" />
<text  x="1045.58" y="815.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#3}::__invoke(http_parser*) (158 samples, 0.95%)</title><rect x="868.3" y="1109" width="11.3" height="15.0" fill="rgb(222,129,6)" rx="2" ry="2" />
<text  x="871.35" y="1119.5" ></text>
</g>
<g >
<title>__vfs_read (57 samples, 0.34%)</title><rect x="511.8" y="1093" width="4.0" height="15.0" fill="rgb(248,70,32)" rx="2" ry="2" />
<text  x="514.78" y="1103.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="931.9" y="533" width="0.1" height="15.0" fill="rgb(223,108,0)" rx="2" ry="2" />
<text  x="934.85" y="543.5" ></text>
</g>
<g >
<title>Envoy::Http::CodecClient::newStream(Envoy::Http::ResponseDecoder&amp;) (5 samples, 0.03%)</title><rect x="845.1" y="901" width="0.4" height="15.0" fill="rgb(218,162,3)" rx="2" ry="2" />
<text  x="848.10" y="911.5" ></text>
</g>
<g >
<title>Envoy::Runtime::SnapshotImpl::runtimeFeatureEnabled(absl::string_view) const (3 samples, 0.02%)</title><rect x="1008.2" y="885" width="0.2" height="15.0" fill="rgb(220,193,48)" rx="2" ry="2" />
<text  x="1011.23" y="895.5" ></text>
</g>
<g >
<title>__x64_sys_write (158 samples, 0.95%)</title><rect x="236.1" y="1221" width="11.2" height="15.0" fill="rgb(207,52,19)" rx="2" ry="2" />
<text  x="239.07" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Runtime::SnapshotImpl::runtimeFeatureEnabled(absl::string_view) const (3 samples, 0.02%)</title><rect x="1074.2" y="997" width="0.2" height="15.0" fill="rgb(253,154,38)" rx="2" ry="2" />
<text  x="1077.23" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (1,816 samples, 10.94%)</title><rect x="380.4" y="1173" width="129.1" height="15.0" fill="rgb(219,1,37)" rx="2" ry="2" />
<text  x="383.36" y="1183.5" >[unknown]</text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void (proxy_wasm::ContextBase*, proxy_wasm::Word)&gt;*)::$_2, std::__1::allocator&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void (proxy_wasm::ContextBase*, proxy_wasm::Word)&gt;*)::$_2&gt;, void (proxy_wasm::ContextBase*, proxy_wasm::Word)&gt;::operator()(proxy_wasm::ContextBase*&amp;&amp;, proxy_wasm::Word&amp;&amp;) (4 samples, 0.02%)</title><rect x="795.0" y="933" width="0.3" height="15.0" fill="rgb(233,14,50)" rx="2" ry="2" />
<text  x="798.03" y="943.5" ></text>
</g>
<g >
<title>__lock_text_start (68 samples, 0.41%)</title><rect x="203.6" y="1029" width="4.8" height="15.0" fill="rgb(253,93,40)" rx="2" ry="2" />
<text  x="206.57" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation::BinaryAnnotation(Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation const&amp;) (2 samples, 0.01%)</title><rect x="1006.8" y="885" width="0.2" height="15.0" fill="rgb(230,63,15)" rx="2" ry="2" />
<text  x="1009.81" y="895.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.01%)</title><rect x="1035.2" y="821" width="0.1" height="15.0" fill="rgb(209,80,32)" rx="2" ry="2" />
<text  x="1038.18" y="831.5" ></text>
</g>
<g >
<title>Envoy::Http::CodecClient::onData(Envoy::Buffer::Instance&amp;) (2 samples, 0.01%)</title><rect x="808.0" y="1205" width="0.1" height="15.0" fill="rgb(219,108,49)" rx="2" ry="2" />
<text  x="810.97" y="1215.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.01%)</title><rect x="598.1" y="1189" width="0.2" height="15.0" fill="rgb(248,13,22)" rx="2" ry="2" />
<text  x="601.12" y="1199.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (4 samples, 0.02%)</title><rect x="84.5" y="1141" width="0.2" height="15.0" fill="rgb(209,170,3)" rx="2" ry="2" />
<text  x="87.46" y="1151.5" ></text>
</g>
<g >
<title>evmap_io_add_ (28 samples, 0.17%)</title><rect x="1126.4" y="1013" width="1.9" height="15.0" fill="rgb(210,13,23)" rx="2" ry="2" />
<text  x="1129.35" y="1023.5" ></text>
</g>
<g >
<title>tcp_push (183 samples, 1.10%)</title><rect x="1154.8" y="965" width="13.0" height="15.0" fill="rgb(220,145,13)" rx="2" ry="2" />
<text  x="1157.80" y="975.5" ></text>
</g>
<g >
<title>Envoy::Stats::TagUtility::TagStatNameJoiner::TagStatNameJoiner(Envoy::Stats::StatName, Envoy::Stats::StatName, absl::optional&lt;std::__1::reference_wrapper&lt;std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; const&gt; &gt;, Envoy::Stats::SymbolTable&amp;) (3 samples, 0.02%)</title><rect x="798.2" y="933" width="0.2" height="15.0" fill="rgb(234,126,47)" rx="2" ry="2" />
<text  x="801.16" y="943.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Extensions::Common::Wasm::Context::decodeHeaders(Envoy::Http::RequestHeaderMap&amp;, bool) (75 samples, 0.45%)</title><rect x="856.5" y="1013" width="5.3" height="15.0" fill="rgb(247,136,19)" rx="2" ry="2" />
<text  x="859.47" y="1023.5" ></text>
</g>
<g >
<title>__do_sys_madvise (59 samples, 0.36%)</title><rect x="625.4" y="1205" width="4.2" height="15.0" fill="rgb(217,156,17)" rx="2" ry="2" />
<text  x="628.42" y="1215.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (420 samples, 2.53%)</title><rect x="509.8" y="1173" width="29.9" height="15.0" fill="rgb(236,35,17)" rx="2" ry="2" />
<text  x="512.79" y="1183.5" >en..</text>
</g>
<g >
<title>aa_label_next_confined (2 samples, 0.01%)</title><rect x="1147.8" y="965" width="0.1" height="15.0" fill="rgb(233,0,43)" rx="2" ry="2" />
<text  x="1150.76" y="975.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::encodeData(Envoy::Buffer::Instance&amp;, bool) (10 samples, 0.06%)</title><rect x="1052.6" y="981" width="0.7" height="15.0" fill="rgb(221,68,43)" rx="2" ry="2" />
<text  x="1055.61" y="991.5" ></text>
</g>
<g >
<title>event_active_nolock_ (2 samples, 0.01%)</title><rect x="947.3" y="1269" width="0.1" height="15.0" fill="rgb(232,46,34)" rx="2" ry="2" />
<text  x="950.29" y="1279.5" ></text>
</g>
<g >
<title>ret_from_fork (2 samples, 0.01%)</title><rect x="679.3" y="1365" width="0.1" height="15.0" fill="rgb(230,0,15)" rx="2" ry="2" />
<text  x="682.26" y="1375.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::TransferEncoding() const (2 samples, 0.01%)</title><rect x="1116.5" y="1077" width="0.2" height="15.0" fill="rgb(245,41,37)" rx="2" ry="2" />
<text  x="1119.54" y="1087.5" ></text>
</g>
<g >
<title>pipe_write (114 samples, 0.69%)</title><rect x="75.7" y="1125" width="8.1" height="15.0" fill="rgb(242,206,53)" rx="2" ry="2" />
<text  x="78.71" y="1135.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.0 (4 samples, 0.02%)</title><rect x="875.5" y="869" width="0.2" height="15.0" fill="rgb(217,66,3)" rx="2" ry="2" />
<text  x="878.46" y="879.5" ></text>
</g>
<g >
<title>proxy_wasm::null_plugin::MetadataExchange::Plugin::PluginContext::onResponseHeaders(unsigned int, bool) (28 samples, 0.17%)</title><rect x="727.9" y="917" width="2.0" height="15.0" fill="rgb(216,6,13)" rx="2" ry="2" />
<text  x="730.90" y="927.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="175.6" y="1125" width="0.1" height="15.0" fill="rgb(211,152,31)" rx="2" ry="2" />
<text  x="178.55" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Http::ResponseHeaderMapImpl::create() (13 samples, 0.08%)</title><rect x="715.4" y="1045" width="0.9" height="15.0" fill="rgb(240,182,37)" rx="2" ry="2" />
<text  x="718.38" y="1055.5" ></text>
</g>
<g >
<title>ret_from_fork (3 samples, 0.02%)</title><rect x="659.5" y="1365" width="0.2" height="15.0" fill="rgb(224,228,32)" rx="2" ry="2" />
<text  x="662.49" y="1375.5" ></text>
</g>
<g >
<title>Envoy::Runtime::SnapshotImpl::featureEnabled(absl::string_view, envoy::type::v3::FractionalPercent const&amp;, unsigned long) const (3 samples, 0.02%)</title><rect x="1076.2" y="1013" width="0.2" height="15.0" fill="rgb(230,143,40)" rx="2" ry="2" />
<text  x="1079.22" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestHeaderMapImpl::constInlineHeaders() const (2 samples, 0.01%)</title><rect x="1011.8" y="901" width="0.1" height="15.0" fill="rgb(216,101,23)" rx="2" ry="2" />
<text  x="1014.79" y="911.5" ></text>
</g>
<g >
<title>proxy_wasm::ContextBase::onDelete() (5 samples, 0.03%)</title><rect x="795.0" y="949" width="0.3" height="15.0" fill="rgb(250,205,5)" rx="2" ry="2" />
<text  x="797.96" y="959.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.01%)</title><rect x="131.4" y="965" width="0.1" height="15.0" fill="rgb(228,124,46)" rx="2" ry="2" />
<text  x="134.39" y="975.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (6 samples, 0.04%)</title><rect x="923.8" y="821" width="0.4" height="15.0" fill="rgb(247,189,29)" rx="2" ry="2" />
<text  x="926.82" y="831.5" ></text>
</g>
<g >
<title>runtime.gcDrain (11 samples, 0.07%)</title><rect x="114.6" y="1317" width="0.8" height="15.0" fill="rgb(236,86,32)" rx="2" ry="2" />
<text  x="117.61" y="1327.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (3 samples, 0.02%)</title><rect x="623.9" y="1253" width="0.2" height="15.0" fill="rgb(215,203,23)" rx="2" ry="2" />
<text  x="626.93" y="1263.5" ></text>
</g>
<g >
<title>finish_task_switch (3 samples, 0.02%)</title><rect x="511.0" y="1045" width="0.2" height="15.0" fill="rgb(244,128,26)" rx="2" ry="2" />
<text  x="514.00" y="1055.5" ></text>
</g>
<g >
<title>Envoy::MainCommonBase::run() (6 samples, 0.04%)</title><rect x="658.3" y="1317" width="0.4" height="15.0" fill="rgb(210,90,53)" rx="2" ry="2" />
<text  x="661.28" y="1327.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="825.5" y="981" width="0.1" height="15.0" fill="rgb(206,25,48)" rx="2" ry="2" />
<text  x="828.47" y="991.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (3 samples, 0.02%)</title><rect x="566.1" y="533" width="0.2" height="15.0" fill="rgb(226,152,28)" rx="2" ry="2" />
<text  x="569.11" y="543.5" ></text>
</g>
<g >
<title>ip_output (3 samples, 0.02%)</title><rect x="896.6" y="869" width="0.2" height="15.0" fill="rgb(205,39,3)" rx="2" ry="2" />
<text  x="899.58" y="879.5" ></text>
</g>
<g >
<title>br_dev_xmit (2 samples, 0.01%)</title><rect x="1156.3" y="437" width="0.1" height="15.0" fill="rgb(224,225,3)" rx="2" ry="2" />
<text  x="1159.29" y="447.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 0.02%)</title><rect x="914.9" y="597" width="0.2" height="15.0" fill="rgb(230,67,44)" rx="2" ry="2" />
<text  x="917.93" y="607.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (183 samples, 1.10%)</title><rect x="1154.8" y="949" width="13.0" height="15.0" fill="rgb(232,158,35)" rx="2" ry="2" />
<text  x="1157.80" y="959.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelProtoWrapper::CreateMessage(google::protobuf::Message const*, google::protobuf::Arena*) (5 samples, 0.03%)</title><rect x="773.7" y="757" width="0.4" height="15.0" fill="rgb(216,154,35)" rx="2" ry="2" />
<text  x="776.70" y="767.5" ></text>
</g>
<g >
<title>validate_xmit_skb (2 samples, 0.01%)</title><rect x="1185.7" y="741" width="0.2" height="15.0" fill="rgb(206,200,38)" rx="2" ry="2" />
<text  x="1188.73" y="751.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::HeaderList::remove(absl::string_view) (2 samples, 0.01%)</title><rect x="834.9" y="965" width="0.1" height="15.0" fill="rgb(248,20,51)" rx="2" ry="2" />
<text  x="837.86" y="975.5" ></text>
</g>
<g >
<title>finish_task_switch (37 samples, 0.22%)</title><rect x="540.5" y="1045" width="2.6" height="15.0" fill="rgb(245,134,41)" rx="2" ry="2" />
<text  x="543.51" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Grpc::Common::hasGrpcContentType(Envoy::Http::RequestOrResponseHeaderMap const&amp;) (2 samples, 0.01%)</title><rect x="754.7" y="917" width="0.2" height="15.0" fill="rgb(219,87,26)" rx="2" ry="2" />
<text  x="757.71" y="927.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderString::append(char const*, unsigned int) (4 samples, 0.02%)</title><rect x="879.6" y="1077" width="0.3" height="15.0" fill="rgb(249,11,1)" rx="2" ry="2" />
<text  x="882.59" y="1087.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (2 samples, 0.01%)</title><rect x="701.6" y="1013" width="0.1" height="15.0" fill="rgb(238,8,15)" rx="2" ry="2" />
<text  x="704.59" y="1023.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="499.2" y="997" width="0.1" height="15.0" fill="rgb(224,135,34)" rx="2" ry="2" />
<text  x="502.20" y="1007.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.02%)</title><rect x="893.3" y="1045" width="0.2" height="15.0" fill="rgb(233,54,35)" rx="2" ry="2" />
<text  x="896.31" y="1055.5" ></text>
</g>
<g >
<title>absl::Mutex::Lock() (2 samples, 0.01%)</title><rect x="1019.1" y="741" width="0.2" height="15.0" fill="rgb(246,21,14)" rx="2" ry="2" />
<text  x="1022.11" y="751.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::SelectStep::Evaluate(google::api::expr::runtime::ExecutionFrame*) const (7 samples, 0.04%)</title><rect x="788.1" y="757" width="0.5" height="15.0" fill="rgb(231,163,48)" rx="2" ry="2" />
<text  x="791.13" y="767.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Http::Http1::ServerConnectionImpl::ServerConnectionImpl(Envoy::Network::Connection&amp;, Envoy::Http::Http1::CodecStats&amp;, Envoy::Http::ServerConnectionCallbacks&amp;, Envoy::Http::Http1Settings const&amp;, unsigned int, unsigned int, envoy::config::core::v3::HttpProtocolOptions_HeadersWithUnderscoresAction)::$_8, std::__1::allocator&lt;Envoy::Http::Http1::ServerConnectionImpl::ServerConnectionImpl(Envoy::Network::Connection&amp;, Envoy::Http::Http1::CodecStats&amp;, Envoy::Http::ServerConnectionCallbacks&amp;, Envoy::Http::Http1Settings const&amp;, unsigned int, unsigned int, envoy::config::core::v3::HttpProtocolOptions_HeadersWithUnderscoresAction)::$_8&gt;, void (Envoy::Buffer::OwnedBufferFragmentImpl const*)&gt;::operator()(Envoy::Buffer::OwnedBufferFragmentImpl const*&amp;&amp;) (2 samples, 0.01%)</title><rect x="1152.7" y="1109" width="0.1" height="15.0" fill="rgb(249,90,30)" rx="2" ry="2" />
<text  x="1155.66" y="1119.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (247 samples, 1.49%)</title><rect x="566.3" y="533" width="17.6" height="15.0" fill="rgb(241,46,25)" rx="2" ry="2" />
<text  x="569.33" y="543.5" ></text>
</g>
<g >
<title>futex_wake (5 samples, 0.03%)</title><rect x="507.4" y="1061" width="0.4" height="15.0" fill="rgb(242,159,46)" rx="2" ry="2" />
<text  x="510.44" y="1071.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_25, std::__1::allocator&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_25&gt;, proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;::operator()(proxy_wasm::ContextBase*&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;) (27 samples, 0.16%)</title><rect x="1109.2" y="981" width="1.9" height="15.0" fill="rgb(240,198,30)" rx="2" ry="2" />
<text  x="1112.21" y="991.5" ></text>
</g>
<g >
<title>writev (208 samples, 1.25%)</title><rect x="904.0" y="1173" width="14.8" height="15.0" fill="rgb(228,34,43)" rx="2" ry="2" />
<text  x="907.05" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::operator=(Envoy::Buffer::Slice&amp;&amp;) (2 samples, 0.01%)</title><rect x="978.0" y="869" width="0.2" height="15.0" fill="rgb(244,53,39)" rx="2" ry="2" />
<text  x="981.01" y="879.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::getPathValue() const (2 samples, 0.01%)</title><rect x="863.9" y="1029" width="0.1" height="15.0" fill="rgb(245,152,6)" rx="2" ry="2" />
<text  x="866.87" y="1039.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.01%)</title><rect x="743.0" y="693" width="0.1" height="15.0" fill="rgb(220,221,53)" rx="2" ry="2" />
<text  x="745.98" y="703.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.01%)</title><rect x="641.8" y="1109" width="0.1" height="15.0" fill="rgb(243,0,49)" rx="2" ry="2" />
<text  x="644.78" y="1119.5" ></text>
</g>
<g >
<title>schedule (150 samples, 0.90%)</title><rect x="84.7" y="1157" width="10.7" height="15.0" fill="rgb(241,215,5)" rx="2" ry="2" />
<text  x="87.74" y="1167.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.01%)</title><rect x="1145.8" y="709" width="0.2" height="15.0" fill="rgb(208,35,54)" rx="2" ry="2" />
<text  x="1148.84" y="719.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestHeaderMapImpl::inlineHeaders() (3 samples, 0.02%)</title><rect x="852.5" y="965" width="0.2" height="15.0" fill="rgb(226,50,39)" rx="2" ry="2" />
<text  x="855.49" y="975.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (142 samples, 0.86%)</title><rect x="1174.6" y="581" width="10.1" height="15.0" fill="rgb(243,117,0)" rx="2" ry="2" />
<text  x="1177.64" y="591.5" ></text>
</g>
<g >
<title>ext4_journal_submit_inode_data_buffers (2 samples, 0.01%)</title><rect x="659.0" y="1301" width="0.1" height="15.0" fill="rgb(218,50,3)" rx="2" ry="2" />
<text  x="661.99" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="250.4" y="1173" width="0.2" height="15.0" fill="rgb(230,159,36)" rx="2" ry="2" />
<text  x="253.44" y="1183.5" ></text>
</g>
<g >
<title>std::__1::__itoa::__u64toa(unsigned long, char*) (3 samples, 0.02%)</title><rect x="759.9" y="933" width="0.2" height="15.0" fill="rgb(207,23,33)" rx="2" ry="2" />
<text  x="762.90" y="943.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::move(Envoy::Buffer::Instance&amp;) (4 samples, 0.02%)</title><rect x="1052.7" y="965" width="0.3" height="15.0" fill="rgb(238,205,35)" rx="2" ry="2" />
<text  x="1055.75" y="975.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::readDisable(bool) (83 samples, 0.50%)</title><rect x="873.5" y="1061" width="5.9" height="15.0" fill="rgb(213,131,29)" rx="2" ry="2" />
<text  x="876.47" y="1071.5" ></text>
</g>
<g >
<title>Wasm::Common::populateRequestInfo(bool, bool, Wasm::Common::RequestInfo*) (168 samples, 1.01%)</title><rect x="1017.8" y="837" width="11.9" height="15.0" fill="rgb(227,125,42)" rx="2" ry="2" />
<text  x="1020.76" y="847.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Driver::startSpan(Envoy::Tracing::Config const&amp;, Envoy::Tracing::TraceContext&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::chrono::time_point&lt;std::__1::chrono::system_clock, std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000000l&gt; &gt; &gt;, Envoy::Tracing::Decision) (23 samples, 0.14%)</title><rect x="1069.7" y="997" width="1.6" height="15.0" fill="rgb(207,166,14)" rx="2" ry="2" />
<text  x="1072.67" y="1007.5" ></text>
</g>
<g >
<title>try_to_wake_up (29 samples, 0.17%)</title><rect x="543.5" y="1093" width="2.1" height="15.0" fill="rgb(253,207,12)" rx="2" ry="2" />
<text  x="546.50" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_futex (12 samples, 0.07%)</title><rect x="169.4" y="1109" width="0.8" height="15.0" fill="rgb(249,178,37)" rx="2" ry="2" />
<text  x="172.37" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Network::RawBufferSocket::doWrite(Envoy::Buffer::Instance&amp;, bool) (224 samples, 1.35%)</title><rect x="903.0" y="1221" width="15.9" height="15.0" fill="rgb(243,60,0)" rx="2" ry="2" />
<text  x="905.98" y="1231.5" ></text>
</g>
<g >
<title>do_nanosleep (2 samples, 0.01%)</title><rect x="629.6" y="1189" width="0.2" height="15.0" fill="rgb(253,60,20)" rx="2" ry="2" />
<text  x="632.62" y="1199.5" ></text>
</g>
<g >
<title>runtime.runqsteal (33 samples, 0.20%)</title><rect x="211.1" y="1221" width="2.4" height="15.0" fill="rgb(214,35,13)" rx="2" ry="2" />
<text  x="214.11" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerUtility::mutateTracingRequestHeader(Envoy::Http::RequestHeaderMap&amp;, Envoy::Runtime::Loader&amp;, Envoy::Http::ConnectionManagerConfig&amp;, Envoy::Router::Route const*) (18 samples, 0.11%)</title><rect x="826.6" y="1029" width="1.3" height="15.0" fill="rgb(239,174,32)" rx="2" ry="2" />
<text  x="829.61" y="1039.5" ></text>
</g>
<g >
<title>do_epoll_wait (363 samples, 2.19%)</title><rect x="34.2" y="1093" width="25.8" height="15.0" fill="rgb(236,46,3)" rx="2" ry="2" />
<text  x="37.18" y="1103.5" >d..</text>
</g>
<g >
<title>Envoy::Http::CodeStatsImpl::chargeResponseStat(Envoy::Http::CodeStats::ResponseStatInfo const&amp;, bool) const (39 samples, 0.24%)</title><rect x="984.6" y="965" width="2.8" height="15.0" fill="rgb(250,180,26)" rx="2" ry="2" />
<text  x="987.62" y="975.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Upstreams::Http::Http::HttpConnPool::newStream(Envoy::Router::GenericConnectionPoolCallbacks*) (143 samples, 0.86%)</title><rect x="836.3" y="997" width="10.2" height="15.0" fill="rgb(235,162,5)" rx="2" ry="2" />
<text  x="839.35" y="1007.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.05%)</title><rect x="199.9" y="1173" width="0.5" height="15.0" fill="rgb(227,172,35)" rx="2" ry="2" />
<text  x="202.88" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onFileEvent(unsigned int) (2,934 samples, 17.68%)</title><rect x="710.8" y="1253" width="208.7" height="15.0" fill="rgb(227,71,31)" rx="2" ry="2" />
<text  x="713.83" y="1263.5" >Envoy::Network::ConnectionI..</text>
</g>
<g >
<title>security_file_permission (3 samples, 0.02%)</title><rect x="918.2" y="1045" width="0.2" height="15.0" fill="rgb(229,29,8)" rx="2" ry="2" />
<text  x="921.20" y="1055.5" ></text>
</g>
<g >
<title>apparmor_file_permission (6 samples, 0.04%)</title><rect x="1148.5" y="1029" width="0.5" height="15.0" fill="rgb(239,37,50)" rx="2" ry="2" />
<text  x="1151.54" y="1039.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="896.6" y="757" width="0.1" height="15.0" fill="rgb(226,188,3)" rx="2" ry="2" />
<text  x="899.58" y="767.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="1131.5" y="1061" width="0.3" height="15.0" fill="rgb(206,68,36)" rx="2" ry="2" />
<text  x="1134.54" y="1071.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (3 samples, 0.02%)</title><rect x="95.5" y="1141" width="0.2" height="15.0" fill="rgb(218,74,21)" rx="2" ry="2" />
<text  x="98.48" y="1151.5" ></text>
</g>
<g >
<title>local.runtime.lock2 (2 samples, 0.01%)</title><rect x="133.9" y="1109" width="0.1" height="15.0" fill="rgb(245,189,33)" rx="2" ry="2" />
<text  x="136.88" y="1119.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::EnvoyForceTrace() const (4 samples, 0.02%)</title><rect x="975.7" y="933" width="0.2" height="15.0" fill="rgb(217,84,39)" rx="2" ry="2" />
<text  x="978.66" y="943.5" ></text>
</g>
<g >
<title>tcp_ack (21 samples, 0.13%)</title><rect x="564.8" y="565" width="1.5" height="15.0" fill="rgb(214,115,52)" rx="2" ry="2" />
<text  x="567.83" y="575.5" ></text>
</g>
<g >
<title>do_futex (70 samples, 0.42%)</title><rect x="203.4" y="1109" width="5.0" height="15.0" fill="rgb(206,22,19)" rx="2" ry="2" />
<text  x="206.43" y="1119.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (4 samples, 0.02%)</title><rect x="830.7" y="949" width="0.3" height="15.0" fill="rgb(248,72,16)" rx="2" ry="2" />
<text  x="833.73" y="959.5" ></text>
</g>
<g >
<title>runtime.mcall (746 samples, 4.50%)</title><rect x="173.2" y="1285" width="53.1" height="15.0" fill="rgb(212,125,25)" rx="2" ry="2" />
<text  x="176.21" y="1295.5" >runti..</text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.01%)</title><rect x="623.4" y="933" width="0.2" height="15.0" fill="rgb(216,73,12)" rx="2" ry="2" />
<text  x="626.43" y="943.5" ></text>
</g>
<g >
<title>tcp_recvmsg (44 samples, 0.27%)</title><rect x="894.9" y="997" width="3.2" height="15.0" fill="rgb(214,119,43)" rx="2" ry="2" />
<text  x="897.95" y="1007.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (4 samples, 0.02%)</title><rect x="1128.1" y="869" width="0.2" height="15.0" fill="rgb(207,153,48)" rx="2" ry="2" />
<text  x="1131.06" y="879.5" ></text>
</g>
<g >
<title>mutex_unlock (5 samples, 0.03%)</title><rect x="140.0" y="1093" width="0.4" height="15.0" fill="rgb(247,82,39)" rx="2" ry="2" />
<text  x="143.00" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::setAndCheckCallbackStatusOr(absl::StatusOr&lt;Envoy::Http::Http1::ParserStatus&gt;&amp;&amp;) (3 samples, 0.02%)</title><rect x="1128.8" y="1093" width="0.3" height="15.0" fill="rgb(210,45,25)" rx="2" ry="2" />
<text  x="1131.84" y="1103.5" ></text>
</g>
<g >
<title>epoll_dispatch (15 samples, 0.09%)</title><rect x="687.0" y="1301" width="1.1" height="15.0" fill="rgb(229,30,2)" rx="2" ry="2" />
<text  x="690.01" y="1311.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="893.0" y="1157" width="0.2" height="15.0" fill="rgb(232,221,53)" rx="2" ry="2" />
<text  x="896.03" y="1167.5" ></text>
</g>
<g >
<title>runtime.futexsleep (3 samples, 0.02%)</title><rect x="225.4" y="1173" width="0.2" height="15.0" fill="rgb(207,15,44)" rx="2" ry="2" />
<text  x="228.41" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Upstream::ClusterInfoImpl::resourceManager(Envoy::Upstream::ResourcePriority) const (2 samples, 0.01%)</title><rect x="995.0" y="997" width="0.1" height="15.0" fill="rgb(238,56,51)" rx="2" ry="2" />
<text  x="998.00" y="1007.5" ></text>
</g>
<g >
<title>proxy_wasm::null_plugin::Context::asContext() (2 samples, 0.01%)</title><rect x="982.0" y="917" width="0.1" height="15.0" fill="rgb(221,215,50)" rx="2" ry="2" />
<text  x="984.99" y="927.5" ></text>
</g>
<g >
<title>iptable_filter_hook (7 samples, 0.04%)</title><rect x="909.5" y="165" width="0.5" height="15.0" fill="rgb(231,103,43)" rx="2" ry="2" />
<text  x="912.45" y="175.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.02%)</title><rect x="921.9" y="1061" width="0.2" height="15.0" fill="rgb(248,18,0)" rx="2" ry="2" />
<text  x="924.90" y="1071.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::upstreamConnectionId() const (2 samples, 0.01%)</title><rect x="735.7" y="997" width="0.1" height="15.0" fill="rgb(239,179,14)" rx="2" ry="2" />
<text  x="738.65" y="1007.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="875.9" y="837" width="0.1" height="15.0" fill="rgb(230,173,23)" rx="2" ry="2" />
<text  x="878.89" y="847.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.02%)</title><rect x="509.6" y="1077" width="0.2" height="15.0" fill="rgb(213,10,34)" rx="2" ry="2" />
<text  x="512.58" y="1087.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (10 samples, 0.06%)</title><rect x="1165.6" y="773" width="0.7" height="15.0" fill="rgb(254,51,7)" rx="2" ry="2" />
<text  x="1168.61" y="783.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::ResponseHeaderMap&gt;::staticLookup(absl::string_view) (16 samples, 0.10%)</title><rect x="804.8" y="1029" width="1.1" height="15.0" fill="rgb(226,61,32)" rx="2" ry="2" />
<text  x="807.77" y="1039.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; absl::StrReplaceAll&lt;absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;(absl::string_view, absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;) (4 samples, 0.02%)</title><rect x="734.5" y="949" width="0.3" height="15.0" fill="rgb(221,217,39)" rx="2" ry="2" />
<text  x="737.51" y="959.5" ></text>
</g>
<g >
<title>netif_receive_skb (80 samples, 0.48%)</title><rect x="908.5" y="533" width="5.6" height="15.0" fill="rgb(226,216,51)" rx="2" ry="2" />
<text  x="911.46" y="543.5" ></text>
</g>
<g >
<title>Envoy::Event::DispatcherImpl::clearDeferredDeleteList() (75 samples, 0.45%)</title><rect x="959.7" y="1285" width="5.3" height="15.0" fill="rgb(210,117,18)" rx="2" ry="2" />
<text  x="962.66" y="1295.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="498.8" y="885" width="0.2" height="15.0" fill="rgb(231,142,28)" rx="2" ry="2" />
<text  x="501.84" y="895.5" ></text>
</g>
<g >
<title>mutex_lock (5 samples, 0.03%)</title><rect x="36.3" y="1029" width="0.4" height="15.0" fill="rgb(207,210,31)" rx="2" ry="2" />
<text  x="39.31" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (237 samples, 1.43%)</title><rect x="1171.3" y="1157" width="16.9" height="15.0" fill="rgb(246,154,26)" rx="2" ry="2" />
<text  x="1174.30" y="1167.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (2 samples, 0.01%)</title><rect x="910.0" y="117" width="0.1" height="15.0" fill="rgb(205,197,29)" rx="2" ry="2" />
<text  x="912.95" y="127.5" ></text>
</g>
<g >
<title>Envoy::Network::FilterManagerImpl::onWrite(Envoy::Network::FilterManagerImpl::ActiveWriteFilter*, Envoy::Network::WriteBufferSource&amp;) (2 samples, 0.01%)</title><rect x="1053.2" y="949" width="0.1" height="15.0" fill="rgb(220,100,27)" rx="2" ry="2" />
<text  x="1056.18" y="959.5" ></text>
</g>
<g >
<title>eth_type_trans (3 samples, 0.02%)</title><rect x="1185.5" y="709" width="0.2" height="15.0" fill="rgb(213,7,4)" rx="2" ry="2" />
<text  x="1188.52" y="719.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onHeadersComplete() (2 samples, 0.01%)</title><rect x="810.8" y="1109" width="0.2" height="15.0" fill="rgb(254,34,29)" rx="2" ry="2" />
<text  x="813.82" y="1119.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::CheckIterAccess(google::api::expr::runtime::CelExpressionFlatEvaluationState*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) (7 samples, 0.04%)</title><rect x="1039.1" y="725" width="0.5" height="15.0" fill="rgb(253,79,7)" rx="2" ry="2" />
<text  x="1042.10" y="735.5" ></text>
</g>
<g >
<title>Envoy::ConnectionPool::ConnPoolImplBase::onStreamClosed(Envoy::ConnectionPool::ActiveClient&amp;, bool) (6 samples, 0.04%)</title><rect x="739.4" y="997" width="0.4" height="15.0" fill="rgb(220,109,9)" rx="2" ry="2" />
<text  x="742.42" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Network::RawBufferSocket::doRead(Envoy::Buffer::Instance&amp;) (2 samples, 0.01%)</title><rect x="919.1" y="1237" width="0.1" height="15.0" fill="rgb(227,168,38)" rx="2" ry="2" />
<text  x="922.05" y="1247.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (3 samples, 0.02%)</title><rect x="625.6" y="1141" width="0.2" height="15.0" fill="rgb(254,36,12)" rx="2" ry="2" />
<text  x="628.57" y="1151.5" ></text>
</g>
<g >
<title>runtime.procyield (19 samples, 0.11%)</title><rect x="209.5" y="1221" width="1.3" height="15.0" fill="rgb(240,116,48)" rx="2" ry="2" />
<text  x="212.48" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Runtime::SnapshotImpl::runtimeFeatureEnabled(absl::string_view) const (6 samples, 0.04%)</title><rect x="851.9" y="965" width="0.4" height="15.0" fill="rgb(240,39,0)" rx="2" ry="2" />
<text  x="854.85" y="975.5" ></text>
</g>
<g >
<title>event_del_nolock_ (36 samples, 0.22%)</title><rect x="740.8" y="853" width="2.6" height="15.0" fill="rgb(216,93,12)" rx="2" ry="2" />
<text  x="743.84" y="863.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/api/server/router/container.(*containerRouter).getContainersJSON (18 samples, 0.11%)</title><rect x="250.8" y="1205" width="1.3" height="15.0" fill="rgb(252,175,4)" rx="2" ry="2" />
<text  x="253.79" y="1215.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (17 samples, 0.10%)</title><rect x="565.1" y="549" width="1.2" height="15.0" fill="rgb(251,51,1)" rx="2" ry="2" />
<text  x="568.12" y="559.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::PluginHandle::rootContextId() (4 samples, 0.02%)</title><rect x="829.5" y="965" width="0.2" height="15.0" fill="rgb(242,151,49)" rx="2" ry="2" />
<text  x="832.45" y="975.5" ></text>
</g>
<g >
<title>std::__1::pair&lt;google::protobuf::Map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, google::protobuf::Value&gt;::InnerMap::iterator_base&lt;google::protobuf::MapPair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, google::protobuf::Value&gt; const&gt;, unsigned long&gt; google::protobuf::Map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, google::protobuf::Value&gt;::InnerMap::FindHelper&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::__map_iterator&lt;std::__1::__tree_iterator&lt;std::__1::__value_type&lt;std::__1::reference_wrapper&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt;, void*&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::reference_wrapper&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt;, void*&gt;, void*&gt;*, long&gt; &gt;*) const (5 samples, 0.03%)</title><rect x="1020.5" y="741" width="0.3" height="15.0" fill="rgb(251,125,40)" rx="2" ry="2" />
<text  x="1023.46" y="751.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.01%)</title><rect x="763.3" y="837" width="0.2" height="15.0" fill="rgb(216,144,29)" rx="2" ry="2" />
<text  x="766.31" y="847.5" ></text>
</g>
<g >
<title>do_syscall_64 (751 samples, 4.53%)</title><rect x="540.4" y="1173" width="53.4" height="15.0" fill="rgb(246,102,31)" rx="2" ry="2" />
<text  x="543.37" y="1183.5" >do_sy..</text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::~UpstreamRequest() (22 samples, 0.13%)</title><rect x="798.7" y="965" width="1.6" height="15.0" fill="rgb(240,104,23)" rx="2" ry="2" />
<text  x="801.73" y="975.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onHeaderValue(char const*, unsigned long) (5 samples, 0.03%)</title><rect x="881.9" y="1093" width="0.4" height="15.0" fill="rgb(230,5,6)" rx="2" ry="2" />
<text  x="884.93" y="1103.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (23 samples, 0.14%)</title><rect x="642.5" y="1125" width="1.6" height="15.0" fill="rgb(205,118,18)" rx="2" ry="2" />
<text  x="645.49" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="1067.0" y="949" width="0.1" height="15.0" fill="rgb(250,222,17)" rx="2" ry="2" />
<text  x="1069.97" y="959.5" ></text>
</g>
<g >
<title>skb_release_head_state (12 samples, 0.07%)</title><rect x="512.4" y="965" width="0.8" height="15.0" fill="rgb(245,35,24)" rx="2" ry="2" />
<text  x="515.35" y="975.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (5 samples, 0.03%)</title><rect x="561.2" y="821" width="0.4" height="15.0" fill="rgb(217,79,23)" rx="2" ry="2" />
<text  x="564.21" y="831.5" ></text>
</g>
<g >
<title>Envoy::Http::CodeStatsImpl::writeCategory(Envoy::Http::CodeStats::ResponseStatInfo const&amp;, Envoy::Stats::StatName, Envoy::Stats::StatName, Envoy::Stats::StatName) const (16 samples, 0.10%)</title><rect x="732.9" y="949" width="1.2" height="15.0" fill="rgb(239,136,13)" rx="2" ry="2" />
<text  x="735.95" y="959.5" ></text>
</g>
<g >
<title>new_sync_write (115 samples, 0.69%)</title><rect x="75.6" y="1141" width="8.2" height="15.0" fill="rgb(205,218,21)" rx="2" ry="2" />
<text  x="78.64" y="1151.5" ></text>
</g>
<g >
<title>local.runtime.memmove (2 samples, 0.01%)</title><rect x="227.8" y="1221" width="0.2" height="15.0" fill="rgb(243,128,43)" rx="2" ry="2" />
<text  x="230.82" y="1231.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5, std::__1::allocator&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5&gt;, void (unsigned int)&gt;::operator()(unsigned int&amp;&amp;) (2,942 samples, 17.73%)</title><rect x="710.6" y="1269" width="209.2" height="15.0" fill="rgb(213,66,14)" rx="2" ry="2" />
<text  x="713.62" y="1279.5" >std::__1::__function::__fun..</text>
</g>
<g >
<title>do_IRQ (3 samples, 0.02%)</title><rect x="623.4" y="1221" width="0.2" height="15.0" fill="rgb(251,199,37)" rx="2" ry="2" />
<text  x="626.36" y="1231.5" ></text>
</g>
<g >
<title>dst_release (12 samples, 0.07%)</title><rect x="512.4" y="933" width="0.8" height="15.0" fill="rgb(206,52,30)" rx="2" ry="2" />
<text  x="515.35" y="943.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (101 samples, 0.61%)</title><rect x="924.8" y="565" width="7.2" height="15.0" fill="rgb(252,217,32)" rx="2" ry="2" />
<text  x="927.81" y="575.5" ></text>
</g>
<g >
<title>Envoy::Runtime::SnapshotImpl::featureEnabled(absl::string_view, envoy::type::v3::FractionalPercent const&amp;, unsigned long) const (2 samples, 0.01%)</title><rect x="827.3" y="1013" width="0.2" height="15.0" fill="rgb(223,9,34)" rx="2" ry="2" />
<text  x="830.32" y="1023.5" ></text>
</g>
<g >
<title>std::__1::equal_to&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator()(std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;) const (2 samples, 0.01%)</title><rect x="792.8" y="837" width="0.2" height="15.0" fill="rgb(213,109,48)" rx="2" ry="2" />
<text  x="795.83" y="847.5" ></text>
</g>
<g >
<title>[unknown] (549 samples, 3.31%)</title><rect x="23.5" y="1173" width="39.1" height="15.0" fill="rgb(205,156,14)" rx="2" ry="2" />
<text  x="26.51" y="1183.5" >[un..</text>
</g>
<g >
<title>Envoy::Router::Filter::~Filter() (4 samples, 0.02%)</title><rect x="961.7" y="1205" width="0.2" height="15.0" fill="rgb(252,122,53)" rx="2" ry="2" />
<text  x="964.65" y="1215.5" ></text>
</g>
<g >
<title>tcp_push (161 samples, 0.97%)</title><rect x="905.8" y="965" width="11.5" height="15.0" fill="rgb(246,118,14)" rx="2" ry="2" />
<text  x="908.83" y="975.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::FilterManager(Envoy::Http::FilterManagerCallbacks&amp;, Envoy::Event::Dispatcher&amp;, Envoy::Network::Connection const&amp;, unsigned long, std::__1::shared_ptr&lt;Envoy::Buffer::BufferMemoryAccount&gt;, bool, unsigned int, Envoy::Http::FilterChainFactory&amp;, Envoy::LocalReply::LocalReply const&amp;, Envoy::Http::Protocol, Envoy::TimeSource&amp;, std::__1::shared_ptr&lt;Envoy::StreamInfo::FilterState&gt;, Envoy::StreamInfo::FilterState::LifeSpan) (7 samples, 0.04%)</title><rect x="1062.8" y="1013" width="0.5" height="15.0" fill="rgb(212,161,22)" rx="2" ry="2" />
<text  x="1065.85" y="1023.5" ></text>
</g>
<g >
<title>__lock_text_start (11 samples, 0.07%)</title><rect x="508.4" y="1029" width="0.8" height="15.0" fill="rgb(230,143,29)" rx="2" ry="2" />
<text  x="511.44" y="1039.5" ></text>
</g>
<g >
<title>i40e_lan_xmit_frame (2 samples, 0.01%)</title><rect x="1159.8" y="53" width="0.2" height="15.0" fill="rgb(219,15,32)" rx="2" ry="2" />
<text  x="1162.85" y="63.5" ></text>
</g>
<g >
<title>Envoy::Stats::NullCounterImpl::add(unsigned long) (2 samples, 0.01%)</title><rect x="1188.2" y="1237" width="0.1" height="15.0" fill="rgb(212,10,33)" rx="2" ry="2" />
<text  x="1191.15" y="1247.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.01%)</title><rect x="485.2" y="933" width="0.1" height="15.0" fill="rgb(229,34,10)" rx="2" ry="2" />
<text  x="488.19" y="943.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/api/server/middleware.ExperimentalMiddleware.WrapHandler.func1 (19 samples, 0.11%)</title><rect x="250.8" y="1237" width="1.3" height="15.0" fill="rgb(244,175,2)" rx="2" ry="2" />
<text  x="253.79" y="1247.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::ActiveClient::StreamWrapper::onDecodeComplete() (2 samples, 0.01%)</title><rect x="801.5" y="1045" width="0.1" height="15.0" fill="rgb(252,4,43)" rx="2" ry="2" />
<text  x="804.50" y="1055.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Extensions::Common::Wasm::Context::encodeData(Envoy::Buffer::Instance&amp;, bool) (11 samples, 0.07%)</title><rect x="1053.5" y="997" width="0.7" height="15.0" fill="rgb(208,133,17)" rx="2" ry="2" />
<text  x="1056.46" y="1007.5" ></text>
</g>
<g >
<title>local.sync.runtime_procPin (2 samples, 0.01%)</title><rect x="123.4" y="1221" width="0.1" height="15.0" fill="rgb(243,204,50)" rx="2" ry="2" />
<text  x="126.36" y="1231.5" ></text>
</g>
<g >
<title>ip_output (175 samples, 1.05%)</title><rect x="1174.0" y="853" width="12.4" height="15.0" fill="rgb(240,108,13)" rx="2" ry="2" />
<text  x="1177.00" y="863.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.02%)</title><rect x="119.9" y="1093" width="0.3" height="15.0" fill="rgb(233,89,34)" rx="2" ry="2" />
<text  x="122.87" y="1103.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (8 samples, 0.05%)</title><rect x="1155.4" y="821" width="0.5" height="15.0" fill="rgb(250,32,28)" rx="2" ry="2" />
<text  x="1158.37" y="831.5" ></text>
</g>
<g >
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="507.9" y="1029" width="0.3" height="15.0" fill="rgb(206,42,21)" rx="2" ry="2" />
<text  x="510.94" y="1039.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.01%)</title><rect x="499.2" y="1045" width="0.1" height="15.0" fill="rgb(231,201,15)" rx="2" ry="2" />
<text  x="502.20" y="1055.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelExpressionFlatImpl::Evaluate(google::api::expr::runtime::BaseActivation const&amp;, google::protobuf::Arena*) const (2 samples, 0.01%)</title><rect x="1041.3" y="821" width="0.1" height="15.0" fill="rgb(240,212,16)" rx="2" ry="2" />
<text  x="1044.30" y="831.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (2 samples, 0.01%)</title><rect x="876.8" y="1045" width="0.2" height="15.0" fill="rgb(222,60,35)" rx="2" ry="2" />
<text  x="879.81" y="1055.5" ></text>
</g>
<g >
<title>schedule (147 samples, 0.89%)</title><rect x="630.6" y="1173" width="10.5" height="15.0" fill="rgb(218,183,26)" rx="2" ry="2" />
<text  x="633.61" y="1183.5" ></text>
</g>
<g >
<title>tcp_data_ready (86 samples, 0.52%)</title><rect x="925.7" y="533" width="6.1" height="15.0" fill="rgb(222,156,5)" rx="2" ry="2" />
<text  x="928.67" y="543.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::endEncode() (2 samples, 0.01%)</title><rect x="1122.0" y="965" width="0.2" height="15.0" fill="rgb(217,180,31)" rx="2" ry="2" />
<text  x="1125.01" y="975.5" ></text>
</g>
<g >
<title>eth_type_trans (3 samples, 0.02%)</title><rect x="1185.5" y="725" width="0.2" height="15.0" fill="rgb(219,177,52)" rx="2" ry="2" />
<text  x="1188.52" y="735.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation::BinaryAnnotation(Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation const&amp;) (2 samples, 0.01%)</title><rect x="1005.7" y="901" width="0.2" height="15.0" fill="rgb(245,119,15)" rx="2" ry="2" />
<text  x="1008.74" y="911.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::FileEventImpl::FileEventImpl(Envoy::Event::DispatcherImpl&amp;, int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_0, std::__1::allocator&lt;Envoy::Event::FileEventImpl::FileEventImpl(Envoy::Event::DispatcherImpl&amp;, int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_0&gt;, void ()&gt;::operator()() (224 samples, 1.35%)</title><rect x="920.4" y="1285" width="15.9" height="15.0" fill="rgb(223,205,7)" rx="2" ry="2" />
<text  x="923.41" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (258 samples, 1.55%)</title><rect x="660.6" y="1317" width="18.3" height="15.0" fill="rgb(211,29,44)" rx="2" ry="2" />
<text  x="663.55" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="679.8" y="1365" width="0.1" height="15.0" fill="rgb(217,34,36)" rx="2" ry="2" />
<text  x="682.75" y="1375.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.01%)</title><rect x="196.2" y="1093" width="0.2" height="15.0" fill="rgb(205,227,33)" rx="2" ry="2" />
<text  x="199.25" y="1103.5" ></text>
</g>
<g >
<title>ksys_write (647 samples, 3.90%)</title><rect x="546.6" y="1141" width="46.0" height="15.0" fill="rgb(227,18,27)" rx="2" ry="2" />
<text  x="549.56" y="1151.5" >ksys..</text>
</g>
<g >
<title>__x64_sys_futex (3 samples, 0.02%)</title><rect x="506.7" y="1077" width="0.2" height="15.0" fill="rgb(218,103,20)" rx="2" ry="2" />
<text  x="509.73" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getHeaderMapValue(proxy_wasm::WasmHeaderMapType, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;*) (5 samples, 0.03%)</title><rect x="778.7" y="805" width="0.3" height="15.0" fill="rgb(221,150,42)" rx="2" ry="2" />
<text  x="781.67" y="815.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (2 samples, 0.01%)</title><rect x="923.8" y="773" width="0.2" height="15.0" fill="rgb(224,168,31)" rx="2" ry="2" />
<text  x="926.82" y="783.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="682.0" y="1173" width="0.2" height="15.0" fill="rgb(218,65,9)" rx="2" ry="2" />
<text  x="685.03" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Span::setTag(absl::string_view, absl::string_view) (32 samples, 0.19%)</title><rect x="752.3" y="917" width="2.3" height="15.0" fill="rgb(220,199,48)" rx="2" ry="2" />
<text  x="755.29" y="927.5" ></text>
</g>
<g >
<title>__lock_text_start (9 samples, 0.05%)</title><rect x="647.8" y="1173" width="0.6" height="15.0" fill="rgb(254,104,13)" rx="2" ry="2" />
<text  x="650.75" y="1183.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (4 samples, 0.02%)</title><rect x="597.8" y="1157" width="0.3" height="15.0" fill="rgb(250,97,0)" rx="2" ry="2" />
<text  x="600.83" y="1167.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::onRequestComplete() (3 samples, 0.02%)</title><rect x="1121.7" y="1013" width="0.2" height="15.0" fill="rgb(254,137,20)" rx="2" ry="2" />
<text  x="1124.73" y="1023.5" ></text>
</g>
<g >
<title>proxy_wasm::NullPlugin::getContextBase(unsigned long) (2 samples, 0.01%)</title><rect x="1046.6" y="901" width="0.2" height="15.0" fill="rgb(228,226,39)" rx="2" ry="2" />
<text  x="1049.63" y="911.5" ></text>
</g>
<g >
<title>futex_wait (3 samples, 0.02%)</title><rect x="439.0" y="933" width="0.2" height="15.0" fill="rgb(237,219,49)" rx="2" ry="2" />
<text  x="442.03" y="943.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (159 samples, 0.96%)</title><rect x="629.8" y="1205" width="11.3" height="15.0" fill="rgb(253,40,35)" rx="2" ry="2" />
<text  x="632.76" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::RequestEncoderImpl::encodeHeaders(Envoy::Http::RequestHeaderMap const&amp;, bool) (60 samples, 0.36%)</title><rect x="1088.2" y="837" width="4.3" height="15.0" fill="rgb(243,28,21)" rx="2" ry="2" />
<text  x="1091.24" y="847.5" ></text>
</g>
<g >
<title>vfs_read (81 samples, 0.49%)</title><rect x="672.9" y="1077" width="5.7" height="15.0" fill="rgb(231,127,54)" rx="2" ry="2" />
<text  x="675.86" y="1087.5" ></text>
</g>
<g >
<title>iptable_mangle_hook (3 samples, 0.02%)</title><rect x="1164.3" y="597" width="0.2" height="15.0" fill="rgb(244,106,26)" rx="2" ry="2" />
<text  x="1167.26" y="607.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__assign_external(char const*, unsigned long) (2 samples, 0.01%)</title><rect x="793.0" y="853" width="0.1" height="15.0" fill="rgb(233,139,35)" rx="2" ry="2" />
<text  x="795.97" y="863.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::onHeadersCompleteBase() (732 samples, 4.41%)</title><rect x="815.7" y="1061" width="52.1" height="15.0" fill="rgb(240,15,16)" rx="2" ry="2" />
<text  x="818.73" y="1071.5" >Envoy..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.10%)</title><rect x="436.5" y="917" width="1.2" height="15.0" fill="rgb(252,130,35)" rx="2" ry="2" />
<text  x="439.47" y="927.5" ></text>
</g>
<g >
<title>ip_route_input_slow (14 samples, 0.08%)</title><rect x="1162.9" y="373" width="1.0" height="15.0" fill="rgb(226,24,27)" rx="2" ry="2" />
<text  x="1165.91" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="1125.4" y="917" width="0.2" height="15.0" fill="rgb(231,143,53)" rx="2" ry="2" />
<text  x="1128.43" y="927.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (121 samples, 0.73%)</title><rect x="647.7" y="1237" width="8.6" height="15.0" fill="rgb(219,23,46)" rx="2" ry="2" />
<text  x="650.68" y="1247.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::decodeData(Envoy::Http::ActiveStreamDecoderFilter*, Envoy::Buffer::Instance&amp;, bool, Envoy::Http::FilterManager::FilterIterationStartState) (27 samples, 0.16%)</title><rect x="1120.8" y="1045" width="1.9" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1123.81" y="1055.5" ></text>
</g>
<g >
<title>aa_profile_af_perm (4 samples, 0.02%)</title><rect x="515.5" y="965" width="0.3" height="15.0" fill="rgb(245,19,29)" rx="2" ry="2" />
<text  x="518.48" y="975.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="33.7" y="1093" width="0.2" height="15.0" fill="rgb(213,43,2)" rx="2" ry="2" />
<text  x="36.68" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getConstMap(proxy_wasm::WasmHeaderMapType) (2 samples, 0.01%)</title><rect x="982.4" y="869" width="0.2" height="15.0" fill="rgb(220,80,34)" rx="2" ry="2" />
<text  x="985.42" y="879.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (6 samples, 0.04%)</title><rect x="1172.5" y="965" width="0.4" height="15.0" fill="rgb(228,178,0)" rx="2" ry="2" />
<text  x="1175.51" y="975.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderString::setCopy(char const*, unsigned int) (3 samples, 0.02%)</title><rect x="1114.3" y="1029" width="0.2" height="15.0" fill="rgb(210,15,52)" rx="2" ry="2" />
<text  x="1117.26" y="1039.5" ></text>
</g>
<g >
<title>do_iter_read (3 samples, 0.02%)</title><rect x="893.8" y="1061" width="0.2" height="15.0" fill="rgb(239,215,31)" rx="2" ry="2" />
<text  x="896.81" y="1071.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.02%)</title><rect x="484.6" y="869" width="0.3" height="15.0" fill="rgb(227,55,54)" rx="2" ry="2" />
<text  x="487.62" y="879.5" ></text>
</g>
<g >
<title>runtime.mcall (3 samples, 0.02%)</title><rect x="120.4" y="1349" width="0.3" height="15.0" fill="rgb(252,86,37)" rx="2" ry="2" />
<text  x="123.44" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="119.9" y="1221" width="0.3" height="15.0" fill="rgb(247,136,33)" rx="2" ry="2" />
<text  x="122.87" y="1231.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::FieldBackedMapImpl::operator[](google::api::expr::runtime::CelValue) const (13 samples, 0.08%)</title><rect x="1026.8" y="789" width="0.9" height="15.0" fill="rgb(240,119,33)" rx="2" ry="2" />
<text  x="1029.79" y="799.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (2 samples, 0.01%)</title><rect x="657.1" y="965" width="0.2" height="15.0" fill="rgb(231,90,32)" rx="2" ry="2" />
<text  x="660.14" y="975.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (114 samples, 0.69%)</title><rect x="907.2" y="677" width="8.2" height="15.0" fill="rgb(231,166,20)" rx="2" ry="2" />
<text  x="910.25" y="687.5" ></text>
</g>
<g >
<title>runtime.futex (49 samples, 0.30%)</title><rect x="126.2" y="1109" width="3.5" height="15.0" fill="rgb(252,155,35)" rx="2" ry="2" />
<text  x="129.20" y="1119.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.01%)</title><rect x="251.3" y="1013" width="0.1" height="15.0" fill="rgb(229,185,26)" rx="2" ry="2" />
<text  x="254.29" y="1023.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (2 samples, 0.01%)</title><rect x="114.0" y="1157" width="0.2" height="15.0" fill="rgb(232,23,52)" rx="2" ry="2" />
<text  x="117.04" y="1167.5" ></text>
</g>
<g >
<title>Envoy::Logger::Context::useFancyLogger() (2 samples, 0.01%)</title><rect x="737.4" y="1045" width="0.1" height="15.0" fill="rgb(206,6,44)" rx="2" ry="2" />
<text  x="740.36" y="1055.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.01%)</title><rect x="246.0" y="1077" width="0.1" height="15.0" fill="rgb(253,95,17)" rx="2" ry="2" />
<text  x="248.96" y="1087.5" ></text>
</g>
<g >
<title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="917.1" y="917" width="0.2" height="15.0" fill="rgb(219,160,28)" rx="2" ry="2" />
<text  x="920.13" y="927.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::StaticLookupTable&lt;Envoy::Http::RequestHeaderMap&gt;::lookup(Envoy::Http::HeaderMapImpl&amp;, absl::string_view) (5 samples, 0.03%)</title><rect x="1064.4" y="1029" width="0.4" height="15.0" fill="rgb(226,129,8)" rx="2" ry="2" />
<text  x="1067.41" y="1039.5" ></text>
</g>
<g >
<title>parse_url_char (3 samples, 0.02%)</title><rect x="1115.0" y="997" width="0.3" height="15.0" fill="rgb(206,4,2)" rx="2" ry="2" />
<text  x="1118.05" y="1007.5" ></text>
</g>
<g >
<title>skb_ext_add (4 samples, 0.02%)</title><rect x="1164.8" y="613" width="0.3" height="15.0" fill="rgb(223,172,1)" rx="2" ry="2" />
<text  x="1167.83" y="623.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::findValue(absl::string_view, google::protobuf::Arena*, bool) const (3 samples, 0.02%)</title><rect x="1018.3" y="773" width="0.2" height="15.0" fill="rgb(234,75,42)" rx="2" ry="2" />
<text  x="1021.33" y="783.5" ></text>
</g>
<g >
<title>futex_wait (2 samples, 0.01%)</title><rect x="250.4" y="1125" width="0.2" height="15.0" fill="rgb(246,113,25)" rx="2" ry="2" />
<text  x="253.44" y="1135.5" ></text>
</g>
<g >
<title>tcp_poll (5 samples, 0.03%)</title><rect x="950.8" y="1125" width="0.4" height="15.0" fill="rgb(245,17,0)" rx="2" ry="2" />
<text  x="953.84" y="1135.5" ></text>
</g>
<g >
<title>finish_task_switch (12 samples, 0.07%)</title><rect x="212.6" y="1045" width="0.9" height="15.0" fill="rgb(243,177,23)" rx="2" ry="2" />
<text  x="215.60" y="1055.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::reserve(unsigned long) (2 samples, 0.01%)</title><rect x="988.7" y="949" width="0.2" height="15.0" fill="rgb(223,133,39)" rx="2" ry="2" />
<text  x="991.75" y="959.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::HeaderList::maybeMakeMap() (6 samples, 0.04%)</title><rect x="821.3" y="917" width="0.5" height="15.0" fill="rgb(243,34,15)" rx="2" ry="2" />
<text  x="824.34" y="927.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.01%)</title><rect x="131.4" y="1093" width="0.1" height="15.0" fill="rgb(207,63,47)" rx="2" ry="2" />
<text  x="134.39" y="1103.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.02%)</title><rect x="228.4" y="1205" width="0.2" height="15.0" fill="rgb(222,144,31)" rx="2" ry="2" />
<text  x="231.39" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::writev(Envoy::Buffer::RawSlice const*, unsigned long) (215 samples, 1.30%)</title><rect x="1153.0" y="1189" width="15.3" height="15.0" fill="rgb(211,129,17)" rx="2" ry="2" />
<text  x="1156.02" y="1199.5" ></text>
</g>
<g >
<title>Envoy::Server::WorkerImpl::threadRoutine(Envoy::Server::GuardDog&amp;, std::__1::function&lt;void ()&gt; const&amp;) (2 samples, 0.01%)</title><rect x="938.9" y="1365" width="0.1" height="15.0" fill="rgb(229,64,10)" rx="2" ry="2" />
<text  x="941.90" y="1375.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;absl::string_view, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;absl::string_view const, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt; &gt; &gt;::resize(unsigned long) (10 samples, 0.06%)</title><rect x="728.7" y="773" width="0.7" height="15.0" fill="rgb(229,117,11)" rx="2" ry="2" />
<text  x="731.68" y="783.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/daemon/logger/jsonfilelog.marshalMessage (69 samples, 0.42%)</title><rect x="227.2" y="1285" width="4.9" height="15.0" fill="rgb(230,210,40)" rx="2" ry="2" />
<text  x="230.18" y="1295.5" ></text>
</g>
<g >
<title>Envoy::Http::AsyncStreamImpl::sendHeaders(Envoy::Http::RequestHeaderMap&amp;, bool) (2 samples, 0.01%)</title><rect x="1005.1" y="853" width="0.1" height="15.0" fill="rgb(215,41,51)" rx="2" ry="2" />
<text  x="1008.10" y="863.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::ResponseHeaderMap&gt;::staticLookup(absl::string_view) (2 samples, 0.01%)</title><rect x="806.1" y="1045" width="0.1" height="15.0" fill="rgb(239,69,11)" rx="2" ry="2" />
<text  x="809.05" y="1055.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (303 samples, 1.83%)</title><rect x="563.3" y="645" width="21.6" height="15.0" fill="rgb(251,127,36)" rx="2" ry="2" />
<text  x="566.34" y="655.5" >i..</text>
</g>
<g >
<title>do_syscall_64 (17 samples, 0.10%)</title><rect x="999.1" y="789" width="1.2" height="15.0" fill="rgb(209,215,16)" rx="2" ry="2" />
<text  x="1002.13" y="799.5" ></text>
</g>
<g >
<title>ep_poll (28 samples, 0.17%)</title><rect x="645.5" y="1221" width="2.0" height="15.0" fill="rgb(248,14,34)" rx="2" ry="2" />
<text  x="648.48" y="1231.5" ></text>
</g>
<g >
<title>br_nf_pre_routing (3 samples, 0.02%)</title><rect x="1156.6" y="613" width="0.2" height="15.0" fill="rgb(228,196,35)" rx="2" ry="2" />
<text  x="1159.58" y="623.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderString::setCopy(char const*, unsigned int) (3 samples, 0.02%)</title><rect x="865.2" y="1029" width="0.2" height="15.0" fill="rgb(242,172,49)" rx="2" ry="2" />
<text  x="868.22" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*, char const*, unsigned long)#2}::__invoke(http_parser*, char const*, unsigned long) (13 samples, 0.08%)</title><rect x="1129.5" y="1109" width="0.9" height="15.0" fill="rgb(237,182,24)" rx="2" ry="2" />
<text  x="1132.48" y="1119.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="1006.1" y="885" width="0.1" height="15.0" fill="rgb(214,182,54)" rx="2" ry="2" />
<text  x="1009.10" y="895.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::StreamInfoImpl(Envoy::Http::Protocol, Envoy::TimeSource&amp;, std::__1::shared_ptr&lt;Envoy::Network::ConnectionInfoProvider const&gt; const&amp;, std::__1::shared_ptr&lt;Envoy::StreamInfo::FilterState&gt;, Envoy::StreamInfo::FilterState::LifeSpan) (5 samples, 0.03%)</title><rect x="1062.8" y="997" width="0.4" height="15.0" fill="rgb(241,3,5)" rx="2" ry="2" />
<text  x="1065.85" y="1007.5" ></text>
</g>
<g >
<title>do_futex (16 samples, 0.10%)</title><rect x="134.1" y="1013" width="1.1" height="15.0" fill="rgb(219,122,43)" rx="2" ry="2" />
<text  x="137.09" y="1023.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.01%)</title><rect x="1125.2" y="853" width="0.2" height="15.0" fill="rgb(221,176,40)" rx="2" ry="2" />
<text  x="1128.21" y="863.5" ></text>
</g>
<g >
<title>wake_up_q (2 samples, 0.01%)</title><rect x="131.4" y="981" width="0.1" height="15.0" fill="rgb(216,108,54)" rx="2" ry="2" />
<text  x="134.39" y="991.5" ></text>
</g>
<g >
<title>[unknown] (1,404 samples, 8.46%)</title><rect x="399.1" y="1077" width="99.9" height="15.0" fill="rgb(228,44,5)" rx="2" ry="2" />
<text  x="402.14" y="1087.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (16 samples, 0.10%)</title><rect x="943.5" y="1333" width="1.2" height="15.0" fill="rgb(240,58,45)" rx="2" ry="2" />
<text  x="946.52" y="1343.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (8 samples, 0.05%)</title><rect x="1147.7" y="997" width="0.6" height="15.0" fill="rgb(228,25,41)" rx="2" ry="2" />
<text  x="1150.69" y="1007.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="1000.2" y="773" width="0.1" height="15.0" fill="rgb(254,1,43)" rx="2" ry="2" />
<text  x="1003.20" y="783.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::write(Envoy::Buffer::Instance&amp;) (214 samples, 1.29%)</title><rect x="921.0" y="1205" width="15.2" height="15.0" fill="rgb(250,168,24)" rx="2" ry="2" />
<text  x="923.97" y="1215.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.01%)</title><rect x="701.6" y="997" width="0.1" height="15.0" fill="rgb(232,71,31)" rx="2" ry="2" />
<text  x="704.59" y="1007.5" ></text>
</g>
<g >
<title>netif_receive_skb (91 samples, 0.55%)</title><rect x="1157.4" y="533" width="6.5" height="15.0" fill="rgb(205,125,38)" rx="2" ry="2" />
<text  x="1160.43" y="543.5" ></text>
</g>
<g >
<title>jbd2_journal_commit_transaction (2 samples, 0.01%)</title><rect x="659.0" y="1317" width="0.1" height="15.0" fill="rgb(217,58,48)" rx="2" ry="2" />
<text  x="661.99" y="1327.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (2 samples, 0.01%)</title><rect x="244.5" y="1045" width="0.1" height="15.0" fill="rgb(241,205,2)" rx="2" ry="2" />
<text  x="247.46" y="1055.5" ></text>
</g>
<g >
<title>google::protobuf::Descriptor::FindFieldByName(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) const (2 samples, 0.01%)</title><rect x="1022.2" y="773" width="0.1" height="15.0" fill="rgb(235,113,32)" rx="2" ry="2" />
<text  x="1025.17" y="783.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::EvaluateExpressionFactory::create(std::__1::shared_ptr&lt;Envoy::Extensions::Common::Wasm::EvaluateExpressionFactory&gt;) const::{lambda(proxy_wasm::WasmBase&amp;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void* (unsigned long)&gt; const&amp;)#1}::operator()(proxy_wasm::WasmBase&amp;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void* (unsigned long)&gt; const&amp;) const (64 samples, 0.39%)</title><rect x="1036.7" y="821" width="4.6" height="15.0" fill="rgb(228,12,5)" rx="2" ry="2" />
<text  x="1039.75" y="831.5" ></text>
</g>
<g >
<title>mem_cgroup_nr_lru_pages (26 samples, 0.16%)</title><rect x="676.8" y="965" width="1.8" height="15.0" fill="rgb(248,150,49)" rx="2" ry="2" />
<text  x="679.77" y="975.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (184 samples, 1.11%)</title><rect x="922.3" y="1061" width="13.0" height="15.0" fill="rgb(215,56,17)" rx="2" ry="2" />
<text  x="925.25" y="1071.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2 samples, 0.01%)</title><rect x="98.2" y="1141" width="0.1" height="15.0" fill="rgb(214,174,35)" rx="2" ry="2" />
<text  x="101.18" y="1151.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="498.8" y="917" width="0.2" height="15.0" fill="rgb(228,137,47)" rx="2" ry="2" />
<text  x="501.84" y="927.5" ></text>
</g>
<g >
<title>local.runtime.park_m (3 samples, 0.02%)</title><rect x="250.4" y="1301" width="0.2" height="15.0" fill="rgb(226,129,20)" rx="2" ry="2" />
<text  x="253.37" y="1311.5" ></text>
</g>
<g >
<title>runtime.stopm (2 samples, 0.01%)</title><rect x="257.9" y="1301" width="0.1" height="15.0" fill="rgb(207,193,39)" rx="2" ry="2" />
<text  x="260.90" y="1311.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::upstreamHost() const (3 samples, 0.02%)</title><rect x="772.6" y="789" width="0.2" height="15.0" fill="rgb(223,130,39)" rx="2" ry="2" />
<text  x="775.63" y="799.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (4 samples, 0.02%)</title><rect x="744.7" y="693" width="0.3" height="15.0" fill="rgb(213,59,16)" rx="2" ry="2" />
<text  x="747.68" y="703.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::CheckIterAccess(google::api::expr::runtime::CelExpressionFlatEvaluationState*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) (2 samples, 0.01%)</title><rect x="1038.7" y="741" width="0.1" height="15.0" fill="rgb(228,137,2)" rx="2" ry="2" />
<text  x="1041.67" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (4 samples, 0.02%)</title><rect x="997.3" y="741" width="0.3" height="15.0" fill="rgb(242,26,47)" rx="2" ry="2" />
<text  x="1000.28" y="751.5" ></text>
</g>
<g >
<title>epoll_ctl (27 samples, 0.16%)</title><rect x="1126.4" y="981" width="1.9" height="15.0" fill="rgb(233,149,34)" rx="2" ry="2" />
<text  x="1129.42" y="991.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (3 samples, 0.02%)</title><rect x="1167.5" y="917" width="0.2" height="15.0" fill="rgb(243,140,17)" rx="2" ry="2" />
<text  x="1170.46" y="927.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Span::setTag(absl::string_view, absl::string_view) (3 samples, 0.02%)</title><rect x="1071.3" y="997" width="0.2" height="15.0" fill="rgb(223,33,0)" rx="2" ry="2" />
<text  x="1074.31" y="1007.5" ></text>
</g>
<g >
<title>do_syscall_64 (89 samples, 0.54%)</title><rect x="598.5" y="1205" width="6.3" height="15.0" fill="rgb(220,42,39)" rx="2" ry="2" />
<text  x="601.47" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::decodeData(Envoy::Buffer::Instance&amp;, bool) (15 samples, 0.09%)</title><rect x="871.7" y="1029" width="1.1" height="15.0" fill="rgb(219,224,44)" rx="2" ry="2" />
<text  x="874.69" y="1039.5" ></text>
</g>
<g >
<title>local.net/http.serverHandler.ServeHTTP (19 samples, 0.11%)</title><rect x="250.8" y="1333" width="1.3" height="15.0" fill="rgb(228,17,16)" rx="2" ry="2" />
<text  x="253.79" y="1343.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="437.7" y="917" width="0.5" height="15.0" fill="rgb(208,196,23)" rx="2" ry="2" />
<text  x="440.68" y="927.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="539.7" y="1045" width="0.2" height="15.0" fill="rgb(210,185,21)" rx="2" ry="2" />
<text  x="542.73" y="1055.5" ></text>
</g>
<g >
<title>import_iovec (9 samples, 0.05%)</title><rect x="899.6" y="1077" width="0.6" height="15.0" fill="rgb(223,112,10)" rx="2" ry="2" />
<text  x="902.57" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerUtility::cleanInternalHeaders(Envoy::Http::RequestHeaderMap&amp;, bool, std::__1::list&lt;Envoy::Http::LowerCaseString, std::__1::allocator&lt;Envoy::Http::LowerCaseString&gt; &gt; const&amp;) (2 samples, 0.01%)</title><rect x="825.0" y="1013" width="0.1" height="15.0" fill="rgb(210,41,36)" rx="2" ry="2" />
<text  x="827.97" y="1023.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::ContainerAccessStep::Evaluate(google::api::expr::runtime::ExecutionFrame*) const (3 samples, 0.02%)</title><rect x="785.3" y="773" width="0.2" height="15.0" fill="rgb(223,39,54)" rx="2" ry="2" />
<text  x="788.29" y="783.5" ></text>
</g>
<g >
<title>veth_xmit (2 samples, 0.01%)</title><rect x="1166.2" y="757" width="0.1" height="15.0" fill="rgb(232,52,24)" rx="2" ry="2" />
<text  x="1169.18" y="767.5" ></text>
</g>
<g >
<title>run_ksoftirqd (2 samples, 0.01%)</title><rect x="659.6" y="1317" width="0.1" height="15.0" fill="rgb(216,54,24)" rx="2" ry="2" />
<text  x="662.56" y="1327.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderUtility::headerValueIsValid(absl::string_view) (2 samples, 0.01%)</title><rect x="806.5" y="1077" width="0.1" height="15.0" fill="rgb(221,171,4)" rx="2" ry="2" />
<text  x="809.48" y="1087.5" ></text>
</g>
<g >
<title>evmap_io_del_ (29 samples, 0.17%)</title><rect x="996.2" y="837" width="2.1" height="15.0" fill="rgb(249,130,31)" rx="2" ry="2" />
<text  x="999.21" y="847.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::staticLookup(absl::string_view) (5 samples, 0.03%)</title><rect x="1110.1" y="885" width="0.4" height="15.0" fill="rgb(249,176,16)" rx="2" ry="2" />
<text  x="1113.14" y="895.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Filters::Common::Expr::ResponseWrapper::operator[](google::api::expr::runtime::CelValue) const (2 samples, 0.01%)</title><rect x="782.4" y="805" width="0.1" height="15.0" fill="rgb(219,112,40)" rx="2" ry="2" />
<text  x="785.37" y="815.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::addStreamFilter(std::__1::shared_ptr&lt;Envoy::Http::StreamFilter&gt;) (4 samples, 0.02%)</title><rect x="1077.1" y="981" width="0.3" height="15.0" fill="rgb(223,216,4)" rx="2" ry="2" />
<text  x="1080.07" y="991.5" ></text>
</g>
<g >
<title>do_syscall_64 (179 samples, 1.08%)</title><rect x="62.6" y="1157" width="12.7" height="15.0" fill="rgb(214,121,19)" rx="2" ry="2" />
<text  x="65.55" y="1167.5" ></text>
</g>
<g >
<title>wake_up_q (4 samples, 0.02%)</title><rect x="507.9" y="1061" width="0.3" height="15.0" fill="rgb(254,148,25)" rx="2" ry="2" />
<text  x="510.94" y="1071.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3 samples, 0.02%)</title><rect x="1149.4" y="1029" width="0.2" height="15.0" fill="rgb(232,153,49)" rx="2" ry="2" />
<text  x="1152.39" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Http::CodecClient::newStream(Envoy::Http::ResponseDecoder&amp;) (11 samples, 0.07%)</title><rect x="1094.7" y="901" width="0.8" height="15.0" fill="rgb(213,152,34)" rx="2" ry="2" />
<text  x="1097.71" y="911.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::write(Envoy::Buffer::Instance&amp;, bool, bool) (2 samples, 0.01%)</title><rect x="1122.0" y="949" width="0.2" height="15.0" fill="rgb(205,187,0)" rx="2" ry="2" />
<text  x="1125.01" y="959.5" ></text>
</g>
<g >
<title>local.runtime.lock2 (4 samples, 0.02%)</title><rect x="201.1" y="1189" width="0.3" height="15.0" fill="rgb(231,103,47)" rx="2" ry="2" />
<text  x="204.08" y="1199.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Upstream::ClusterManagerImpl::ThreadLocalClusterManagerImpl::ClusterEntry::httpConnPool(Envoy::Upstream::ResourcePriority, absl::optional&lt;Envoy::Http::Protocol&gt;, Envoy::Upstream::LoadBalancerContext*)::$_14, std::__1::allocator&lt;Envoy::Upstream::ClusterManagerImpl::ThreadLocalClusterManagerImpl::ClusterEntry::httpConnPool(Envoy::Upstream::ResourcePriority, absl::optional&lt;Envoy::Http::Protocol&gt;, Envoy::Upstream::LoadBalancerContext*)::$_14&gt;, void ()&gt;::destroy_deallocate() (2 samples, 0.01%)</title><rect x="799.9" y="933" width="0.1" height="15.0" fill="rgb(249,97,0)" rx="2" ry="2" />
<text  x="802.87" y="943.5" ></text>
</g>
<g >
<title>writev (212 samples, 1.28%)</title><rect x="1153.2" y="1173" width="15.1" height="15.0" fill="rgb(233,221,52)" rx="2" ry="2" />
<text  x="1156.23" y="1183.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::DynamicMap::DynamicMapKeyList::operator[](int) const (4 samples, 0.02%)</title><rect x="766.0" y="757" width="0.3" height="15.0" fill="rgb(251,53,54)" rx="2" ry="2" />
<text  x="769.02" y="767.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.01%)</title><rect x="499.2" y="1077" width="0.1" height="15.0" fill="rgb(232,3,40)" rx="2" ry="2" />
<text  x="502.20" y="1087.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (132 samples, 0.80%)</title><rect x="237.0" y="1125" width="9.4" height="15.0" fill="rgb(253,49,50)" rx="2" ry="2" />
<text  x="240.00" y="1135.5" ></text>
</g>
<g >
<title>__sched_text_start (2 samples, 0.01%)</title><rect x="539.5" y="1109" width="0.2" height="15.0" fill="rgb(252,152,35)" rx="2" ry="2" />
<text  x="542.52" y="1119.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashSetPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;::iterator absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashSetPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;::find&lt;absl::string_view&gt;(absl::string_view const&amp;, unsigned long) (4 samples, 0.02%)</title><rect x="852.0" y="949" width="0.3" height="15.0" fill="rgb(222,11,14)" rx="2" ry="2" />
<text  x="854.99" y="959.5" ></text>
</g>
<g >
<title>smp_call_function_single (4 samples, 0.02%)</title><rect x="628.4" y="1045" width="0.3" height="15.0" fill="rgb(230,4,12)" rx="2" ry="2" />
<text  x="631.41" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::RequestHeaderMap, std::__1::default_delete&lt;Envoy::Http::RequestHeaderMap&gt; &gt;&amp;&amp;, bool) (679 samples, 4.09%)</title><rect x="816.1" y="1045" width="48.3" height="15.0" fill="rgb(243,7,27)" rx="2" ry="2" />
<text  x="819.08" y="1055.5" >Envo..</text>
</g>
<g >
<title>absl::hash_internal::MixingHashState::combine_contiguous(absl::hash_internal::MixingHashState, unsigned char const*, unsigned long) (2 samples, 0.01%)</title><rect x="847.9" y="965" width="0.2" height="15.0" fill="rgb(245,160,34)" rx="2" ry="2" />
<text  x="850.94" y="975.5" ></text>
</g>
<g >
<title>seq_read (81 samples, 0.49%)</title><rect x="672.9" y="1029" width="5.7" height="15.0" fill="rgb(245,23,50)" rx="2" ry="2" />
<text  x="675.86" y="1039.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="804.6" y="997" width="0.2" height="15.0" fill="rgb(225,33,31)" rx="2" ry="2" />
<text  x="807.63" y="1007.5" ></text>
</g>
<g >
<title>parse_url_char (5 samples, 0.03%)</title><rect x="1131.2" y="1109" width="0.3" height="15.0" fill="rgb(252,73,46)" rx="2" ry="2" />
<text  x="1134.19" y="1119.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.02%)</title><rect x="1159.6" y="85" width="0.2" height="15.0" fill="rgb(247,45,48)" rx="2" ry="2" />
<text  x="1162.56" y="95.5" ></text>
</g>
<g >
<title>finish_task_switch (23 samples, 0.14%)</title><rect x="198.2" y="1045" width="1.7" height="15.0" fill="rgb(212,149,47)" rx="2" ry="2" />
<text  x="201.24" y="1055.5" ></text>
</g>
<g >
<title>epoll_ctl (28 samples, 0.17%)</title><rect x="996.3" y="805" width="2.0" height="15.0" fill="rgb(240,190,2)" rx="2" ry="2" />
<text  x="999.28" y="815.5" ></text>
</g>
<g >
<title>__sched_text_start (29 samples, 0.17%)</title><rect x="594.3" y="1093" width="2.1" height="15.0" fill="rgb(250,58,24)" rx="2" ry="2" />
<text  x="597.35" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="1008.6" y="901" width="0.1" height="15.0" fill="rgb(225,224,52)" rx="2" ry="2" />
<text  x="1011.59" y="911.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="829.5" y="933" width="0.2" height="15.0" fill="rgb(241,201,15)" rx="2" ry="2" />
<text  x="832.52" y="943.5" ></text>
</g>
<g >
<title>ip_vs_in.part.0 (4 samples, 0.02%)</title><rect x="559.8" y="821" width="0.3" height="15.0" fill="rgb(246,200,29)" rx="2" ry="2" />
<text  x="562.78" y="831.5" ></text>
</g>
<g >
<title>std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, proxy_wasm::ContextBase*&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, proxy_wasm::ContextBase*&gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, proxy_wasm::ContextBase*&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, proxy_wasm::ContextBase*&gt; &gt; &gt;::remove(std::__1::__hash_const_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, proxy_wasm::ContextBase*&gt;, void*&gt;*&gt;) (2 samples, 0.01%)</title><rect x="706.9" y="1173" width="0.2" height="15.0" fill="rgb(219,191,29)" rx="2" ry="2" />
<text  x="709.92" y="1183.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ResponseHeaderMapImpl::setEnvoyUpstreamServiceTime(unsigned long) (2 samples, 0.01%)</title><rect x="990.4" y="997" width="0.1" height="15.0" fill="rgb(237,216,6)" rx="2" ry="2" />
<text  x="993.38" y="1007.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.02%)</title><rect x="659.9" y="1301" width="0.3" height="15.0" fill="rgb(253,121,25)" rx="2" ry="2" />
<text  x="662.91" y="1311.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::RenderMap(google::protobuf::Field const*, google::protobuf::stringpiece_internal::StringPiece, unsigned int, google::protobuf::util::converter::ObjectWriter*) const (2 samples, 0.01%)</title><rect x="751.4" y="677" width="0.2" height="15.0" fill="rgb(210,76,16)" rx="2" ry="2" />
<text  x="754.44" y="687.5" ></text>
</g>
<g >
<title>writev (212 samples, 1.28%)</title><rect x="921.1" y="1173" width="15.1" height="15.0" fill="rgb(236,30,42)" rx="2" ry="2" />
<text  x="924.12" y="1183.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (2 samples, 0.01%)</title><rect x="934.5" y="917" width="0.1" height="15.0" fill="rgb(225,101,11)" rx="2" ry="2" />
<text  x="937.49" y="927.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (3 samples, 0.02%)</title><rect x="604.2" y="1173" width="0.2" height="15.0" fill="rgb(248,99,10)" rx="2" ry="2" />
<text  x="607.23" y="1183.5" ></text>
</g>
<g >
<title>__fdget_pos (3 samples, 0.02%)</title><rect x="893.3" y="1093" width="0.2" height="15.0" fill="rgb(247,74,49)" rx="2" ry="2" />
<text  x="896.31" y="1103.5" ></text>
</g>
<g >
<title>wake_up_q (6 samples, 0.04%)</title><rect x="510.6" y="1093" width="0.4" height="15.0" fill="rgb(224,116,50)" rx="2" ry="2" />
<text  x="513.57" y="1103.5" ></text>
</g>
<g >
<title>copy_page_to_iter (6 samples, 0.04%)</title><rect x="96.9" y="1125" width="0.4" height="15.0" fill="rgb(251,148,52)" rx="2" ry="2" />
<text  x="99.90" y="1135.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (8 samples, 0.05%)</title><rect x="510.0" y="1093" width="0.6" height="15.0" fill="rgb(253,118,34)" rx="2" ry="2" />
<text  x="513.00" y="1103.5" ></text>
</g>
<g >
<title>std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, std::__1::__unordered_map_hasher&lt;long, std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, std::__1::hash&lt;long&gt;, std::__1::equal_to&lt;long&gt;, true&gt;, std::__1::__unordered_map_equal&lt;long, std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, std::__1::equal_to&lt;long&gt;, std::__1::hash&lt;long&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt; &gt; &gt;::__emplace_unique_impl&lt;std::__1::pair&lt;unsigned long, decltype(nullptr)&gt; &gt;(std::__1::pair&lt;unsigned long, decltype(nullptr)&gt;&amp;&amp;) (7 samples, 0.04%)</title><rect x="1108.0" y="949" width="0.5" height="15.0" fill="rgb(214,224,32)" rx="2" ry="2" />
<text  x="1111.01" y="959.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="645.9" y="1157" width="0.1" height="15.0" fill="rgb(247,28,27)" rx="2" ry="2" />
<text  x="648.90" y="1167.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.01%)</title><rect x="701.6" y="1061" width="0.1" height="15.0" fill="rgb(252,49,51)" rx="2" ry="2" />
<text  x="704.59" y="1071.5" ></text>
</g>
<g >
<title>char* absl::inlined_vector_internal::Storage&lt;char, 128ul, std::__1::allocator&lt;char&gt; &gt;::Insert&lt;absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt; &gt;(char const*, absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt;, unsigned long) (3 samples, 0.02%)</title><rect x="880.2" y="1061" width="0.2" height="15.0" fill="rgb(239,160,8)" rx="2" ry="2" />
<text  x="883.15" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::operator=(Envoy::Buffer::Slice&amp;&amp;) (2 samples, 0.01%)</title><rect x="802.5" y="917" width="0.1" height="15.0" fill="rgb(233,99,37)" rx="2" ry="2" />
<text  x="805.50" y="927.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.04%)</title><rect x="682.3" y="1333" width="0.4" height="15.0" fill="rgb(245,1,26)" rx="2" ry="2" />
<text  x="685.31" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_futex (70 samples, 0.42%)</title><rect x="203.4" y="1125" width="5.0" height="15.0" fill="rgb(253,223,6)" rx="2" ry="2" />
<text  x="206.43" y="1135.5" ></text>
</g>
<g >
<title>aa_profile_af_perm (2 samples, 0.01%)</title><rect x="591.8" y="965" width="0.1" height="15.0" fill="rgb(236,160,40)" rx="2" ry="2" />
<text  x="594.79" y="975.5" ></text>
</g>
<g >
<title>std::__1::__itoa::__u32toa(unsigned int, char*) (2 samples, 0.01%)</title><rect x="1044.8" y="869" width="0.1" height="15.0" fill="rgb(238,3,46)" rx="2" ry="2" />
<text  x="1047.78" y="879.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (5 samples, 0.03%)</title><rect x="97.0" y="1093" width="0.3" height="15.0" fill="rgb(213,141,11)" rx="2" ry="2" />
<text  x="99.97" y="1103.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (4 samples, 0.02%)</title><rect x="514.4" y="917" width="0.3" height="15.0" fill="rgb(232,130,0)" rx="2" ry="2" />
<text  x="517.41" y="927.5" ></text>
</g>
<g >
<title>vfs_read (53 samples, 0.32%)</title><rect x="618.7" y="1173" width="3.8" height="15.0" fill="rgb(233,75,20)" rx="2" ry="2" />
<text  x="621.74" y="1183.5" ></text>
</g>
<g >
<title>tcp_push (2 samples, 0.01%)</title><rect x="556.9" y="1013" width="0.1" height="15.0" fill="rgb(216,109,38)" rx="2" ry="2" />
<text  x="559.87" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Stats::StatName::operator==(Envoy::Stats::StatName const&amp;) const (5 samples, 0.03%)</title><rect x="731.7" y="885" width="0.3" height="15.0" fill="rgb(253,102,23)" rx="2" ry="2" />
<text  x="734.67" y="895.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (170 samples, 1.02%)</title><rect x="100.7" y="1237" width="12.1" height="15.0" fill="rgb(223,61,39)" rx="2" ry="2" />
<text  x="103.67" y="1247.5" ></text>
</g>
<g >
<title>[unknown] (1,451 samples, 8.74%)</title><rect x="10.1" y="1349" width="103.2" height="15.0" fill="rgb(231,94,17)" rx="2" ry="2" />
<text  x="13.07" y="1359.5" >[unknown]</text>
</g>
<g >
<title>google::protobuf::internal::AllocateMemory(google::protobuf::internal::AllocationPolicy const*, unsigned long, unsigned long) (2 samples, 0.01%)</title><rect x="1025.7" y="709" width="0.2" height="15.0" fill="rgb(211,156,27)" rx="2" ry="2" />
<text  x="1028.73" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.09%)</title><rect x="247.3" y="1221" width="1.1" height="15.0" fill="rgb(217,167,10)" rx="2" ry="2" />
<text  x="250.31" y="1231.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.19%)</title><rect x="874.5" y="949" width="2.2" height="15.0" fill="rgb(228,29,27)" rx="2" ry="2" />
<text  x="877.47" y="959.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="114.0" y="1221" width="0.2" height="15.0" fill="rgb(214,2,51)" rx="2" ry="2" />
<text  x="117.04" y="1231.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Extensions::Common::Wasm::EvaluateExpressionFactory::create(std::__1::shared_ptr&lt;Envoy::Extensions::Common::Wasm::EvaluateExpressionFactory&gt;) const::{lambda(proxy_wasm::WasmBase&amp;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void* (unsigned long)&gt; const&amp;)#1}, std::__1::allocator&lt;{lambda(proxy_wasm::WasmBase&amp;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void* (unsigned long)&gt; const&amp;)#1}&gt;, proxy_wasm::WasmResult (proxy_wasm::WasmBase&amp;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void* (unsigned long)&gt;)&gt;::__clone(std::__1::__function::__base&lt;proxy_wasm::WasmResult&gt;*) const (2 samples, 0.01%)</title><rect x="790.1" y="805" width="0.2" height="15.0" fill="rgb(220,225,23)" rx="2" ry="2" />
<text  x="793.12" y="815.5" ></text>
</g>
<g >
<title>ip_queue_xmit (189 samples, 1.14%)</title><rect x="1173.1" y="901" width="13.5" height="15.0" fill="rgb(235,50,42)" rx="2" ry="2" />
<text  x="1176.15" y="911.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ThreadSafeArena::AllocateAlignedWithCleanupFallback(unsigned long, std::type_info const*) (2 samples, 0.01%)</title><rect x="1033.3" y="789" width="0.1" height="15.0" fill="rgb(206,156,7)" rx="2" ry="2" />
<text  x="1036.26" y="799.5" ></text>
</g>
<g >
<title>github.com/docker/docker/daemon/logger/jsonfilelog.New.func1 (72 samples, 0.43%)</title><rect x="227.0" y="1301" width="5.1" height="15.0" fill="rgb(219,30,1)" rx="2" ry="2" />
<text  x="229.97" y="1311.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.01%)</title><rect x="623.4" y="1109" width="0.2" height="15.0" fill="rgb(245,54,10)" rx="2" ry="2" />
<text  x="626.43" y="1119.5" ></text>
</g>
<g >
<title>void absl::inlined_vector_internal::Storage&lt;char, 128ul, std::__1::allocator&lt;char&gt; &gt;::Assign&lt;absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt; &gt;(absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt;, unsigned long) (2 samples, 0.01%)</title><rect x="865.3" y="1013" width="0.1" height="15.0" fill="rgb(215,29,9)" rx="2" ry="2" />
<text  x="868.29" y="1023.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (6 samples, 0.04%)</title><rect x="1144.9" y="917" width="0.4" height="15.0" fill="rgb(206,38,10)" rx="2" ry="2" />
<text  x="1147.91" y="927.5" ></text>
</g>
<g >
<title>Wasm::Common::getServiceNameFallback() (65 samples, 0.39%)</title><rect x="1017.9" y="821" width="4.6" height="15.0" fill="rgb(252,161,3)" rx="2" ry="2" />
<text  x="1020.90" y="831.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::completeLastHeader() (6 samples, 0.04%)</title><rect x="1129.8" y="1077" width="0.4" height="15.0" fill="rgb(242,205,36)" rx="2" ry="2" />
<text  x="1132.77" y="1087.5" ></text>
</g>
<g >
<title>__inet_lookup_established (2 samples, 0.01%)</title><rect x="563.5" y="581" width="0.1" height="15.0" fill="rgb(207,91,33)" rx="2" ry="2" />
<text  x="566.48" y="591.5" ></text>
</g>
<g >
<title>Envoy::Http::LowerCaseString::LowerCaseString(absl::string_view) (3 samples, 0.02%)</title><rect x="982.6" y="869" width="0.2" height="15.0" fill="rgb(242,29,32)" rx="2" ry="2" />
<text  x="985.63" y="879.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::insertByKey(Envoy::Http::HeaderString&amp;&amp;, Envoy::Http::HeaderString&amp;&amp;) (8 samples, 0.05%)</title><rect x="1055.3" y="1045" width="0.6" height="15.0" fill="rgb(217,218,13)" rx="2" ry="2" />
<text  x="1058.31" y="1055.5" ></text>
</g>
<g >
<title>__lock_text_start (12 samples, 0.07%)</title><rect x="563.8" y="485" width="0.9" height="15.0" fill="rgb(250,149,34)" rx="2" ry="2" />
<text  x="566.84" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="656.7" y="1253" width="0.4" height="15.0" fill="rgb(230,24,43)" rx="2" ry="2" />
<text  x="659.71" y="1263.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.isra.0 (14 samples, 0.08%)</title><rect x="1162.9" y="421" width="1.0" height="15.0" fill="rgb(209,110,10)" rx="2" ry="2" />
<text  x="1165.91" y="431.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::execute(char const*, int) (1,246 samples, 7.51%)</title><rect x="968.3" y="1125" width="88.6" height="15.0" fill="rgb(218,205,49)" rx="2" ry="2" />
<text  x="971.34" y="1135.5" >Envoy::Htt..</text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (2 samples, 0.01%)</title><rect x="246.2" y="1109" width="0.2" height="15.0" fill="rgb(247,66,15)" rx="2" ry="2" />
<text  x="249.24" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Router::GenericConnPoolFactory* Envoy::Config::Utility::getAndCheckFactoryByName&lt;Envoy::Router::GenericConnPoolFactory&gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, bool) (5 samples, 0.03%)</title><rect x="1101.2" y="981" width="0.3" height="15.0" fill="rgb(229,58,24)" rx="2" ry="2" />
<text  x="1104.18" y="991.5" ></text>
</g>
<g >
<title>runtime.mcall (11 samples, 0.07%)</title><rect x="257.3" y="1365" width="0.7" height="15.0" fill="rgb(228,86,44)" rx="2" ry="2" />
<text  x="260.26" y="1375.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (104 samples, 0.63%)</title><rect x="924.7" y="581" width="7.4" height="15.0" fill="rgb(222,172,5)" rx="2" ry="2" />
<text  x="927.67" y="591.5" ></text>
</g>
<g >
<title>start_this_handle (3 samples, 0.02%)</title><rect x="239.8" y="1029" width="0.3" height="15.0" fill="rgb(224,77,41)" rx="2" ry="2" />
<text  x="242.84" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Runtime::runtimeFeatureEnabled(absl::string_view) (6 samples, 0.04%)</title><rect x="851.9" y="981" width="0.4" height="15.0" fill="rgb(246,73,33)" rx="2" ry="2" />
<text  x="854.85" y="991.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (4 samples, 0.02%)</title><rect x="113.0" y="1301" width="0.3" height="15.0" fill="rgb(216,167,37)" rx="2" ry="2" />
<text  x="115.97" y="1311.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Http::Http1::ConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (1,055 samples, 6.36%)</title><rect x="808.3" y="1189" width="75.1" height="15.0" fill="rgb(246,63,15)" rx="2" ry="2" />
<text  x="811.33" y="1199.5" >virtual ..</text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerUtility::mutateRequestHeaders(Envoy::Http::RequestHeaderMap&amp;, Envoy::Network::Connection&amp;, Envoy::Http::ConnectionManagerConfig&amp;, Envoy::Router::Config const&amp;, Envoy::LocalInfo::LocalInfo const&amp;) (39 samples, 0.24%)</title><rect x="1072.6" y="1029" width="2.8" height="15.0" fill="rgb(254,16,54)" rx="2" ry="2" />
<text  x="1075.59" y="1039.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="506.6" y="1029" width="0.1" height="15.0" fill="rgb(253,65,42)" rx="2" ry="2" />
<text  x="509.59" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 0.54%)</title><rect x="672.3" y="1173" width="6.4" height="15.0" fill="rgb(210,206,12)" rx="2" ry="2" />
<text  x="675.29" y="1183.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="1174.7" y="453" width="0.2" height="15.0" fill="rgb(223,146,50)" rx="2" ry="2" />
<text  x="1177.71" y="463.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ActiveClient::StreamWrapper::~StreamWrapper() (2 samples, 0.01%)</title><rect x="740.1" y="1029" width="0.2" height="15.0" fill="rgb(205,109,30)" rx="2" ry="2" />
<text  x="743.13" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="33.6" y="1125" width="0.3" height="15.0" fill="rgb(207,161,39)" rx="2" ry="2" />
<text  x="36.61" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Logger::Registry::getLog(Envoy::Logger::Id) (2 samples, 0.01%)</title><rect x="1045.1" y="949" width="0.2" height="15.0" fill="rgb(240,4,17)" rx="2" ry="2" />
<text  x="1048.14" y="959.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (110 samples, 0.66%)</title><rect x="1176.2" y="485" width="7.8" height="15.0" fill="rgb(235,224,7)" rx="2" ry="2" />
<text  x="1179.20" y="495.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (3 samples, 0.02%)</title><rect x="644.6" y="1237" width="0.2" height="15.0" fill="rgb(253,37,16)" rx="2" ry="2" />
<text  x="647.55" y="1247.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ThreadSafeArena::~ThreadSafeArena() (2 samples, 0.01%)</title><rect x="1022.3" y="773" width="0.2" height="15.0" fill="rgb(224,215,41)" rx="2" ry="2" />
<text  x="1025.31" y="783.5" ></text>
</g>
<g >
<title>__sched_text_start (86 samples, 0.52%)</title><rect x="952.3" y="1157" width="6.1" height="15.0" fill="rgb(218,204,50)" rx="2" ry="2" />
<text  x="955.26" y="1167.5" ></text>
</g>
<g >
<title>github.com/docker/docker/vendor/github.com/containerd/fifo.(*fifo).Read (581 samples, 3.50%)</title><rect x="129.8" y="1285" width="41.3" height="15.0" fill="rgb(238,101,22)" rx="2" ry="2" />
<text  x="132.83" y="1295.5" >git..</text>
</g>
<g >
<title>Envoy::Registry::FactoryRegistry&lt;Envoy::Router::GenericConnPoolFactory&gt;::checkDeprecated(absl::string_view) (2 samples, 0.01%)</title><rect x="1101.2" y="949" width="0.2" height="15.0" fill="rgb(235,127,7)" rx="2" ry="2" />
<text  x="1104.25" y="959.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::maybeCreateParent(Envoy::StreamInfo::FilterStateImpl::ParentAccessMode) (2 samples, 0.01%)</title><rect x="853.3" y="949" width="0.2" height="15.0" fill="rgb(205,88,46)" rx="2" ry="2" />
<text  x="856.34" y="959.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (4 samples, 0.02%)</title><rect x="905.0" y="949" width="0.3" height="15.0" fill="rgb(248,59,22)" rx="2" ry="2" />
<text  x="908.04" y="959.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (99 samples, 0.60%)</title><rect x="1157.0" y="581" width="7.0" height="15.0" fill="rgb(234,171,3)" rx="2" ry="2" />
<text  x="1160.00" y="591.5" ></text>
</g>
<g >
<title>sock_sendmsg (2 samples, 0.01%)</title><rect x="1168.0" y="1013" width="0.1" height="15.0" fill="rgb(228,139,23)" rx="2" ry="2" />
<text  x="1170.95" y="1023.5" ></text>
</g>
<g >
<title>process_backlog (123 samples, 0.74%)</title><rect x="924.5" y="709" width="8.8" height="15.0" fill="rgb(233,99,21)" rx="2" ry="2" />
<text  x="927.53" y="719.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (2 samples, 0.01%)</title><rect x="1145.7" y="805" width="0.1" height="15.0" fill="rgb(228,131,49)" rx="2" ry="2" />
<text  x="1148.70" y="815.5" ></text>
</g>
<g >
<title>std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, std::__1::__unordered_map_hasher&lt;long, std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, std::__1::hash&lt;long&gt;, std::__1::equal_to&lt;long&gt;, true&gt;, std::__1::__unordered_map_equal&lt;long, std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, std::__1::equal_to&lt;long&gt;, std::__1::hash&lt;long&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt; &gt; &gt;::__node_insert_unique_prepare(unsigned long, std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;&amp;) (3 samples, 0.02%)</title><rect x="1108.3" y="933" width="0.2" height="15.0" fill="rgb(247,150,30)" rx="2" ry="2" />
<text  x="1111.29" y="943.5" ></text>
</g>
<g >
<title>try_to_wake_up (9 samples, 0.05%)</title><rect x="603.4" y="1125" width="0.7" height="15.0" fill="rgb(209,176,16)" rx="2" ry="2" />
<text  x="606.45" y="1135.5" ></text>
</g>
<g >
<title>runtime.systemstack (12 samples, 0.07%)</title><rect x="114.5" y="1349" width="0.9" height="15.0" fill="rgb(236,57,7)" rx="2" ry="2" />
<text  x="117.54" y="1359.5" ></text>
</g>
<g >
<title>local.runtime.resetspinning (35 samples, 0.21%)</title><rect x="173.2" y="1237" width="2.5" height="15.0" fill="rgb(246,175,2)" rx="2" ry="2" />
<text  x="176.21" y="1247.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (6 samples, 0.04%)</title><rect x="1127.6" y="901" width="0.5" height="15.0" fill="rgb(232,38,21)" rx="2" ry="2" />
<text  x="1130.63" y="911.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.01%)</title><rect x="701.6" y="1109" width="0.1" height="15.0" fill="rgb(231,156,36)" rx="2" ry="2" />
<text  x="704.59" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestHeaderMapImpl::create() (12 samples, 0.07%)</title><rect x="811.2" y="1061" width="0.9" height="15.0" fill="rgb(214,85,27)" rx="2" ry="2" />
<text  x="814.25" y="1071.5" ></text>
</g>
<g >
<title>__lock_text_start (9 samples, 0.05%)</title><rect x="603.4" y="1093" width="0.7" height="15.0" fill="rgb(222,191,34)" rx="2" ry="2" />
<text  x="606.45" y="1103.5" ></text>
</g>
<g >
<title>ep_remove (7 samples, 0.04%)</title><rect x="997.6" y="741" width="0.5" height="15.0" fill="rgb(252,58,1)" rx="2" ry="2" />
<text  x="1000.56" y="751.5" ></text>
</g>
<g >
<title>sync.(*Cond).Wait (753 samples, 4.54%)</title><rect x="172.7" y="1317" width="53.6" height="15.0" fill="rgb(237,154,29)" rx="2" ry="2" />
<text  x="175.71" y="1327.5" >sync...</text>
</g>
<g >
<title>schedule (3 samples, 0.02%)</title><rect x="545.7" y="1109" width="0.2" height="15.0" fill="rgb(225,73,22)" rx="2" ry="2" />
<text  x="548.70" y="1119.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (12 samples, 0.07%)</title><rect x="212.6" y="1125" width="0.9" height="15.0" fill="rgb(250,155,25)" rx="2" ry="2" />
<text  x="215.60" y="1135.5" ></text>
</g>
<g >
<title>napi_complete_done (2 samples, 0.01%)</title><rect x="598.1" y="1109" width="0.2" height="15.0" fill="rgb(241,41,17)" rx="2" ry="2" />
<text  x="601.12" y="1119.5" ></text>
</g>
<g >
<title>Envoy::ConnectionPool::ConnPoolImplBase::attachStreamToClient(Envoy::ConnectionPool::ActiveClient&amp;, Envoy::ConnectionPool::AttachContext&amp;) (139 samples, 0.84%)</title><rect x="1086.6" y="949" width="9.9" height="15.0" fill="rgb(245,180,40)" rx="2" ry="2" />
<text  x="1089.60" y="959.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="1156.3" y="597" width="0.1" height="15.0" fill="rgb(226,109,24)" rx="2" ry="2" />
<text  x="1159.29" y="607.5" ></text>
</g>
<g >
<title>get_timespec64 (2 samples, 0.01%)</title><rect x="647.5" y="1237" width="0.2" height="15.0" fill="rgb(231,4,10)" rx="2" ry="2" />
<text  x="650.54" y="1247.5" ></text>
</g>
<g >
<title>github.com/docker/docker/daemon/logger/jsonfilelog/jsonlog.fastTimeMarshalJSON (46 samples, 0.28%)</title><rect x="227.6" y="1253" width="3.3" height="15.0" fill="rgb(239,56,32)" rx="2" ry="2" />
<text  x="230.61" y="1263.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (2 samples, 0.01%)</title><rect x="1164.5" y="549" width="0.1" height="15.0" fill="rgb(236,1,22)" rx="2" ry="2" />
<text  x="1167.47" y="559.5" ></text>
</g>
<g >
<title>ip_route_input_slow (4 samples, 0.02%)</title><rect x="1163.6" y="357" width="0.3" height="15.0" fill="rgb(207,119,25)" rx="2" ry="2" />
<text  x="1166.62" y="367.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::insertByKey(Envoy::Http::HeaderString&amp;&amp;, Envoy::Http::HeaderString&amp;&amp;) (13 samples, 0.08%)</title><rect x="1084.7" y="965" width="0.9" height="15.0" fill="rgb(215,180,9)" rx="2" ry="2" />
<text  x="1087.68" y="975.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::insertByKey(Envoy::Http::HeaderString&amp;&amp;, Envoy::Http::HeaderString&amp;&amp;) (9 samples, 0.05%)</title><rect x="880.5" y="1061" width="0.7" height="15.0" fill="rgb(221,175,50)" rx="2" ry="2" />
<text  x="883.51" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Http::ActiveStreamFilterBase::scope() (2 samples, 0.01%)</title><rect x="718.2" y="997" width="0.1" height="15.0" fill="rgb(253,42,31)" rx="2" ry="2" />
<text  x="721.16" y="1007.5" ></text>
</g>
<g >
<title>__sched_text_start (105 samples, 0.63%)</title><rect x="607.4" y="1125" width="7.4" height="15.0" fill="rgb(228,95,39)" rx="2" ry="2" />
<text  x="610.36" y="1135.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="807.3" y="1045" width="0.2" height="15.0" fill="rgb(248,1,49)" rx="2" ry="2" />
<text  x="810.33" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::readDisable(bool) (61 samples, 0.37%)</title><rect x="996.0" y="901" width="4.3" height="15.0" fill="rgb(211,15,11)" rx="2" ry="2" />
<text  x="999.00" y="911.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketError::getIoSocketEagainInstance() (2 samples, 0.01%)</title><rect x="888.2" y="1173" width="0.1" height="15.0" fill="rgb(231,68,26)" rx="2" ry="2" />
<text  x="891.19" y="1183.5" ></text>
</g>
<g >
<title>google::protobuf::MapValueConstRef::GetMessageValue() const (2 samples, 0.01%)</title><rect x="1027.6" y="773" width="0.1" height="15.0" fill="rgb(222,93,13)" rx="2" ry="2" />
<text  x="1030.57" y="783.5" ></text>
</g>
<g >
<title>schedule (105 samples, 0.63%)</title><rect x="607.4" y="1141" width="7.4" height="15.0" fill="rgb(250,135,28)" rx="2" ry="2" />
<text  x="610.36" y="1151.5" ></text>
</g>
<g >
<title>__x64_sys_futex (164 samples, 0.99%)</title><rect x="84.3" y="1221" width="11.7" height="15.0" fill="rgb(206,186,42)" rx="2" ry="2" />
<text  x="87.31" y="1231.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.01%)</title><rect x="660.1" y="1269" width="0.1" height="15.0" fill="rgb(251,19,42)" rx="2" ry="2" />
<text  x="663.06" y="1279.5" ></text>
</g>
<g >
<title>nf_hook_slow (10 samples, 0.06%)</title><rect x="1158.8" y="181" width="0.7" height="15.0" fill="rgb(246,211,21)" rx="2" ry="2" />
<text  x="1161.78" y="191.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Extensions::Common::Wasm::Context::onDestroy() (7 samples, 0.04%)</title><rect x="1046.3" y="949" width="0.5" height="15.0" fill="rgb(214,124,31)" rx="2" ry="2" />
<text  x="1049.35" y="959.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="641.7" y="1205" width="0.2" height="15.0" fill="rgb(244,18,4)" rx="2" ry="2" />
<text  x="644.71" y="1215.5" ></text>
</g>
<g >
<title>do_syscall_64 (19 samples, 0.11%)</title><rect x="98.7" y="1221" width="1.3" height="15.0" fill="rgb(242,212,12)" rx="2" ry="2" />
<text  x="101.68" y="1231.5" ></text>
</g>
<g >
<title>__x64_sys_futex (147 samples, 0.89%)</title><rect x="606.9" y="1205" width="10.5" height="15.0" fill="rgb(217,7,17)" rx="2" ry="2" />
<text  x="609.93" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Http::ResponseDecoderWrapper::decodeData(Envoy::Buffer::Instance&amp;, bool) (858 samples, 5.17%)</title><rect x="740.3" y="1029" width="61.0" height="15.0" fill="rgb(227,186,10)" rx="2" ry="2" />
<text  x="743.27" y="1039.5" >Envoy:..</text>
</g>
<g >
<title>Envoy::Http::HeaderUtility::isEnvoyInternalRequest(Envoy::Http::RequestHeaderMap const&amp;) (4 samples, 0.02%)</title><rect x="987.4" y="965" width="0.3" height="15.0" fill="rgb(254,171,40)" rx="2" ry="2" />
<text  x="990.40" y="975.5" ></text>
</g>
<g >
<title>Envoy::Upstream::ManagedResourceImpl::inc() (3 samples, 0.02%)</title><rect x="1096.3" y="933" width="0.2" height="15.0" fill="rgb(221,105,14)" rx="2" ry="2" />
<text  x="1099.27" y="943.5" ></text>
</g>
<g >
<title>ip_finish_output2 (367 samples, 2.21%)</title><rect x="562.1" y="837" width="26.1" height="15.0" fill="rgb(223,92,23)" rx="2" ry="2" />
<text  x="565.06" y="847.5" >i..</text>
</g>
<g >
<title>ip_rcv_core.isra.0 (2 samples, 0.01%)</title><rect x="1157.5" y="453" width="0.1" height="15.0" fill="rgb(220,54,25)" rx="2" ry="2" />
<text  x="1160.50" y="463.5" ></text>
</g>
<g >
<title>net_rx_action (157 samples, 0.95%)</title><rect x="1174.2" y="725" width="11.2" height="15.0" fill="rgb(216,147,39)" rx="2" ry="2" />
<text  x="1177.21" y="735.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="1047.8" y="933" width="0.2" height="15.0" fill="rgb(224,150,24)" rx="2" ry="2" />
<text  x="1050.84" y="943.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Filters::Common::Expr::ConnectionWrapper::operator[](google::api::expr::runtime::CelValue) const (2 samples, 0.01%)</title><rect x="772.3" y="789" width="0.2" height="15.0" fill="rgb(231,186,54)" rx="2" ry="2" />
<text  x="775.35" y="799.5" ></text>
</g>
<g >
<title>nf_conntrack_in (3 samples, 0.02%)</title><rect x="561.0" y="821" width="0.2" height="15.0" fill="rgb(205,186,20)" rx="2" ry="2" />
<text  x="563.99" y="831.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (3 samples, 0.02%)</title><rect x="924.0" y="789" width="0.2" height="15.0" fill="rgb(227,120,37)" rx="2" ry="2" />
<text  x="927.03" y="799.5" ></text>
</g>
<g >
<title>finish_task_switch (38 samples, 0.23%)</title><rect x="116.5" y="1141" width="2.7" height="15.0" fill="rgb(218,43,27)" rx="2" ry="2" />
<text  x="119.46" y="1151.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.02%)</title><rect x="657.1" y="1269" width="0.3" height="15.0" fill="rgb(223,193,32)" rx="2" ry="2" />
<text  x="660.14" y="1279.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="746.5" y="917" width="0.1" height="15.0" fill="rgb(238,205,5)" rx="2" ry="2" />
<text  x="749.46" y="927.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (4 samples, 0.02%)</title><rect x="115.1" y="1237" width="0.3" height="15.0" fill="rgb(209,85,10)" rx="2" ry="2" />
<text  x="118.11" y="1247.5" ></text>
</g>
<g >
<title>remove_wait_queue (2 samples, 0.01%)</title><rect x="875.9" y="869" width="0.1" height="15.0" fill="rgb(240,128,33)" rx="2" ry="2" />
<text  x="878.89" y="879.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.02%)</title><rect x="893.3" y="1077" width="0.2" height="15.0" fill="rgb(224,51,41)" rx="2" ry="2" />
<text  x="896.31" y="1087.5" ></text>
</g>
<g >
<title>__libc_cfree (2 samples, 0.01%)</title><rect x="1037.5" y="789" width="0.2" height="15.0" fill="rgb(207,14,25)" rx="2" ry="2" />
<text  x="1040.53" y="799.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.02%)</title><rect x="657.1" y="1221" width="0.3" height="15.0" fill="rgb(205,25,17)" rx="2" ry="2" />
<text  x="660.14" y="1231.5" ></text>
</g>
<g >
<title>vxlan_xmit_one (5 samples, 0.03%)</title><rect x="1161.4" y="245" width="0.4" height="15.0" fill="rgb(205,164,47)" rx="2" ry="2" />
<text  x="1164.41" y="255.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestHeaderMapImpl::inlineHeaders() (4 samples, 0.02%)</title><rect x="1073.3" y="997" width="0.3" height="15.0" fill="rgb(242,82,6)" rx="2" ry="2" />
<text  x="1076.30" y="1007.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Extensions::Common::Wasm::Context::FindValue(absl::string_view, google::protobuf::Arena*) const (7 samples, 0.04%)</title><rect x="787.6" y="741" width="0.5" height="15.0" fill="rgb(217,43,10)" rx="2" ry="2" />
<text  x="790.64" y="751.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Extensions::Common::Wasm::PropertyToken&gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Extensions::Common::Wasm::PropertyToken&gt; &gt; &gt;::iterator absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Extensions::Common::Wasm::PropertyToken&gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Extensions::Common::Wasm::PropertyToken&gt; &gt; &gt;::find&lt;absl::string_view&gt;(absl::string_view const&amp;, unsigned long) (2 samples, 0.01%)</title><rect x="771.5" y="773" width="0.1" height="15.0" fill="rgb(218,96,51)" rx="2" ry="2" />
<text  x="774.49" y="783.5" ></text>
</g>
<g >
<title>aa_label_sk_perm.part.0 (3 samples, 0.02%)</title><rect x="515.3" y="965" width="0.2" height="15.0" fill="rgb(242,35,7)" rx="2" ry="2" />
<text  x="518.27" y="975.5" ></text>
</g>
<g >
<title>nf_conntrack_in (3 samples, 0.02%)</title><rect x="585.7" y="629" width="0.2" height="15.0" fill="rgb(245,51,11)" rx="2" ry="2" />
<text  x="588.67" y="639.5" ></text>
</g>
<g >
<title>sock_write_iter (188 samples, 1.13%)</title><rect x="904.8" y="1045" width="13.3" height="15.0" fill="rgb(213,48,30)" rx="2" ry="2" />
<text  x="907.76" y="1055.5" ></text>
</g>
<g >
<title>udp_gro_receive (2 samples, 0.01%)</title><rect x="484.7" y="709" width="0.1" height="15.0" fill="rgb(218,139,12)" rx="2" ry="2" />
<text  x="487.69" y="719.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="489.7" y="949" width="0.2" height="15.0" fill="rgb(237,35,16)" rx="2" ry="2" />
<text  x="492.74" y="959.5" ></text>
</g>
<g >
<title>__x64_sys_futex (12 samples, 0.07%)</title><rect x="624.6" y="1221" width="0.8" height="15.0" fill="rgb(213,165,53)" rx="2" ry="2" />
<text  x="627.57" y="1231.5" ></text>
</g>
<g >
<title>_copy_to_iter (8 samples, 0.05%)</title><rect x="1144.8" y="933" width="0.6" height="15.0" fill="rgb(231,80,35)" rx="2" ry="2" />
<text  x="1147.84" y="943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (202 samples, 1.22%)</title><rect x="921.8" y="1157" width="14.4" height="15.0" fill="rgb(235,111,53)" rx="2" ry="2" />
<text  x="924.83" y="1167.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::createFilterChain() (61 samples, 0.37%)</title><rect x="1076.7" y="1029" width="4.4" height="15.0" fill="rgb(235,44,5)" rx="2" ry="2" />
<text  x="1079.71" y="1039.5" ></text>
</g>
<g >
<title>ip_finish_output2 (19 samples, 0.11%)</title><rect x="1159.5" y="149" width="1.3" height="15.0" fill="rgb(250,165,31)" rx="2" ry="2" />
<text  x="1162.49" y="159.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::DynamicMap::operator[](google::api::expr::runtime::CelValue) const (3 samples, 0.02%)</title><rect x="786.2" y="741" width="0.2" height="15.0" fill="rgb(232,23,49)" rx="2" ry="2" />
<text  x="789.21" y="751.5" ></text>
</g>
<g >
<title>tcp_write_xmit (199 samples, 1.20%)</title><rect x="1173.0" y="933" width="14.2" height="15.0" fill="rgb(233,120,51)" rx="2" ry="2" />
<text  x="1176.00" y="943.5" ></text>
</g>
<g >
<title>void std::__1::vector&lt;Envoy::Extensions::Tracers::Zipkin::Annotation, std::__1::allocator&lt;Envoy::Extensions::Tracers::Zipkin::Annotation&gt; &gt;::__push_back_slow_path&lt;Envoy::Extensions::Tracers::Zipkin::Annotation&gt;(Envoy::Extensions::Tracers::Zipkin::Annotation&amp;&amp;) (2 samples, 0.01%)</title><rect x="759.3" y="917" width="0.2" height="15.0" fill="rgb(251,55,34)" rx="2" ry="2" />
<text  x="762.33" y="927.5" ></text>
</g>
<g >
<title>kjournald2 (2 samples, 0.01%)</title><rect x="659.0" y="1333" width="0.1" height="15.0" fill="rgb(236,44,11)" rx="2" ry="2" />
<text  x="661.99" y="1343.5" ></text>
</g>
<g >
<title>Envoy::Http::CodecClient::responsePreDecodeComplete(Envoy::Http::CodecClient::ActiveRequest&amp;) (10 samples, 0.06%)</title><rect x="992.4" y="1029" width="0.7" height="15.0" fill="rgb(214,222,44)" rx="2" ry="2" />
<text  x="995.37" y="1039.5" ></text>
</g>
<g >
<title>wake_up_q (5 samples, 0.03%)</title><rect x="438.3" y="901" width="0.3" height="15.0" fill="rgb(231,129,34)" rx="2" ry="2" />
<text  x="441.25" y="911.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="490.0" y="1013" width="0.2" height="15.0" fill="rgb(214,39,9)" rx="2" ry="2" />
<text  x="493.02" y="1023.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Extensions::HttpFilters::Wasm::WasmFilterConfig::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::wasm::v3::Wasm const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0, std::__1::allocator&lt;Envoy::Extensions::HttpFilters::Wasm::WasmFilterConfig::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::wasm::v3::Wasm const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0&gt;, void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt;::__clone(std::__1::__function::__base&lt;void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt;*) const (3 samples, 0.02%)</title><rect x="828.2" y="981" width="0.2" height="15.0" fill="rgb(221,227,31)" rx="2" ry="2" />
<text  x="831.17" y="991.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::getDataReadOnlyGeneric(absl::string_view) const (2 samples, 0.01%)</title><rect x="847.3" y="965" width="0.1" height="15.0" fill="rgb(232,182,10)" rx="2" ry="2" />
<text  x="850.30" y="975.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::OwnedImplReservationSlicesOwnerMultiple::~OwnedImplReservationSlicesOwnerMultiple() (12 samples, 0.07%)</title><rect x="884.9" y="1157" width="0.9" height="15.0" fill="rgb(214,160,24)" rx="2" ry="2" />
<text  x="887.92" y="1167.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (4 samples, 0.02%)</title><rect x="62.3" y="1157" width="0.3" height="15.0" fill="rgb(223,195,28)" rx="2" ry="2" />
<text  x="65.27" y="1167.5" ></text>
</g>
<g >
<title>br_nf_pre_routing_finish (84 samples, 0.51%)</title><rect x="908.2" y="613" width="6.0" height="15.0" fill="rgb(248,100,11)" rx="2" ry="2" />
<text  x="911.25" y="623.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ActiveClient::StreamWrapper::~StreamWrapper() (27 samples, 0.16%)</title><rect x="993.3" y="1013" width="1.9" height="15.0" fill="rgb(244,192,42)" rx="2" ry="2" />
<text  x="996.30" y="1023.5" ></text>
</g>
<g >
<title>start_thread (3,549 samples, 21.39%)</title><rect x="685.4" y="1365" width="252.4" height="15.0" fill="rgb(222,71,12)" rx="2" ry="2" />
<text  x="688.37" y="1375.5" >start_thread</text>
</g>
<g >
<title>__sched_text_start (2 samples, 0.01%)</title><rect x="598.5" y="1093" width="0.1" height="15.0" fill="rgb(206,202,29)" rx="2" ry="2" />
<text  x="601.47" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (5 samples, 0.03%)</title><rect x="1124.6" y="901" width="0.3" height="15.0" fill="rgb(221,156,17)" rx="2" ry="2" />
<text  x="1127.57" y="911.5" ></text>
</g>
<g >
<title>ext4_write_checks (3 samples, 0.02%)</title><rect x="246.5" y="1125" width="0.2" height="15.0" fill="rgb(246,142,50)" rx="2" ry="2" />
<text  x="249.46" y="1135.5" ></text>
</g>
<g >
<title>sock_read_iter (2 samples, 0.01%)</title><rect x="894.2" y="1029" width="0.2" height="15.0" fill="rgb(243,177,33)" rx="2" ry="2" />
<text  x="897.24" y="1039.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="438.8" y="933" width="0.2" height="15.0" fill="rgb(254,214,18)" rx="2" ry="2" />
<text  x="441.82" y="943.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelProtoWrapper::CreateMessage(google::protobuf::Message const*, google::protobuf::Arena*) (3 samples, 0.02%)</title><rect x="775.1" y="757" width="0.2" height="15.0" fill="rgb(211,142,34)" rx="2" ry="2" />
<text  x="778.12" y="767.5" ></text>
</g>
<g >
<title>schedule (40 samples, 0.24%)</title><rect x="619.4" y="1029" width="2.8" height="15.0" fill="rgb(242,122,41)" rx="2" ry="2" />
<text  x="622.38" y="1039.5" ></text>
</g>
<g >
<title>sock_poll (4 samples, 0.02%)</title><rect x="878.4" y="885" width="0.3" height="15.0" fill="rgb(222,225,28)" rx="2" ry="2" />
<text  x="881.38" y="895.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.0 (4 samples, 0.02%)</title><rect x="997.8" y="725" width="0.3" height="15.0" fill="rgb(233,163,31)" rx="2" ry="2" />
<text  x="1000.78" y="735.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (8 samples, 0.05%)</title><rect x="1144.8" y="949" width="0.6" height="15.0" fill="rgb(250,45,43)" rx="2" ry="2" />
<text  x="1147.84" y="959.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::~Context() (7 samples, 0.04%)</title><rect x="705.5" y="1205" width="0.5" height="15.0" fill="rgb(254,9,43)" rx="2" ry="2" />
<text  x="708.50" y="1215.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (2 samples, 0.01%)</title><rect x="894.8" y="997" width="0.1" height="15.0" fill="rgb(213,201,6)" rx="2" ry="2" />
<text  x="897.80" y="1007.5" ></text>
</g>
<g >
<title>finish_task_switch (104 samples, 0.63%)</title><rect x="694.2" y="1125" width="7.4" height="15.0" fill="rgb(238,202,11)" rx="2" ry="2" />
<text  x="697.19" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Extensions::NetworkFilters::HttpConnectionManager::HttpConnectionManagerConfig::createFilterChainForFactories(Envoy::Http::FilterChainFactoryCallbacks&amp;, std::__1::list&lt;std::__1::unique_ptr&lt;Envoy::Config::ExtensionConfigProvider&lt;Envoy::Server::Configuration::NamedHttpFilterConfigFactory, std::__1::function&lt;void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt; &gt;, std::__1::default_delete&lt;Envoy::Config::ExtensionConfigProvider&lt;Envoy::Server::Configuration::NamedHttpFilterConfigFactory, std::__1::function&lt;void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt; &gt; &gt; &gt;, std::__1::allocator&lt;std::__1::unique_ptr&lt;Envoy::Config::ExtensionConfigProvider&lt;Envoy::Server::Configuration::NamedHttpFilterConfigFactory, std::__1::function&lt;void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt; &gt;, std::__1::default_delete&lt;Envoy::Config::ExtensionConfigProvider&lt;Envoy::Server::Configuration::NamedHttpFilterConfigFactory, std::__1::function&lt;void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt; &gt; &gt; &gt; &gt; &gt; const&amp;) (58 samples, 0.35%)</title><rect x="1076.8" y="1013" width="4.1" height="15.0" fill="rgb(242,197,54)" rx="2" ry="2" />
<text  x="1079.79" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Router::RetryStateImpl::create(Envoy::Router::RetryPolicy const&amp;, Envoy::Http::RequestHeaderMap&amp;, Envoy::Upstream::ClusterInfo const&amp;, Envoy::Router::VirtualCluster const*, Envoy::Runtime::Loader&amp;, Envoy::Random::RandomGenerator&amp;, Envoy::Event::Dispatcher&amp;, Envoy::TimeSource&amp;, Envoy::Upstream::ResourcePriority) (4 samples, 0.02%)</title><rect x="852.5" y="981" width="0.3" height="15.0" fill="rgb(207,46,40)" rx="2" ry="2" />
<text  x="855.49" y="991.5" ></text>
</g>
<g >
<title>__lock_text_start (169 samples, 1.02%)</title><rect x="63.2" y="1061" width="12.0" height="15.0" fill="rgb(217,177,8)" rx="2" ry="2" />
<text  x="66.19" y="1071.5" ></text>
</g>
<g >
<title>try_to_wake_up (34 samples, 0.20%)</title><rect x="614.9" y="1141" width="2.4" height="15.0" fill="rgb(236,59,34)" rx="2" ry="2" />
<text  x="617.90" y="1151.5" ></text>
</g>
<g >
<title>futex_wake (6 samples, 0.04%)</title><rect x="437.8" y="869" width="0.4" height="15.0" fill="rgb(213,75,54)" rx="2" ry="2" />
<text  x="440.75" y="879.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="1131.5" y="917" width="0.2" height="15.0" fill="rgb(239,107,3)" rx="2" ry="2" />
<text  x="1134.54" y="927.5" ></text>
</g>
<g >
<title>Envoy::Http::ActiveStreamDecoderFilter::createBuffer() (6 samples, 0.04%)</title><rect x="871.2" y="1013" width="0.4" height="15.0" fill="rgb(221,151,28)" rx="2" ry="2" />
<text  x="874.19" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="936.0" y="1125" width="0.2" height="15.0" fill="rgb(205,225,15)" rx="2" ry="2" />
<text  x="938.98" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::ResponseHeaderMap&gt;::iterate(std::__1::function&lt;Envoy::Http::HeaderMap::Iterate (Envoy::Http::HeaderEntry const&amp;)&gt;) const (16 samples, 0.10%)</title><rect x="976.6" y="917" width="1.1" height="15.0" fill="rgb(246,183,13)" rx="2" ry="2" />
<text  x="979.59" y="927.5" ></text>
</g>
<g >
<title>sock_poll (2 samples, 0.01%)</title><rect x="645.7" y="1141" width="0.1" height="15.0" fill="rgb(214,48,22)" rx="2" ry="2" />
<text  x="648.69" y="1151.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_in (2 samples, 0.01%)</title><rect x="585.3" y="645" width="0.2" height="15.0" fill="rgb(252,106,15)" rx="2" ry="2" />
<text  x="588.31" y="655.5" ></text>
</g>
<g >
<title>__lock_text_start (15 samples, 0.09%)</title><rect x="101.0" y="1173" width="1.0" height="15.0" fill="rgb(248,215,33)" rx="2" ry="2" />
<text  x="103.96" y="1183.5" ></text>
</g>
<g >
<title>__lock_text_start (110 samples, 0.66%)</title><rect x="1176.2" y="469" width="7.8" height="15.0" fill="rgb(212,129,10)" rx="2" ry="2" />
<text  x="1179.20" y="479.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::commit(unsigned long, absl::Span&lt;Envoy::Buffer::RawSlice&gt;, std::__1::unique_ptr&lt;Envoy::Buffer::ReservationSlicesOwner, std::__1::default_delete&lt;Envoy::Buffer::ReservationSlicesOwner&gt; &gt;) (4 samples, 0.02%)</title><rect x="885.8" y="1157" width="0.3" height="15.0" fill="rgb(253,218,24)" rx="2" ry="2" />
<text  x="888.77" y="1167.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::completeLastHeader() (24 samples, 0.14%)</title><rect x="804.6" y="1061" width="1.7" height="15.0" fill="rgb(223,88,4)" rx="2" ry="2" />
<text  x="807.56" y="1071.5" ></text>
</g>
<g >
<title>ep_remove (2 samples, 0.01%)</title><rect x="1125.1" y="885" width="0.1" height="15.0" fill="rgb(237,117,11)" rx="2" ry="2" />
<text  x="1128.07" y="895.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::add(absl::string_view) (2 samples, 0.01%)</title><rect x="839.6" y="741" width="0.2" height="15.0" fill="rgb(207,143,46)" rx="2" ry="2" />
<text  x="842.62" y="751.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::completeRequest() (163 samples, 0.98%)</title><rect x="748.5" y="949" width="11.6" height="15.0" fill="rgb(210,27,51)" rx="2" ry="2" />
<text  x="751.52" y="959.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestHeaderMapImpl::setByReferenceKey(absl::string_view, absl::string_view) (19 samples, 0.11%)</title><rect x="834.8" y="981" width="1.3" height="15.0" fill="rgb(253,17,50)" rx="2" ry="2" />
<text  x="837.78" y="991.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (2 samples, 0.01%)</title><rect x="1156.3" y="469" width="0.1" height="15.0" fill="rgb(219,189,39)" rx="2" ry="2" />
<text  x="1159.29" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (12 samples, 0.07%)</title><rect x="1124.6" y="917" width="0.8" height="15.0" fill="rgb(233,47,50)" rx="2" ry="2" />
<text  x="1127.57" y="927.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (2 samples, 0.01%)</title><rect x="878.4" y="869" width="0.1" height="15.0" fill="rgb(206,75,28)" rx="2" ry="2" />
<text  x="881.38" y="879.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ResponseHeaderMapImpl::EnvoyImmediateHealthCheckFail() const (2 samples, 0.01%)</title><rect x="990.0" y="997" width="0.2" height="15.0" fill="rgb(242,86,44)" rx="2" ry="2" />
<text  x="993.03" y="1007.5" ></text>
</g>
<g >
<title>google::protobuf::FileDescriptorTables::FindNestedSymbol(void const*, google::protobuf::stringpiece_internal::StringPiece) const (3 samples, 0.02%)</title><rect x="1040.2" y="725" width="0.2" height="15.0" fill="rgb(208,107,51)" rx="2" ry="2" />
<text  x="1043.16" y="735.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (247 samples, 1.49%)</title><rect x="566.3" y="517" width="17.6" height="15.0" fill="rgb(249,220,52)" rx="2" ry="2" />
<text  x="569.33" y="527.5" ></text>
</g>
<g >
<title>veth_xmit (2 samples, 0.01%)</title><rect x="1166.0" y="725" width="0.1" height="15.0" fill="rgb(215,204,16)" rx="2" ry="2" />
<text  x="1168.96" y="735.5" ></text>
</g>
<g >
<title>Envoy::ThreadLocal::InstanceImpl::SlotImpl::get() (2 samples, 0.01%)</title><rect x="754.9" y="869" width="0.1" height="15.0" fill="rgb(206,18,32)" rx="2" ry="2" />
<text  x="757.85" y="879.5" ></text>
</g>
<g >
<title>local.runtime.usleep (17 samples, 0.10%)</title><rect x="212.2" y="1189" width="1.3" height="15.0" fill="rgb(205,172,20)" rx="2" ry="2" />
<text  x="215.25" y="1199.5" ></text>
</g>
<g >
<title>Envoy::Tracing::MetadataCustomTag::metadata(Envoy::Tracing::CustomTagContext const&amp;) const (2 samples, 0.01%)</title><rect x="1010.9" y="901" width="0.1" height="15.0" fill="rgb(251,43,43)" rx="2" ry="2" />
<text  x="1013.86" y="911.5" ></text>
</g>
<g >
<title>local.runtime.lock2 (2 samples, 0.01%)</title><rect x="200.4" y="1221" width="0.2" height="15.0" fill="rgb(238,73,38)" rx="2" ry="2" />
<text  x="203.44" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerUtility::cleanInternalHeaders(Envoy::Http::RequestHeaderMap&amp;, bool, std::__1::list&lt;Envoy::Http::LowerCaseString, std::__1::allocator&lt;Envoy::Http::LowerCaseString&gt; &gt; const&amp;) (9 samples, 0.05%)</title><rect x="1073.2" y="1013" width="0.7" height="15.0" fill="rgb(232,103,46)" rx="2" ry="2" />
<text  x="1076.23" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderUtility::checkRequiredResponseHeaders(Envoy::Http::ResponseHeaderMap const&amp;) (3 samples, 0.02%)</title><rect x="726.8" y="965" width="0.2" height="15.0" fill="rgb(220,81,28)" rx="2" ry="2" />
<text  x="729.83" y="975.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (10 samples, 0.06%)</title><rect x="558.4" y="933" width="0.7" height="15.0" fill="rgb(249,219,30)" rx="2" ry="2" />
<text  x="561.43" y="943.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (3 samples, 0.02%)</title><rect x="692.9" y="1125" width="0.2" height="15.0" fill="rgb(241,55,44)" rx="2" ry="2" />
<text  x="695.91" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Filter::StaticFilterConfigProviderImpl::config() (3 samples, 0.02%)</title><rect x="1076.9" y="997" width="0.2" height="15.0" fill="rgb(251,160,32)" rx="2" ry="2" />
<text  x="1079.86" y="1007.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.01%)</title><rect x="598.5" y="1077" width="0.1" height="15.0" fill="rgb(240,214,11)" rx="2" ry="2" />
<text  x="601.47" y="1087.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (3 samples, 0.02%)</title><rect x="896.6" y="933" width="0.2" height="15.0" fill="rgb(219,174,48)" rx="2" ry="2" />
<text  x="899.58" y="943.5" ></text>
</g>
<g >
<title>__ip_local_out (11 samples, 0.07%)</title><rect x="906.1" y="853" width="0.8" height="15.0" fill="rgb(241,194,2)" rx="2" ry="2" />
<text  x="909.11" y="863.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onHeaderField(char const*, unsigned long) (13 samples, 0.08%)</title><rect x="1129.5" y="1093" width="0.9" height="15.0" fill="rgb(236,124,28)" rx="2" ry="2" />
<text  x="1132.48" y="1103.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="623.4" y="997" width="0.2" height="15.0" fill="rgb(240,152,12)" rx="2" ry="2" />
<text  x="626.43" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderUtility::shouldCloseConnection(Envoy::Http::Protocol, Envoy::Http::RequestOrResponseHeaderMap const&amp;) (2 samples, 0.01%)</title><rect x="717.6" y="1013" width="0.1" height="15.0" fill="rgb(228,112,15)" rx="2" ry="2" />
<text  x="720.59" y="1023.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="828.6" y="949" width="0.1" height="15.0" fill="rgb(212,143,20)" rx="2" ry="2" />
<text  x="831.60" y="959.5" ></text>
</g>
<g >
<title>pipe_poll (5 samples, 0.03%)</title><rect x="197.5" y="1061" width="0.3" height="15.0" fill="rgb(232,107,15)" rx="2" ry="2" />
<text  x="200.46" y="1071.5" ></text>
</g>
<g >
<title>hrtimer_sleeper_start_expires (4 samples, 0.02%)</title><rect x="84.5" y="1157" width="0.2" height="15.0" fill="rgb(232,198,19)" rx="2" ry="2" />
<text  x="87.46" y="1167.5" ></text>
</g>
<g >
<title>futex_wake (7 samples, 0.04%)</title><rect x="496.4" y="997" width="0.4" height="15.0" fill="rgb(216,100,2)" rx="2" ry="2" />
<text  x="499.35" y="1007.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (5 samples, 0.03%)</title><rect x="645.5" y="1205" width="0.4" height="15.0" fill="rgb(245,35,11)" rx="2" ry="2" />
<text  x="648.55" y="1215.5" ></text>
</g>
<g >
<title>std::__1::pair&lt;unsigned long, bool&gt; absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::shared_ptr&lt;Envoy::Tracing::CustomTag const&gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::shared_ptr&lt;Envoy::Tracing::CustomTag const&gt; &gt; &gt; &gt;::find_or_prepare_insert&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) (16 samples, 0.10%)</title><rect x="817.5" y="981" width="1.1" height="15.0" fill="rgb(232,29,25)" rx="2" ry="2" />
<text  x="820.50" y="991.5" ></text>
</g>
<g >
<title>google::protobuf::FileDescriptorTables::FindNestedSymbol(void const*, google::protobuf::stringpiece_internal::StringPiece) const (4 samples, 0.02%)</title><rect x="1027.1" y="725" width="0.3" height="15.0" fill="rgb(210,189,4)" rx="2" ry="2" />
<text  x="1030.08" y="735.5" ></text>
</g>
<g >
<title>skb_entail (2 samples, 0.01%)</title><rect x="923.0" y="949" width="0.1" height="15.0" fill="rgb(242,164,27)" rx="2" ry="2" />
<text  x="925.97" y="959.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.02%)</title><rect x="657.1" y="1253" width="0.3" height="15.0" fill="rgb(219,126,6)" rx="2" ry="2" />
<text  x="660.14" y="1263.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.01%)</title><rect x="506.6" y="1077" width="0.1" height="15.0" fill="rgb(242,33,52)" rx="2" ry="2" />
<text  x="509.59" y="1087.5" ></text>
</g>
<g >
<title>kthread (2 samples, 0.01%)</title><rect x="679.3" y="1349" width="0.1" height="15.0" fill="rgb(207,29,41)" rx="2" ry="2" />
<text  x="682.26" y="1359.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::getDataReadOnlyGeneric(absl::string_view) const (3 samples, 0.02%)</title><rect x="1016.3" y="789" width="0.2" height="15.0" fill="rgb(213,41,44)" rx="2" ry="2" />
<text  x="1019.27" y="799.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ActiveStreamDecoderFilter::encodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool, absl::string_view) (5 samples, 0.03%)</title><rect x="734.5" y="981" width="0.4" height="15.0" fill="rgb(234,17,21)" rx="2" ry="2" />
<text  x="737.51" y="991.5" ></text>
</g>
<g >
<title>std::__1::__murmur2_or_cityhash&lt;unsigned long, 64ul&gt;::__hash_len_0_to_16(char const*, unsigned long) (2 samples, 0.01%)</title><rect x="1043.6" y="837" width="0.1" height="15.0" fill="rgb(205,78,10)" rx="2" ry="2" />
<text  x="1046.58" y="847.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (2 samples, 0.01%)</title><rect x="618.9" y="1077" width="0.1" height="15.0" fill="rgb(240,47,4)" rx="2" ry="2" />
<text  x="621.88" y="1087.5" ></text>
</g>
<g >
<title>__lock_text_start (353 samples, 2.13%)</title><rect x="459.5" y="885" width="25.1" height="15.0" fill="rgb(235,54,10)" rx="2" ry="2" />
<text  x="462.51" y="895.5" >_..</text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (2 samples, 0.01%)</title><rect x="246.2" y="1093" width="0.2" height="15.0" fill="rgb(227,171,25)" rx="2" ry="2" />
<text  x="249.24" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Router::InternalRedirectPolicyImpl::enabled() const (2 samples, 0.01%)</title><rect x="1118.7" y="1029" width="0.1" height="15.0" fill="rgb(222,166,43)" rx="2" ry="2" />
<text  x="1121.67" y="1039.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (30 samples, 0.18%)</title><rect x="691.3" y="1205" width="2.2" height="15.0" fill="rgb(239,15,13)" rx="2" ry="2" />
<text  x="694.35" y="1215.5" ></text>
</g>
<g >
<title>futex_wake (10 samples, 0.06%)</title><rect x="603.4" y="1157" width="0.7" height="15.0" fill="rgb(219,133,19)" rx="2" ry="2" />
<text  x="606.38" y="1167.5" ></text>
</g>
<g >
<title>local.internal/poll.runtime_pollWait (66 samples, 0.40%)</title><rect x="130.8" y="1221" width="4.6" height="15.0" fill="rgb(233,72,32)" rx="2" ry="2" />
<text  x="133.75" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Upstream::ManagedResourceImpl::decBy(unsigned long) (8 samples, 0.05%)</title><rect x="994.2" y="981" width="0.5" height="15.0" fill="rgb(247,50,50)" rx="2" ry="2" />
<text  x="997.15" y="991.5" ></text>
</g>
<g >
<title>Envoy::Upstream::HostDescriptionImpl::transportSocketFactory() const (4 samples, 0.02%)</title><rect x="849.7" y="917" width="0.3" height="15.0" fill="rgb(227,152,37)" rx="2" ry="2" />
<text  x="852.72" y="927.5" ></text>
</g>
<g >
<title>proxy_wasm::WasmBase::getForeignFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;) (3 samples, 0.02%)</title><rect x="784.2" y="837" width="0.2" height="15.0" fill="rgb(207,218,12)" rx="2" ry="2" />
<text  x="787.22" y="847.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (4 samples, 0.02%)</title><rect x="999.3" y="741" width="0.3" height="15.0" fill="rgb(240,10,2)" rx="2" ry="2" />
<text  x="1002.27" y="751.5" ></text>
</g>
<g >
<title>Envoy::Http::PathUtil::canonicalPath(Envoy::Http::RequestHeaderMap&amp;) (6 samples, 0.04%)</title><rect x="823.9" y="1013" width="0.4" height="15.0" fill="rgb(221,229,1)" rx="2" ry="2" />
<text  x="826.90" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::StaticLookupTable&lt;Envoy::Http::RequestHeaderMap&gt;::lookup(Envoy::Http::HeaderMapImpl&amp;, absl::string_view) (4 samples, 0.02%)</title><rect x="1075.0" y="965" width="0.3" height="15.0" fill="rgb(250,139,46)" rx="2" ry="2" />
<text  x="1078.01" y="975.5" ></text>
</g>
<g >
<title>Envoy::Event::ScaledRangeTimerManagerImpl::RangeTimerImpl::disableTimer() (3 samples, 0.02%)</title><rect x="1061.6" y="1045" width="0.2" height="15.0" fill="rgb(221,174,32)" rx="2" ry="2" />
<text  x="1064.57" y="1055.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::WriteMessage(google::protobuf::Type const&amp;, google::protobuf::stringpiece_internal::StringPiece, unsigned int, bool, google::protobuf::util::converter::ObjectWriter*) const (8 samples, 0.05%)</title><rect x="751.2" y="789" width="0.5" height="15.0" fill="rgb(211,151,12)" rx="2" ry="2" />
<text  x="754.15" y="799.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onWriteReady() (234 samples, 1.41%)</title><rect x="902.4" y="1237" width="16.7" height="15.0" fill="rgb(239,130,49)" rx="2" ry="2" />
<text  x="905.41" y="1247.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::shared_ptr&lt;Envoy::Tracing::CustomTag const&gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::shared_ptr&lt;Envoy::Tracing::CustomTag const&gt; &gt; &gt; &gt;::resize(unsigned long) (5 samples, 0.03%)</title><rect x="1067.1" y="949" width="0.4" height="15.0" fill="rgb(240,132,33)" rx="2" ry="2" />
<text  x="1070.11" y="959.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::operator=(Envoy::Buffer::Slice&amp;&amp;) (4 samples, 0.02%)</title><rect x="1152.7" y="1157" width="0.2" height="15.0" fill="rgb(211,1,22)" rx="2" ry="2" />
<text  x="1155.66" y="1167.5" ></text>
</g>
<g >
<title>local.runtime.acquirep (3 samples, 0.02%)</title><rect x="213.5" y="1205" width="0.2" height="15.0" fill="rgb(235,180,14)" rx="2" ry="2" />
<text  x="216.46" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="672.5" y="1061" width="0.3" height="15.0" fill="rgb(234,225,18)" rx="2" ry="2" />
<text  x="675.50" y="1071.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (5 samples, 0.03%)</title><rect x="745.1" y="741" width="0.4" height="15.0" fill="rgb(233,158,4)" rx="2" ry="2" />
<text  x="748.11" y="751.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::onMessageBeginBase() (33 samples, 0.20%)</title><rect x="812.1" y="1061" width="2.3" height="15.0" fill="rgb(244,219,37)" rx="2" ry="2" />
<text  x="815.10" y="1071.5" ></text>
</g>
<g >
<title>nf_hook_slow (3 samples, 0.02%)</title><rect x="912.6" y="405" width="0.2" height="15.0" fill="rgb(239,167,27)" rx="2" ry="2" />
<text  x="915.58" y="415.5" ></text>
</g>
<g >
<title>ip_forward_finish (59 samples, 0.36%)</title><rect x="1158.0" y="405" width="4.2" height="15.0" fill="rgb(232,139,47)" rx="2" ry="2" />
<text  x="1161.00" y="415.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.01%)</title><rect x="701.6" y="1125" width="0.1" height="15.0" fill="rgb(253,224,40)" rx="2" ry="2" />
<text  x="704.59" y="1135.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::unique_ptr&lt;Envoy::StreamInfo::FilterStateImpl::FilterObject, std::__1::default_delete&lt;Envoy::StreamInfo::FilterStateImpl::FilterObject&gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::unique_ptr&lt;Envoy::StreamInfo::FilterStateImpl::FilterObject, std::__1::default_delete&lt;Envoy::StreamInfo::FilterStateImpl::FilterObject&gt; &gt; &gt; &gt; &gt;::iterator absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::unique_ptr&lt;Envoy::StreamInfo::FilterStateImpl::FilterObject, std::__1::default_delete&lt;Envoy::StreamInfo::FilterStateImpl::FilterObject&gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::unique_ptr&lt;Envoy::StreamInfo::FilterStateImpl::FilterObject, std::__1::default_delete&lt;Envoy::StreamInfo::FilterStateImpl::FilterObject&gt; &gt; &gt; &gt; &gt;::find&lt;absl::string_view&gt;(absl::string_view const&amp;, unsigned long) (2 samples, 0.01%)</title><rect x="847.7" y="949" width="0.1" height="15.0" fill="rgb(234,152,48)" rx="2" ry="2" />
<text  x="850.66" y="959.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).Unlock (4 samples, 0.02%)</title><rect x="249.5" y="1301" width="0.3" height="15.0" fill="rgb(245,57,24)" rx="2" ry="2" />
<text  x="252.51" y="1311.5" ></text>
</g>
<g >
<title>futex_wake (12 samples, 0.07%)</title><rect x="169.4" y="1077" width="0.8" height="15.0" fill="rgb(207,189,30)" rx="2" ry="2" />
<text  x="172.37" y="1087.5" ></text>
</g>
<g >
<title>[Missed User Stack] (15 samples, 0.09%)</title><rect x="680.0" y="1365" width="1.0" height="15.0" fill="rgb(235,204,0)" rx="2" ry="2" />
<text  x="682.97" y="1375.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::~StreamInfoImpl() (4 samples, 0.02%)</title><rect x="707.6" y="1221" width="0.3" height="15.0" fill="rgb(239,28,22)" rx="2" ry="2" />
<text  x="710.63" y="1231.5" ></text>
</g>
<g >
<title>touch_atime (2 samples, 0.01%)</title><rect x="166.8" y="1093" width="0.1" height="15.0" fill="rgb(221,228,47)" rx="2" ry="2" />
<text  x="169.81" y="1103.5" ></text>
</g>
<g >
<title>do_nanosleep (168 samples, 1.01%)</title><rect x="100.7" y="1221" width="12.0" height="15.0" fill="rgb(245,90,15)" rx="2" ry="2" />
<text  x="103.74" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::encodeData(Envoy::Buffer::Instance&amp;, bool) (15 samples, 0.09%)</title><rect x="1052.3" y="997" width="1.1" height="15.0" fill="rgb(212,96,8)" rx="2" ry="2" />
<text  x="1055.32" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::chargeUpstreamCode(unsigned long, Envoy::Http::ResponseHeaderMap const&amp;, std::__1::shared_ptr&lt;Envoy::Upstream::HostDescription const&gt;, bool) (51 samples, 0.31%)</title><rect x="730.7" y="981" width="3.6" height="15.0" fill="rgb(224,125,2)" rx="2" ry="2" />
<text  x="733.67" y="991.5" ></text>
</g>
<g >
<title>Envoy::Http::ActiveStreamFilterBase::commonHandleAfterDataCallback(Envoy::Http::FilterDataStatus, Envoy::Buffer::Instance&amp;, bool&amp;) (4 samples, 0.02%)</title><rect x="1121.0" y="1029" width="0.3" height="15.0" fill="rgb(219,150,40)" rx="2" ry="2" />
<text  x="1124.02" y="1039.5" ></text>
</g>
<g >
<title>finish_task_switch (8 samples, 0.05%)</title><rect x="624.8" y="1125" width="0.6" height="15.0" fill="rgb(252,205,40)" rx="2" ry="2" />
<text  x="627.78" y="1135.5" ></text>
</g>
<g >
<title>futex_wake (5 samples, 0.03%)</title><rect x="438.3" y="917" width="0.3" height="15.0" fill="rgb(217,75,51)" rx="2" ry="2" />
<text  x="441.25" y="927.5" ></text>
</g>
<g >
<title>absl::string_view::find_first_not_of(absl::string_view, unsigned long) const (4 samples, 0.02%)</title><rect x="1130.6" y="1061" width="0.3" height="15.0" fill="rgb(215,155,5)" rx="2" ry="2" />
<text  x="1133.62" y="1071.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.02%)</title><rect x="641.7" y="1253" width="0.2" height="15.0" fill="rgb(228,182,28)" rx="2" ry="2" />
<text  x="644.71" y="1263.5" ></text>
</g>
<g >
<title>handle_mm_fault (6 samples, 0.04%)</title><rect x="539.7" y="1109" width="0.4" height="15.0" fill="rgb(240,139,1)" rx="2" ry="2" />
<text  x="542.66" y="1119.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Router::Filter::decodeHeaders(Envoy::Http::RequestHeaderMap&amp;, bool)::$_0, std::__1::allocator&lt;Envoy::Router::Filter::decodeHeaders(Envoy::Http::RequestHeaderMap&amp;, bool)::$_0&gt;, void (Envoy::Http::ResponseHeaderMap&amp;)&gt;::destroy() (2 samples, 0.01%)</title><rect x="707.1" y="1205" width="0.1" height="15.0" fill="rgb(226,141,44)" rx="2" ry="2" />
<text  x="710.06" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Network::TransportSocketOptionsImpl::~TransportSocketOptionsImpl() (2 samples, 0.01%)</title><rect x="961.8" y="1189" width="0.1" height="15.0" fill="rgb(245,142,43)" rx="2" ry="2" />
<text  x="964.79" y="1199.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (3 samples, 0.02%)</title><rect x="914.4" y="565" width="0.2" height="15.0" fill="rgb(248,18,22)" rx="2" ry="2" />
<text  x="917.43" y="575.5" ></text>
</g>
<g >
<title>std::__1::pair&lt;unsigned long, bool&gt; absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;absl::string_view, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;absl::string_view const, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt; &gt; &gt;::find_or_prepare_insert&lt;absl::string_view&gt;(absl::string_view const&amp;) (6 samples, 0.04%)</title><rect x="821.3" y="901" width="0.5" height="15.0" fill="rgb(248,201,36)" rx="2" ry="2" />
<text  x="824.34" y="911.5" ></text>
</g>
<g >
<title>vxlan_xmit_one (2 samples, 0.01%)</title><rect x="911.8" y="245" width="0.1" height="15.0" fill="rgb(240,17,39)" rx="2" ry="2" />
<text  x="914.80" y="255.5" ></text>
</g>
<g >
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="906.4" y="837" width="0.4" height="15.0" fill="rgb(224,11,18)" rx="2" ry="2" />
<text  x="909.40" y="847.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="1174.7" y="469" width="0.2" height="15.0" fill="rgb(251,75,31)" rx="2" ry="2" />
<text  x="1177.71" y="479.5" ></text>
</g>
<g >
<title>Envoy::Runtime::LoaderImpl::threadsafeSnapshot() (4 samples, 0.02%)</title><rect x="811.5" y="1013" width="0.3" height="15.0" fill="rgb(219,58,21)" rx="2" ry="2" />
<text  x="814.53" y="1023.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::get_property(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (13 samples, 0.08%)</title><rect x="1107.0" y="917" width="0.9" height="15.0" fill="rgb(235,160,53)" rx="2" ry="2" />
<text  x="1110.01" y="927.5" ></text>
</g>
<g >
<title>kmem_cache_free (3 samples, 0.02%)</title><rect x="565.3" y="485" width="0.2" height="15.0" fill="rgb(214,101,50)" rx="2" ry="2" />
<text  x="568.26" y="495.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.01%)</title><rect x="659.9" y="1285" width="0.2" height="15.0" fill="rgb(212,1,36)" rx="2" ry="2" />
<text  x="662.91" y="1295.5" ></text>
</g>
<g >
<title>Envoy::Http::CodecClient::responsePreDecodeComplete(Envoy::Http::CodecClient::ActiveRequest&amp;) (10 samples, 0.06%)</title><rect x="738.4" y="1029" width="0.7" height="15.0" fill="rgb(205,139,29)" rx="2" ry="2" />
<text  x="741.35" y="1039.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelProtoWrapper::CreateMessage(google::protobuf::Message const*, google::protobuf::Arena*) (5 samples, 0.03%)</title><rect x="767.7" y="741" width="0.4" height="15.0" fill="rgb(205,102,37)" rx="2" ry="2" />
<text  x="770.72" y="751.5" ></text>
</g>
<g >
<title>ip_sabotage_in (87 samples, 0.52%)</title><rect x="1157.7" y="453" width="6.2" height="15.0" fill="rgb(205,70,31)" rx="2" ry="2" />
<text  x="1160.71" y="463.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (5 samples, 0.03%)</title><rect x="917.6" y="997" width="0.4" height="15.0" fill="rgb(225,192,27)" rx="2" ry="2" />
<text  x="920.63" y="1007.5" ></text>
</g>
<g >
<title>skb_release_all (7 samples, 0.04%)</title><rect x="1175.1" y="485" width="0.5" height="15.0" fill="rgb(226,36,42)" rx="2" ry="2" />
<text  x="1178.14" y="495.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (2 samples, 0.01%)</title><rect x="598.5" y="1125" width="0.1" height="15.0" fill="rgb(225,197,23)" rx="2" ry="2" />
<text  x="601.47" y="1135.5" ></text>
</g>
<g >
<title>nf_hook_slow (2 samples, 0.01%)</title><rect x="932.9" y="661" width="0.1" height="15.0" fill="rgb(248,69,46)" rx="2" ry="2" />
<text  x="935.85" y="671.5" ></text>
</g>
<g >
<title>proxy_wasm::ContextBase::onRequestBody(unsigned int, bool) (4 samples, 0.02%)</title><rect x="1119.2" y="1013" width="0.3" height="15.0" fill="rgb(212,35,40)" rx="2" ry="2" />
<text  x="1122.24" y="1023.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::operator=(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) (10 samples, 0.06%)</title><rect x="1007.3" y="885" width="0.7" height="15.0" fill="rgb(217,173,16)" rx="2" ry="2" />
<text  x="1010.31" y="895.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::ContainerAccessStep::Evaluate(google::api::expr::runtime::ExecutionFrame*) const (6 samples, 0.04%)</title><rect x="786.1" y="757" width="0.4" height="15.0" fill="rgb(206,36,53)" rx="2" ry="2" />
<text  x="789.07" y="767.5" ></text>
</g>
<g >
<title>__lock_text_start (7 samples, 0.04%)</title><rect x="96.4" y="1093" width="0.5" height="15.0" fill="rgb(221,186,30)" rx="2" ry="2" />
<text  x="99.40" y="1103.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (3 samples, 0.02%)</title><rect x="617.5" y="1157" width="0.2" height="15.0" fill="rgb(240,138,16)" rx="2" ry="2" />
<text  x="620.46" y="1167.5" ></text>
</g>
<g >
<title>ksize (2 samples, 0.01%)</title><rect x="557.9" y="965" width="0.2" height="15.0" fill="rgb(215,33,41)" rx="2" ry="2" />
<text  x="560.94" y="975.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.01%)</title><rect x="658.1" y="1317" width="0.1" height="15.0" fill="rgb(212,173,24)" rx="2" ry="2" />
<text  x="661.06" y="1327.5" ></text>
</g>
<g >
<title>security_file_permission (10 samples, 0.06%)</title><rect x="515.9" y="1077" width="0.7" height="15.0" fill="rgb(242,173,23)" rx="2" ry="2" />
<text  x="518.91" y="1087.5" ></text>
</g>
<g >
<title>ksys_read (54 samples, 0.33%)</title><rect x="618.7" y="1189" width="3.8" height="15.0" fill="rgb(231,169,35)" rx="2" ry="2" />
<text  x="621.67" y="1199.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.03%)</title><rect x="119.9" y="1173" width="0.3" height="15.0" fill="rgb(233,214,5)" rx="2" ry="2" />
<text  x="122.87" y="1183.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="1047.8" y="949" width="0.2" height="15.0" fill="rgb(211,100,17)" rx="2" ry="2" />
<text  x="1050.84" y="959.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.01%)</title><rect x="736.1" y="1013" width="0.2" height="15.0" fill="rgb(248,214,20)" rx="2" ry="2" />
<text  x="739.15" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::findValue(absl::string_view, google::protobuf::Arena*, bool) const (12 samples, 0.07%)</title><rect x="763.5" y="805" width="0.9" height="15.0" fill="rgb(234,165,38)" rx="2" ry="2" />
<text  x="766.53" y="815.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.01%)</title><rect x="642.2" y="1173" width="0.1" height="15.0" fill="rgb(254,224,39)" rx="2" ry="2" />
<text  x="645.21" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Tracing::HttpTracerUtility::setCommonTags(Envoy::Tracing::Span&amp;, Envoy::Http::ResponseHeaderMap const*, Envoy::Http::ResponseTrailerMap const*, Envoy::StreamInfo::StreamInfo const&amp;, Envoy::Tracing::Config const&amp;) (27 samples, 0.16%)</title><rect x="756.1" y="917" width="2.0" height="15.0" fill="rgb(234,156,18)" rx="2" ry="2" />
<text  x="759.13" y="927.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="491.6" y="917" width="0.1" height="15.0" fill="rgb(231,98,39)" rx="2" ry="2" />
<text  x="494.59" y="927.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Server::ListenerFactoryContextBaseImpl::drainClose() const (2 samples, 0.01%)</title><rect x="981.1" y="965" width="0.1" height="15.0" fill="rgb(241,130,11)" rx="2" ry="2" />
<text  x="984.07" y="975.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::getExisting(absl::string_view) (3 samples, 0.02%)</title><rect x="826.4" y="997" width="0.2" height="15.0" fill="rgb(214,91,24)" rx="2" ry="2" />
<text  x="829.39" y="1007.5" ></text>
</g>
<g >
<title>__lock_text_start (169 samples, 1.02%)</title><rect x="63.2" y="1045" width="12.0" height="15.0" fill="rgb(252,73,52)" rx="2" ry="2" />
<text  x="66.19" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Stats::SymbolTableImpl::join(absl::InlinedVector&lt;Envoy::Stats::StatName, 8ul, std::__1::allocator&lt;Envoy::Stats::StatName&gt; &gt; const&amp;) const (3 samples, 0.02%)</title><rect x="798.2" y="917" width="0.2" height="15.0" fill="rgb(214,50,28)" rx="2" ry="2" />
<text  x="801.16" y="927.5" ></text>
</g>
<g >
<title>Envoy::Upstream::ManagedResourceImpl::canCreate() (6 samples, 0.04%)</title><rect x="1095.8" y="933" width="0.5" height="15.0" fill="rgb(226,90,39)" rx="2" ry="2" />
<text  x="1098.84" y="943.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::encodeData(Envoy::Http::ActiveStreamEncoderFilter*, Envoy::Buffer::Instance&amp;, bool, Envoy::Http::FilterManager::FilterIterationStartState) (742 samples, 4.47%)</title><rect x="995.4" y="997" width="52.8" height="15.0" fill="rgb(229,40,48)" rx="2" ry="2" />
<text  x="998.43" y="1007.5" >Envoy..</text>
</g>
<g >
<title>__libc_cfree (2 samples, 0.01%)</title><rect x="1109.4" y="965" width="0.2" height="15.0" fill="rgb(207,154,43)" rx="2" ry="2" />
<text  x="1112.43" y="975.5" ></text>
</g>
<g >
<title>ipv4_confirm (2 samples, 0.01%)</title><rect x="588.3" y="869" width="0.1" height="15.0" fill="rgb(249,71,3)" rx="2" ry="2" />
<text  x="591.30" y="879.5" ></text>
</g>
<g >
<title>http_parser_execute (1,043 samples, 6.29%)</title><rect x="808.7" y="1125" width="74.2" height="15.0" fill="rgb(221,211,46)" rx="2" ry="2" />
<text  x="811.68" y="1135.5" >http_par..</text>
</g>
<g >
<title>finish_task_switch (99 samples, 0.60%)</title><rect x="217.5" y="1013" width="7.1" height="15.0" fill="rgb(234,189,33)" rx="2" ry="2" />
<text  x="220.51" y="1023.5" ></text>
</g>
<g >
<title>ip_rcv (116 samples, 0.70%)</title><rect x="924.5" y="661" width="8.3" height="15.0" fill="rgb(252,32,18)" rx="2" ry="2" />
<text  x="927.53" y="671.5" ></text>
</g>
<g >
<title>__netif_receive_skb (79 samples, 0.48%)</title><rect x="908.5" y="517" width="5.6" height="15.0" fill="rgb(223,121,26)" rx="2" ry="2" />
<text  x="911.46" y="527.5" ></text>
</g>
<g >
<title>evmap_io_del_ (31 samples, 0.19%)</title><rect x="741.2" y="837" width="2.2" height="15.0" fill="rgb(216,209,12)" rx="2" ry="2" />
<text  x="744.20" y="847.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::setReferenceInline(Envoy::Http::CustomInlineHeaderRegistry::Handle&lt;(Envoy::Http::CustomInlineHeaderRegistry::Type)0&gt;, absl::string_view) (2 samples, 0.01%)</title><rect x="1074.0" y="1013" width="0.2" height="15.0" fill="rgb(233,218,24)" rx="2" ry="2" />
<text  x="1077.01" y="1023.5" ></text>
</g>
<g >
<title>ip_output (58 samples, 0.35%)</title><rect x="1158.1" y="389" width="4.1" height="15.0" fill="rgb(206,34,27)" rx="2" ry="2" />
<text  x="1161.07" y="399.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.02%)</title><rect x="934.3" y="837" width="0.2" height="15.0" fill="rgb(244,142,12)" rx="2" ry="2" />
<text  x="937.27" y="847.5" ></text>
</g>
<g >
<title>runtime.greyobject (8 samples, 0.05%)</title><rect x="256.5" y="1285" width="0.6" height="15.0" fill="rgb(247,149,28)" rx="2" ry="2" />
<text  x="259.48" y="1295.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.01%)</title><rect x="498.8" y="1045" width="0.2" height="15.0" fill="rgb(249,19,5)" rx="2" ry="2" />
<text  x="501.84" y="1055.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="813.9" y="1029" width="0.1" height="15.0" fill="rgb(220,51,21)" rx="2" ry="2" />
<text  x="816.88" y="1039.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.01%)</title><rect x="679.3" y="1269" width="0.1" height="15.0" fill="rgb(207,187,10)" rx="2" ry="2" />
<text  x="682.26" y="1279.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (6 samples, 0.04%)</title><rect x="251.6" y="1013" width="0.4" height="15.0" fill="rgb(216,76,21)" rx="2" ry="2" />
<text  x="254.58" y="1023.5" ></text>
</g>
<g >
<title>envoy::config::core::v3::Metadata::~Metadata() (4 samples, 0.02%)</title><rect x="1050.5" y="917" width="0.3" height="15.0" fill="rgb(208,63,43)" rx="2" ry="2" />
<text  x="1053.47" y="927.5" ></text>
</g>
<g >
<title>local.time.Now (5 samples, 0.03%)</title><rect x="249.9" y="1333" width="0.3" height="15.0" fill="rgb(250,136,0)" rx="2" ry="2" />
<text  x="252.87" y="1343.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (3 samples, 0.02%)</title><rect x="1189.8" y="1349" width="0.2" height="15.0" fill="rgb(240,225,52)" rx="2" ry="2" />
<text  x="1192.79" y="1359.5" ></text>
</g>
<g >
<title>tcp_data_ready (110 samples, 0.66%)</title><rect x="1176.2" y="533" width="7.8" height="15.0" fill="rgb(221,177,28)" rx="2" ry="2" />
<text  x="1179.20" y="543.5" ></text>
</g>
<g >
<title>Wasm::Common::populateHTTPRequestInfo(bool, bool, Wasm::Common::RequestInfo*) (255 samples, 1.54%)</title><rect x="1017.5" y="853" width="18.2" height="15.0" fill="rgb(253,86,19)" rx="2" ry="2" />
<text  x="1020.55" y="863.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::drain(unsigned long) (2 samples, 0.01%)</title><rect x="1170.1" y="1189" width="0.1" height="15.0" fill="rgb(252,229,25)" rx="2" ry="2" />
<text  x="1173.09" y="1199.5" ></text>
</g>
<g >
<title>proxy_wasm::ContextBase::onRequestBody(unsigned int, bool) (2 samples, 0.01%)</title><rect x="873.0" y="1013" width="0.2" height="15.0" fill="rgb(246,141,13)" rx="2" ry="2" />
<text  x="876.04" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::ResponseHeaderMap&gt;::staticLookup(absl::string_view) (3 samples, 0.02%)</title><rect x="729.5" y="821" width="0.2" height="15.0" fill="rgb(241,168,16)" rx="2" ry="2" />
<text  x="732.46" y="831.5" ></text>
</g>
<g >
<title>Envoy::Runtime::SnapshotImpl::runtimeFeatureEnabled(absl::string_view) const (3 samples, 0.02%)</title><rect x="755.0" y="885" width="0.2" height="15.0" fill="rgb(250,108,27)" rx="2" ry="2" />
<text  x="757.99" y="895.5" ></text>
</g>
<g >
<title>sock_sendmsg (186 samples, 1.12%)</title><rect x="904.8" y="1029" width="13.2" height="15.0" fill="rgb(231,147,14)" rx="2" ry="2" />
<text  x="907.76" y="1039.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.01%)</title><rect x="893.0" y="1077" width="0.2" height="15.0" fill="rgb(209,27,49)" rx="2" ry="2" />
<text  x="896.03" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="133.1" y="1093" width="0.3" height="15.0" fill="rgb(222,74,22)" rx="2" ry="2" />
<text  x="136.10" y="1103.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;absl::string_view, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;absl::string_view const, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt; &gt; &gt;::prepare_insert(unsigned long) (2 samples, 0.01%)</title><rect x="1070.3" y="885" width="0.2" height="15.0" fill="rgb(245,71,16)" rx="2" ry="2" />
<text  x="1073.31" y="895.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="797.6" y="933" width="0.1" height="15.0" fill="rgb(238,150,10)" rx="2" ry="2" />
<text  x="800.59" y="943.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation::~BinaryAnnotation() (2 samples, 0.01%)</title><rect x="753.6" y="885" width="0.2" height="15.0" fill="rgb(250,197,51)" rx="2" ry="2" />
<text  x="756.64" y="895.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::ClientTraceId() const (2 samples, 0.01%)</title><rect x="759.7" y="933" width="0.1" height="15.0" fill="rgb(248,185,7)" rx="2" ry="2" />
<text  x="762.69" y="943.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_out (2 samples, 0.01%)</title><rect x="933.8" y="821" width="0.2" height="15.0" fill="rgb(225,59,0)" rx="2" ry="2" />
<text  x="936.85" y="831.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Extensions::Common::Wasm::PropertyToken&gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Extensions::Common::Wasm::PropertyToken&gt; &gt; &gt;::iterator absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Extensions::Common::Wasm::PropertyToken&gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Extensions::Common::Wasm::PropertyToken&gt; &gt; &gt;::find&lt;absl::string_view&gt;(absl::string_view const&amp;, unsigned long) (2 samples, 0.01%)</title><rect x="1032.8" y="789" width="0.1" height="15.0" fill="rgb(212,200,23)" rx="2" ry="2" />
<text  x="1035.77" y="799.5" ></text>
</g>
<g >
<title>google::protobuf::internal::SerialArena::AllocateAlignedWithCleanupFallback(unsigned long, google::protobuf::internal::AllocationPolicy const*) (2 samples, 0.01%)</title><rect x="1025.7" y="725" width="0.2" height="15.0" fill="rgb(220,74,38)" rx="2" ry="2" />
<text  x="1028.73" y="735.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (126 samples, 0.76%)</title><rect x="924.3" y="741" width="9.0" height="15.0" fill="rgb(205,90,37)" rx="2" ry="2" />
<text  x="927.32" y="751.5" ></text>
</g>
<g >
<title>mod_timer (12 samples, 0.07%)</title><rect x="563.8" y="517" width="0.9" height="15.0" fill="rgb(235,208,30)" rx="2" ry="2" />
<text  x="566.84" y="527.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (91 samples, 0.55%)</title><rect x="1157.4" y="501" width="6.5" height="15.0" fill="rgb(221,68,18)" rx="2" ry="2" />
<text  x="1160.43" y="511.5" ></text>
</g>
<g >
<title>[unknown] (27 samples, 0.16%)</title><rect x="436.3" y="981" width="2.0" height="15.0" fill="rgb(252,136,9)" rx="2" ry="2" />
<text  x="439.33" y="991.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Router::Filter::callbacks() (3 samples, 0.02%)</title><rect x="844.7" y="901" width="0.2" height="15.0" fill="rgb(219,120,3)" rx="2" ry="2" />
<text  x="847.67" y="911.5" ></text>
</g>
<g >
<title>Envoy::Event::DispatcherImpl::deferredDelete(std::__1::unique_ptr&lt;Envoy::Event::DeferredDeletable, std::__1::default_delete&lt;Envoy::Event::DeferredDeletable&gt; &gt;&amp;&amp;) (6 samples, 0.04%)</title><rect x="738.6" y="997" width="0.4" height="15.0" fill="rgb(232,91,15)" rx="2" ry="2" />
<text  x="741.57" y="1007.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.02%)</title><rect x="506.7" y="981" width="0.2" height="15.0" fill="rgb(223,214,28)" rx="2" ry="2" />
<text  x="509.73" y="991.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_3, std::__1::allocator&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_3&gt;, void (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word)&gt;::operator()(proxy_wasm::ContextBase*&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;) (3 samples, 0.02%)</title><rect x="861.6" y="997" width="0.2" height="15.0" fill="rgb(230,144,50)" rx="2" ry="2" />
<text  x="864.59" y="1007.5" ></text>
</g>
<g >
<title>common_file_perm (2 samples, 0.01%)</title><rect x="1148.8" y="997" width="0.2" height="15.0" fill="rgb(224,221,21)" rx="2" ry="2" />
<text  x="1151.82" y="1007.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.01%)</title><rect x="950.0" y="1221" width="0.1" height="15.0" fill="rgb(254,175,4)" rx="2" ry="2" />
<text  x="952.99" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::encodeHeaders(Envoy::Http::ResponseHeaderMap&amp;, bool) (93 samples, 0.56%)</title><rect x="720.2" y="965" width="6.6" height="15.0" fill="rgb(224,11,54)" rx="2" ry="2" />
<text  x="723.22" y="975.5" ></text>
</g>
<g >
<title>epoll_nochangelist_del (30 samples, 0.18%)</title><rect x="1123.5" y="981" width="2.1" height="15.0" fill="rgb(239,20,35)" rx="2" ry="2" />
<text  x="1126.51" y="991.5" ></text>
</g>
<g >
<title>Envoy::Router::ConfigImpl::route(std::__1::function&lt;Envoy::Router::RouteMatchStatus (std::__1::shared_ptr&lt;Envoy::Router::Route const&gt;, Envoy::Router::RouteEvalStatus)&gt; const&amp;, Envoy::Http::RequestHeaderMap const&amp;, Envoy::StreamInfo::StreamInfo const&amp;, unsigned long) const (9 samples, 0.05%)</title><rect x="819.4" y="1013" width="0.7" height="15.0" fill="rgb(217,207,3)" rx="2" ry="2" />
<text  x="822.42" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::ZipkinSpan::injectContext(Envoy::Tracing::TraceContext&amp;) (30 samples, 0.18%)</title><rect x="834.1" y="997" width="2.2" height="15.0" fill="rgb(230,181,17)" rx="2" ry="2" />
<text  x="837.14" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::move(Envoy::Buffer::Instance&amp;) (3 samples, 0.02%)</title><rect x="1052.8" y="949" width="0.2" height="15.0" fill="rgb(217,46,46)" rx="2" ry="2" />
<text  x="1055.82" y="959.5" ></text>
</g>
<g >
<title>_ext4_get_block (2 samples, 0.01%)</title><rect x="240.3" y="1045" width="0.2" height="15.0" fill="rgb(234,113,52)" rx="2" ry="2" />
<text  x="243.34" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onHeaderValue(char const*, unsigned long) (8 samples, 0.05%)</title><rect x="1130.4" y="1093" width="0.6" height="15.0" fill="rgb(236,75,39)" rx="2" ry="2" />
<text  x="1133.41" y="1103.5" ></text>
</g>
<g >
<title>nf_conntrack_in (5 samples, 0.03%)</title><rect x="910.0" y="149" width="0.3" height="15.0" fill="rgb(207,199,35)" rx="2" ry="2" />
<text  x="912.95" y="159.5" ></text>
</g>
<g >
<title>Envoy::ThreadLocal::InstanceImpl::SlotImpl::get() (2 samples, 0.01%)</title><rect x="1042.8" y="805" width="0.1" height="15.0" fill="rgb(208,54,46)" rx="2" ry="2" />
<text  x="1045.79" y="815.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (18 samples, 0.11%)</title><rect x="617.4" y="1189" width="1.3" height="15.0" fill="rgb(205,53,19)" rx="2" ry="2" />
<text  x="620.39" y="1199.5" ></text>
</g>
<g >
<title>local.runtime.trygetfull (3 samples, 0.02%)</title><rect x="255.0" y="1285" width="0.2" height="15.0" fill="rgb(209,201,41)" rx="2" ry="2" />
<text  x="257.99" y="1295.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (3 samples, 0.02%)</title><rect x="625.6" y="1157" width="0.2" height="15.0" fill="rgb(233,201,36)" rx="2" ry="2" />
<text  x="628.57" y="1167.5" ></text>
</g>
<g >
<title>google::protobuf::Struct::_InternalSerialize(unsigned char*, google::protobuf::io::EpsCopyOutputStream*) const (3 samples, 0.02%)</title><rect x="750.8" y="789" width="0.2" height="15.0" fill="rgb(246,107,49)" rx="2" ry="2" />
<text  x="753.80" y="799.5" ></text>
</g>
<g >
<title>sock_poll (7 samples, 0.04%)</title><rect x="744.6" y="725" width="0.5" height="15.0" fill="rgb(209,158,6)" rx="2" ry="2" />
<text  x="747.61" y="735.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::ServerConnectionImpl::onMessageBeginBase() (34 samples, 0.20%)</title><rect x="812.1" y="1077" width="2.4" height="15.0" fill="rgb(219,3,51)" rx="2" ry="2" />
<text  x="815.10" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (422 samples, 2.54%)</title><rect x="139.1" y="1205" width="30.1" height="15.0" fill="rgb(254,163,46)" rx="2" ry="2" />
<text  x="142.14" y="1215.5" >do..</text>
</g>
<g >
<title>touch_atime (3 samples, 0.02%)</title><rect x="97.9" y="1125" width="0.2" height="15.0" fill="rgb(240,186,12)" rx="2" ry="2" />
<text  x="100.90" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::log() (480 samples, 2.89%)</title><rect x="760.1" y="949" width="34.1" height="15.0" fill="rgb(219,98,28)" rx="2" ry="2" />
<text  x="763.11" y="959.5" >En..</text>
</g>
<g >
<title>smp_call_function_many (30 samples, 0.18%)</title><rect x="626.3" y="1061" width="2.1" height="15.0" fill="rgb(242,183,45)" rx="2" ry="2" />
<text  x="629.28" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::reserveForRead() (26 samples, 0.16%)</title><rect x="886.2" y="1189" width="1.8" height="15.0" fill="rgb(224,198,32)" rx="2" ry="2" />
<text  x="889.20" y="1199.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Http::FilterManager::encodeHeaders(Envoy::Http::ActiveStreamEncoderFilter*, Envoy::Http::ResponseHeaderMap&amp;, bool)::$_2, std::__1::allocator&lt;Envoy::Http::FilterManager::encodeHeaders(Envoy::Http::ActiveStreamEncoderFilter*, Envoy::Http::ResponseHeaderMap&amp;, bool)::$_2&gt;, void (Envoy::Http::Matching::HttpMatchingDataImpl&amp;)&gt;::destroy() (2 samples, 0.01%)</title><rect x="989.2" y="981" width="0.2" height="15.0" fill="rgb(232,19,27)" rx="2" ry="2" />
<text  x="992.24" y="991.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="924.3" y="725" width="0.2" height="15.0" fill="rgb(247,62,51)" rx="2" ry="2" />
<text  x="927.32" y="735.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.01%)</title><rect x="779.6" y="821" width="0.1" height="15.0" fill="rgb(214,64,46)" rx="2" ry="2" />
<text  x="782.60" y="831.5" ></text>
</g>
<g >
<title>br_pass_frame_up (82 samples, 0.49%)</title><rect x="908.4" y="565" width="5.8" height="15.0" fill="rgb(212,149,1)" rx="2" ry="2" />
<text  x="911.39" y="575.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (2 samples, 0.01%)</title><rect x="557.3" y="933" width="0.1" height="15.0" fill="rgb(238,162,44)" rx="2" ry="2" />
<text  x="560.30" y="943.5" ></text>
</g>
<g >
<title>epoll_ctl (43 samples, 0.26%)</title><rect x="873.8" y="965" width="3.0" height="15.0" fill="rgb(207,36,1)" rx="2" ry="2" />
<text  x="876.75" y="975.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_26, std::__1::allocator&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_26&gt;, proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;::operator()(proxy_wasm::ContextBase*&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;) (2 samples, 0.01%)</title><rect x="1119.5" y="1013" width="0.2" height="15.0" fill="rgb(216,75,48)" rx="2" ry="2" />
<text  x="1122.53" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestHeaderMapImpl::getByKey(absl::string_view) const (4 samples, 0.02%)</title><rect x="821.9" y="949" width="0.3" height="15.0" fill="rgb(217,63,11)" rx="2" ry="2" />
<text  x="824.91" y="959.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (115 samples, 0.69%)</title><rect x="1143.0" y="1157" width="8.2" height="15.0" fill="rgb(217,47,16)" rx="2" ry="2" />
<text  x="1145.99" y="1167.5" ></text>
</g>
<g >
<title>readv (175 samples, 1.05%)</title><rect x="1138.8" y="1173" width="12.4" height="15.0" fill="rgb(228,50,12)" rx="2" ry="2" />
<text  x="1141.80" y="1183.5" ></text>
</g>
<g >
<title>page_fault (6 samples, 0.04%)</title><rect x="593.8" y="1189" width="0.4" height="15.0" fill="rgb(205,154,12)" rx="2" ry="2" />
<text  x="596.78" y="1199.5" ></text>
</g>
<g >
<title>ip_list_rcv (2 samples, 0.01%)</title><rect x="1131.5" y="949" width="0.2" height="15.0" fill="rgb(254,115,33)" rx="2" ry="2" />
<text  x="1134.54" y="959.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.02%)</title><rect x="506.9" y="1077" width="0.3" height="15.0" fill="rgb(227,84,5)" rx="2" ry="2" />
<text  x="509.95" y="1087.5" ></text>
</g>
<g >
<title>absl::hash_internal::MixingHashState::combine_contiguous(absl::hash_internal::MixingHashState, unsigned char const*, unsigned long) (2 samples, 0.01%)</title><rect x="1074.3" y="981" width="0.1" height="15.0" fill="rgb(213,4,8)" rx="2" ry="2" />
<text  x="1077.30" y="991.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 0.08%)</title><rect x="508.4" y="1141" width="0.9" height="15.0" fill="rgb(230,25,46)" rx="2" ry="2" />
<text  x="511.37" y="1151.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::record_metric(proxy_wasm::Word, unsigned long) (14 samples, 0.08%)</title><rect x="791.4" y="853" width="1.0" height="15.0" fill="rgb(225,195,40)" rx="2" ry="2" />
<text  x="794.40" y="863.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.01%)</title><rect x="485.2" y="949" width="0.1" height="15.0" fill="rgb(209,69,5)" rx="2" ry="2" />
<text  x="488.19" y="959.5" ></text>
</g>
<g >
<title>veth_xmit (2 samples, 0.01%)</title><rect x="915.7" y="725" width="0.2" height="15.0" fill="rgb(207,125,14)" rx="2" ry="2" />
<text  x="918.71" y="735.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (2 samples, 0.01%)</title><rect x="896.6" y="789" width="0.1" height="15.0" fill="rgb(209,107,26)" rx="2" ry="2" />
<text  x="899.58" y="799.5" ></text>
</g>
<g >
<title>std::__1::vector&lt;absl::strings_internal::ViableSubstitution, std::__1::allocator&lt;absl::strings_internal::ViableSubstitution&gt; &gt; absl::strings_internal::FindSubstitutions&lt;absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;(absl::string_view, absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;) (3 samples, 0.02%)</title><rect x="734.6" y="933" width="0.2" height="15.0" fill="rgb(219,123,11)" rx="2" ry="2" />
<text  x="737.58" y="943.5" ></text>
</g>
<g >
<title>__x64_sys_write (302 samples, 1.82%)</title><rect x="516.7" y="1141" width="21.5" height="15.0" fill="rgb(250,3,37)" rx="2" ry="2" />
<text  x="519.69" y="1151.5" >_..</text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::staticLookup(absl::string_view) (3 samples, 0.02%)</title><rect x="826.4" y="981" width="0.2" height="15.0" fill="rgb(249,96,28)" rx="2" ry="2" />
<text  x="829.39" y="991.5" ></text>
</g>
<g >
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="693.7" y="1141" width="0.3" height="15.0" fill="rgb(217,12,18)" rx="2" ry="2" />
<text  x="696.69" y="1151.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (2 samples, 0.01%)</title><rect x="624.4" y="1157" width="0.2" height="15.0" fill="rgb(232,198,32)" rx="2" ry="2" />
<text  x="627.43" y="1167.5" ></text>
</g>
<g >
<title>ip_finish_output (2 samples, 0.01%)</title><rect x="1131.5" y="853" width="0.2" height="15.0" fill="rgb(233,216,9)" rx="2" ry="2" />
<text  x="1134.54" y="863.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="33.9" y="1125" width="0.1" height="15.0" fill="rgb(216,14,51)" rx="2" ry="2" />
<text  x="36.89" y="1135.5" ></text>
</g>
<g >
<title>absl::hash_internal::Wyhash(void const*, unsigned long, unsigned long, unsigned long const*) (2 samples, 0.01%)</title><rect x="1096.1" y="885" width="0.2" height="15.0" fill="rgb(243,85,35)" rx="2" ry="2" />
<text  x="1099.13" y="895.5" ></text>
</g>
<g >
<title>mark_wake_futex (4 samples, 0.02%)</title><rect x="62.8" y="1077" width="0.3" height="15.0" fill="rgb(240,28,9)" rx="2" ry="2" />
<text  x="65.84" y="1087.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Extensions::Common::Wasm::Context::decodeData(Envoy::Buffer::Instance&amp;, bool) (6 samples, 0.04%)</title><rect x="1122.3" y="1029" width="0.4" height="15.0" fill="rgb(212,99,27)" rx="2" ry="2" />
<text  x="1125.30" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (82 samples, 0.49%)</title><rect x="672.8" y="1141" width="5.8" height="15.0" fill="rgb(253,84,4)" rx="2" ry="2" />
<text  x="675.79" y="1151.5" ></text>
</g>
<g >
<title>bool url::(anonymous namespace)::DoPartialPathInternal&lt;char, unsigned char&gt;(char const*, url::Component const&amp;, int, url::CanonOutputT&lt;char&gt;*) (2 samples, 0.01%)</title><rect x="824.1" y="981" width="0.2" height="15.0" fill="rgb(247,211,4)" rx="2" ry="2" />
<text  x="827.12" y="991.5" ></text>
</g>
<g >
<title>Envoy::Network::FilterManagerImpl::onWrite(Envoy::Network::FilterManagerImpl::ActiveWriteFilter*, Envoy::Network::WriteBufferSource&amp;) (4 samples, 0.02%)</title><rect x="1091.9" y="789" width="0.3" height="15.0" fill="rgb(247,58,1)" rx="2" ry="2" />
<text  x="1094.93" y="799.5" ></text>
</g>
<g >
<title>__sched_text_start (99 samples, 0.60%)</title><rect x="217.5" y="1045" width="7.1" height="15.0" fill="rgb(250,63,39)" rx="2" ry="2" />
<text  x="220.51" y="1055.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (488 samples, 2.94%)</title><rect x="557.0" y="1013" width="34.7" height="15.0" fill="rgb(239,156,29)" rx="2" ry="2" />
<text  x="560.01" y="1023.5" >tc..</text>
</g>
<g >
<title>finish_task_switch (61 samples, 0.37%)</title><rect x="491.8" y="917" width="4.3" height="15.0" fill="rgb(220,105,14)" rx="2" ry="2" />
<text  x="494.80" y="927.5" ></text>
</g>
<g >
<title>ip_rcv (153 samples, 0.92%)</title><rect x="1174.3" y="661" width="10.9" height="15.0" fill="rgb(247,77,15)" rx="2" ry="2" />
<text  x="1177.28" y="671.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Router::UpstreamRequest::upstreamToDownstream() (2 samples, 0.01%)</title><rect x="855.4" y="997" width="0.1" height="15.0" fill="rgb(221,6,9)" rx="2" ry="2" />
<text  x="858.41" y="1007.5" ></text>
</g>
<g >
<title>local.runtime.mPark (18 samples, 0.11%)</title><rect x="134.0" y="1109" width="1.3" height="15.0" fill="rgb(240,89,0)" rx="2" ry="2" />
<text  x="137.02" y="1119.5" ></text>
</g>
<g >
<title>[unknown] (26 samples, 0.16%)</title><rect x="436.3" y="949" width="1.9" height="15.0" fill="rgb(247,106,48)" rx="2" ry="2" />
<text  x="439.33" y="959.5" ></text>
</g>
<g >
<title>kfree (2 samples, 0.01%)</title><rect x="925.2" y="437" width="0.1" height="15.0" fill="rgb(243,9,24)" rx="2" ry="2" />
<text  x="928.17" y="447.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (221 samples, 1.33%)</title><rect x="1171.8" y="1061" width="15.7" height="15.0" fill="rgb(243,220,25)" rx="2" ry="2" />
<text  x="1174.79" y="1071.5" ></text>
</g>
<g >
<title>__lock_text_start (6 samples, 0.04%)</title><rect x="437.8" y="805" width="0.4" height="15.0" fill="rgb(241,148,24)" rx="2" ry="2" />
<text  x="440.75" y="815.5" ></text>
</g>
<g >
<title>Envoy::Upstream::ManagedResourceImpl::decBy(unsigned long) (3 samples, 0.02%)</title><rect x="739.6" y="981" width="0.2" height="15.0" fill="rgb(212,224,43)" rx="2" ry="2" />
<text  x="742.63" y="991.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (20 samples, 0.12%)</title><rect x="513.4" y="997" width="1.4" height="15.0" fill="rgb(205,195,5)" rx="2" ry="2" />
<text  x="516.42" y="1007.5" ></text>
</g>
<g >
<title>runtime.futex (35 samples, 0.21%)</title><rect x="173.2" y="1173" width="2.5" height="15.0" fill="rgb(216,213,38)" rx="2" ry="2" />
<text  x="176.21" y="1183.5" ></text>
</g>
<g >
<title>do_epoll_wait (122 samples, 0.74%)</title><rect x="949.9" y="1237" width="8.7" height="15.0" fill="rgb(239,100,4)" rx="2" ry="2" />
<text  x="952.92" y="1247.5" ></text>
</g>
<g >
<title>jbd2__journal_start (2 samples, 0.01%)</title><rect x="237.7" y="1029" width="0.2" height="15.0" fill="rgb(254,107,50)" rx="2" ry="2" />
<text  x="240.71" y="1039.5" ></text>
</g>
<g >
<title>ksoftirqd/4 (4 samples, 0.02%)</title><rect x="659.9" y="1381" width="0.3" height="15.0" fill="rgb(241,161,37)" rx="2" ry="2" />
<text  x="662.91" y="1391.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Reservation::commit(unsigned long) (20 samples, 0.12%)</title><rect x="1134.0" y="1189" width="1.4" height="15.0" fill="rgb(210,97,24)" rx="2" ry="2" />
<text  x="1136.96" y="1199.5" ></text>
</g>
<g >
<title>url::CanonicalizePath(char const*, url::Component const&amp;, url::CanonOutputT&lt;char&gt;*, url::Component*) (3 samples, 0.02%)</title><rect x="1072.2" y="997" width="0.2" height="15.0" fill="rgb(247,139,31)" rx="2" ry="2" />
<text  x="1075.23" y="1007.5" ></text>
</g>
<g >
<title>__fdget_pos (12 samples, 0.07%)</title><rect x="236.1" y="1189" width="0.8" height="15.0" fill="rgb(248,118,54)" rx="2" ry="2" />
<text  x="239.07" y="1199.5" ></text>
</g>
<g >
<title>__fdget (4 samples, 0.02%)</title><rect x="645.1" y="1221" width="0.3" height="15.0" fill="rgb(230,104,2)" rx="2" ry="2" />
<text  x="648.12" y="1231.5" ></text>
</g>
<g >
<title>event_process_active_single_queue (3 samples, 0.02%)</title><rect x="658.5" y="1269" width="0.2" height="15.0" fill="rgb(225,84,14)" rx="2" ry="2" />
<text  x="661.49" y="1279.5" ></text>
</g>
<g >
<title>__fdget (4 samples, 0.02%)</title><rect x="997.0" y="741" width="0.3" height="15.0" fill="rgb(221,143,24)" rx="2" ry="2" />
<text  x="1000.00" y="751.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (4 samples, 0.02%)</title><rect x="1172.2" y="965" width="0.2" height="15.0" fill="rgb(248,179,16)" rx="2" ry="2" />
<text  x="1175.15" y="975.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::checkHighAndOverflowWatermarks() (2 samples, 0.01%)</title><rect x="722.6" y="869" width="0.2" height="15.0" fill="rgb(246,57,32)" rx="2" ry="2" />
<text  x="725.64" y="879.5" ></text>
</g>
<g >
<title>ip_queue_xmit (150 samples, 0.90%)</title><rect x="923.3" y="901" width="10.7" height="15.0" fill="rgb(219,106,14)" rx="2" ry="2" />
<text  x="926.32" y="911.5" ></text>
</g>
<g >
<title>__lock_text_start (6 samples, 0.04%)</title><rect x="510.6" y="1045" width="0.4" height="15.0" fill="rgb(222,40,15)" rx="2" ry="2" />
<text  x="513.57" y="1055.5" ></text>
</g>
<g >
<title>br_nf_pre_routing (5 samples, 0.03%)</title><rect x="907.9" y="613" width="0.3" height="15.0" fill="rgb(250,191,25)" rx="2" ry="2" />
<text  x="910.89" y="623.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (2 samples, 0.01%)</title><rect x="624.6" y="1157" width="0.1" height="15.0" fill="rgb(246,116,4)" rx="2" ry="2" />
<text  x="627.57" y="1167.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.02%)</title><rect x="641.7" y="1237" width="0.2" height="15.0" fill="rgb(232,107,34)" rx="2" ry="2" />
<text  x="644.71" y="1247.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::CastingValueFromMessageFactory&lt;google::protobuf::ListValue&gt;::CreateValue(google::protobuf::Message const*, google::protobuf::Arena*) const (2 samples, 0.01%)</title><rect x="1025.7" y="741" width="0.2" height="15.0" fill="rgb(215,214,24)" rx="2" ry="2" />
<text  x="1028.73" y="751.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::addStreamEncoderFilterWorker(std::__1::shared_ptr&lt;Envoy::Http::StreamEncoderFilter&gt;, std::__1::shared_ptr&lt;Envoy::Http::FilterMatchState&gt;, bool) (2 samples, 0.01%)</title><rect x="828.8" y="965" width="0.2" height="15.0" fill="rgb(220,160,45)" rx="2" ry="2" />
<text  x="831.81" y="975.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.02%)</title><rect x="586.2" y="757" width="0.3" height="15.0" fill="rgb(242,195,29)" rx="2" ry="2" />
<text  x="589.24" y="767.5" ></text>
</g>
<g >
<title>vfs_write (4 samples, 0.02%)</title><rect x="497.1" y="997" width="0.3" height="15.0" fill="rgb(206,218,45)" rx="2" ry="2" />
<text  x="500.13" y="1007.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="490.0" y="965" width="0.2" height="15.0" fill="rgb(238,122,23)" rx="2" ry="2" />
<text  x="493.02" y="975.5" ></text>
</g>
<g >
<title>char* absl::inlined_vector_internal::Storage&lt;char, 128ul, std::__1::allocator&lt;char&gt; &gt;::Insert&lt;absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt; &gt;(char const*, absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt;, unsigned long) (2 samples, 0.01%)</title><rect x="806.8" y="1045" width="0.1" height="15.0" fill="rgb(208,162,39)" rx="2" ry="2" />
<text  x="809.76" y="1055.5" ></text>
</g>
<g >
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="438.3" y="885" width="0.3" height="15.0" fill="rgb(215,113,50)" rx="2" ry="2" />
<text  x="441.25" y="895.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="765.8" y="757" width="0.1" height="15.0" fill="rgb(231,150,31)" rx="2" ry="2" />
<text  x="768.80" y="767.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (4 samples, 0.02%)</title><rect x="557.7" y="949" width="0.2" height="15.0" fill="rgb(242,96,18)" rx="2" ry="2" />
<text  x="560.65" y="959.5" ></text>
</g>
<g >
<title>dst_release (12 samples, 0.07%)</title><rect x="512.4" y="949" width="0.8" height="15.0" fill="rgb(212,223,2)" rx="2" ry="2" />
<text  x="515.35" y="959.5" ></text>
</g>
<g >
<title>br_nf_pre_routing (103 samples, 0.62%)</title><rect x="907.9" y="629" width="7.3" height="15.0" fill="rgb(228,198,37)" rx="2" ry="2" />
<text  x="910.89" y="639.5" ></text>
</g>
<g >
<title>Envoy::Stats::ThreadLocalStoreImpl::ScopeImpl::counterFromStatNameWithTags(Envoy::Stats::StatName const&amp;, absl::optional&lt;std::__1::reference_wrapper&lt;std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; const&gt; &gt;) (10 samples, 0.06%)</title><rect x="733.3" y="933" width="0.7" height="15.0" fill="rgb(237,29,7)" rx="2" ry="2" />
<text  x="736.30" y="943.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::read(Envoy::Buffer::Instance&amp;, absl::optional&lt;unsigned long&gt;) (245 samples, 1.48%)</title><rect x="884.6" y="1205" width="17.4" height="15.0" fill="rgb(227,224,51)" rx="2" ry="2" />
<text  x="887.56" y="1215.5" ></text>
</g>
<g >
<title>ep_poll (4 samples, 0.02%)</title><rect x="490.6" y="981" width="0.3" height="15.0" fill="rgb(209,27,9)" rx="2" ry="2" />
<text  x="493.59" y="991.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::encodeData(Envoy::Buffer::Instance&amp;, bool) (67 samples, 0.40%)</title><rect x="995.9" y="965" width="4.7" height="15.0" fill="rgb(231,215,3)" rx="2" ry="2" />
<text  x="998.86" y="975.5" ></text>
</g>
<g >
<title>do_iter_write (193 samples, 1.16%)</title><rect x="904.8" y="1077" width="13.7" height="15.0" fill="rgb(219,97,28)" rx="2" ry="2" />
<text  x="907.76" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Network::TransportSocketOptionsUtility::fromFilterState(Envoy::StreamInfo::FilterState const&amp;) (23 samples, 0.14%)</title><rect x="846.8" y="997" width="1.6" height="15.0" fill="rgb(254,40,25)" rx="2" ry="2" />
<text  x="849.80" y="1007.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (715 samples, 4.31%)</title><rect x="438.7" y="1013" width="50.8" height="15.0" fill="rgb(229,53,29)" rx="2" ry="2" />
<text  x="441.68" y="1023.5" >entry..</text>
</g>
<g >
<title>do_user_addr_fault (3 samples, 0.02%)</title><rect x="489.7" y="981" width="0.2" height="15.0" fill="rgb(245,39,54)" rx="2" ry="2" />
<text  x="492.67" y="991.5" ></text>
</g>
<g >
<title>page_frag_free (3 samples, 0.02%)</title><rect x="895.0" y="933" width="0.2" height="15.0" fill="rgb(246,147,33)" rx="2" ry="2" />
<text  x="898.02" y="943.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::encodeHeadersBase(Envoy::Http::RequestOrResponseHeaderMap const&amp;, absl::optional&lt;unsigned long&gt;, bool, bool) (40 samples, 0.24%)</title><rect x="976.4" y="933" width="2.9" height="15.0" fill="rgb(237,129,24)" rx="2" ry="2" />
<text  x="979.44" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1,451 samples, 8.74%)</title><rect x="10.1" y="1333" width="103.2" height="15.0" fill="rgb(252,94,11)" rx="2" ry="2" />
<text  x="13.07" y="1343.5" >[unknown]</text>
</g>
<g >
<title>__wake_up_sync_key (85 samples, 0.51%)</title><rect x="925.7" y="501" width="6.0" height="15.0" fill="rgb(251,128,5)" rx="2" ry="2" />
<text  x="928.67" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::WriteMessage(google::protobuf::Type const&amp;, google::protobuf::stringpiece_internal::StringPiece, unsigned int, bool, google::protobuf::util::converter::ObjectWriter*) const (7 samples, 0.04%)</title><rect x="1004.2" y="789" width="0.5" height="15.0" fill="rgb(213,8,22)" rx="2" ry="2" />
<text  x="1007.18" y="799.5" ></text>
</g>
<g >
<title>echo-server (5,627 samples, 33.91%)</title><rect x="258.1" y="1381" width="400.2" height="15.0" fill="rgb(226,42,52)" rx="2" ry="2" />
<text  x="261.12" y="1391.5" >echo-server</text>
</g>
<g >
<title>irq_exit (3 samples, 0.02%)</title><rect x="623.4" y="1205" width="0.2" height="15.0" fill="rgb(224,148,22)" rx="2" ry="2" />
<text  x="626.36" y="1215.5" ></text>
</g>
<g >
<title>page_fault (6 samples, 0.04%)</title><rect x="539.7" y="1173" width="0.4" height="15.0" fill="rgb(252,156,25)" rx="2" ry="2" />
<text  x="542.66" y="1183.5" ></text>
</g>
<g >
<title>ksys_write (301 samples, 1.81%)</title><rect x="516.8" y="1125" width="21.4" height="15.0" fill="rgb(246,143,8)" rx="2" ry="2" />
<text  x="519.76" y="1135.5" >k..</text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::findValue(absl::string_view, google::protobuf::Arena*, bool) const (5 samples, 0.03%)</title><rect x="1107.2" y="885" width="0.4" height="15.0" fill="rgb(222,177,15)" rx="2" ry="2" />
<text  x="1110.22" y="895.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::setAndCheckCallbackStatus(absl::Status&amp;&amp;) (2 samples, 0.01%)</title><rect x="971.0" y="1077" width="0.2" height="15.0" fill="rgb(248,32,53)" rx="2" ry="2" />
<text  x="974.04" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::checkMaxHeadersSize() (3 samples, 0.02%)</title><rect x="1056.4" y="1061" width="0.2" height="15.0" fill="rgb(233,135,16)" rx="2" ry="2" />
<text  x="1059.38" y="1071.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.03%)</title><rect x="438.3" y="933" width="0.3" height="15.0" fill="rgb(206,222,46)" rx="2" ry="2" />
<text  x="441.25" y="943.5" ></text>
</g>
<g >
<title>do_futex (77 samples, 0.46%)</title><rect x="598.7" y="1173" width="5.5" height="15.0" fill="rgb(238,65,33)" rx="2" ry="2" />
<text  x="601.68" y="1183.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.01%)</title><rect x="1031.1" y="837" width="0.1" height="15.0" fill="rgb(216,90,51)" rx="2" ry="2" />
<text  x="1034.06" y="847.5" ></text>
</g>
<g >
<title>event_add_nolock_ (3 samples, 0.02%)</title><rect x="978.4" y="853" width="0.2" height="15.0" fill="rgb(237,194,31)" rx="2" ry="2" />
<text  x="981.43" y="863.5" ></text>
</g>
<g >
<title>kubelet (258 samples, 1.55%)</title><rect x="660.6" y="1381" width="18.3" height="15.0" fill="rgb(214,144,21)" rx="2" ry="2" />
<text  x="663.55" y="1391.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::get_header_map_value(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (4 samples, 0.02%)</title><rect x="1031.4" y="837" width="0.3" height="15.0" fill="rgb(210,174,48)" rx="2" ry="2" />
<text  x="1034.42" y="847.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.01%)</title><rect x="644.4" y="1221" width="0.2" height="15.0" fill="rgb(234,204,44)" rx="2" ry="2" />
<text  x="647.41" y="1231.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.04%)</title><rect x="507.4" y="1109" width="0.4" height="15.0" fill="rgb(230,207,50)" rx="2" ry="2" />
<text  x="510.37" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::add(void const*, unsigned long) (7 samples, 0.04%)</title><rect x="977.2" y="853" width="0.5" height="15.0" fill="rgb(253,76,52)" rx="2" ry="2" />
<text  x="980.23" y="863.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="131.4" y="1061" width="0.1" height="15.0" fill="rgb(228,207,39)" rx="2" ry="2" />
<text  x="134.39" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::addStreamEncoderFilterWorker(std::__1::shared_ptr&lt;Envoy::Http::StreamEncoderFilter&gt;, std::__1::shared_ptr&lt;Envoy::Http::FilterMatchState&gt;, bool) (2 samples, 0.01%)</title><rect x="1077.6" y="965" width="0.2" height="15.0" fill="rgb(218,167,20)" rx="2" ry="2" />
<text  x="1080.64" y="975.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::ClientConnectionImpl::onHeadersCompleteBase() (289 samples, 1.74%)</title><rect x="717.1" y="1061" width="20.5" height="15.0" fill="rgb(243,195,25)" rx="2" ry="2" />
<text  x="720.09" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Event::FileEventImpl::setEnabled(unsigned int) (42 samples, 0.25%)</title><rect x="740.8" y="885" width="3.0" height="15.0" fill="rgb(252,25,51)" rx="2" ry="2" />
<text  x="743.77" y="895.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="716.9" y="1061" width="0.2" height="15.0" fill="rgb(216,37,5)" rx="2" ry="2" />
<text  x="719.95" y="1071.5" ></text>
</g>
<g >
<title>ext4_do_update_inode (20 samples, 0.12%)</title><rect x="243.0" y="1045" width="1.5" height="15.0" fill="rgb(207,117,33)" rx="2" ry="2" />
<text  x="246.04" y="1055.5" ></text>
</g>
<g >
<title>do_epoll_wait (24 samples, 0.14%)</title><rect x="605.2" y="1189" width="1.7" height="15.0" fill="rgb(233,83,53)" rx="2" ry="2" />
<text  x="608.23" y="1199.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::shared_ptr&lt;Envoy::Tracing::CustomTag const&gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::shared_ptr&lt;Envoy::Tracing::CustomTag const&gt; &gt; &gt; &gt;::destroy_slots() (3 samples, 0.02%)</title><rect x="963.9" y="1237" width="0.2" height="15.0" fill="rgb(227,127,25)" rx="2" ry="2" />
<text  x="966.86" y="1247.5" ></text>
</g>
<g >
<title>__inet_lookup_established (5 samples, 0.03%)</title><rect x="913.4" y="389" width="0.4" height="15.0" fill="rgb(227,130,8)" rx="2" ry="2" />
<text  x="916.44" y="399.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Tracer::startSpan(Envoy::Tracing::Config const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::chrono::time_point&lt;std::__1::chrono::system_clock, std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000000l&gt; &gt; &gt;) (6 samples, 0.04%)</title><rect x="822.2" y="981" width="0.4" height="15.0" fill="rgb(236,75,9)" rx="2" ry="2" />
<text  x="825.20" y="991.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::RenderStruct(google::protobuf::util::converter::ProtoStreamObjectSource const*, google::protobuf::Type const&amp;, google::protobuf::stringpiece_internal::StringPiece, google::protobuf::util::converter::ObjectWriter*) (3 samples, 0.02%)</title><rect x="751.4" y="693" width="0.3" height="15.0" fill="rgb(218,54,49)" rx="2" ry="2" />
<text  x="754.44" y="703.5" ></text>
</g>
<g >
<title>mod_timer (2 samples, 0.01%)</title><rect x="1174.7" y="485" width="0.2" height="15.0" fill="rgb(238,37,6)" rx="2" ry="2" />
<text  x="1177.71" y="495.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestEncoderWrapper::encodeData(Envoy::Buffer::Instance&amp;, bool) (6 samples, 0.04%)</title><rect x="869.3" y="997" width="0.5" height="15.0" fill="rgb(246,70,2)" rx="2" ry="2" />
<text  x="872.35" y="1007.5" ></text>
</g>
<g >
<title>security_file_permission (3 samples, 0.02%)</title><rect x="516.4" y="1061" width="0.2" height="15.0" fill="rgb(230,23,53)" rx="2" ry="2" />
<text  x="519.41" y="1071.5" ></text>
</g>
<g >
<title>ksys_read (81 samples, 0.49%)</title><rect x="672.9" y="1093" width="5.7" height="15.0" fill="rgb(228,140,37)" rx="2" ry="2" />
<text  x="675.86" y="1103.5" ></text>
</g>
<g >
<title>void std::__1::vector&lt;Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation, std::__1::allocator&lt;Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation&gt; &gt;::__emplace_back_slow_path&lt;Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation&gt;(Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation&amp;&amp;) (15 samples, 0.09%)</title><rect x="753.5" y="901" width="1.1" height="15.0" fill="rgb(244,140,3)" rx="2" ry="2" />
<text  x="756.50" y="911.5" ></text>
</g>
<g >
<title>[unknown] (1,194 samples, 7.20%)</title><rect x="15.2" y="1269" width="84.9" height="15.0" fill="rgb(219,58,19)" rx="2" ry="2" />
<text  x="18.19" y="1279.5" >[unknown]</text>
</g>
<g >
<title>pipe_read (367 samples, 2.21%)</title><rect x="140.9" y="1109" width="26.0" height="15.0" fill="rgb(234,17,46)" rx="2" ry="2" />
<text  x="143.85" y="1119.5" >p..</text>
</g>
<g >
<title>Envoy::Runtime::runtimeFeatureEnabled(absl::string_view) (3 samples, 0.02%)</title><rect x="716.0" y="1013" width="0.2" height="15.0" fill="rgb(225,66,21)" rx="2" ry="2" />
<text  x="719.02" y="1023.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::get_property(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (53 samples, 0.32%)</title><rect x="779.8" y="837" width="3.8" height="15.0" fill="rgb(231,219,9)" rx="2" ry="2" />
<text  x="782.81" y="847.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (343 samples, 2.07%)</title><rect x="562.1" y="805" width="24.4" height="15.0" fill="rgb(245,124,52)" rx="2" ry="2" />
<text  x="565.06" y="815.5" >d..</text>
</g>
<g >
<title>event_active_nolock_ (3 samples, 0.02%)</title><rect x="687.7" y="1269" width="0.2" height="15.0" fill="rgb(228,83,18)" rx="2" ry="2" />
<text  x="690.72" y="1279.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::ResponseHeaderMap&gt;::iterate(std::__1::function&lt;Envoy::Http::HeaderMap::Iterate (Envoy::Http::HeaderEntry const&amp;)&gt;) const (21 samples, 0.13%)</title><rect x="722.3" y="917" width="1.5" height="15.0" fill="rgb(248,36,18)" rx="2" ry="2" />
<text  x="725.28" y="927.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 0.23%)</title><rect x="436.0" y="1013" width="2.7" height="15.0" fill="rgb(212,188,24)" rx="2" ry="2" />
<text  x="438.97" y="1023.5" ></text>
</g>
<g >
<title>event_del_nolock_ (35 samples, 0.21%)</title><rect x="1123.2" y="1013" width="2.4" height="15.0" fill="rgb(241,73,19)" rx="2" ry="2" />
<text  x="1126.15" y="1023.5" ></text>
</g>
<g >
<title>common_file_perm (3 samples, 0.02%)</title><rect x="918.2" y="1013" width="0.2" height="15.0" fill="rgb(215,102,10)" rx="2" ry="2" />
<text  x="921.20" y="1023.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (3 samples, 0.02%)</title><rect x="1039.3" y="693" width="0.2" height="15.0" fill="rgb(223,145,48)" rx="2" ry="2" />
<text  x="1042.31" y="703.5" ></text>
</g>
<g >
<title>read_tsc (3 samples, 0.02%)</title><rect x="587.2" y="725" width="0.2" height="15.0" fill="rgb(223,207,29)" rx="2" ry="2" />
<text  x="590.16" y="735.5" ></text>
</g>
<g >
<title>__fdget_pos (3 samples, 0.02%)</title><rect x="921.9" y="1093" width="0.2" height="15.0" fill="rgb(211,197,50)" rx="2" ry="2" />
<text  x="924.90" y="1103.5" ></text>
</g>
<g >
<title>__lock_text_start (29 samples, 0.17%)</title><rect x="543.5" y="1077" width="2.1" height="15.0" fill="rgb(217,217,50)" rx="2" ry="2" />
<text  x="546.50" y="1087.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="657.1" y="1237" width="0.3" height="15.0" fill="rgb(219,90,36)" rx="2" ry="2" />
<text  x="660.14" y="1247.5" ></text>
</g>
<g >
<title>__lock_text_start (15 samples, 0.09%)</title><rect x="101.0" y="1189" width="1.0" height="15.0" fill="rgb(224,23,8)" rx="2" ry="2" />
<text  x="103.96" y="1199.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="1145.8" y="757" width="0.2" height="15.0" fill="rgb(206,47,15)" rx="2" ry="2" />
<text  x="1148.84" y="767.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::drainImpl(unsigned long) (9 samples, 0.05%)</title><rect x="903.3" y="1173" width="0.7" height="15.0" fill="rgb(248,82,35)" rx="2" ry="2" />
<text  x="906.34" y="1183.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (2 samples, 0.01%)</title><rect x="240.5" y="1045" width="0.1" height="15.0" fill="rgb(219,0,50)" rx="2" ry="2" />
<text  x="243.48" y="1055.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::is_map_message_type() const (2 samples, 0.01%)</title><rect x="1028.4" y="789" width="0.2" height="15.0" fill="rgb(209,40,14)" rx="2" ry="2" />
<text  x="1031.43" y="799.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::HttpConnPoolImplBase::newStream(Envoy::Http::ResponseDecoder&amp;, Envoy::Http::ConnectionPool::Callbacks&amp;) (140 samples, 0.84%)</title><rect x="836.6" y="981" width="9.9" height="15.0" fill="rgb(251,31,11)" rx="2" ry="2" />
<text  x="839.56" y="991.5" ></text>
</g>
<g >
<title>tcp_rcv_established (292 samples, 1.76%)</title><rect x="563.8" y="581" width="20.8" height="15.0" fill="rgb(229,8,5)" rx="2" ry="2" />
<text  x="566.84" y="591.5" ></text>
</g>
<g >
<title>ip_finish_output2 (46 samples, 0.28%)</title><rect x="908.7" y="341" width="3.3" height="15.0" fill="rgb(217,165,18)" rx="2" ry="2" />
<text  x="911.74" y="351.5" ></text>
</g>
<g >
<title>Envoy::ThreadLocal::InstanceImpl::SlotImpl::get() (2 samples, 0.01%)</title><rect x="1095.8" y="885" width="0.2" height="15.0" fill="rgb(223,179,7)" rx="2" ry="2" />
<text  x="1098.84" y="895.5" ></text>
</g>
<g >
<title>inet_sendmsg (180 samples, 1.08%)</title><rect x="904.8" y="1013" width="12.8" height="15.0" fill="rgb(228,105,15)" rx="2" ry="2" />
<text  x="907.83" y="1023.5" ></text>
</g>
<g >
<title>proxy_wasm::null_plugin::Stats::PluginContext::~PluginContext() (2 samples, 0.01%)</title><rect x="1045.9" y="901" width="0.2" height="15.0" fill="rgb(224,143,6)" rx="2" ry="2" />
<text  x="1048.92" y="911.5" ></text>
</g>
<g >
<title>Envoy::ConstSingleton&lt;Envoy::Http::HeaderValues&gt;::get() (2 samples, 0.01%)</title><rect x="971.3" y="1077" width="0.1" height="15.0" fill="rgb(207,50,21)" rx="2" ry="2" />
<text  x="974.25" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (5,489 samples, 33.08%)</title><rect x="267.3" y="1301" width="390.3" height="15.0" fill="rgb(233,53,0)" rx="2" ry="2" />
<text  x="270.29" y="1311.5" >[unknown]</text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.02%)</title><rect x="1159.6" y="101" width="0.2" height="15.0" fill="rgb(213,61,31)" rx="2" ry="2" />
<text  x="1162.56" y="111.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::recordMetric(unsigned int, unsigned long) (9 samples, 0.05%)</title><rect x="1042.4" y="837" width="0.7" height="15.0" fill="rgb(237,120,44)" rx="2" ry="2" />
<text  x="1045.44" y="847.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (152 samples, 0.92%)</title><rect x="923.2" y="917" width="10.8" height="15.0" fill="rgb(231,165,24)" rx="2" ry="2" />
<text  x="926.18" y="927.5" ></text>
</g>
<g >
<title>wake_up_q (2 samples, 0.01%)</title><rect x="484.9" y="917" width="0.1" height="15.0" fill="rgb(254,144,40)" rx="2" ry="2" />
<text  x="487.90" y="927.5" ></text>
</g>
<g >
<title>dockerd (2,006 samples, 12.09%)</title><rect x="115.4" y="1381" width="142.6" height="15.0" fill="rgb(231,27,20)" rx="2" ry="2" />
<text  x="118.39" y="1391.5" >dockerd</text>
</g>
<g >
<title>simple_copy_to_iter (12 samples, 0.07%)</title><rect x="513.9" y="965" width="0.9" height="15.0" fill="rgb(210,185,34)" rx="2" ry="2" />
<text  x="516.92" y="975.5" ></text>
</g>
<g >
<title>local.runtime.mPark (168 samples, 1.01%)</title><rect x="213.7" y="1205" width="11.9" height="15.0" fill="rgb(218,183,34)" rx="2" ry="2" />
<text  x="216.67" y="1215.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (143 samples, 0.86%)</title><rect x="1174.6" y="597" width="10.1" height="15.0" fill="rgb(217,97,30)" rx="2" ry="2" />
<text  x="1177.57" y="607.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelExpressionFlatImpl::Trace(google::api::expr::runtime::BaseActivation const&amp;, google::api::expr::runtime::CelEvaluationState*, std::__1::function&lt;absl::Status (long, google::api::expr::runtime::CelValue const&amp;, google::protobuf::Arena*)&gt;) const (50 samples, 0.30%)</title><rect x="785.6" y="773" width="3.5" height="15.0" fill="rgb(243,14,11)" rx="2" ry="2" />
<text  x="788.57" y="783.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onMessageBegin() (16 samples, 0.10%)</title><rect x="715.2" y="1077" width="1.2" height="15.0" fill="rgb(229,201,32)" rx="2" ry="2" />
<text  x="718.24" y="1087.5" ></text>
</g>
<g >
<title>Envoy::ConstSingleton&lt;Envoy::Http::HeaderValues&gt;::get() (2 samples, 0.01%)</title><rect x="1003.8" y="917" width="0.1" height="15.0" fill="rgb(218,166,9)" rx="2" ry="2" />
<text  x="1006.75" y="927.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (2 samples, 0.01%)</title><rect x="251.4" y="1029" width="0.2" height="15.0" fill="rgb(239,199,7)" rx="2" ry="2" />
<text  x="254.43" y="1039.5" ></text>
</g>
<g >
<title>file_update_time (3 samples, 0.02%)</title><rect x="83.5" y="1109" width="0.2" height="15.0" fill="rgb(246,161,49)" rx="2" ry="2" />
<text  x="86.53" y="1119.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="84.0" y="1205" width="0.2" height="15.0" fill="rgb(231,226,8)" rx="2" ry="2" />
<text  x="87.03" y="1215.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.01%)</title><rect x="539.5" y="1125" width="0.2" height="15.0" fill="rgb(219,132,42)" rx="2" ry="2" />
<text  x="542.52" y="1135.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelExpressionFlatEvaluationState::CelExpressionFlatEvaluationState(unsigned long, std::__1::set&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, google::protobuf::Arena*) (5 samples, 0.03%)</title><rect x="1040.8" y="773" width="0.4" height="15.0" fill="rgb(238,136,22)" rx="2" ry="2" />
<text  x="1043.80" y="783.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (139 samples, 0.84%)</title><rect x="1174.7" y="565" width="9.9" height="15.0" fill="rgb(249,44,11)" rx="2" ry="2" />
<text  x="1177.71" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (221 samples, 1.33%)</title><rect x="84.3" y="1253" width="15.7" height="15.0" fill="rgb(241,50,47)" rx="2" ry="2" />
<text  x="87.31" y="1263.5" ></text>
</g>
<g >
<title>Envoy::Network::FilterManagerImpl::onContinueReading(Envoy::Network::FilterManagerImpl::ActiveReadFilter*, Envoy::Network::ReadBufferSource&amp;) (2,423 samples, 14.60%)</title><rect x="711.8" y="1221" width="172.3" height="15.0" fill="rgb(215,206,20)" rx="2" ry="2" />
<text  x="714.76" y="1231.5" >Envoy::Network::Filter..</text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*, char const*, unsigned long)#2}::__invoke(http_parser*, char const*, unsigned long) (20 samples, 0.12%)</title><rect x="1054.7" y="1093" width="1.5" height="15.0" fill="rgb(227,5,38)" rx="2" ry="2" />
<text  x="1057.74" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ResponseEncoderImpl::encodeHeaders(Envoy::Http::ResponseHeaderMap const&amp;, bool) (50 samples, 0.30%)</title><rect x="976.1" y="949" width="3.5" height="15.0" fill="rgb(227,160,48)" rx="2" ry="2" />
<text  x="979.09" y="959.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (2 samples, 0.01%)</title><rect x="1145.4" y="965" width="0.2" height="15.0" fill="rgb(220,158,0)" rx="2" ry="2" />
<text  x="1148.41" y="975.5" ></text>
</g>
<g >
<title>std::__1::pair&lt;google::protobuf::Map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, google::protobuf::Struct&gt;::InnerMap::iterator_base&lt;google::protobuf::MapPair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, google::protobuf::Struct&gt; const&gt;, unsigned long&gt; google::protobuf::Map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, google::protobuf::Struct&gt;::InnerMap::FindHelper&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::__map_iterator&lt;std::__1::__tree_iterator&lt;std::__1::__value_type&lt;std::__1::reference_wrapper&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt;, void*&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::reference_wrapper&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt;, void*&gt;, void*&gt;*, long&gt; &gt;*) const (3 samples, 0.02%)</title><rect x="1010.6" y="885" width="0.3" height="15.0" fill="rgb(235,79,49)" rx="2" ry="2" />
<text  x="1013.65" y="895.5" ></text>
</g>
<g >
<title>Envoy::Tracing::MetadataCustomTag::metadata(Envoy::Tracing::CustomTagContext const&amp;) const (2 samples, 0.01%)</title><rect x="758.3" y="901" width="0.2" height="15.0" fill="rgb(221,95,47)" rx="2" ry="2" />
<text  x="761.34" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="224.9" y="1125" width="0.5" height="15.0" fill="rgb(211,101,44)" rx="2" ry="2" />
<text  x="227.91" y="1135.5" ></text>
</g>
<g >
<title>nf_hook_slow (8 samples, 0.05%)</title><rect x="1164.3" y="613" width="0.5" height="15.0" fill="rgb(252,17,30)" rx="2" ry="2" />
<text  x="1167.26" y="623.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.01%)</title><rect x="33.7" y="949" width="0.1" height="15.0" fill="rgb(239,59,23)" rx="2" ry="2" />
<text  x="36.68" y="959.5" ></text>
</g>
<g >
<title>do_syscall_64 (115 samples, 0.69%)</title><rect x="1143.0" y="1141" width="8.2" height="15.0" fill="rgb(251,43,39)" rx="2" ry="2" />
<text  x="1145.99" y="1151.5" ></text>
</g>
<g >
<title>aa_label_next_confined (2 samples, 0.01%)</title><rect x="1147.8" y="949" width="0.1" height="15.0" fill="rgb(237,41,17)" rx="2" ry="2" />
<text  x="1150.76" y="959.5" ></text>
</g>
<g >
<title>proxy_wasm::ContextBase::onDelete() (9 samples, 0.05%)</title><rect x="1045.6" y="949" width="0.6" height="15.0" fill="rgb(216,23,37)" rx="2" ry="2" />
<text  x="1048.57" y="959.5" ></text>
</g>
<g >
<title>mutex_unlock (5 samples, 0.03%)</title><rect x="140.0" y="1109" width="0.4" height="15.0" fill="rgb(211,3,42)" rx="2" ry="2" />
<text  x="143.00" y="1119.5" ></text>
</g>
<g >
<title>runtime.stopm (3 samples, 0.02%)</title><rect x="114.3" y="1253" width="0.2" height="15.0" fill="rgb(234,210,49)" rx="2" ry="2" />
<text  x="117.25" y="1263.5" ></text>
</g>
<g >
<title>sock_def_readable (86 samples, 0.52%)</title><rect x="925.7" y="517" width="6.1" height="15.0" fill="rgb(229,84,7)" rx="2" ry="2" />
<text  x="928.67" y="527.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (8 samples, 0.05%)</title><rect x="560.3" y="805" width="0.6" height="15.0" fill="rgb(209,144,0)" rx="2" ry="2" />
<text  x="563.28" y="815.5" ></text>
</g>
<g >
<title>Envoy::Router::ConfigImpl::mostSpecificHeaderMutationsWins() const (2 samples, 0.01%)</title><rect x="730.5" y="981" width="0.2" height="15.0" fill="rgb(244,182,27)" rx="2" ry="2" />
<text  x="733.53" y="991.5" ></text>
</g>
<g >
<title>finish_task_switch (3 samples, 0.02%)</title><rect x="511.0" y="1061" width="0.2" height="15.0" fill="rgb(244,60,26)" rx="2" ry="2" />
<text  x="514.00" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Stats::ThreadLocalStoreImpl::ScopeImpl::counterFromStatNameWithTags(Envoy::Stats::StatName const&amp;, absl::optional&lt;std::__1::reference_wrapper&lt;std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; const&gt; &gt;) (9 samples, 0.05%)</title><rect x="986.5" y="933" width="0.7" height="15.0" fill="rgb(251,76,14)" rx="2" ry="2" />
<text  x="989.54" y="943.5" ></text>
</g>
<g >
<title>tcp_recvmsg (44 samples, 0.27%)</title><rect x="619.1" y="1077" width="3.1" height="15.0" fill="rgb(248,146,20)" rx="2" ry="2" />
<text  x="622.09" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="506.7" y="1093" width="0.2" height="15.0" fill="rgb(205,132,30)" rx="2" ry="2" />
<text  x="509.73" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="598.3" y="1205" width="0.2" height="15.0" fill="rgb(253,41,11)" rx="2" ry="2" />
<text  x="601.33" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Filters::Common::Expr::CelState::exprValue(google::protobuf::Arena*, bool) const (2 samples, 0.01%)</title><rect x="1016.1" y="789" width="0.2" height="15.0" fill="rgb(251,5,28)" rx="2" ry="2" />
<text  x="1019.13" y="799.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="679.5" y="1349" width="0.2" height="15.0" fill="rgb(228,176,18)" rx="2" ry="2" />
<text  x="682.54" y="1359.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::getExisting(absl::string_view) (3 samples, 0.02%)</title><rect x="861.2" y="885" width="0.3" height="15.0" fill="rgb(236,13,27)" rx="2" ry="2" />
<text  x="864.24" y="895.5" ></text>
</g>
<g >
<title>Envoy::Http::CodeStatsImpl::writeCategory(Envoy::Http::CodeStats::ResponseStatInfo const&amp;, Envoy::Stats::StatName, Envoy::Stats::StatName, Envoy::Stats::StatName) const (11 samples, 0.07%)</title><rect x="986.4" y="949" width="0.8" height="15.0" fill="rgb(252,220,20)" rx="2" ry="2" />
<text  x="989.40" y="959.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="682.0" y="1317" width="0.2" height="15.0" fill="rgb(219,159,47)" rx="2" ry="2" />
<text  x="684.96" y="1327.5" ></text>
</g>
<g >
<title>Envoy::Http::ActiveStreamEncoderFilter::~ActiveStreamEncoderFilter() (3 samples, 0.02%)</title><rect x="962.6" y="1221" width="0.2" height="15.0" fill="rgb(222,3,45)" rx="2" ry="2" />
<text  x="965.58" y="1231.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (22 samples, 0.13%)</title><rect x="744.1" y="773" width="1.6" height="15.0" fill="rgb(220,144,6)" rx="2" ry="2" />
<text  x="747.11" y="783.5" ></text>
</g>
<g >
<title>std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; Envoy::Http::HeaderMapImpl::HeaderList::insert&lt;Envoy::Http::LowerCaseString const&amp;, Envoy::Http::HeaderString&gt;(Envoy::Http::LowerCaseString const&amp;, Envoy::Http::HeaderString&amp;&amp;) (2 samples, 0.01%)</title><rect x="804.6" y="1013" width="0.2" height="15.0" fill="rgb(224,119,44)" rx="2" ry="2" />
<text  x="807.63" y="1023.5" ></text>
</g>
<g >
<title>std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::unique_ptr&lt;proxy_wasm::ContextBase, std::__1::default_delete&lt;proxy_wasm::ContextBase&gt; &gt; &gt;, void*&gt;*&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::unique_ptr&lt;proxy_wasm::ContextBase, std::__1::default_delete&lt;proxy_wasm::ContextBase&gt; &gt; &gt;, std::__1::__unordered_map_hasher&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::unique_ptr&lt;proxy_wasm::ContextBase, std::__1::default_delete&lt;proxy_wasm::ContextBase&gt; &gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::__unordered_map_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::unique_ptr&lt;proxy_wasm::ContextBase, std::__1::default_delete&lt;proxy_wasm::ContextBase&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::unique_ptr&lt;proxy_wasm::ContextBase, std::__1::default_delete&lt;proxy_wasm::ContextBase&gt; &gt; &gt; &gt; &gt;::find&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) (4 samples, 0.02%)</title><rect x="1078.8" y="933" width="0.3" height="15.0" fill="rgb(225,108,21)" rx="2" ry="2" />
<text  x="1081.78" y="943.5" ></text>
</g>
<g >
<title>time.Time.date (2 samples, 0.01%)</title><rect x="231.9" y="1253" width="0.2" height="15.0" fill="rgb(248,137,10)" rx="2" ry="2" />
<text  x="234.95" y="1263.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::onUpstreamComplete(Envoy::Router::UpstreamRequest&amp;) (39 samples, 0.24%)</title><rect x="1048.6" y="981" width="2.7" height="15.0" fill="rgb(246,62,16)" rx="2" ry="2" />
<text  x="1051.55" y="991.5" ></text>
</g>
<g >
<title>Wasm::Common::extractEmptyNodeFlatBuffer() (2 samples, 0.01%)</title><rect x="763.2" y="837" width="0.1" height="15.0" fill="rgb(237,38,32)" rx="2" ry="2" />
<text  x="766.17" y="847.5" ></text>
</g>
<g >
<title>common_file_perm (2 samples, 0.01%)</title><rect x="622.4" y="1093" width="0.1" height="15.0" fill="rgb(214,147,16)" rx="2" ry="2" />
<text  x="625.37" y="1103.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="1131.5" y="981" width="0.2" height="15.0" fill="rgb(226,36,6)" rx="2" ry="2" />
<text  x="1134.54" y="991.5" ></text>
</g>
<g >
<title>event_base_loop (3,537 samples, 21.32%)</title><rect x="685.6" y="1317" width="251.5" height="15.0" fill="rgb(220,184,10)" rx="2" ry="2" />
<text  x="688.59" y="1327.5" >event_base_loop</text>
</g>
<g >
<title>import_iovec (8 samples, 0.05%)</title><rect x="1149.3" y="1077" width="0.5" height="15.0" fill="rgb(237,138,28)" rx="2" ry="2" />
<text  x="1152.25" y="1087.5" ></text>
</g>
<g >
<title>runtime.wirep (2 samples, 0.01%)</title><rect x="213.5" y="1189" width="0.2" height="15.0" fill="rgb(206,212,8)" rx="2" ry="2" />
<text  x="216.53" y="1199.5" ></text>
</g>
<g >
<title>nf_conntrack_in (3 samples, 0.02%)</title><rect x="1159.3" y="149" width="0.2" height="15.0" fill="rgb(205,157,33)" rx="2" ry="2" />
<text  x="1162.28" y="159.5" ></text>
</g>
<g >
<title>common_file_perm (6 samples, 0.04%)</title><rect x="899.1" y="997" width="0.4" height="15.0" fill="rgb(234,47,28)" rx="2" ry="2" />
<text  x="902.07" y="1007.5" ></text>
</g>
<g >
<title>do_iter_write (187 samples, 1.13%)</title><rect x="922.2" y="1077" width="13.3" height="15.0" fill="rgb(253,20,45)" rx="2" ry="2" />
<text  x="925.18" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onFileEvent(unsigned int) (2,847 samples, 17.16%)</title><rect x="966.1" y="1253" width="202.5" height="15.0" fill="rgb(214,12,31)" rx="2" ry="2" />
<text  x="969.13" y="1263.5" >Envoy::Network::Connection..</text>
</g>
<g >
<title>i40e_lan_xmit_frame (6 samples, 0.04%)</title><rect x="910.9" y="69" width="0.4" height="15.0" fill="rgb(244,91,47)" rx="2" ry="2" />
<text  x="913.88" y="79.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ThreadSafeArena::~ThreadSafeArena() (3 samples, 0.02%)</title><rect x="782.8" y="805" width="0.2" height="15.0" fill="rgb(217,211,24)" rx="2" ry="2" />
<text  x="785.80" y="815.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::chargeStats(Envoy::Http::ResponseHeaderMap const&amp;) (4 samples, 0.02%)</title><rect x="720.6" y="949" width="0.3" height="15.0" fill="rgb(252,47,0)" rx="2" ry="2" />
<text  x="723.57" y="959.5" ></text>
</g>
<g >
<title>evthread_posix_get_id (4 samples, 0.02%)</title><rect x="1125.6" y="1013" width="0.3" height="15.0" fill="rgb(225,208,35)" rx="2" ry="2" />
<text  x="1128.64" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation::BinaryAnnotation(Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation const&amp;) (2 samples, 0.01%)</title><rect x="1009.6" y="869" width="0.1" height="15.0" fill="rgb(227,229,17)" rx="2" ry="2" />
<text  x="1012.58" y="879.5" ></text>
</g>
<g >
<title>[unknown] (5,586 samples, 33.66%)</title><rect x="260.8" y="1317" width="397.3" height="15.0" fill="rgb(233,139,10)" rx="2" ry="2" />
<text  x="263.82" y="1327.5" >[unknown]</text>
</g>
<g >
<title>runtime.putfull (7 samples, 0.04%)</title><rect x="254.5" y="1269" width="0.5" height="15.0" fill="rgb(226,5,20)" rx="2" ry="2" />
<text  x="257.49" y="1279.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::setReferenceInline(Envoy::Http::CustomInlineHeaderRegistry::Handle&lt;(Envoy::Http::CustomInlineHeaderRegistry::Type)0&gt;, absl::string_view) (2 samples, 0.01%)</title><rect x="825.5" y="1013" width="0.1" height="15.0" fill="rgb(240,59,25)" rx="2" ry="2" />
<text  x="828.47" y="1023.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::ValueFromMessage(google::protobuf::Value const*, google::protobuf::Arena*) (7 samples, 0.04%)</title><rect x="773.6" y="773" width="0.5" height="15.0" fill="rgb(224,213,26)" rx="2" ry="2" />
<text  x="776.55" y="783.5" ></text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.01%)</title><rect x="226.0" y="1221" width="0.1" height="15.0" fill="rgb(237,41,30)" rx="2" ry="2" />
<text  x="228.97" y="1231.5" ></text>
</g>
<g >
<title>__sched_text_start (62 samples, 0.37%)</title><rect x="491.7" y="933" width="4.4" height="15.0" fill="rgb(253,221,5)" rx="2" ry="2" />
<text  x="494.73" y="943.5" ></text>
</g>
<g >
<title>__fget_light (12 samples, 0.07%)</title><rect x="236.1" y="1173" width="0.8" height="15.0" fill="rgb(254,61,53)" rx="2" ry="2" />
<text  x="239.07" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::encodeData(Envoy::Buffer::Instance&amp;, bool) (3 samples, 0.02%)</title><rect x="1121.9" y="981" width="0.3" height="15.0" fill="rgb(211,46,39)" rx="2" ry="2" />
<text  x="1124.94" y="991.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::hasDataWithName(absl::string_view) const (2 samples, 0.01%)</title><rect x="1032.4" y="789" width="0.2" height="15.0" fill="rgb(225,35,6)" rx="2" ry="2" />
<text  x="1035.41" y="799.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (45 samples, 0.27%)</title><rect x="908.7" y="293" width="3.2" height="15.0" fill="rgb(225,85,32)" rx="2" ry="2" />
<text  x="911.74" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (43 samples, 0.26%)</title><rect x="126.6" y="1077" width="3.1" height="15.0" fill="rgb(213,39,22)" rx="2" ry="2" />
<text  x="129.63" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::Slice(unsigned long, std::__1::shared_ptr&lt;Envoy::Buffer::BufferMemoryAccount&gt;, absl::optional&lt;Envoy::Buffer::Slice::FreeListReference&gt;) (6 samples, 0.04%)</title><rect x="887.1" y="1157" width="0.5" height="15.0" fill="rgb(224,162,2)" rx="2" ry="2" />
<text  x="890.12" y="1167.5" ></text>
</g>
<g >
<title>dev_queue_xmit (52 samples, 0.31%)</title><rect x="1158.1" y="325" width="3.7" height="15.0" fill="rgb(219,55,25)" rx="2" ry="2" />
<text  x="1161.07" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::Value::_InternalSerialize(unsigned char*, google::protobuf::io::EpsCopyOutputStream*) const (2 samples, 0.01%)</title><rect x="750.9" y="773" width="0.1" height="15.0" fill="rgb(233,76,22)" rx="2" ry="2" />
<text  x="753.87" y="783.5" ></text>
</g>
<g >
<title>ip_vs_local_reply4 (2 samples, 0.01%)</title><rect x="1173.3" y="837" width="0.1" height="15.0" fill="rgb(208,210,41)" rx="2" ry="2" />
<text  x="1176.29" y="847.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::length() const (2 samples, 0.01%)</title><rect x="884.3" y="1205" width="0.1" height="15.0" fill="rgb(236,215,17)" rx="2" ry="2" />
<text  x="887.28" y="1215.5" ></text>
</g>
<g >
<title>find_get_entry (11 samples, 0.07%)</title><rect x="240.6" y="1045" width="0.8" height="15.0" fill="rgb(224,92,20)" rx="2" ry="2" />
<text  x="243.62" y="1055.5" ></text>
</g>
<g >
<title>local.runtime.park_m (746 samples, 4.50%)</title><rect x="173.2" y="1269" width="53.1" height="15.0" fill="rgb(238,91,34)" rx="2" ry="2" />
<text  x="176.21" y="1279.5" >local..</text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getBuffer(proxy_wasm::WasmBufferType) (2 samples, 0.01%)</title><rect x="1117.5" y="1029" width="0.2" height="15.0" fill="rgb(234,51,40)" rx="2" ry="2" />
<text  x="1120.53" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderString::size() const (2 samples, 0.01%)</title><rect x="730.2" y="981" width="0.2" height="15.0" fill="rgb(209,176,5)" rx="2" ry="2" />
<text  x="733.25" y="991.5" ></text>
</g>
<g >
<title>__fget (4 samples, 0.02%)</title><rect x="645.1" y="1189" width="0.3" height="15.0" fill="rgb(243,58,23)" rx="2" ry="2" />
<text  x="648.12" y="1199.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (2 samples, 0.01%)</title><rect x="1146.0" y="981" width="0.1" height="15.0" fill="rgb(249,135,17)" rx="2" ry="2" />
<text  x="1148.98" y="991.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::move(Envoy::Buffer::Instance&amp;) (2 samples, 0.01%)</title><rect x="723.8" y="901" width="0.2" height="15.0" fill="rgb(214,0,14)" rx="2" ry="2" />
<text  x="726.85" y="911.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::ResponseHeaderMap&gt;::staticLookup(absl::string_view) (2 samples, 0.01%)</title><rect x="716.7" y="1029" width="0.1" height="15.0" fill="rgb(246,115,50)" rx="2" ry="2" />
<text  x="719.66" y="1039.5" ></text>
</g>
<g >
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="656.4" y="1109" width="0.3" height="15.0" fill="rgb(250,54,34)" rx="2" ry="2" />
<text  x="659.43" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*, char const*, unsigned long)#3}::__invoke(http_parser*, char const*, unsigned long) (10 samples, 0.06%)</title><rect x="806.5" y="1093" width="0.7" height="15.0" fill="rgb(250,159,48)" rx="2" ry="2" />
<text  x="809.48" y="1103.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (4 samples, 0.02%)</title><rect x="905.0" y="933" width="0.3" height="15.0" fill="rgb(208,193,8)" rx="2" ry="2" />
<text  x="908.04" y="943.5" ></text>
</g>
<g >
<title>runtime.notetsleep (7 samples, 0.04%)</title><rect x="119.7" y="1285" width="0.5" height="15.0" fill="rgb(251,53,37)" rx="2" ry="2" />
<text  x="122.73" y="1295.5" ></text>
</g>
<g >
<title>tcp_push (163 samples, 0.98%)</title><rect x="923.1" y="965" width="11.6" height="15.0" fill="rgb(223,126,39)" rx="2" ry="2" />
<text  x="926.11" y="975.5" ></text>
</g>
<g >
<title>try_to_wake_up (68 samples, 0.41%)</title><rect x="203.6" y="1061" width="4.8" height="15.0" fill="rgb(217,4,28)" rx="2" ry="2" />
<text  x="206.57" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Upstreams::Http::Http::HttpConnPool::onPoolReady(Envoy::Http::RequestEncoder&amp;, std::__1::shared_ptr&lt;Envoy::Upstream::HostDescription const&gt;, Envoy::StreamInfo::StreamInfo const&amp;, absl::optional&lt;Envoy::Http::Protocol&gt;) (115 samples, 0.69%)</title><rect x="836.9" y="917" width="8.2" height="15.0" fill="rgb(242,196,50)" rx="2" ry="2" />
<text  x="839.92" y="927.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::drainImpl(unsigned long) (2 samples, 0.01%)</title><rect x="1057.7" y="1141" width="0.1" height="15.0" fill="rgb(226,117,6)" rx="2" ry="2" />
<text  x="1060.66" y="1151.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="657.1" y="1093" width="0.2" height="15.0" fill="rgb(220,187,50)" rx="2" ry="2" />
<text  x="660.14" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::statusToInt(Envoy::Http::Http1::ParserStatus) const (2 samples, 0.01%)</title><rect x="814.5" y="1093" width="0.2" height="15.0" fill="rgb(231,1,34)" rx="2" ry="2" />
<text  x="817.52" y="1103.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::getByKey(absl::string_view) const (4 samples, 0.02%)</title><rect x="821.9" y="965" width="0.3" height="15.0" fill="rgb(250,103,13)" rx="2" ry="2" />
<text  x="824.91" y="975.5" ></text>
</g>
<g >
<title>std::__1::__shared_ptr_emplace&lt;Envoy::Network::TransportSocketOptionsImpl, std::__1::allocator&lt;Envoy::Network::TransportSocketOptionsImpl&gt; &gt;::__shared_ptr_emplace&lt;absl::string_view&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, absl::optional&lt;Envoy::Network::ProxyProtocolData&gt;&amp;&gt;(std::__1::allocator&lt;Envoy::Network::TransportSocketOptionsImpl&gt;, absl::string_view&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;, absl::optional&lt;Envoy::Network::ProxyProtocolData&gt;&amp;) (2 samples, 0.01%)</title><rect x="848.3" y="981" width="0.1" height="15.0" fill="rgb(250,79,50)" rx="2" ry="2" />
<text  x="851.30" y="991.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_fn (2 samples, 0.01%)</title><rect x="906.8" y="837" width="0.1" height="15.0" fill="rgb(210,188,4)" rx="2" ry="2" />
<text  x="909.75" y="847.5" ></text>
</g>
<g >
<title>Envoy::Event::ScaledRangeTimerManagerImpl::RangeTimerImpl::disableTimer() (2 samples, 0.01%)</title><rect x="1062.5" y="1029" width="0.1" height="15.0" fill="rgb(235,179,6)" rx="2" ry="2" />
<text  x="1065.49" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ActiveClient::StreamWrapper::~StreamWrapper() (10 samples, 0.06%)</title><rect x="739.3" y="1013" width="0.7" height="15.0" fill="rgb(238,25,4)" rx="2" ry="2" />
<text  x="742.28" y="1023.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void (proxy_wasm::ContextBase*, proxy_wasm::Word)&gt;*)::$_2, std::__1::allocator&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void (proxy_wasm::ContextBase*, proxy_wasm::Word)&gt;*)::$_2&gt;, void (proxy_wasm::ContextBase*, proxy_wasm::Word)&gt;::operator()(proxy_wasm::ContextBase*&amp;&amp;, proxy_wasm::Word&amp;&amp;) (9 samples, 0.05%)</title><rect x="1045.6" y="933" width="0.6" height="15.0" fill="rgb(229,49,44)" rx="2" ry="2" />
<text  x="1048.57" y="943.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Event::DispatcherImpl::pushTrackedObject(Envoy::ScopeTrackedObject const*) (2 samples, 0.01%)</title><rect x="736.3" y="1013" width="0.1" height="15.0" fill="rgb(238,17,30)" rx="2" ry="2" />
<text  x="739.29" y="1023.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_3, std::__1::allocator&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_3&gt;, void (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word)&gt;::operator()(proxy_wasm::ContextBase*&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;) (46 samples, 0.28%)</title><rect x="856.6" y="981" width="3.3" height="15.0" fill="rgb(232,47,31)" rx="2" ry="2" />
<text  x="859.62" y="991.5" ></text>
</g>
<g >
<title>finish_task_switch (271 samples, 1.63%)</title><rect x="439.5" y="885" width="19.2" height="15.0" fill="rgb(237,93,38)" rx="2" ry="2" />
<text  x="442.46" y="895.5" ></text>
</g>
<g >
<title>ip_finish_output2 (3 samples, 0.02%)</title><rect x="1166.3" y="789" width="0.2" height="15.0" fill="rgb(240,73,39)" rx="2" ry="2" />
<text  x="1169.32" y="799.5" ></text>
</g>
<g >
<title>netif_rx (2 samples, 0.01%)</title><rect x="1165.8" y="725" width="0.2" height="15.0" fill="rgb(215,31,51)" rx="2" ry="2" />
<text  x="1168.82" y="735.5" ></text>
</g>
<g >
<title>zap_page_range (57 samples, 0.34%)</title><rect x="625.6" y="1189" width="4.0" height="15.0" fill="rgb(205,227,8)" rx="2" ry="2" />
<text  x="628.57" y="1199.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_fn (2 samples, 0.01%)</title><rect x="1173.9" y="821" width="0.1" height="15.0" fill="rgb(248,131,18)" rx="2" ry="2" />
<text  x="1176.86" y="831.5" ></text>
</g>
<g >
<title>finish_task_switch (86 samples, 0.52%)</title><rect x="952.3" y="1141" width="6.1" height="15.0" fill="rgb(244,82,18)" rx="2" ry="2" />
<text  x="955.26" y="1151.5" ></text>
</g>
<g >
<title>ep_poll (4 samples, 0.02%)</title><rect x="133.1" y="1045" width="0.3" height="15.0" fill="rgb(243,14,38)" rx="2" ry="2" />
<text  x="136.10" y="1055.5" ></text>
</g>
<g >
<title>sync.(*poolChain).pushHead (2 samples, 0.01%)</title><rect x="172.6" y="1285" width="0.1" height="15.0" fill="rgb(237,104,50)" rx="2" ry="2" />
<text  x="175.57" y="1295.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::newStream(Envoy::Http::ResponseEncoder&amp;, bool) (24 samples, 0.14%)</title><rect x="812.3" y="1045" width="1.7" height="15.0" fill="rgb(236,41,11)" rx="2" ry="2" />
<text  x="815.31" y="1055.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.02%)</title><rect x="1171.3" y="1061" width="0.2" height="15.0" fill="rgb(211,5,53)" rx="2" ry="2" />
<text  x="1174.30" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onMessageBegin() (47 samples, 0.28%)</title><rect x="811.2" y="1093" width="3.3" height="15.0" fill="rgb(215,67,47)" rx="2" ry="2" />
<text  x="814.17" y="1103.5" ></text>
</g>
<g >
<title>google::protobuf::Descriptor::FindFieldByName(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) const (6 samples, 0.04%)</title><rect x="776.8" y="789" width="0.5" height="15.0" fill="rgb(225,140,45)" rx="2" ry="2" />
<text  x="779.83" y="799.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::hasDataWithName(absl::string_view) const (7 samples, 0.04%)</title><rect x="1098.5" y="981" width="0.5" height="15.0" fill="rgb(231,218,41)" rx="2" ry="2" />
<text  x="1101.55" y="991.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ThreadSafeArena::GetSerialArenaFallback(void*) (2 samples, 0.01%)</title><rect x="788.3" y="677" width="0.2" height="15.0" fill="rgb(248,186,18)" rx="2" ry="2" />
<text  x="791.35" y="687.5" ></text>
</g>
<g >
<title>wake_up_q (5 samples, 0.03%)</title><rect x="507.4" y="1045" width="0.4" height="15.0" fill="rgb(216,126,30)" rx="2" ry="2" />
<text  x="510.44" y="1055.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.01%)</title><rect x="623.4" y="1077" width="0.2" height="15.0" fill="rgb(232,116,19)" rx="2" ry="2" />
<text  x="626.43" y="1087.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::getMethodValue() const (2 samples, 0.01%)</title><rect x="862.4" y="1013" width="0.1" height="15.0" fill="rgb(230,164,20)" rx="2" ry="2" />
<text  x="865.38" y="1023.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (5 samples, 0.03%)</title><rect x="562.9" y="677" width="0.4" height="15.0" fill="rgb(235,49,53)" rx="2" ry="2" />
<text  x="565.91" y="687.5" ></text>
</g>
<g >
<title>bool proxy_wasm::null_plugin::evaluateExpression&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;(unsigned int, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (100 samples, 0.60%)</title><rect x="784.1" y="853" width="7.1" height="15.0" fill="rgb(209,77,9)" rx="2" ry="2" />
<text  x="787.08" y="863.5" ></text>
</g>
<g >
<title>Envoy::Upstream::ClusterManagerImpl::ThreadLocalClusterManagerImpl::getHttpConnPoolsContainer(std::__1::shared_ptr&lt;Envoy::Upstream::Host const&gt; const&amp;, bool) (2 samples, 0.01%)</title><rect x="1099.6" y="917" width="0.2" height="15.0" fill="rgb(205,108,44)" rx="2" ry="2" />
<text  x="1102.61" y="927.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.02%)</title><rect x="540.2" y="1189" width="0.2" height="15.0" fill="rgb(218,25,51)" rx="2" ry="2" />
<text  x="543.16" y="1199.5" ></text>
</g>
<g >
<title>new_sync_write (640 samples, 3.86%)</title><rect x="546.6" y="1093" width="45.5" height="15.0" fill="rgb(226,134,1)" rx="2" ry="2" />
<text  x="549.63" y="1103.5" >new_..</text>
</g>
<g >
<title>dev_queue_xmit (2 samples, 0.01%)</title><rect x="657.1" y="981" width="0.2" height="15.0" fill="rgb(231,123,42)" rx="2" ry="2" />
<text  x="660.14" y="991.5" ></text>
</g>
<g >
<title>sock_sendmsg (219 samples, 1.32%)</title><rect x="1171.9" y="1029" width="15.5" height="15.0" fill="rgb(246,34,20)" rx="2" ry="2" />
<text  x="1174.87" y="1039.5" ></text>
</g>
<g >
<title>mark_wake_futex (3 samples, 0.02%)</title><rect x="126.6" y="1013" width="0.2" height="15.0" fill="rgb(233,90,14)" rx="2" ry="2" />
<text  x="129.63" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Network::FilterManagerImpl::ActiveReadFilter::connection() (4 samples, 0.02%)</title><rect x="1111.8" y="1029" width="0.3" height="15.0" fill="rgb(241,90,6)" rx="2" ry="2" />
<text  x="1114.77" y="1039.5" ></text>
</g>
<g >
<title>common_file_perm (2 samples, 0.01%)</title><rect x="1149.0" y="1029" width="0.1" height="15.0" fill="rgb(239,68,40)" rx="2" ry="2" />
<text  x="1151.97" y="1039.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (2 samples, 0.01%)</title><rect x="1167.7" y="917" width="0.1" height="15.0" fill="rgb(254,66,35)" rx="2" ry="2" />
<text  x="1170.67" y="927.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="657.9" y="1269" width="0.2" height="15.0" fill="rgb(236,115,49)" rx="2" ry="2" />
<text  x="660.92" y="1279.5" ></text>
</g>
<g >
<title>skb_release_all (6 samples, 0.04%)</title><rect x="895.0" y="965" width="0.4" height="15.0" fill="rgb(226,105,24)" rx="2" ry="2" />
<text  x="898.02" y="975.5" ></text>
</g>
<g >
<title>__ksize (2 samples, 0.01%)</title><rect x="905.5" y="901" width="0.1" height="15.0" fill="rgb(239,42,52)" rx="2" ry="2" />
<text  x="908.47" y="911.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="250.4" y="1189" width="0.2" height="15.0" fill="rgb(209,27,25)" rx="2" ry="2" />
<text  x="253.44" y="1199.5" ></text>
</g>
<g >
<title>__sched_text_start (271 samples, 1.63%)</title><rect x="439.5" y="901" width="19.2" height="15.0" fill="rgb(229,18,21)" rx="2" ry="2" />
<text  x="442.46" y="911.5" ></text>
</g>
<g >
<title>Wasm::Common::PeerNodeInfo::PeerNodeInfo(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;) (24 samples, 0.14%)</title><rect x="763.0" y="853" width="1.7" height="15.0" fill="rgb(254,62,51)" rx="2" ry="2" />
<text  x="765.96" y="863.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::addBufferFragment(Envoy::Buffer::BufferFragment&amp;) (2 samples, 0.01%)</title><rect x="1000.5" y="917" width="0.1" height="15.0" fill="rgb(254,95,11)" rx="2" ry="2" />
<text  x="1003.48" y="927.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::serializeValue(google::api::expr::runtime::CelValue, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (27 samples, 0.16%)</title><rect x="765.6" y="773" width="1.9" height="15.0" fill="rgb(248,67,14)" rx="2" ry="2" />
<text  x="768.59" y="783.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::SelectStep::Evaluate(google::api::expr::runtime::ExecutionFrame*) const (8 samples, 0.05%)</title><rect x="1039.8" y="757" width="0.6" height="15.0" fill="rgb(231,79,27)" rx="2" ry="2" />
<text  x="1042.81" y="767.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::ResponseHeaderMap&gt;::staticLookup(absl::string_view) (2 samples, 0.01%)</title><rect x="971.9" y="1029" width="0.1" height="15.0" fill="rgb(206,188,33)" rx="2" ry="2" />
<text  x="974.89" y="1039.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.02%)</title><rect x="34.2" y="1045" width="0.2" height="15.0" fill="rgb(224,9,26)" rx="2" ry="2" />
<text  x="37.18" y="1055.5" ></text>
</g>
<g >
<title>github.com/docker/docker/vendor/github.com/pkg/errors.Wrap (2 samples, 0.01%)</title><rect x="227.0" y="1285" width="0.2" height="15.0" fill="rgb(250,180,51)" rx="2" ry="2" />
<text  x="230.04" y="1295.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (25 samples, 0.15%)</title><rect x="196.5" y="1125" width="1.7" height="15.0" fill="rgb(235,125,12)" rx="2" ry="2" />
<text  x="199.46" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="1064.8" y="1077" width="0.2" height="15.0" fill="rgb(222,91,0)" rx="2" ry="2" />
<text  x="1067.84" y="1087.5" ></text>
</g>
<g >
<title>__sched_text_start (109 samples, 0.66%)</title><rect x="648.5" y="1189" width="7.8" height="15.0" fill="rgb(224,51,49)" rx="2" ry="2" />
<text  x="651.54" y="1199.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (2 samples, 0.01%)</title><rect x="623.4" y="1125" width="0.2" height="15.0" fill="rgb(206,29,45)" rx="2" ry="2" />
<text  x="626.43" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderString::append(char const*, unsigned int) (3 samples, 0.02%)</title><rect x="804.2" y="1061" width="0.2" height="15.0" fill="rgb(215,171,35)" rx="2" ry="2" />
<text  x="807.20" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Http::CodeStatsImpl::incCounter(Envoy::Stats::Scope&amp;, Envoy::Stats::StatName, Envoy::Stats::StatName) const (25 samples, 0.15%)</title><rect x="731.0" y="933" width="1.7" height="15.0" fill="rgb(206,73,14)" rx="2" ry="2" />
<text  x="733.96" y="943.5" ></text>
</g>
<g >
<title>dev_gro_receive (2 samples, 0.01%)</title><rect x="484.7" y="757" width="0.1" height="15.0" fill="rgb(225,35,47)" rx="2" ry="2" />
<text  x="487.69" y="767.5" ></text>
</g>
<g >
<title>__unqueue_futex (2 samples, 0.01%)</title><rect x="62.7" y="1077" width="0.1" height="15.0" fill="rgb(247,200,28)" rx="2" ry="2" />
<text  x="65.70" y="1087.5" ></text>
</g>
<g >
<title>mark_wake_futex (3 samples, 0.02%)</title><rect x="126.6" y="997" width="0.2" height="15.0" fill="rgb(213,41,38)" rx="2" ry="2" />
<text  x="129.63" y="1007.5" ></text>
</g>
<g >
<title>runtime.chanrecv (2 samples, 0.01%)</title><rect x="171.0" y="1253" width="0.1" height="15.0" fill="rgb(250,120,43)" rx="2" ry="2" />
<text  x="174.00" y="1263.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (2 samples, 0.01%)</title><rect x="896.2" y="949" width="0.2" height="15.0" fill="rgb(245,23,40)" rx="2" ry="2" />
<text  x="899.23" y="959.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::maybeCreateInline(Envoy::Http::HeaderMapImpl::HeaderEntryImpl**, Envoy::Http::LowerCaseString const&amp;) (2 samples, 0.01%)</title><rect x="734.9" y="965" width="0.1" height="15.0" fill="rgb(218,15,12)" rx="2" ry="2" />
<text  x="737.87" y="975.5" ></text>
</g>
<g >
<title>apparmor_file_permission (3 samples, 0.02%)</title><rect x="1187.6" y="1029" width="0.2" height="15.0" fill="rgb(205,30,14)" rx="2" ry="2" />
<text  x="1190.58" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::encodeBodyAndTrailers() (2 samples, 0.01%)</title><rect x="843.0" y="885" width="0.1" height="15.0" fill="rgb(217,108,4)" rx="2" ry="2" />
<text  x="845.96" y="895.5" ></text>
</g>
<g >
<title>__netif_receive_skb (124 samples, 0.75%)</title><rect x="1156.5" y="693" width="8.8" height="15.0" fill="rgb(247,210,2)" rx="2" ry="2" />
<text  x="1159.51" y="703.5" ></text>
</g>
<g >
<title>dev_queue_xmit (6 samples, 0.04%)</title><rect x="915.6" y="789" width="0.4" height="15.0" fill="rgb(219,14,42)" rx="2" ry="2" />
<text  x="918.57" y="799.5" ></text>
</g>
<g >
<title>hist_insert_raw (3 samples, 0.02%)</title><rect x="791.9" y="789" width="0.2" height="15.0" fill="rgb(244,32,42)" rx="2" ry="2" />
<text  x="794.90" y="799.5" ></text>
</g>
<g >
<title>br_handle_frame (110 samples, 0.66%)</title><rect x="907.5" y="645" width="7.8" height="15.0" fill="rgb(207,33,35)" rx="2" ry="2" />
<text  x="910.46" y="655.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Extensions::HttpFilters::Fault::FaultFilterFactory::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::fault::v3::HTTPFault const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0, std::__1::allocator&lt;Envoy::Extensions::HttpFilters::Fault::FaultFilterFactory::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::fault::v3::HTTPFault const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0&gt;, void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt;::operator()(Envoy::Http::FilterChainFactoryCallbacks&amp;) (5 samples, 0.03%)</title><rect x="1077.6" y="997" width="0.3" height="15.0" fill="rgb(205,207,28)" rx="2" ry="2" />
<text  x="1080.57" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestEncoderWrapper::encodeData(Envoy::Buffer::Instance&amp;, bool) (4 samples, 0.02%)</title><rect x="872.4" y="997" width="0.3" height="15.0" fill="rgb(245,94,14)" rx="2" ry="2" />
<text  x="875.40" y="1007.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (137 samples, 0.83%)</title><rect x="237.0" y="1141" width="9.7" height="15.0" fill="rgb(215,99,47)" rx="2" ry="2" />
<text  x="240.00" y="1151.5" ></text>
</g>
<g >
<title>Envoy::MessageUtil::getJsonStringFromMessage(google::protobuf::Message const&amp;, bool, bool) (14 samples, 0.08%)</title><rect x="750.7" y="853" width="1.0" height="15.0" fill="rgb(253,81,9)" rx="2" ry="2" />
<text  x="753.73" y="863.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (188 samples, 1.13%)</title><rect x="904.8" y="1061" width="13.3" height="15.0" fill="rgb(226,65,18)" rx="2" ry="2" />
<text  x="907.76" y="1071.5" ></text>
</g>
<g >
<title>time.Time.date (2 samples, 0.01%)</title><rect x="230.7" y="1237" width="0.1" height="15.0" fill="rgb(233,6,10)" rx="2" ry="2" />
<text  x="233.67" y="1247.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4 samples, 0.02%)</title><rect x="1144.3" y="965" width="0.3" height="15.0" fill="rgb(248,7,33)" rx="2" ry="2" />
<text  x="1147.27" y="975.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.01%)</title><rect x="1174.4" y="613" width="0.2" height="15.0" fill="rgb(249,184,40)" rx="2" ry="2" />
<text  x="1177.43" y="623.5" ></text>
</g>
<g >
<title>__kfree_skb (12 samples, 0.07%)</title><rect x="512.4" y="997" width="0.8" height="15.0" fill="rgb(239,109,18)" rx="2" ry="2" />
<text  x="515.35" y="1007.5" ></text>
</g>
<g >
<title>http_parser_execute (1,328 samples, 8.00%)</title><rect x="713.1" y="1109" width="94.4" height="15.0" fill="rgb(239,11,26)" rx="2" ry="2" />
<text  x="716.11" y="1119.5" >http_parser..</text>
</g>
<g >
<title>rb_erase (2 samples, 0.01%)</title><rect x="876.1" y="901" width="0.1" height="15.0" fill="rgb(249,35,43)" rx="2" ry="2" />
<text  x="879.10" y="911.5" ></text>
</g>
<g >
<title>ip_finish_output (3 samples, 0.02%)</title><rect x="896.6" y="853" width="0.2" height="15.0" fill="rgb(229,114,5)" rx="2" ry="2" />
<text  x="899.58" y="863.5" ></text>
</g>
<g >
<title>Envoy::Http::ResponseDecoderWrapper::decodeData(Envoy::Buffer::Instance&amp;, bool) (892 samples, 5.38%)</title><rect x="738.1" y="1045" width="63.4" height="15.0" fill="rgb(215,15,40)" rx="2" ry="2" />
<text  x="741.07" y="1055.5" >Envoy:..</text>
</g>
<g >
<title>__x64_sys_epoll_pwait (34 samples, 0.20%)</title><rect x="645.1" y="1253" width="2.4" height="15.0" fill="rgb(235,164,35)" rx="2" ry="2" />
<text  x="648.12" y="1263.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (121 samples, 0.73%)</title><rect x="907.0" y="757" width="8.6" height="15.0" fill="rgb(222,1,20)" rx="2" ry="2" />
<text  x="909.96" y="767.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::ResponseFlagUtils::toShortString(Envoy::StreamInfo::StreamInfo const&amp;) (2 samples, 0.01%)</title><rect x="1009.0" y="917" width="0.2" height="15.0" fill="rgb(242,171,26)" rx="2" ry="2" />
<text  x="1012.01" y="927.5" ></text>
</g>
<g >
<title>__x64_sys_futex (78 samples, 0.47%)</title><rect x="598.6" y="1189" width="5.6" height="15.0" fill="rgb(239,166,30)" rx="2" ry="2" />
<text  x="601.61" y="1199.5" ></text>
</g>
<g >
<title>google::protobuf::Arena::AllocateAlignedWithCleanup(unsigned long, std::type_info const*) (3 samples, 0.02%)</title><rect x="773.1" y="725" width="0.2" height="15.0" fill="rgb(223,134,5)" rx="2" ry="2" />
<text  x="776.13" y="735.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::~UpstreamRequest() (2 samples, 0.01%)</title><rect x="800.6" y="981" width="0.1" height="15.0" fill="rgb(250,223,38)" rx="2" ry="2" />
<text  x="803.58" y="991.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.01%)</title><rect x="641.8" y="1157" width="0.1" height="15.0" fill="rgb(209,30,10)" rx="2" ry="2" />
<text  x="644.78" y="1167.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.01%)</title><rect x="604.3" y="1093" width="0.1" height="15.0" fill="rgb(239,166,49)" rx="2" ry="2" />
<text  x="607.30" y="1103.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="623.4" y="917" width="0.2" height="15.0" fill="rgb(243,36,8)" rx="2" ry="2" />
<text  x="626.43" y="927.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.02%)</title><rect x="622.6" y="1141" width="0.2" height="15.0" fill="rgb(239,123,5)" rx="2" ry="2" />
<text  x="625.58" y="1151.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::call_foreign_function(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (75 samples, 0.45%)</title><rect x="1036.7" y="837" width="5.3" height="15.0" fill="rgb(207,220,14)" rx="2" ry="2" />
<text  x="1039.68" y="847.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.02%)</title><rect x="622.6" y="1125" width="0.2" height="15.0" fill="rgb(251,45,23)" rx="2" ry="2" />
<text  x="625.58" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::JsonV2Serializer::serialize(std::__1::vector&lt;Envoy::Extensions::Tracers::Zipkin::Span, std::__1::allocator&lt;Envoy::Extensions::Tracers::Zipkin::Span&gt; &gt; const&amp;) (16 samples, 0.10%)</title><rect x="750.7" y="885" width="1.2" height="15.0" fill="rgb(243,43,30)" rx="2" ry="2" />
<text  x="753.73" y="895.5" ></text>
</g>
<g >
<title>rw_verify_area (10 samples, 0.06%)</title><rect x="166.9" y="1141" width="0.8" height="15.0" fill="rgb(251,122,35)" rx="2" ry="2" />
<text  x="169.95" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::encodeData(Envoy::Buffer::Instance&amp;, bool) (87 samples, 0.52%)</title><rect x="740.6" y="981" width="6.1" height="15.0" fill="rgb(211,31,17)" rx="2" ry="2" />
<text  x="743.56" y="991.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (193 samples, 1.16%)</title><rect x="1173.0" y="917" width="13.7" height="15.0" fill="rgb(234,54,31)" rx="2" ry="2" />
<text  x="1176.00" y="927.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Span::traceIdAsHexString() const (8 samples, 0.05%)</title><rect x="834.1" y="981" width="0.6" height="15.0" fill="rgb(240,200,2)" rx="2" ry="2" />
<text  x="837.14" y="991.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::staticLookup(absl::string_view) (4 samples, 0.02%)</title><rect x="1110.7" y="869" width="0.3" height="15.0" fill="rgb(242,61,46)" rx="2" ry="2" />
<text  x="1113.71" y="879.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="1017.2" y="805" width="0.1" height="15.0" fill="rgb(210,179,51)" rx="2" ry="2" />
<text  x="1020.19" y="815.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::~StreamInfoImpl() (8 samples, 0.05%)</title><rect x="799.2" y="933" width="0.5" height="15.0" fill="rgb(253,174,50)" rx="2" ry="2" />
<text  x="802.16" y="943.5" ></text>
</g>
<g >
<title>hist_insert_raw (3 samples, 0.02%)</title><rect x="1042.6" y="789" width="0.2" height="15.0" fill="rgb(221,149,25)" rx="2" ry="2" />
<text  x="1045.58" y="799.5" ></text>
</g>
<g >
<title>evmap_io_add_ (31 samples, 0.19%)</title><rect x="877.0" y="1013" width="2.2" height="15.0" fill="rgb(253,45,52)" rx="2" ry="2" />
<text  x="880.03" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Config::Metadata::metadataValue(envoy::config::core::v3::Metadata const*, Envoy::Config::MetadataKey const&amp;) (2 samples, 0.01%)</title><rect x="750.2" y="917" width="0.1" height="15.0" fill="rgb(211,58,49)" rx="2" ry="2" />
<text  x="753.16" y="927.5" ></text>
</g>
<g >
<title>vxlan_xmit_one (47 samples, 0.28%)</title><rect x="1158.4" y="261" width="3.4" height="15.0" fill="rgb(221,33,45)" rx="2" ry="2" />
<text  x="1161.43" y="271.5" ></text>
</g>
<g >
<title>ip_rcv_finish (312 samples, 1.88%)</title><rect x="563.3" y="677" width="22.2" height="15.0" fill="rgb(210,43,13)" rx="2" ry="2" />
<text  x="566.34" y="687.5" >i..</text>
</g>
<g >
<title>ip_route_input_noref (14 samples, 0.08%)</title><rect x="1162.9" y="405" width="1.0" height="15.0" fill="rgb(224,56,45)" rx="2" ry="2" />
<text  x="1165.91" y="415.5" ></text>
</g>
<g >
<title>vfs_read (3 samples, 0.02%)</title><rect x="98.5" y="1173" width="0.2" height="15.0" fill="rgb(245,185,41)" rx="2" ry="2" />
<text  x="101.47" y="1183.5" ></text>
</g>
<g >
<title>ip_finish_output2 (2 samples, 0.01%)</title><rect x="1131.5" y="821" width="0.2" height="15.0" fill="rgb(238,61,31)" rx="2" ry="2" />
<text  x="1134.54" y="831.5" ></text>
</g>
<g >
<title>ext4_write_begin (4 samples, 0.02%)</title><rect x="237.4" y="1093" width="0.2" height="15.0" fill="rgb(251,68,45)" rx="2" ry="2" />
<text  x="240.35" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::onHeadersCompleteBase() (724 samples, 4.36%)</title><rect x="1065.1" y="1061" width="51.4" height="15.0" fill="rgb(234,189,21)" rx="2" ry="2" />
<text  x="1068.05" y="1071.5" >Envoy..</text>
</g>
<g >
<title>tcp_write_xmit (452 samples, 2.72%)</title><rect x="558.4" y="965" width="32.2" height="15.0" fill="rgb(243,122,17)" rx="2" ry="2" />
<text  x="561.43" y="975.5" >tc..</text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.01%)</title><rect x="769.6" y="821" width="0.1" height="15.0" fill="rgb(247,221,26)" rx="2" ry="2" />
<text  x="772.57" y="831.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::move(Envoy::Buffer::Instance&amp;) (4 samples, 0.02%)</title><rect x="1118.1" y="949" width="0.3" height="15.0" fill="rgb(246,83,10)" rx="2" ry="2" />
<text  x="1121.10" y="959.5" ></text>
</g>
<g >
<title>google::protobuf::internal::AllocateMemory(google::protobuf::internal::AllocationPolicy const*, unsigned long, unsigned long) (4 samples, 0.02%)</title><rect x="773.7" y="709" width="0.3" height="15.0" fill="rgb(209,85,10)" rx="2" ry="2" />
<text  x="776.70" y="719.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (3 samples, 0.02%)</title><rect x="644.6" y="1253" width="0.2" height="15.0" fill="rgb(245,66,24)" rx="2" ry="2" />
<text  x="647.55" y="1263.5" ></text>
</g>
<g >
<title>runtime.findrunnable (710 samples, 4.28%)</title><rect x="175.7" y="1237" width="50.5" height="15.0" fill="rgb(242,175,32)" rx="2" ry="2" />
<text  x="178.70" y="1247.5" >runti..</text>
</g>
<g >
<title>Envoy::Runtime::getInteger(absl::string_view, unsigned long) (9 samples, 0.05%)</title><rect x="715.4" y="1013" width="0.6" height="15.0" fill="rgb(236,151,37)" rx="2" ry="2" />
<text  x="718.38" y="1023.5" ></text>
</g>
<g >
<title>__ip_local_out (12 samples, 0.07%)</title><rect x="1158.6" y="197" width="0.9" height="15.0" fill="rgb(243,60,39)" rx="2" ry="2" />
<text  x="1161.64" y="207.5" ></text>
</g>
<g >
<title>absl::hash_internal::MixingHashState::combine_contiguous(absl::hash_internal::MixingHashState, unsigned char const*, unsigned long) (2 samples, 0.01%)</title><rect x="1067.1" y="933" width="0.2" height="15.0" fill="rgb(235,88,16)" rx="2" ry="2" />
<text  x="1070.11" y="943.5" ></text>
</g>
<g >
<title>mark_wake_futex (3 samples, 0.02%)</title><rect x="543.3" y="1093" width="0.2" height="15.0" fill="rgb(218,155,32)" rx="2" ry="2" />
<text  x="546.29" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::~FilterManager() (57 samples, 0.34%)</title><rect x="704.8" y="1237" width="4.0" height="15.0" fill="rgb(219,24,37)" rx="2" ry="2" />
<text  x="707.79" y="1247.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (105 samples, 0.63%)</title><rect x="924.6" y="613" width="7.5" height="15.0" fill="rgb(251,63,51)" rx="2" ry="2" />
<text  x="927.60" y="623.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.01%)</title><rect x="642.2" y="1205" width="0.1" height="15.0" fill="rgb(230,207,13)" rx="2" ry="2" />
<text  x="645.21" y="1215.5" ></text>
</g>
<g >
<title>event_del_nolock_ (46 samples, 0.28%)</title><rect x="873.5" y="1013" width="3.3" height="15.0" fill="rgb(241,179,46)" rx="2" ry="2" />
<text  x="876.54" y="1023.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.01%)</title><rect x="114.0" y="1077" width="0.2" height="15.0" fill="rgb(206,110,53)" rx="2" ry="2" />
<text  x="117.04" y="1087.5" ></text>
</g>
<g >
<title>apparmor_file_permission (3 samples, 0.02%)</title><rect x="622.3" y="1125" width="0.2" height="15.0" fill="rgb(211,20,39)" rx="2" ry="2" />
<text  x="625.29" y="1135.5" ></text>
</g>
<g >
<title>finish_task_switch (150 samples, 0.90%)</title><rect x="84.7" y="1109" width="10.7" height="15.0" fill="rgb(247,42,46)" rx="2" ry="2" />
<text  x="87.74" y="1119.5" ></text>
</g>
<g >
<title>std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; Envoy::Http::HeaderMapImpl::HeaderList::insert&lt;Envoy::Http::LowerCaseString const&amp;&gt;(Envoy::Http::LowerCaseString const&amp;) (2 samples, 0.01%)</title><rect x="726.1" y="917" width="0.2" height="15.0" fill="rgb(225,11,7)" rx="2" ry="2" />
<text  x="729.12" y="927.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ThreadSafeArena::GetSerialArenaFallback(void*) (3 samples, 0.02%)</title><rect x="771.9" y="757" width="0.2" height="15.0" fill="rgb(236,132,44)" rx="2" ry="2" />
<text  x="774.92" y="767.5" ></text>
</g>
<g >
<title>napi_complete_done (2 samples, 0.01%)</title><rect x="1131.5" y="1013" width="0.2" height="15.0" fill="rgb(232,165,26)" rx="2" ry="2" />
<text  x="1134.54" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="943.2" y="1349" width="0.1" height="15.0" fill="rgb(250,78,48)" rx="2" ry="2" />
<text  x="946.16" y="1359.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info() (6 samples, 0.04%)</title><rect x="682.3" y="1349" width="0.4" height="15.0" fill="rgb(211,30,20)" rx="2" ry="2" />
<text  x="685.31" y="1359.5" ></text>
</g>
<g >
<title>ep_send_events_proc (18 samples, 0.11%)</title><rect x="691.8" y="1189" width="1.3" height="15.0" fill="rgb(230,151,20)" rx="2" ry="2" />
<text  x="694.84" y="1199.5" ></text>
</g>
<g >
<title>Envoy::Extensions::HttpFilters::Fault::FaultFilter::decodeHeaders(Envoy::Http::RequestHeaderMap&amp;, bool) (7 samples, 0.04%)</title><rect x="1082.1" y="1013" width="0.5" height="15.0" fill="rgb(205,209,36)" rx="2" ry="2" />
<text  x="1085.12" y="1023.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::log(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (4 samples, 0.02%)</title><rect x="1042.1" y="853" width="0.3" height="15.0" fill="rgb(215,222,32)" rx="2" ry="2" />
<text  x="1045.08" y="863.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::setupPerTryTimeout() (2 samples, 0.01%)</title><rect x="872.0" y="997" width="0.1" height="15.0" fill="rgb(220,213,28)" rx="2" ry="2" />
<text  x="874.98" y="1007.5" ></text>
</g>
<g >
<title>std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;proxy_wasm::null_plugin::Stats::SimpleStat, std::__1::allocator&lt;proxy_wasm::null_plugin::Stats::SimpleStat&gt; &gt; &gt;, void*&gt;*&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;proxy_wasm::null_plugin::Stats::SimpleStat, std::__1::allocator&lt;proxy_wasm::null_plugin::Stats::SimpleStat&gt; &gt; &gt;, std::__1::__unordered_map_hasher&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::__hash_value_type&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;proxy_wasm::null_plugin::Stats::SimpleStat, std::__1::allocator&lt;proxy_wasm::null_plugin::Stats::SimpleStat&gt; &gt; &gt;, proxy_wasm::null_plugin::Stats::HashIstioDimensions, std::__1::equal_to&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, true&gt;, std::__1::__unordered_map_equal&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::__hash_value_type&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;proxy_wasm::null_plugin::Stats::SimpleStat, std::__1::allocator&lt;proxy_wasm::null_plugin::Stats::SimpleStat&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, proxy_wasm::null_plugin::Stats::HashIstioDimensions, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;proxy_wasm::null_plugin::Stats::SimpleStat, std::__1::allocator&lt;proxy_wasm::null_plugin::Stats::SimpleStat&gt; &gt; &gt; &gt; &gt;::find&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;) (2 samples, 0.01%)</title><rect x="793.2" y="869" width="0.1" height="15.0" fill="rgb(238,45,4)" rx="2" ry="2" />
<text  x="796.18" y="879.5" ></text>
</g>
<g >
<title>__do_sys_newuname (3 samples, 0.02%)</title><rect x="546.0" y="1125" width="0.2" height="15.0" fill="rgb(227,134,19)" rx="2" ry="2" />
<text  x="548.99" y="1135.5" ></text>
</g>
<g >
<title>__vfs_read (81 samples, 0.49%)</title><rect x="672.9" y="1061" width="5.7" height="15.0" fill="rgb(249,59,38)" rx="2" ry="2" />
<text  x="675.86" y="1071.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_3, std::__1::allocator&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_3&gt;, void (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word)&gt;::operator()(proxy_wasm::ContextBase*&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;) (35 samples, 0.21%)</title><rect x="1106.4" y="981" width="2.5" height="15.0" fill="rgb(205,94,3)" rx="2" ry="2" />
<text  x="1109.44" y="991.5" ></text>
</g>
<g >
<title>google::protobuf::util::BinaryToJsonStream(google::protobuf::util::TypeResolver*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, google::protobuf::io::ZeroCopyInputStream*, google::protobuf::io::ZeroCopyOutputStream*, google::protobuf::util::JsonPrintOptions const&amp;) (7 samples, 0.04%)</title><rect x="1004.2" y="821" width="0.5" height="15.0" fill="rgb(210,40,34)" rx="2" ry="2" />
<text  x="1007.18" y="831.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::IdentStep::Evaluate(google::api::expr::runtime::ExecutionFrame*) const (22 samples, 0.13%)</title><rect x="786.6" y="757" width="1.5" height="15.0" fill="rgb(251,17,39)" rx="2" ry="2" />
<text  x="789.57" y="767.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation::~BinaryAnnotation() (3 samples, 0.02%)</title><rect x="756.9" y="869" width="0.2" height="15.0" fill="rgb(227,126,15)" rx="2" ry="2" />
<text  x="759.91" y="879.5" ></text>
</g>
<g >
<title>runtime.scanblock (3 samples, 0.02%)</title><rect x="115.2" y="1205" width="0.2" height="15.0" fill="rgb(232,137,43)" rx="2" ry="2" />
<text  x="118.18" y="1215.5" ></text>
</g>
<g >
<title>runtime.gcDrain (70 samples, 0.42%)</title><rect x="252.2" y="1317" width="5.0" height="15.0" fill="rgb(236,192,38)" rx="2" ry="2" />
<text  x="255.22" y="1327.5" ></text>
</g>
<g >
<title>unsigned long std::__1::__tree&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;::__count_unique&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) const (2 samples, 0.01%)</title><rect x="861.5" y="933" width="0.1" height="15.0" fill="rgb(251,153,0)" rx="2" ry="2" />
<text  x="864.45" y="943.5" ></text>
</g>
<g >
<title>tcp_in_window (2 samples, 0.01%)</title><rect x="924.1" y="773" width="0.1" height="15.0" fill="rgb(211,131,40)" rx="2" ry="2" />
<text  x="927.10" y="783.5" ></text>
</g>
<g >
<title>proxy_wasm::NullPlugin::getContext(unsigned long) (2 samples, 0.01%)</title><rect x="1122.6" y="981" width="0.1" height="15.0" fill="rgb(231,37,31)" rx="2" ry="2" />
<text  x="1125.58" y="991.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Upstreams::Http::Http::HttpConnPool::newStream(Envoy::Router::GenericConnectionPoolCallbacks*) (165 samples, 0.99%)</title><rect x="1086.1" y="997" width="11.7" height="15.0" fill="rgb(236,120,11)" rx="2" ry="2" />
<text  x="1089.10" y="1007.5" ></text>
</g>
<g >
<title>do_futex (652 samples, 3.93%)</title><rect x="438.8" y="965" width="46.4" height="15.0" fill="rgb(243,187,31)" rx="2" ry="2" />
<text  x="441.82" y="975.5" >do_f..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::vector&lt;unsigned char, std::__1::allocator&lt;unsigned char&gt; &gt;, std::__1::unique_ptr&lt;Envoy::Http::ConnectionPool::Instance, std::__1::default_delete&lt;Envoy::Http::ConnectionPool::Instance&gt; &gt; &gt;, absl::hash_internal::Hash&lt;std::__1::vector&lt;unsigned char, std::__1::allocator&lt;unsigned char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::vector&lt;unsigned char, std::__1::allocator&lt;unsigned char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::vector&lt;unsigned char, std::__1::allocator&lt;unsigned char&gt; &gt; const, std::__1::unique_ptr&lt;Envoy::Http::ConnectionPool::Instance, std::__1::default_delete&lt;Envoy::Http::ConnectionPool::Instance&gt; &gt; &gt; &gt; &gt;::iterator absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::vector&lt;unsigned char, std::__1::allocator&lt;unsigned char&gt; &gt;, std::__1::unique_ptr&lt;Envoy::Http::ConnectionPool::Instance, std::__1::default_delete&lt;Envoy::Http::ConnectionPool::Instance&gt; &gt; &gt;, absl::hash_internal::Hash&lt;std::__1::vector&lt;unsigned char, std::__1::allocator&lt;unsigned char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::vector&lt;unsigned char, std::__1::allocator&lt;unsigned char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::vector&lt;unsigned char, std::__1::allocator&lt;unsigned char&gt; &gt; const, std::__1::unique_ptr&lt;Envoy::Http::ConnectionPool::Instance, std::__1::default_delete&lt;Envoy::Http::ConnectionPool::Instance&gt; &gt; &gt; &gt; &gt;::find&lt;std::__1::vector&lt;unsigned char, std::__1::allocator&lt;unsigned char&gt; &gt; &gt;(std::__1::vector&lt;unsigned char, std::__1::allocator&lt;unsigned char&gt; &gt; const&amp;) (3 samples, 0.02%)</title><rect x="849.5" y="901" width="0.2" height="15.0" fill="rgb(254,25,0)" rx="2" ry="2" />
<text  x="852.50" y="911.5" ></text>
</g>
<g >
<title>[unknown] (5,615 samples, 33.84%)</title><rect x="259.0" y="1333" width="399.3" height="15.0" fill="rgb(218,187,35)" rx="2" ry="2" />
<text  x="261.97" y="1343.5" >[unknown]</text>
</g>
<g >
<title>Envoy::ConstSingleton&lt;Envoy::StreamInfo::ResponseCodeDetailValues&gt;::get() (2 samples, 0.01%)</title><rect x="718.0" y="997" width="0.2" height="15.0" fill="rgb(225,200,18)" rx="2" ry="2" />
<text  x="721.01" y="1007.5" ></text>
</g>
<g >
<title>common_file_perm (6 samples, 0.04%)</title><rect x="246.7" y="1125" width="0.5" height="15.0" fill="rgb(228,0,12)" rx="2" ry="2" />
<text  x="249.74" y="1135.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::hasDataWithName(absl::string_view) const (2 samples, 0.01%)</title><rect x="1098.7" y="949" width="0.1" height="15.0" fill="rgb(206,140,4)" rx="2" ry="2" />
<text  x="1101.69" y="959.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onMessageBegin() (10 samples, 0.06%)</title><rect x="970.3" y="1077" width="0.7" height="15.0" fill="rgb(220,137,14)" rx="2" ry="2" />
<text  x="973.33" y="1087.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word)&gt;*)::$_15, std::__1::allocator&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word)&gt;*)::$_15&gt;, proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word)&gt;::operator()(proxy_wasm::ContextBase*&amp;&amp;, proxy_wasm::Word&amp;&amp;) (2 samples, 0.01%)</title><rect x="1046.6" y="917" width="0.2" height="15.0" fill="rgb(251,120,0)" rx="2" ry="2" />
<text  x="1049.63" y="927.5" ></text>
</g>
<g >
<title>std::__1::list&lt;std::__1::function&lt;void ()&gt;, std::__1::allocator&lt;std::__1::function&lt;void ()&gt; &gt; &gt;::__move_assign(std::__1::list&lt;std::__1::function&lt;void ()&gt;, std::__1::allocator&lt;std::__1::function&lt;void ()&gt; &gt; &gt;&amp;, std::__1::integral_constant&lt;bool, true&gt;) (2 samples, 0.01%)</title><rect x="1136.7" y="1141" width="0.2" height="15.0" fill="rgb(224,156,47)" rx="2" ry="2" />
<text  x="1139.74" y="1151.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (6 samples, 0.04%)</title><rect x="251.6" y="1141" width="0.4" height="15.0" fill="rgb(219,85,29)" rx="2" ry="2" />
<text  x="254.58" y="1151.5" ></text>
</g>
<g >
<title>proxy_wasm::ContextBase::onRequestBody(unsigned int, bool) (4 samples, 0.02%)</title><rect x="1122.4" y="1013" width="0.3" height="15.0" fill="rgb(228,183,22)" rx="2" ry="2" />
<text  x="1125.44" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::insertByKey(Envoy::Http::HeaderString&amp;&amp;, Envoy::Http::HeaderString&amp;&amp;) (6 samples, 0.04%)</title><rect x="1064.3" y="1061" width="0.5" height="15.0" fill="rgb(252,116,7)" rx="2" ry="2" />
<text  x="1067.34" y="1071.5" ></text>
</g>
<g >
<title>__sched_text_start (21 samples, 0.13%)</title><rect x="605.4" y="1109" width="1.5" height="15.0" fill="rgb(207,5,14)" rx="2" ry="2" />
<text  x="608.44" y="1119.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.01%)</title><rect x="96.0" y="1189" width="0.2" height="15.0" fill="rgb(210,61,19)" rx="2" ry="2" />
<text  x="99.05" y="1199.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.01%)</title><rect x="1145.8" y="677" width="0.2" height="15.0" fill="rgb(211,44,27)" rx="2" ry="2" />
<text  x="1148.84" y="687.5" ></text>
</g>
<g >
<title>process_backlog (116 samples, 0.70%)</title><rect x="907.2" y="709" width="8.3" height="15.0" fill="rgb(214,117,26)" rx="2" ry="2" />
<text  x="910.25" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (19 samples, 0.11%)</title><rect x="741.8" y="757" width="1.4" height="15.0" fill="rgb(223,197,14)" rx="2" ry="2" />
<text  x="744.84" y="767.5" ></text>
</g>
<g >
<title>nf_hook_slow (16 samples, 0.10%)</title><rect x="909.3" y="181" width="1.1" height="15.0" fill="rgb(209,66,33)" rx="2" ry="2" />
<text  x="912.31" y="191.5" ></text>
</g>
<g >
<title>Envoy::Server::WorkerImpl::threadRoutine(Envoy::Server::GuardDog&amp;, std::__1::function&lt;void ()&gt; const&amp;) (3,549 samples, 21.39%)</title><rect x="685.4" y="1333" width="252.4" height="15.0" fill="rgb(245,229,13)" rx="2" ry="2" />
<text  x="688.37" y="1343.5" >Envoy::Server::WorkerImpl::thread..</text>
</g>
<g >
<title>do_anonymous_page (3 samples, 0.02%)</title><rect x="539.7" y="1077" width="0.2" height="15.0" fill="rgb(227,93,47)" rx="2" ry="2" />
<text  x="542.73" y="1087.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::CastingValueFromMessageFactory&lt;google::protobuf::Struct&gt;::CreateValue(google::protobuf::Message const*, google::protobuf::Arena*) const (2 samples, 0.01%)</title><rect x="788.3" y="709" width="0.2" height="15.0" fill="rgb(249,173,35)" rx="2" ry="2" />
<text  x="791.35" y="719.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::get(Envoy::Http::LowerCaseString const&amp;) const (6 samples, 0.04%)</title><rect x="1110.1" y="917" width="0.4" height="15.0" fill="rgb(222,183,33)" rx="2" ry="2" />
<text  x="1113.07" y="927.5" ></text>
</g>
<g >
<title>proxy_wasm::null_plugin::Stats::PluginContext::onRequestHeaders(unsigned int, bool) (7 samples, 0.04%)</title><rect x="1110.6" y="965" width="0.5" height="15.0" fill="rgb(246,136,32)" rx="2" ry="2" />
<text  x="1113.64" y="975.5" ></text>
</g>
<g >
<title>Envoy::Runtime::LoaderImpl::snapshot() (2 samples, 0.01%)</title><rect x="1095.8" y="901" width="0.2" height="15.0" fill="rgb(217,192,1)" rx="2" ry="2" />
<text  x="1098.84" y="911.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelValue::CheckNullPointer(void const*, google::api::expr::runtime::CelValue::Type) (2 samples, 0.01%)</title><rect x="1024.1" y="773" width="0.1" height="15.0" fill="rgb(244,64,44)" rx="2" ry="2" />
<text  x="1027.09" y="783.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="623.9" y="1237" width="0.2" height="15.0" fill="rgb(209,113,47)" rx="2" ry="2" />
<text  x="626.93" y="1247.5" ></text>
</g>
<g >
<title>std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; Envoy::Http::HeaderMapImpl::HeaderList::insert&lt;Envoy::Http::LowerCaseString const&amp;&gt;(Envoy::Http::LowerCaseString const&amp;) (2 samples, 0.01%)</title><rect x="734.9" y="949" width="0.1" height="15.0" fill="rgb(227,23,6)" rx="2" ry="2" />
<text  x="737.87" y="959.5" ></text>
</g>
<g >
<title>proxy_wasm::NullPlugin::getContext(unsigned long) (3 samples, 0.02%)</title><rect x="1053.9" y="949" width="0.2" height="15.0" fill="rgb(233,58,38)" rx="2" ry="2" />
<text  x="1056.89" y="959.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.02%)</title><rect x="1171.3" y="1077" width="0.2" height="15.0" fill="rgb(207,71,52)" rx="2" ry="2" />
<text  x="1174.30" y="1087.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::exports::call_foreign_function(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)::$_0, std::__1::allocator&lt;proxy_wasm::exports::call_foreign_function(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)::$_0&gt;, void* (unsigned long)&gt;::operator()(unsigned long&amp;&amp;) (3 samples, 0.02%)</title><rect x="1041.8" y="821" width="0.2" height="15.0" fill="rgb(250,208,7)" rx="2" ry="2" />
<text  x="1044.80" y="831.5" ></text>
</g>
<g >
<title>pipe_write (24 samples, 0.14%)</title><rect x="642.5" y="1157" width="1.7" height="15.0" fill="rgb(252,102,40)" rx="2" ry="2" />
<text  x="645.49" y="1167.5" ></text>
</g>
<g >
<title>do_writev (198 samples, 1.19%)</title><rect x="921.9" y="1109" width="14.1" height="15.0" fill="rgb(224,115,37)" rx="2" ry="2" />
<text  x="924.90" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Http::AsyncRequestImpl::initialize() (2 samples, 0.01%)</title><rect x="751.9" y="869" width="0.1" height="15.0" fill="rgb(206,98,0)" rx="2" ry="2" />
<text  x="754.86" y="879.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (5 samples, 0.03%)</title><rect x="562.2" y="757" width="0.4" height="15.0" fill="rgb(208,175,5)" rx="2" ry="2" />
<text  x="565.20" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="438.3" y="949" width="0.3" height="15.0" fill="rgb(207,43,21)" rx="2" ry="2" />
<text  x="441.25" y="959.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::add(void const*, unsigned long) (6 samples, 0.04%)</title><rect x="1089.9" y="725" width="0.4" height="15.0" fill="rgb(213,41,34)" rx="2" ry="2" />
<text  x="1092.87" y="735.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Extensions::Common::Wasm::Context::encodeHeaders(Envoy::Http::ResponseHeaderMap&amp;, bool) (40 samples, 0.24%)</title><rect x="727.3" y="965" width="2.9" height="15.0" fill="rgb(205,76,31)" rx="2" ry="2" />
<text  x="730.33" y="975.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::get(Envoy::Http::LowerCaseString const&amp;) const (2 samples, 0.01%)</title><rect x="1031.4" y="805" width="0.2" height="15.0" fill="rgb(244,100,26)" rx="2" ry="2" />
<text  x="1034.42" y="815.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (8 samples, 0.05%)</title><rect x="683.1" y="1349" width="0.6" height="15.0" fill="rgb(212,209,30)" rx="2" ry="2" />
<text  x="686.10" y="1359.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::addStreamFilter(std::__1::shared_ptr&lt;Envoy::Http::StreamFilter&gt;) (13 samples, 0.08%)</title><rect x="830.5" y="981" width="0.9" height="15.0" fill="rgb(229,95,36)" rx="2" ry="2" />
<text  x="833.52" y="991.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ResponseHeaderMapImpl::getStatusValue() const (2 samples, 0.01%)</title><rect x="975.2" y="917" width="0.2" height="15.0" fill="rgb(222,146,24)" rx="2" ry="2" />
<text  x="978.23" y="927.5" ></text>
</g>
<g >
<title>runtime.entersyscall (3 samples, 0.02%)</title><rect x="248.4" y="1253" width="0.2" height="15.0" fill="rgb(254,41,1)" rx="2" ry="2" />
<text  x="251.38" y="1263.5" ></text>
</g>
<g >
<title>current_time (2 samples, 0.01%)</title><rect x="537.5" y="1029" width="0.1" height="15.0" fill="rgb(237,111,14)" rx="2" ry="2" />
<text  x="540.45" y="1039.5" ></text>
</g>
<g >
<title>ip_list_rcv (2 samples, 0.01%)</title><rect x="1156.3" y="629" width="0.1" height="15.0" fill="rgb(234,53,8)" rx="2" ry="2" />
<text  x="1159.29" y="639.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Network::ConnectionImpl::ConnectionImpl(Envoy::Event::Dispatcher&amp;, std::__1::unique_ptr&lt;Envoy::Network::ConnectionSocket, std::__1::default_delete&lt;Envoy::Network::ConnectionSocket&gt; &gt;&amp;&amp;, std::__1::unique_ptr&lt;Envoy::Network::TransportSocket, std::__1::default_delete&lt;Envoy::Network::TransportSocket&gt; &gt;&amp;&amp;, Envoy::StreamInfo::StreamInfo&amp;, bool)::$_6, std::__1::allocator&lt;Envoy::Network::ConnectionImpl::ConnectionImpl(Envoy::Event::Dispatcher&amp;, std::__1::unique_ptr&lt;Envoy::Network::ConnectionSocket, std::__1::default_delete&lt;Envoy::Network::ConnectionSocket&gt; &gt;&amp;&amp;, std::__1::unique_ptr&lt;Envoy::Network::TransportSocket, std::__1::default_delete&lt;Envoy::Network::TransportSocket&gt; &gt;&amp;&amp;, Envoy::StreamInfo::StreamInfo&amp;, bool)::$_6&gt;, void (unsigned int)&gt;::operator()(unsigned int&amp;&amp;) (2 samples, 0.01%)</title><rect x="919.8" y="1269" width="0.2" height="15.0" fill="rgb(226,78,18)" rx="2" ry="2" />
<text  x="922.84" y="1279.5" ></text>
</g>
<g >
<title>pipe_poll (2 samples, 0.01%)</title><rect x="133.2" y="981" width="0.2" height="15.0" fill="rgb(232,37,34)" rx="2" ry="2" />
<text  x="136.24" y="991.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#3}::__invoke(http_parser*) (930 samples, 5.60%)</title><rect x="737.7" y="1093" width="66.1" height="15.0" fill="rgb(234,170,36)" rx="2" ry="2" />
<text  x="740.71" y="1103.5" >Envoy::..</text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::ClientTraceId() const (2 samples, 0.01%)</title><rect x="827.7" y="1013" width="0.1" height="15.0" fill="rgb(233,45,27)" rx="2" ry="2" />
<text  x="830.67" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Grpc::Common::isGrpcRequestHeaders(Envoy::Http::RequestHeaderMap const&amp;) (3 samples, 0.02%)</title><rect x="1082.6" y="1013" width="0.2" height="15.0" fill="rgb(250,32,42)" rx="2" ry="2" />
<text  x="1085.62" y="1023.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="896.6" y="773" width="0.1" height="15.0" fill="rgb(232,213,5)" rx="2" ry="2" />
<text  x="899.58" y="783.5" ></text>
</g>
<g >
<title>sock_poll (3 samples, 0.02%)</title><rect x="950.6" y="1141" width="0.2" height="15.0" fill="rgb(211,147,47)" rx="2" ry="2" />
<text  x="953.63" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Http::CodecClient::deleteRequest(Envoy::Http::CodecClient::ActiveRequest&amp;) (9 samples, 0.05%)</title><rect x="992.4" y="1013" width="0.6" height="15.0" fill="rgb(244,52,39)" rx="2" ry="2" />
<text  x="995.37" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Upstreams::Http::Http::HttpUpstream::encodeHeaders(Envoy::Http::RequestHeaderMap const&amp;, bool) (65 samples, 0.39%)</title><rect x="1088.0" y="885" width="4.6" height="15.0" fill="rgb(244,0,8)" rx="2" ry="2" />
<text  x="1091.02" y="895.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::operator=(Envoy::Buffer::Slice&amp;&amp;) (8 samples, 0.05%)</title><rect x="903.4" y="1157" width="0.6" height="15.0" fill="rgb(207,212,44)" rx="2" ry="2" />
<text  x="906.41" y="1167.5" ></text>
</g>
<g >
<title>Envoy::Stats::SymbolTableImpl::join(absl::InlinedVector&lt;Envoy::Stats::StatName, 8ul, std::__1::allocator&lt;Envoy::Stats::StatName&gt; &gt; const&amp;) const (2 samples, 0.01%)</title><rect x="985.7" y="901" width="0.1" height="15.0" fill="rgb(206,193,8)" rx="2" ry="2" />
<text  x="988.69" y="911.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::freeStorage(Envoy::Buffer::Slice::FreeListReference) (3 samples, 0.02%)</title><rect x="885.4" y="1125" width="0.2" height="15.0" fill="rgb(210,1,48)" rx="2" ry="2" />
<text  x="888.42" y="1135.5" ></text>
</g>
<g >
<title>local.runtime.goexit (1,920 samples, 11.57%)</title><rect x="120.7" y="1365" width="136.5" height="15.0" fill="rgb(206,75,35)" rx="2" ry="2" />
<text  x="123.65" y="1375.5" >local.runtime.goe..</text>
</g>
<g >
<title>tcp_release_cb (2 samples, 0.01%)</title><rect x="1147.5" y="965" width="0.1" height="15.0" fill="rgb(238,72,12)" rx="2" ry="2" />
<text  x="1150.47" y="975.5" ></text>
</g>
<g >
<title>epoll_nochangelist_add (2 samples, 0.01%)</title><rect x="998.6" y="853" width="0.2" height="15.0" fill="rgb(237,194,35)" rx="2" ry="2" />
<text  x="1001.63" y="863.5" ></text>
</g>
<g >
<title>finish_task_switch (148 samples, 0.89%)</title><rect x="102.1" y="1173" width="10.5" height="15.0" fill="rgb(206,2,27)" rx="2" ry="2" />
<text  x="105.09" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Stats::ThreadLocalStoreImpl::ScopeImpl::histogramFromStatNameWithTags(Envoy::Stats::StatName const&amp;, absl::optional&lt;std::__1::reference_wrapper&lt;std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; const&gt; &gt;, Envoy::Stats::Histogram::Unit) (11 samples, 0.07%)</title><rect x="797.7" y="949" width="0.8" height="15.0" fill="rgb(228,218,50)" rx="2" ry="2" />
<text  x="800.73" y="959.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::reserveForRead() (36 samples, 0.22%)</title><rect x="1135.4" y="1189" width="2.5" height="15.0" fill="rgb(253,196,43)" rx="2" ry="2" />
<text  x="1138.38" y="1199.5" ></text>
</g>
<g >
<title>Envoy::Runtime::runtimeFeatureEnabled(absl::string_view) (4 samples, 0.02%)</title><rect x="1060.9" y="1029" width="0.3" height="15.0" fill="rgb(249,72,31)" rx="2" ry="2" />
<text  x="1063.93" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="679.8" y="1349" width="0.1" height="15.0" fill="rgb(250,180,19)" rx="2" ry="2" />
<text  x="682.75" y="1359.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (7 samples, 0.04%)</title><rect x="744.6" y="741" width="0.5" height="15.0" fill="rgb(215,140,12)" rx="2" ry="2" />
<text  x="747.61" y="751.5" ></text>
</g>
<g >
<title>Envoy::MessageUtil::getJsonStringFromMessageOrDie(google::protobuf::Message const&amp;, bool, bool) (14 samples, 0.08%)</title><rect x="750.7" y="869" width="1.0" height="15.0" fill="rgb(253,218,16)" rx="2" ry="2" />
<text  x="753.73" y="879.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (4 samples, 0.02%)</title><rect x="251.6" y="981" width="0.3" height="15.0" fill="rgb(215,124,47)" rx="2" ry="2" />
<text  x="254.58" y="991.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestHeaderMapImpl::constInlineHeaders() const (2 samples, 0.01%)</title><rect x="1102.0" y="965" width="0.1" height="15.0" fill="rgb(248,39,52)" rx="2" ry="2" />
<text  x="1104.96" y="975.5" ></text>
</g>
<g >
<title>net/http.HandlerFunc.ServeHTTP (19 samples, 0.11%)</title><rect x="250.8" y="1301" width="1.3" height="15.0" fill="rgb(244,61,13)" rx="2" ry="2" />
<text  x="253.79" y="1311.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.02%)</title><rect x="489.7" y="1013" width="0.2" height="15.0" fill="rgb(236,91,21)" rx="2" ry="2" />
<text  x="492.67" y="1023.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (2 samples, 0.01%)</title><rect x="946.7" y="1301" width="0.2" height="15.0" fill="rgb(246,226,33)" rx="2" ry="2" />
<text  x="949.72" y="1311.5" ></text>
</g>
<g >
<title>worker_thread (2 samples, 0.01%)</title><rect x="679.3" y="1333" width="0.1" height="15.0" fill="rgb(246,148,33)" rx="2" ry="2" />
<text  x="682.26" y="1343.5" ></text>
</g>
<g >
<title>skb_release_data (5 samples, 0.03%)</title><rect x="565.5" y="501" width="0.3" height="15.0" fill="rgb(254,10,40)" rx="2" ry="2" />
<text  x="568.47" y="511.5" ></text>
</g>
<g >
<title>tcp_data_ready (2 samples, 0.01%)</title><rect x="623.4" y="981" width="0.2" height="15.0" fill="rgb(208,214,19)" rx="2" ry="2" />
<text  x="626.43" y="991.5" ></text>
</g>
<g >
<title>absl::optional_internal::optional_data_dtor_base&lt;Envoy::Http::Http1::ServerConnectionImpl::ActiveRequest, false&gt;::destruct() (61 samples, 0.37%)</title><rect x="996.0" y="933" width="4.3" height="15.0" fill="rgb(226,195,22)" rx="2" ry="2" />
<text  x="999.00" y="943.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onHeadersComplete() (290 samples, 1.75%)</title><rect x="971.4" y="1077" width="20.6" height="15.0" fill="rgb(210,135,12)" rx="2" ry="2" />
<text  x="974.39" y="1087.5" ></text>
</g>
<g >
<title>__libc_cfree (2 samples, 0.01%)</title><rect x="728.0" y="901" width="0.1" height="15.0" fill="rgb(246,208,38)" rx="2" ry="2" />
<text  x="730.97" y="911.5" ></text>
</g>
<g >
<title>sock_def_readable (249 samples, 1.50%)</title><rect x="566.3" y="549" width="17.7" height="15.0" fill="rgb(209,74,47)" rx="2" ry="2" />
<text  x="569.33" y="559.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::Slice(unsigned long, std::__1::shared_ptr&lt;Envoy::Buffer::BufferMemoryAccount&gt;, absl::optional&lt;Envoy::Buffer::Slice::FreeListReference&gt;) (2 samples, 0.01%)</title><rect x="1088.4" y="789" width="0.2" height="15.0" fill="rgb(252,89,17)" rx="2" ry="2" />
<text  x="1091.45" y="799.5" ></text>
</g>
<g >
<title>Envoy::Stats::SymbolTableImpl::join(absl::InlinedVector&lt;Envoy::Stats::StatName, 8ul, std::__1::allocator&lt;Envoy::Stats::StatName&gt; &gt; const&amp;) const (3 samples, 0.02%)</title><rect x="733.7" y="901" width="0.2" height="15.0" fill="rgb(232,195,0)" rx="2" ry="2" />
<text  x="736.73" y="911.5" ></text>
</g>
<g >
<title>do_futex (74 samples, 0.45%)</title><rect x="540.4" y="1141" width="5.2" height="15.0" fill="rgb(220,23,14)" rx="2" ry="2" />
<text  x="543.37" y="1151.5" ></text>
</g>
<g >
<title>__fget (4 samples, 0.02%)</title><rect x="997.0" y="709" width="0.3" height="15.0" fill="rgb(244,94,7)" rx="2" ry="2" />
<text  x="1000.00" y="719.5" ></text>
</g>
<g >
<title>encoding/json.(*Encoder).Encode (7 samples, 0.04%)</title><rect x="251.6" y="1173" width="0.5" height="15.0" fill="rgb(249,37,31)" rx="2" ry="2" />
<text  x="254.58" y="1183.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.02%)</title><rect x="34.2" y="1029" width="0.2" height="15.0" fill="rgb(214,201,21)" rx="2" ry="2" />
<text  x="37.18" y="1039.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::null_plugin::MetadataExchange::Plugin::$_0, std::__1::allocator&lt;proxy_wasm::null_plugin::MetadataExchange::Plugin::$_0&gt;, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::Context, std::__1::default_delete&lt;proxy_wasm::null_plugin::Context&gt; &gt; (unsigned int, proxy_wasm::null_plugin::RootContext*)&gt;::operator()(unsigned int&amp;&amp;, proxy_wasm::null_plugin::RootContext*&amp;&amp;) (18 samples, 0.11%)</title><rect x="1106.7" y="949" width="1.3" height="15.0" fill="rgb(237,15,10)" rx="2" ry="2" />
<text  x="1109.73" y="959.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Http::Http1::StreamEncoderImpl::getStream() (3 samples, 0.02%)</title><rect x="814.1" y="1045" width="0.2" height="15.0" fill="rgb(223,71,46)" rx="2" ry="2" />
<text  x="817.09" y="1055.5" ></text>
</g>
<g >
<title>do_syscall_64 (32 samples, 0.19%)</title><rect x="874.5" y="933" width="2.2" height="15.0" fill="rgb(243,24,30)" rx="2" ry="2" />
<text  x="877.47" y="943.5" ></text>
</g>
<g >
<title>event_del (46 samples, 0.28%)</title><rect x="873.5" y="1029" width="3.3" height="15.0" fill="rgb(231,142,3)" rx="2" ry="2" />
<text  x="876.54" y="1039.5" ></text>
</g>
<g >
<title>ip_queue_xmit (174 samples, 1.05%)</title><rect x="1154.9" y="901" width="12.3" height="15.0" fill="rgb(245,41,19)" rx="2" ry="2" />
<text  x="1157.87" y="911.5" ></text>
</g>
<g >
<title>inet_gro_receive (2 samples, 0.01%)</title><rect x="484.7" y="741" width="0.1" height="15.0" fill="rgb(224,216,35)" rx="2" ry="2" />
<text  x="487.69" y="751.5" ></text>
</g>
<g >
<title>local.runtime.timeSleepUntil (2 samples, 0.01%)</title><rect x="115.6" y="1285" width="0.1" height="15.0" fill="rgb(237,158,49)" rx="2" ry="2" />
<text  x="118.60" y="1295.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (2 samples, 0.01%)</title><rect x="224.6" y="1045" width="0.2" height="15.0" fill="rgb(217,194,17)" rx="2" ry="2" />
<text  x="227.62" y="1055.5" ></text>
</g>
<g >
<title>do_syscall_64 (30 samples, 0.18%)</title><rect x="173.6" y="1141" width="2.1" height="15.0" fill="rgb(234,82,50)" rx="2" ry="2" />
<text  x="176.56" y="1151.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="112.8" y="1253" width="0.2" height="15.0" fill="rgb(236,44,36)" rx="2" ry="2" />
<text  x="115.76" y="1263.5" ></text>
</g>
<g >
<title>get_futex_value_locked (3 samples, 0.02%)</title><rect x="459.0" y="917" width="0.2" height="15.0" fill="rgb(249,86,18)" rx="2" ry="2" />
<text  x="462.02" y="927.5" ></text>
</g>
<g >
<title>nf_hook_slow (10 samples, 0.06%)</title><rect x="1155.3" y="837" width="0.7" height="15.0" fill="rgb(228,123,3)" rx="2" ry="2" />
<text  x="1158.30" y="847.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.03%)</title><rect x="942.6" y="1333" width="0.3" height="15.0" fill="rgb(205,54,18)" rx="2" ry="2" />
<text  x="945.59" y="1343.5" ></text>
</g>
<g >
<title>vfs_read (34 samples, 0.20%)</title><rect x="96.3" y="1189" width="2.4" height="15.0" fill="rgb(220,196,33)" rx="2" ry="2" />
<text  x="99.26" y="1199.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ClientConnectionImpl::onHeadersCompleteBase() (281 samples, 1.69%)</title><rect x="717.2" y="1045" width="19.9" height="15.0" fill="rgb(234,217,34)" rx="2" ry="2" />
<text  x="720.16" y="1055.5" ></text>
</g>
<g >
<title>local.runtime.memmove (7 samples, 0.04%)</title><rect x="231.3" y="1253" width="0.5" height="15.0" fill="rgb(215,91,32)" rx="2" ry="2" />
<text  x="234.31" y="1263.5" ></text>
</g>
<g >
<title>do_readv (98 samples, 0.59%)</title><rect x="1143.0" y="1109" width="7.0" height="15.0" fill="rgb(210,134,6)" rx="2" ry="2" />
<text  x="1145.99" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::onUpstreamHostSelected(std::__1::shared_ptr&lt;Envoy::Upstream::HostDescription const&gt;) (4 samples, 0.02%)</title><rect x="843.1" y="885" width="0.3" height="15.0" fill="rgb(212,142,48)" rx="2" ry="2" />
<text  x="846.10" y="895.5" ></text>
</g>
<g >
<title>__sched_text_start (8 samples, 0.05%)</title><rect x="510.0" y="1061" width="0.6" height="15.0" fill="rgb(215,147,38)" rx="2" ry="2" />
<text  x="513.00" y="1071.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.02%)</title><rect x="997.0" y="725" width="0.3" height="15.0" fill="rgb(225,198,41)" rx="2" ry="2" />
<text  x="1000.00" y="735.5" ></text>
</g>
<g >
<title>do_iter_read (2 samples, 0.01%)</title><rect x="1143.2" y="1061" width="0.1" height="15.0" fill="rgb(239,103,32)" rx="2" ry="2" />
<text  x="1146.21" y="1071.5" ></text>
</g>
<g >
<title>__x64_sys_futex (654 samples, 3.94%)</title><rect x="438.7" y="981" width="46.5" height="15.0" fill="rgb(217,4,48)" rx="2" ry="2" />
<text  x="441.68" y="991.5" >__x6..</text>
</g>
<g >
<title>Envoy::Network::FilterManagerImpl::onContinueReading(Envoy::Network::FilterManagerImpl::ActiveReadFilter*, Envoy::Network::ReadBufferSource&amp;) (2,328 samples, 14.03%)</title><rect x="967.1" y="1221" width="165.6" height="15.0" fill="rgb(233,132,19)" rx="2" ry="2" />
<text  x="970.13" y="1231.5" >Envoy::Network::Filte..</text>
</g>
<g >
<title>Envoy::Http::CodecClient::onData(Envoy::Buffer::Instance&amp;) (1,346 samples, 8.11%)</title><rect x="712.2" y="1189" width="95.7" height="15.0" fill="rgb(214,37,40)" rx="2" ry="2" />
<text  x="715.18" y="1199.5" >Envoy::Http..</text>
</g>
<g >
<title>Envoy::Stats::ThreadLocalStoreImpl::symbolTable() (2 samples, 0.01%)</title><rect x="986.2" y="917" width="0.1" height="15.0" fill="rgb(245,72,47)" rx="2" ry="2" />
<text  x="989.19" y="927.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_out (8 samples, 0.05%)</title><rect x="1166.7" y="821" width="0.5" height="15.0" fill="rgb(249,124,13)" rx="2" ry="2" />
<text  x="1169.67" y="831.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::encodeHeaders(Envoy::Http::ActiveStreamEncoderFilter*, Envoy::Http::ResponseHeaderMap&amp;, bool) (156 samples, 0.94%)</title><rect x="719.2" y="981" width="11.0" height="15.0" fill="rgb(250,157,40)" rx="2" ry="2" />
<text  x="722.15" y="991.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::~WatermarkBuffer() (3 samples, 0.02%)</title><rect x="705.1" y="1221" width="0.3" height="15.0" fill="rgb(229,42,20)" rx="2" ry="2" />
<text  x="708.14" y="1231.5" ></text>
</g>
<g >
<title>__brelse (2 samples, 0.01%)</title><rect x="238.0" y="1013" width="0.1" height="15.0" fill="rgb(240,17,0)" rx="2" ry="2" />
<text  x="240.99" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (127 samples, 0.77%)</title><rect x="949.8" y="1285" width="9.1" height="15.0" fill="rgb(252,90,43)" rx="2" ry="2" />
<text  x="952.85" y="1295.5" ></text>
</g>
<g >
<title>__libc_cfree (2 samples, 0.01%)</title><rect x="1050.3" y="917" width="0.2" height="15.0" fill="rgb(237,208,38)" rx="2" ry="2" />
<text  x="1053.33" y="927.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::ValueFromMessage(google::protobuf::Value const*, google::protobuf::Arena*) (8 samples, 0.05%)</title><rect x="1025.4" y="773" width="0.5" height="15.0" fill="rgb(244,3,23)" rx="2" ry="2" />
<text  x="1028.37" y="783.5" ></text>
</g>
<g >
<title>runtime.park_m (17 samples, 0.10%)</title><rect x="113.3" y="1301" width="1.2" height="15.0" fill="rgb(248,198,9)" rx="2" ry="2" />
<text  x="116.33" y="1311.5" ></text>
</g>
<g >
<title>__lock_text_start (9 samples, 0.05%)</title><rect x="603.4" y="1109" width="0.7" height="15.0" fill="rgb(222,182,3)" rx="2" ry="2" />
<text  x="606.45" y="1119.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Router::Filter::upstreamTransportSocketOptions() const (2 samples, 0.01%)</title><rect x="1100.3" y="917" width="0.1" height="15.0" fill="rgb(227,159,46)" rx="2" ry="2" />
<text  x="1103.25" y="927.5" ></text>
</g>
<g >
<title>Envoy::ThreadLocal::InstanceImpl::SlotImpl::get() (2 samples, 0.01%)</title><rect x="811.7" y="997" width="0.1" height="15.0" fill="rgb(244,7,1)" rx="2" ry="2" />
<text  x="814.67" y="1007.5" ></text>
</g>
<g >
<title>std::__1::pair&lt;unsigned long, bool&gt; absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;absl::string_view, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;absl::string_view const, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt; &gt; &gt;::find_or_prepare_insert&lt;absl::string_view&gt;(absl::string_view const&amp;) (9 samples, 0.05%)</title><rect x="1084.9" y="933" width="0.6" height="15.0" fill="rgb(224,142,24)" rx="2" ry="2" />
<text  x="1087.89" y="943.5" ></text>
</g>
<g >
<title>aa_label_sk_perm.part.0 (4 samples, 0.02%)</title><rect x="898.2" y="965" width="0.3" height="15.0" fill="rgb(221,16,24)" rx="2" ry="2" />
<text  x="901.22" y="975.5" ></text>
</g>
<g >
<title>ip_forward (2 samples, 0.01%)</title><rect x="1131.5" y="901" width="0.2" height="15.0" fill="rgb(226,0,18)" rx="2" ry="2" />
<text  x="1134.54" y="911.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::refreshDurationTimeout() (4 samples, 0.02%)</title><rect x="818.6" y="997" width="0.3" height="15.0" fill="rgb(251,44,17)" rx="2" ry="2" />
<text  x="821.64" y="1007.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="498.8" y="1029" width="0.2" height="15.0" fill="rgb(210,1,10)" rx="2" ry="2" />
<text  x="501.84" y="1039.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (3 samples, 0.02%)</title><rect x="934.3" y="901" width="0.2" height="15.0" fill="rgb(249,205,15)" rx="2" ry="2" />
<text  x="937.27" y="911.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.02%)</title><rect x="489.7" y="1029" width="0.2" height="15.0" fill="rgb(206,135,21)" rx="2" ry="2" />
<text  x="492.67" y="1039.5" ></text>
</g>
<g >
<title>select_estimate_accuracy (2 samples, 0.01%)</title><rect x="59.7" y="1045" width="0.2" height="15.0" fill="rgb(215,8,33)" rx="2" ry="2" />
<text  x="62.71" y="1055.5" ></text>
</g>
<g >
<title>std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, proxy_wasm::ContextBase*&gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, proxy_wasm::ContextBase*&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, proxy_wasm::ContextBase*&gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, proxy_wasm::ContextBase*&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, proxy_wasm::ContextBase*&gt; &gt; &gt;::__emplace_unique_key_args&lt;unsigned int, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;unsigned int const&amp;&gt;, std::__1::tuple&lt;&gt; &gt;(unsigned int const&amp;, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;unsigned int const&amp;&gt;&amp;&amp;, std::__1::tuple&lt;&gt;&amp;&amp;) (4 samples, 0.02%)</title><rect x="1080.1" y="901" width="0.3" height="15.0" fill="rgb(242,55,23)" rx="2" ry="2" />
<text  x="1083.13" y="911.5" ></text>
</g>
<g >
<title>__x64_sys_read (4 samples, 0.02%)</title><rect x="496.8" y="1029" width="0.3" height="15.0" fill="rgb(239,192,15)" rx="2" ry="2" />
<text  x="499.85" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Stats::ParentHistogramImpl::recordValue(unsigned long) (5 samples, 0.03%)</title><rect x="791.8" y="821" width="0.4" height="15.0" fill="rgb(214,9,2)" rx="2" ry="2" />
<text  x="794.83" y="831.5" ></text>
</g>
<g >
<title>ksys_write (119 samples, 0.72%)</title><rect x="75.6" y="1189" width="8.4" height="15.0" fill="rgb(237,110,30)" rx="2" ry="2" />
<text  x="78.57" y="1199.5" ></text>
</g>
<g >
<title>futex_wake (17 samples, 0.10%)</title><rect x="436.5" y="853" width="1.2" height="15.0" fill="rgb(244,159,38)" rx="2" ry="2" />
<text  x="439.47" y="863.5" ></text>
</g>
<g >
<title>rw_verify_area (4 samples, 0.02%)</title><rect x="622.2" y="1157" width="0.3" height="15.0" fill="rgb(206,42,12)" rx="2" ry="2" />
<text  x="625.22" y="1167.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (79 samples, 0.48%)</title><rect x="908.5" y="501" width="5.6" height="15.0" fill="rgb(205,96,14)" rx="2" ry="2" />
<text  x="911.46" y="511.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (2 samples, 0.01%)</title><rect x="1127.8" y="853" width="0.2" height="15.0" fill="rgb(239,222,34)" rx="2" ry="2" />
<text  x="1130.85" y="863.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (65 samples, 0.39%)</title><rect x="491.5" y="981" width="4.6" height="15.0" fill="rgb(234,112,43)" rx="2" ry="2" />
<text  x="494.52" y="991.5" ></text>
</g>
<g >
<title>ep_poll (7 samples, 0.04%)</title><rect x="34.5" y="1061" width="0.5" height="15.0" fill="rgb(218,149,4)" rx="2" ry="2" />
<text  x="37.53" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Runtime::SnapshotImpl::runtimeFeatureEnabled(absl::string_view) const (2 samples, 0.01%)</title><rect x="866.6" y="1013" width="0.1" height="15.0" fill="rgb(237,229,2)" rx="2" ry="2" />
<text  x="869.57" y="1023.5" ></text>
</g>
<g >
<title>apparmor_file_permission (6 samples, 0.04%)</title><rect x="899.1" y="1029" width="0.4" height="15.0" fill="rgb(211,203,23)" rx="2" ry="2" />
<text  x="902.07" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="679.8" y="1333" width="0.1" height="15.0" fill="rgb(238,43,49)" rx="2" ry="2" />
<text  x="682.75" y="1343.5" ></text>
</g>
<g >
<title>proxy_wasm::null_plugin::MetadataExchange::Plugin::PluginContext::onResponseHeaders(unsigned int, bool) (30 samples, 0.18%)</title><rect x="982.1" y="917" width="2.2" height="15.0" fill="rgb(205,142,20)" rx="2" ry="2" />
<text  x="985.13" y="927.5" ></text>
</g>
<g >
<title>sch_direct_xmit (10 samples, 0.06%)</title><rect x="1159.8" y="101" width="0.8" height="15.0" fill="rgb(241,161,29)" rx="2" ry="2" />
<text  x="1162.85" y="111.5" ></text>
</g>
<g >
<title>runtime.wakep (49 samples, 0.30%)</title><rect x="126.2" y="1157" width="3.5" height="15.0" fill="rgb(248,154,28)" rx="2" ry="2" />
<text  x="129.20" y="1167.5" ></text>
</g>
<g >
<title>__wake_up (12 samples, 0.07%)</title><rect x="241.8" y="1045" width="0.8" height="15.0" fill="rgb(222,211,41)" rx="2" ry="2" />
<text  x="244.76" y="1055.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="645.9" y="1141" width="0.1" height="15.0" fill="rgb(246,216,53)" rx="2" ry="2" />
<text  x="648.90" y="1151.5" ></text>
</g>
<g >
<title>__fdget (4 samples, 0.02%)</title><rect x="741.8" y="741" width="0.3" height="15.0" fill="rgb(245,142,30)" rx="2" ry="2" />
<text  x="744.84" y="751.5" ></text>
</g>
<g >
<title>nf_hook_slow (8 samples, 0.05%)</title><rect x="1173.4" y="837" width="0.6" height="15.0" fill="rgb(209,179,42)" rx="2" ry="2" />
<text  x="1176.43" y="847.5" ></text>
</g>
<g >
<title>process_backlog (2 samples, 0.01%)</title><rect x="701.6" y="1045" width="0.1" height="15.0" fill="rgb(217,89,51)" rx="2" ry="2" />
<text  x="704.59" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (515 samples, 3.10%)</title><rect x="25.6" y="1157" width="36.7" height="15.0" fill="rgb(214,98,9)" rx="2" ry="2" />
<text  x="28.65" y="1167.5" >[un..</text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info() (5 samples, 0.03%)</title><rect x="942.6" y="1349" width="0.3" height="15.0" fill="rgb(226,1,52)" rx="2" ry="2" />
<text  x="945.59" y="1359.5" ></text>
</g>
<g >
<title>std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; Envoy::Http::HeaderMapImpl::HeaderList::insert&lt;Envoy::Http::LowerCaseString const&amp;&gt;(Envoy::Http::LowerCaseString const&amp;) (2 samples, 0.01%)</title><rect x="825.5" y="997" width="0.1" height="15.0" fill="rgb(252,89,0)" rx="2" ry="2" />
<text  x="828.47" y="1007.5" ></text>
</g>
<g >
<title>do_syscall_64 (173 samples, 1.04%)</title><rect x="690.8" y="1269" width="12.4" height="15.0" fill="rgb(247,154,41)" rx="2" ry="2" />
<text  x="693.85" y="1279.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.03%)</title><rect x="507.9" y="1093" width="0.3" height="15.0" fill="rgb(206,68,15)" rx="2" ry="2" />
<text  x="510.87" y="1103.5" ></text>
</g>
<g >
<title>__lock_text_start (6 samples, 0.04%)</title><rect x="496.4" y="933" width="0.4" height="15.0" fill="rgb(205,222,13)" rx="2" ry="2" />
<text  x="499.42" y="943.5" ></text>
</g>
<g >
<title>futex_wake (35 samples, 0.21%)</title><rect x="614.8" y="1173" width="2.5" height="15.0" fill="rgb(237,76,22)" rx="2" ry="2" />
<text  x="617.83" y="1183.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (19 samples, 0.11%)</title><rect x="513.4" y="981" width="1.4" height="15.0" fill="rgb(252,155,38)" rx="2" ry="2" />
<text  x="516.42" y="991.5" ></text>
</g>
<g >
<title>os.(*File).Write (238 samples, 1.43%)</title><rect x="232.1" y="1301" width="16.9" height="15.0" fill="rgb(241,134,30)" rx="2" ry="2" />
<text  x="235.09" y="1311.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="855.5" y="997" width="0.2" height="15.0" fill="rgb(234,200,11)" rx="2" ry="2" />
<text  x="858.55" y="1007.5" ></text>
</g>
<g >
<title>do_nanosleep (38 samples, 0.23%)</title><rect x="116.5" y="1205" width="2.7" height="15.0" fill="rgb(216,61,37)" rx="2" ry="2" />
<text  x="119.46" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::drain(unsigned long) (5 samples, 0.03%)</title><rect x="1152.7" y="1189" width="0.3" height="15.0" fill="rgb(253,202,33)" rx="2" ry="2" />
<text  x="1155.66" y="1199.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="539.7" y="1013" width="0.2" height="15.0" fill="rgb(241,174,14)" rx="2" ry="2" />
<text  x="542.73" y="1023.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Event::DispatcherImpl::pushTrackedObject(Envoy::ScopeTrackedObject const*) (2 samples, 0.01%)</title><rect x="919.7" y="1253" width="0.1" height="15.0" fill="rgb(206,108,52)" rx="2" ry="2" />
<text  x="922.69" y="1263.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.01%)</title><rect x="691.3" y="1173" width="0.2" height="15.0" fill="rgb(238,215,2)" rx="2" ry="2" />
<text  x="694.35" y="1183.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::get(Envoy::Http::LowerCaseString const&amp;) const (11 samples, 0.07%)</title><rect x="1030.1" y="789" width="0.7" height="15.0" fill="rgb(235,109,2)" rx="2" ry="2" />
<text  x="1033.06" y="799.5" ></text>
</g>
<g >
<title>__xfrm_decode_session (2 samples, 0.01%)</title><rect x="1167.0" y="773" width="0.1" height="15.0" fill="rgb(220,196,43)" rx="2" ry="2" />
<text  x="1169.96" y="783.5" ></text>
</g>
<g >
<title>ksys_write (4 samples, 0.02%)</title><rect x="656.4" y="1237" width="0.3" height="15.0" fill="rgb(240,182,31)" rx="2" ry="2" />
<text  x="659.43" y="1247.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (23 samples, 0.14%)</title><rect x="642.5" y="1141" width="1.6" height="15.0" fill="rgb(238,8,10)" rx="2" ry="2" />
<text  x="645.49" y="1151.5" ></text>
</g>
<g >
<title>__libc_cfree (3 samples, 0.02%)</title><rect x="1118.2" y="901" width="0.2" height="15.0" fill="rgb(232,220,46)" rx="2" ry="2" />
<text  x="1121.17" y="911.5" ></text>
</g>
<g >
<title>runtime.findrunnable (11 samples, 0.07%)</title><rect x="257.3" y="1317" width="0.7" height="15.0" fill="rgb(222,160,17)" rx="2" ry="2" />
<text  x="260.26" y="1327.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (8 samples, 0.05%)</title><rect x="1159.8" y="85" width="0.6" height="15.0" fill="rgb(227,194,19)" rx="2" ry="2" />
<text  x="1162.85" y="95.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="539.7" y="997" width="0.2" height="15.0" fill="rgb(215,18,16)" rx="2" ry="2" />
<text  x="542.73" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Upstream::ClusterInfoImpl::statsScope() const (2 samples, 0.01%)</title><rect x="988.2" y="981" width="0.1" height="15.0" fill="rgb(239,157,38)" rx="2" ry="2" />
<text  x="991.18" y="991.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="1145.8" y="629" width="0.2" height="15.0" fill="rgb(234,40,16)" rx="2" ry="2" />
<text  x="1148.84" y="639.5" ></text>
</g>
<g >
<title>sock_zerocopy_put (2 samples, 0.01%)</title><rect x="556.7" y="997" width="0.2" height="15.0" fill="rgb(211,141,25)" rx="2" ry="2" />
<text  x="559.73" y="1007.5" ></text>
</g>
<g >
<title>envoy::config::core::v3::Metadata::~Metadata() (2 samples, 0.01%)</title><rect x="799.6" y="917" width="0.1" height="15.0" fill="rgb(216,209,44)" rx="2" ry="2" />
<text  x="802.58" y="927.5" ></text>
</g>
<g >
<title>nf_conntrack_in (3 samples, 0.02%)</title><rect x="1173.5" y="789" width="0.2" height="15.0" fill="rgb(248,201,1)" rx="2" ry="2" />
<text  x="1176.50" y="799.5" ></text>
</g>
<g >
<title>writev (252 samples, 1.52%)</title><rect x="1170.2" y="1173" width="18.0" height="15.0" fill="rgb(238,54,16)" rx="2" ry="2" />
<text  x="1173.23" y="1183.5" ></text>
</g>
<g >
<title>gro_cell_poll (2 samples, 0.01%)</title><rect x="498.8" y="981" width="0.2" height="15.0" fill="rgb(230,179,37)" rx="2" ry="2" />
<text  x="501.84" y="991.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::getHostValue() const (2 samples, 0.01%)</title><rect x="758.8" y="917" width="0.2" height="15.0" fill="rgb(209,177,44)" rx="2" ry="2" />
<text  x="761.83" y="927.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.01%)</title><rect x="950.0" y="1205" width="0.1" height="15.0" fill="rgb(213,88,24)" rx="2" ry="2" />
<text  x="952.99" y="1215.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::basic_string(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) (4 samples, 0.02%)</title><rect x="819.1" y="997" width="0.3" height="15.0" fill="rgb(251,51,16)" rx="2" ry="2" />
<text  x="822.14" y="1007.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (2 samples, 0.01%)</title><rect x="491.6" y="949" width="0.1" height="15.0" fill="rgb(215,29,42)" rx="2" ry="2" />
<text  x="494.59" y="959.5" ></text>
</g>
<g >
<title>vxlan_xmit_one (45 samples, 0.27%)</title><rect x="908.7" y="261" width="3.2" height="15.0" fill="rgb(208,119,19)" rx="2" ry="2" />
<text  x="911.74" y="271.5" ></text>
</g>
<g >
<title>Envoy::Runtime::LoaderImpl::snapshot() (4 samples, 0.02%)</title><rect x="994.2" y="949" width="0.2" height="15.0" fill="rgb(219,39,27)" rx="2" ry="2" />
<text  x="997.15" y="959.5" ></text>
</g>
<g >
<title>new_sync_read (26 samples, 0.16%)</title><rect x="96.3" y="1157" width="1.8" height="15.0" fill="rgb(205,9,29)" rx="2" ry="2" />
<text  x="99.26" y="1167.5" ></text>
</g>
<g >
<title>common_file_perm (6 samples, 0.04%)</title><rect x="167.1" y="1093" width="0.4" height="15.0" fill="rgb(236,144,30)" rx="2" ry="2" />
<text  x="170.09" y="1103.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelExpressionFlatEvaluationState::~CelExpressionFlatEvaluationState() (2 samples, 0.01%)</title><rect x="1037.3" y="805" width="0.2" height="15.0" fill="rgb(254,183,50)" rx="2" ry="2" />
<text  x="1040.32" y="815.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (174 samples, 1.05%)</title><rect x="236.0" y="1253" width="12.4" height="15.0" fill="rgb(227,173,26)" rx="2" ry="2" />
<text  x="239.00" y="1263.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4 samples, 0.02%)</title><rect x="1144.3" y="981" width="0.3" height="15.0" fill="rgb(236,11,0)" rx="2" ry="2" />
<text  x="1147.27" y="991.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.01%)</title><rect x="33.7" y="997" width="0.1" height="15.0" fill="rgb(205,104,19)" rx="2" ry="2" />
<text  x="36.68" y="1007.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (7 samples, 0.04%)</title><rect x="38.2" y="1029" width="0.5" height="15.0" fill="rgb(244,107,40)" rx="2" ry="2" />
<text  x="41.16" y="1039.5" ></text>
</g>
<g >
<title>absl::hash_internal::MixingHashState::combine_contiguous(absl::hash_internal::MixingHashState, unsigned char const*, unsigned long) (2 samples, 0.01%)</title><rect x="1096.1" y="901" width="0.2" height="15.0" fill="rgb(219,9,38)" rx="2" ry="2" />
<text  x="1099.13" y="911.5" ></text>
</g>
<g >
<title>Envoy::Stats::SymbolTableImpl::join(absl::InlinedVector&lt;Envoy::Stats::StatName, 8ul, std::__1::allocator&lt;Envoy::Stats::StatName&gt; &gt; const&amp;) const (2 samples, 0.01%)</title><rect x="731.2" y="917" width="0.2" height="15.0" fill="rgb(215,104,19)" rx="2" ry="2" />
<text  x="734.24" y="927.5" ></text>
</g>
<g >
<title>vfs_write (145 samples, 0.87%)</title><rect x="237.0" y="1189" width="10.3" height="15.0" fill="rgb(250,208,54)" rx="2" ry="2" />
<text  x="240.00" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="681.8" y="1333" width="0.2" height="15.0" fill="rgb(219,145,45)" rx="2" ry="2" />
<text  x="684.82" y="1343.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="242.8" y="997" width="0.2" height="15.0" fill="rgb(205,148,38)" rx="2" ry="2" />
<text  x="245.83" y="1007.5" ></text>
</g>
<g >
<title>finish_task_switch (3 samples, 0.02%)</title><rect x="545.7" y="1061" width="0.2" height="15.0" fill="rgb(233,31,16)" rx="2" ry="2" />
<text  x="548.70" y="1071.5" ></text>
</g>
<g >
<title>tcp_poll (2 samples, 0.01%)</title><rect x="878.5" y="869" width="0.2" height="15.0" fill="rgb(238,4,2)" rx="2" ry="2" />
<text  x="881.52" y="879.5" ></text>
</g>
<g >
<title>kthread (3 samples, 0.02%)</title><rect x="659.3" y="1349" width="0.2" height="15.0" fill="rgb(212,147,33)" rx="2" ry="2" />
<text  x="662.27" y="1359.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CreateValueFromSingleField(google::protobuf::Message const*, google::protobuf::FieldDescriptor const*, google::protobuf::Arena*, google::api::expr::runtime::CelValue*) (2 samples, 0.01%)</title><rect x="768.5" y="773" width="0.1" height="15.0" fill="rgb(233,188,41)" rx="2" ry="2" />
<text  x="771.51" y="783.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.01%)</title><rect x="539.7" y="1029" width="0.2" height="15.0" fill="rgb(254,21,30)" rx="2" ry="2" />
<text  x="542.73" y="1039.5" ></text>
</g>
<g >
<title>br_handle_vlan (2 samples, 0.01%)</title><rect x="1157.2" y="533" width="0.2" height="15.0" fill="rgb(249,116,29)" rx="2" ry="2" />
<text  x="1160.22" y="543.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ResponseHeaderMapImpl::EnvoyImmediateHealthCheckFail() const (3 samples, 0.02%)</title><rect x="989.0" y="981" width="0.2" height="15.0" fill="rgb(210,146,13)" rx="2" ry="2" />
<text  x="992.03" y="991.5" ></text>
</g>
<g >
<title>i40e_lan_select_queue (2 samples, 0.01%)</title><rect x="910.6" y="85" width="0.1" height="15.0" fill="rgb(220,87,47)" rx="2" ry="2" />
<text  x="913.59" y="95.5" ></text>
</g>
<g >
<title>rb_insert_color (2 samples, 0.01%)</title><rect x="745.5" y="757" width="0.2" height="15.0" fill="rgb(213,45,40)" rx="2" ry="2" />
<text  x="748.54" y="767.5" ></text>
</g>
<g >
<title>[unknown] (5,615 samples, 33.84%)</title><rect x="259.0" y="1349" width="399.3" height="15.0" fill="rgb(207,155,0)" rx="2" ry="2" />
<text  x="261.97" y="1359.5" >[unknown]</text>
</g>
<g >
<title>local.encoding/json.Unmarshal (4 samples, 0.02%)</title><rect x="251.3" y="1045" width="0.3" height="15.0" fill="rgb(210,177,47)" rx="2" ry="2" />
<text  x="254.29" y="1055.5" ></text>
</g>
<g >
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="588.4" y="869" width="0.3" height="15.0" fill="rgb(235,45,22)" rx="2" ry="2" />
<text  x="591.44" y="879.5" ></text>
</g>
<g >
<title>ext4_write_checks (2 samples, 0.01%)</title><rect x="246.5" y="1109" width="0.1" height="15.0" fill="rgb(250,52,33)" rx="2" ry="2" />
<text  x="249.46" y="1119.5" ></text>
</g>
<g >
<title>__libc_cfree (4 samples, 0.02%)</title><rect x="1036.0" y="853" width="0.3" height="15.0" fill="rgb(248,57,12)" rx="2" ry="2" />
<text  x="1039.04" y="863.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (2 samples, 0.01%)</title><rect x="923.4" y="869" width="0.1" height="15.0" fill="rgb(232,93,51)" rx="2" ry="2" />
<text  x="926.39" y="879.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="622.9" y="1205" width="0.4" height="15.0" fill="rgb(237,54,27)" rx="2" ry="2" />
<text  x="625.93" y="1215.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::EnvoyUpstreamRequestTimeoutMs() const (3 samples, 0.02%)</title><rect x="855.1" y="997" width="0.2" height="15.0" fill="rgb(228,223,11)" rx="2" ry="2" />
<text  x="858.12" y="1007.5" ></text>
</g>
<g >
<title>tcp_ack (3 samples, 0.02%)</title><rect x="1174.9" y="517" width="0.2" height="15.0" fill="rgb(225,173,44)" rx="2" ry="2" />
<text  x="1177.92" y="527.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#3}::__invoke(http_parser*) (172 samples, 1.04%)</title><rect x="1116.8" y="1109" width="12.3" height="15.0" fill="rgb(242,226,29)" rx="2" ry="2" />
<text  x="1119.82" y="1119.5" ></text>
</g>
<g >
<title>__do_page_fault (6 samples, 0.04%)</title><rect x="593.8" y="1157" width="0.4" height="15.0" fill="rgb(206,11,6)" rx="2" ry="2" />
<text  x="596.78" y="1167.5" ></text>
</g>
<g >
<title>local.sync.runtime_notifyListWait (752 samples, 4.53%)</title><rect x="172.8" y="1301" width="53.5" height="15.0" fill="rgb(230,178,6)" rx="2" ry="2" />
<text  x="175.78" y="1311.5" >local..</text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::chargeStats(Envoy::Http::ResponseHeaderMap const&amp;) (4 samples, 0.02%)</title><rect x="975.1" y="949" width="0.3" height="15.0" fill="rgb(226,51,52)" rx="2" ry="2" />
<text  x="978.09" y="959.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.01%)</title><rect x="679.3" y="1285" width="0.1" height="15.0" fill="rgb(212,134,3)" rx="2" ry="2" />
<text  x="682.26" y="1295.5" ></text>
</g>
<g >
<title>ip_local_deliver (311 samples, 1.87%)</title><rect x="563.3" y="661" width="22.2" height="15.0" fill="rgb(234,134,17)" rx="2" ry="2" />
<text  x="566.34" y="671.5" >i..</text>
</g>
<g >
<title>Envoy::Router::Filter::decodeHeaders(Envoy::Http::RequestHeaderMap&amp;, bool) (2 samples, 0.01%)</title><rect x="751.9" y="837" width="0.1" height="15.0" fill="rgb(211,49,40)" rx="2" ry="2" />
<text  x="754.86" y="847.5" ></text>
</g>
<g >
<title>process_backlog (157 samples, 0.95%)</title><rect x="1174.2" y="709" width="11.2" height="15.0" fill="rgb(230,97,11)" rx="2" ry="2" />
<text  x="1177.21" y="719.5" ></text>
</g>
<g >
<title>runtime.putempty (2 samples, 0.01%)</title><rect x="255.2" y="1285" width="0.1" height="15.0" fill="rgb(221,41,26)" rx="2" ry="2" />
<text  x="258.20" y="1295.5" ></text>
</g>
<g >
<title>do_syscall_64 (22 samples, 0.13%)</title><rect x="741.8" y="773" width="1.5" height="15.0" fill="rgb(209,21,43)" rx="2" ry="2" />
<text  x="744.77" y="783.5" ></text>
</g>
<g >
<title>event_base_loop (5 samples, 0.03%)</title><rect x="658.3" y="1285" width="0.4" height="15.0" fill="rgb(243,214,53)" rx="2" ry="2" />
<text  x="661.35" y="1295.5" ></text>
</g>
<g >
<title>Envoy::Http::Utility::Url::initialize(absl::string_view, bool) (9 samples, 0.05%)</title><rect x="1114.7" y="1029" width="0.6" height="15.0" fill="rgb(212,54,17)" rx="2" ry="2" />
<text  x="1117.69" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::add(void const*, unsigned long) (8 samples, 0.05%)</title><rect x="723.1" y="853" width="0.5" height="15.0" fill="rgb(223,102,0)" rx="2" ry="2" />
<text  x="726.06" y="863.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::EvaluateExpressionFactory::create(std::__1::shared_ptr&lt;Envoy::Extensions::Common::Wasm::EvaluateExpressionFactory&gt;) const::{lambda(proxy_wasm::WasmBase&amp;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void* (unsigned long)&gt; const&amp;)#1}::operator()(proxy_wasm::WasmBase&amp;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void* (unsigned long)&gt; const&amp;) const (73 samples, 0.44%)</title><rect x="784.5" y="821" width="5.2" height="15.0" fill="rgb(226,12,26)" rx="2" ry="2" />
<text  x="787.51" y="831.5" ></text>
</g>
<g >
<title>absl::hash_internal::MixingHashState::combine_contiguous(absl::hash_internal::MixingHashState, unsigned char const*, unsigned long) (2 samples, 0.01%)</title><rect x="1016.3" y="757" width="0.2" height="15.0" fill="rgb(228,61,43)" rx="2" ry="2" />
<text  x="1019.34" y="767.5" ></text>
</g>
<g >
<title>ep_poll (2 samples, 0.01%)</title><rect x="691.2" y="1205" width="0.1" height="15.0" fill="rgb(206,226,9)" rx="2" ry="2" />
<text  x="694.20" y="1215.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::EnvoyInternalRequest() const (3 samples, 0.02%)</title><rect x="987.5" y="949" width="0.2" height="15.0" fill="rgb(246,222,20)" rx="2" ry="2" />
<text  x="990.47" y="959.5" ></text>
</g>
<g >
<title>runtime.runqgrab (30 samples, 0.18%)</title><rect x="211.3" y="1205" width="2.2" height="15.0" fill="rgb(229,135,7)" rx="2" ry="2" />
<text  x="214.32" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="679.5" y="1333" width="0.2" height="15.0" fill="rgb(251,68,13)" rx="2" ry="2" />
<text  x="682.54" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (124 samples, 0.75%)</title><rect x="893.2" y="1157" width="8.8" height="15.0" fill="rgb(211,68,33)" rx="2" ry="2" />
<text  x="896.17" y="1167.5" ></text>
</g>
<g >
<title>kthread (4 samples, 0.02%)</title><rect x="659.9" y="1349" width="0.3" height="15.0" fill="rgb(212,147,53)" rx="2" ry="2" />
<text  x="662.91" y="1359.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ThreadSafeArena::AllocateAlignedWithCleanupFallback(unsigned long, std::type_info const*) (3 samples, 0.02%)</title><rect x="771.9" y="773" width="0.2" height="15.0" fill="rgb(208,7,26)" rx="2" ry="2" />
<text  x="774.92" y="783.5" ></text>
</g>
<g >
<title>__lock_text_start (100 samples, 0.60%)</title><rect x="499.5" y="965" width="7.1" height="15.0" fill="rgb(247,191,47)" rx="2" ry="2" />
<text  x="502.48" y="975.5" ></text>
</g>
<g >
<title>sock_poll (4 samples, 0.02%)</title><rect x="1127.7" y="885" width="0.3" height="15.0" fill="rgb(207,42,25)" rx="2" ry="2" />
<text  x="1130.70" y="895.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::get_property(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (24 samples, 0.14%)</title><rect x="857.6" y="917" width="1.7" height="15.0" fill="rgb(222,161,27)" rx="2" ry="2" />
<text  x="860.61" y="927.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::write(Envoy::Buffer::Instance&amp;, bool, bool) (6 samples, 0.04%)</title><rect x="1118.1" y="965" width="0.4" height="15.0" fill="rgb(230,22,50)" rx="2" ry="2" />
<text  x="1121.10" y="975.5" ></text>
</g>
<g >
<title>do_epoll_wait (3 samples, 0.02%)</title><rect x="950.1" y="1221" width="0.2" height="15.0" fill="rgb(219,170,33)" rx="2" ry="2" />
<text  x="953.13" y="1231.5" ></text>
</g>
<g >
<title>url::CanonicalizePath(char const*, url::Component const&amp;, url::CanonOutputT&lt;char&gt;*, url::Component*) (3 samples, 0.02%)</title><rect x="824.1" y="997" width="0.2" height="15.0" fill="rgb(218,199,41)" rx="2" ry="2" />
<text  x="827.12" y="1007.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (2 samples, 0.01%)</title><rect x="1165.8" y="693" width="0.2" height="15.0" fill="rgb(246,45,24)" rx="2" ry="2" />
<text  x="1168.82" y="703.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::decodeData(Envoy::Http::ActiveStreamDecoderFilter*, Envoy::Buffer::Instance&amp;, bool, Envoy::Http::FilterManager::FilterIterationStartState) (36 samples, 0.22%)</title><rect x="870.6" y="1045" width="2.6" height="15.0" fill="rgb(251,141,50)" rx="2" ry="2" />
<text  x="873.63" y="1055.5" ></text>
</g>
<g >
<title>std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::WasmResult (proxy_wasm::WasmBase&amp;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void* (unsigned long)&gt;)&gt; &gt;, void*&gt;*&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::WasmResult (proxy_wasm::WasmBase&amp;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void* (unsigned long)&gt;)&gt; &gt;, std::__1::__unordered_map_hasher&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::WasmResult (proxy_wasm::WasmBase&amp;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void* (unsigned long)&gt;)&gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::__unordered_map_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::WasmResult (proxy_wasm::WasmBase&amp;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void* (unsigned long)&gt;)&gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::WasmResult (proxy_wasm::WasmBase&amp;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void* (unsigned long)&gt;)&gt; &gt; &gt; &gt;::find&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) (2 samples, 0.01%)</title><rect x="1041.6" y="805" width="0.1" height="15.0" fill="rgb(247,170,3)" rx="2" ry="2" />
<text  x="1044.58" y="815.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ResponseHeaderMapImpl::ContentLength() const (3 samples, 0.02%)</title><rect x="979.4" y="933" width="0.2" height="15.0" fill="rgb(213,212,12)" rx="2" ry="2" />
<text  x="982.36" y="943.5" ></text>
</g>
<g >
<title>common_file_perm (6 samples, 0.04%)</title><rect x="1148.5" y="1013" width="0.5" height="15.0" fill="rgb(216,160,10)" rx="2" ry="2" />
<text  x="1151.54" y="1023.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (5 samples, 0.03%)</title><rect x="748.0" y="917" width="0.4" height="15.0" fill="rgb(214,174,2)" rx="2" ry="2" />
<text  x="751.02" y="927.5" ></text>
</g>
<g >
<title>Envoy::Http::CodeStatsImpl::chargeBasicResponseStat(Envoy::Stats::Scope&amp;, Envoy::Stats::StatName, Envoy::Http::Code, bool) const (23 samples, 0.14%)</title><rect x="984.8" y="949" width="1.6" height="15.0" fill="rgb(245,27,18)" rx="2" ry="2" />
<text  x="987.76" y="959.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::~Context() (5 samples, 0.03%)</title><rect x="961.2" y="1205" width="0.4" height="15.0" fill="rgb(244,66,4)" rx="2" ry="2" />
<text  x="964.23" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Runtime::getInteger(absl::string_view, unsigned long) (2 samples, 0.01%)</title><rect x="970.5" y="1013" width="0.1" height="15.0" fill="rgb(234,150,18)" rx="2" ry="2" />
<text  x="973.47" y="1023.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.01%)</title><rect x="701.6" y="1029" width="0.1" height="15.0" fill="rgb(229,111,15)" rx="2" ry="2" />
<text  x="704.59" y="1039.5" ></text>
</g>
<g >
<title>do_nanosleep (18 samples, 0.11%)</title><rect x="617.4" y="1173" width="1.3" height="15.0" fill="rgb(241,27,4)" rx="2" ry="2" />
<text  x="620.39" y="1183.5" ></text>
</g>
<g >
<title>runtime.mcall (17 samples, 0.10%)</title><rect x="113.3" y="1317" width="1.2" height="15.0" fill="rgb(251,226,29)" rx="2" ry="2" />
<text  x="116.33" y="1327.5" ></text>
</g>
<g >
<title>ip_sabotage_in (77 samples, 0.46%)</title><rect x="908.5" y="453" width="5.5" height="15.0" fill="rgb(222,58,14)" rx="2" ry="2" />
<text  x="911.53" y="463.5" ></text>
</g>
<g >
<title>absl::Mutex::ReaderLock() (3 samples, 0.02%)</title><rect x="849.7" y="901" width="0.2" height="15.0" fill="rgb(230,181,27)" rx="2" ry="2" />
<text  x="852.72" y="911.5" ></text>
</g>
<g >
<title>__do_page_fault (6 samples, 0.04%)</title><rect x="539.7" y="1141" width="0.4" height="15.0" fill="rgb(241,169,28)" rx="2" ry="2" />
<text  x="542.66" y="1151.5" ></text>
</g>
<g >
<title>void std::__1::vector&lt;Envoy::Extensions::Tracers::Zipkin::Annotation, std::__1::allocator&lt;Envoy::Extensions::Tracers::Zipkin::Annotation&gt; &gt;::__push_back_slow_path&lt;Envoy::Extensions::Tracers::Zipkin::Annotation&gt;(Envoy::Extensions::Tracers::Zipkin::Annotation&amp;&amp;) (4 samples, 0.02%)</title><rect x="1005.4" y="901" width="0.3" height="15.0" fill="rgb(210,101,45)" rx="2" ry="2" />
<text  x="1008.39" y="911.5" ></text>
</g>
<g >
<title>Envoy::Runtime::runtimeFeatureEnabled(absl::string_view) (2 samples, 0.01%)</title><rect x="1103.4" y="997" width="0.1" height="15.0" fill="rgb(223,129,43)" rx="2" ry="2" />
<text  x="1106.38" y="1007.5" ></text>
</g>
<g >
<title>do_syscall_64 (27 samples, 0.16%)</title><rect x="744.1" y="789" width="1.9" height="15.0" fill="rgb(206,120,26)" rx="2" ry="2" />
<text  x="747.11" y="799.5" ></text>
</g>
<g >
<title>futex_wake (32 samples, 0.19%)</title><rect x="543.3" y="1125" width="2.3" height="15.0" fill="rgb(252,130,51)" rx="2" ry="2" />
<text  x="546.29" y="1135.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.01%)</title><rect x="604.3" y="1141" width="0.1" height="15.0" fill="rgb(222,166,13)" rx="2" ry="2" />
<text  x="607.30" y="1151.5" ></text>
</g>
<g >
<title>bool url::(anonymous namespace)::DoPartialPathInternal&lt;char, unsigned char&gt;(char const*, url::Component const&amp;, int, url::CanonOutputT&lt;char&gt;*) (3 samples, 0.02%)</title><rect x="1072.2" y="981" width="0.2" height="15.0" fill="rgb(253,71,11)" rx="2" ry="2" />
<text  x="1075.23" y="991.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::get(Envoy::Http::LowerCaseString const&amp;) const (6 samples, 0.04%)</title><rect x="860.8" y="917" width="0.4" height="15.0" fill="rgb(225,160,17)" rx="2" ry="2" />
<text  x="863.81" y="927.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (4 samples, 0.02%)</title><rect x="249.9" y="1285" width="0.3" height="15.0" fill="rgb(226,76,52)" rx="2" ry="2" />
<text  x="252.94" y="1295.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::ServerConnectionImpl::maybeAddSentinelBufferFragment(Envoy::Buffer::Instance&amp;) (4 samples, 0.02%)</title><rect x="746.3" y="933" width="0.3" height="15.0" fill="rgb(212,59,21)" rx="2" ry="2" />
<text  x="749.32" y="943.5" ></text>
</g>
<g >
<title>skb_release_data (2 samples, 0.01%)</title><rect x="1144.0" y="949" width="0.1" height="15.0" fill="rgb(231,21,46)" rx="2" ry="2" />
<text  x="1146.99" y="959.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::StreamInfoImpl(absl::optional&lt;Envoy::Http::Protocol&gt;, Envoy::TimeSource&amp;, std::__1::shared_ptr&lt;Envoy::Network::ConnectionInfoProvider const&gt; const&amp;, std::__1::shared_ptr&lt;Envoy::StreamInfo::FilterState&gt;) (3 samples, 0.02%)</title><rect x="853.6" y="965" width="0.2" height="15.0" fill="rgb(240,153,44)" rx="2" ry="2" />
<text  x="856.56" y="975.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const (4 samples, 0.02%)</title><rect x="684.6" y="1365" width="0.3" height="15.0" fill="rgb(220,213,28)" rx="2" ry="2" />
<text  x="687.59" y="1375.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::callAndClearDrainTrackersAndCharges() (2 samples, 0.01%)</title><rect x="1137.5" y="1141" width="0.2" height="15.0" fill="rgb(233,213,33)" rx="2" ry="2" />
<text  x="1140.52" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Http::ActiveStreamEncoderFilter::~ActiveStreamEncoderFilter() (2 samples, 0.01%)</title><rect x="707.5" y="1221" width="0.1" height="15.0" fill="rgb(209,182,31)" rx="2" ry="2" />
<text  x="710.49" y="1231.5" ></text>
</g>
<g >
<title>__sched_text_start (38 samples, 0.23%)</title><rect x="116.5" y="1173" width="2.7" height="15.0" fill="rgb(217,113,24)" rx="2" ry="2" />
<text  x="119.46" y="1183.5" ></text>
</g>
<g >
<title>runtime.notewakeup (80 samples, 0.48%)</title><rect x="202.8" y="1189" width="5.7" height="15.0" fill="rgb(245,110,2)" rx="2" ry="2" />
<text  x="205.79" y="1199.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.01%)</title><rect x="458.7" y="901" width="0.2" height="15.0" fill="rgb(206,97,0)" rx="2" ry="2" />
<text  x="461.73" y="911.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::~ActiveStream() (75 samples, 0.45%)</title><rect x="704.6" y="1253" width="5.3" height="15.0" fill="rgb(242,104,6)" rx="2" ry="2" />
<text  x="707.57" y="1263.5" ></text>
</g>
<g >
<title>napi_complete_done (2 samples, 0.01%)</title><rect x="657.1" y="1189" width="0.2" height="15.0" fill="rgb(212,73,39)" rx="2" ry="2" />
<text  x="660.14" y="1199.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Span::finish() (24 samples, 0.14%)</title><rect x="1004.0" y="917" width="1.7" height="15.0" fill="rgb(251,105,7)" rx="2" ry="2" />
<text  x="1006.96" y="927.5" ></text>
</g>
<g >
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="693.7" y="1157" width="0.3" height="15.0" fill="rgb(223,28,8)" rx="2" ry="2" />
<text  x="696.69" y="1167.5" ></text>
</g>
<g >
<title>void google::protobuf::internal::arena_destruct_object&lt;google::api::expr::runtime::FieldBackedMapImpl&gt;(void*) (3 samples, 0.02%)</title><rect x="777.9" y="789" width="0.2" height="15.0" fill="rgb(254,147,54)" rx="2" ry="2" />
<text  x="780.89" y="799.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.07%)</title><rect x="169.4" y="1125" width="0.8" height="15.0" fill="rgb(218,93,22)" rx="2" ry="2" />
<text  x="172.37" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Http::CodecClient::CodecReadFilter::onData(Envoy::Buffer::Instance&amp;, bool) (1,257 samples, 7.58%)</title><rect x="967.9" y="1205" width="89.4" height="15.0" fill="rgb(251,45,6)" rx="2" ry="2" />
<text  x="970.91" y="1215.5" >Envoy::Htt..</text>
</g>
<g >
<title>do_user_addr_fault (3 samples, 0.02%)</title><rect x="506.9" y="1061" width="0.3" height="15.0" fill="rgb(252,5,43)" rx="2" ry="2" />
<text  x="509.95" y="1071.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="958.6" y="1253" width="0.3" height="15.0" fill="rgb(251,43,32)" rx="2" ry="2" />
<text  x="961.59" y="1263.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::~WatermarkBuffer() (2 samples, 0.01%)</title><rect x="961.0" y="1221" width="0.2" height="15.0" fill="rgb(246,190,36)" rx="2" ry="2" />
<text  x="964.01" y="1231.5" ></text>
</g>
<g >
<title>sock_write_iter (639 samples, 3.85%)</title><rect x="546.7" y="1077" width="45.4" height="15.0" fill="rgb(237,99,0)" rx="2" ry="2" />
<text  x="549.70" y="1087.5" >sock..</text>
</g>
<g >
<title>std::__1::shared_ptr&lt;Envoy::Extensions::Common::Wasm::Context&gt; std::__1::allocate_shared&lt;Envoy::Extensions::Common::Wasm::Context, std::__1::allocator&lt;Envoy::Extensions::Common::Wasm::Context&gt;, Envoy::Extensions::Common::Wasm::Wasm*&amp;, unsigned int, std::__1::shared_ptr&lt;Envoy::Extensions::Common::Wasm::PluginHandle&gt;&amp;, void&gt;(std::__1::allocator&lt;Envoy::Extensions::Common::Wasm::Context&gt; const&amp;, Envoy::Extensions::Common::Wasm::Wasm*&amp;, unsigned int&amp;&amp;, std::__1::shared_ptr&lt;Envoy::Extensions::Common::Wasm::PluginHandle&gt;&amp;) (9 samples, 0.05%)</title><rect x="829.9" y="965" width="0.6" height="15.0" fill="rgb(225,208,44)" rx="2" ry="2" />
<text  x="832.88" y="975.5" ></text>
</g>
<g >
<title>ip_local_out (33 samples, 0.20%)</title><rect x="1158.6" y="213" width="2.4" height="15.0" fill="rgb(211,75,6)" rx="2" ry="2" />
<text  x="1161.64" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="438.3" y="981" width="0.3" height="15.0" fill="rgb(222,168,9)" rx="2" ry="2" />
<text  x="441.25" y="991.5" ></text>
</g>
<g >
<title>ipt_do_table (5 samples, 0.03%)</title><rect x="909.5" y="149" width="0.3" height="15.0" fill="rgb(230,7,17)" rx="2" ry="2" />
<text  x="912.45" y="159.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::newStream(Envoy::Http::ResponseEncoder&amp;, bool) (28 samples, 0.17%)</title><rect x="1061.9" y="1045" width="1.9" height="15.0" fill="rgb(250,123,4)" rx="2" ry="2" />
<text  x="1064.85" y="1055.5" ></text>
</g>
<g >
<title>jbd2_journal_submit_inode_data_buffers (2 samples, 0.01%)</title><rect x="659.0" y="1285" width="0.1" height="15.0" fill="rgb(244,211,40)" rx="2" ry="2" />
<text  x="661.99" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (3,367 samples, 20.29%)</title><rect x="354.8" y="1205" width="239.5" height="15.0" fill="rgb(211,148,44)" rx="2" ry="2" />
<text  x="357.83" y="1215.5" >[unknown]</text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::ServerConnectionImpl::checkHeaderNameForUnderscores() (2 samples, 0.01%)</title><rect x="881.4" y="1061" width="0.2" height="15.0" fill="rgb(246,156,11)" rx="2" ry="2" />
<text  x="884.43" y="1071.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="745.7" y="773" width="0.3" height="15.0" fill="rgb(220,221,41)" rx="2" ry="2" />
<text  x="748.68" y="783.5" ></text>
</g>
<g >
<title>__sched_text_start (37 samples, 0.22%)</title><rect x="540.5" y="1077" width="2.6" height="15.0" fill="rgb(207,91,32)" rx="2" ry="2" />
<text  x="543.51" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (1,213 samples, 7.31%)</title><rect x="13.8" y="1285" width="86.3" height="15.0" fill="rgb(220,58,41)" rx="2" ry="2" />
<text  x="16.84" y="1295.5" >[unknown]</text>
</g>
<g >
<title>local.runtime.scavengeSleep (3 samples, 0.02%)</title><rect x="250.4" y="1333" width="0.2" height="15.0" fill="rgb(233,206,12)" rx="2" ry="2" />
<text  x="253.37" y="1343.5" ></text>
</g>
<g >
<title>new_sync_write (4 samples, 0.02%)</title><rect x="497.1" y="965" width="0.3" height="15.0" fill="rgb(225,223,38)" rx="2" ry="2" />
<text  x="500.13" y="975.5" ></text>
</g>
<g >
<title>Envoy::Thread::ThreadImplPosix::ThreadImplPosix(std::__1::function&lt;void ()&gt;, absl::optional&lt;Envoy::Thread::Options&gt; const&amp;)::{lambda(void*)#1}::__invoke(void*) (3,421 samples, 20.62%)</title><rect x="945.7" y="1349" width="243.3" height="15.0" fill="rgb(231,27,1)" rx="2" ry="2" />
<text  x="948.72" y="1359.5" >Envoy::Thread::ThreadImplPosix::..</text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="887.8" y="1157" width="0.1" height="15.0" fill="rgb(245,130,43)" rx="2" ry="2" />
<text  x="890.76" y="1167.5" ></text>
</g>
<g >
<title>ep_poll (2 samples, 0.01%)</title><rect x="624.4" y="1189" width="0.2" height="15.0" fill="rgb(244,202,45)" rx="2" ry="2" />
<text  x="627.43" y="1199.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (8 samples, 0.05%)</title><rect x="910.7" y="85" width="0.6" height="15.0" fill="rgb(243,123,45)" rx="2" ry="2" />
<text  x="913.73" y="95.5" ></text>
</g>
<g >
<title>br_handle_frame (6 samples, 0.04%)</title><rect x="907.5" y="629" width="0.4" height="15.0" fill="rgb(228,16,53)" rx="2" ry="2" />
<text  x="910.46" y="639.5" ></text>
</g>
<g >
<title>runtime.stopm (176 samples, 1.06%)</title><rect x="213.5" y="1221" width="12.5" height="15.0" fill="rgb(236,14,3)" rx="2" ry="2" />
<text  x="216.46" y="1231.5" ></text>
</g>
<g >
<title>runtime.systemstack (70 samples, 0.42%)</title><rect x="252.2" y="1349" width="5.0" height="15.0" fill="rgb(254,124,3)" rx="2" ry="2" />
<text  x="255.22" y="1359.5" ></text>
</g>
<g >
<title>update_blocked_averages (3 samples, 0.02%)</title><rect x="509.6" y="1093" width="0.2" height="15.0" fill="rgb(249,120,18)" rx="2" ry="2" />
<text  x="512.58" y="1103.5" ></text>
</g>
<g >
<title>nf_nat_inet_fn (3 samples, 0.02%)</title><rect x="916.2" y="789" width="0.2" height="15.0" fill="rgb(209,201,50)" rx="2" ry="2" />
<text  x="919.21" y="799.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getProperty(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (46 samples, 0.28%)</title><rect x="1031.8" y="821" width="3.2" height="15.0" fill="rgb(229,214,42)" rx="2" ry="2" />
<text  x="1034.77" y="831.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.02%)</title><rect x="921.9" y="1077" width="0.2" height="15.0" fill="rgb(209,34,7)" rx="2" ry="2" />
<text  x="924.90" y="1087.5" ></text>
</g>
<g >
<title>loopback_xmit (7 samples, 0.04%)</title><rect x="587.0" y="773" width="0.4" height="15.0" fill="rgb(212,40,46)" rx="2" ry="2" />
<text  x="589.95" y="783.5" ></text>
</g>
<g >
<title>ip_vs_local_reply4 (2 samples, 0.01%)</title><rect x="559.2" y="869" width="0.2" height="15.0" fill="rgb(249,44,26)" rx="2" ry="2" />
<text  x="562.22" y="879.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (2 samples, 0.01%)</title><rect x="1145.8" y="789" width="0.2" height="15.0" fill="rgb(213,7,40)" rx="2" ry="2" />
<text  x="1148.84" y="799.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getProperty(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (2 samples, 0.01%)</title><rect x="857.3" y="917" width="0.1" height="15.0" fill="rgb(251,194,20)" rx="2" ry="2" />
<text  x="860.26" y="927.5" ></text>
</g>
<g >
<title>__vfs_write (4 samples, 0.02%)</title><rect x="656.4" y="1205" width="0.3" height="15.0" fill="rgb(233,98,33)" rx="2" ry="2" />
<text  x="659.43" y="1215.5" ></text>
</g>
<g >
<title>ret_from_fork (3 samples, 0.02%)</title><rect x="659.3" y="1365" width="0.2" height="15.0" fill="rgb(207,43,4)" rx="2" ry="2" />
<text  x="662.27" y="1375.5" ></text>
</g>
<g >
<title>runtime.netpoll (2 samples, 0.01%)</title><rect x="133.7" y="1125" width="0.2" height="15.0" fill="rgb(240,176,34)" rx="2" ry="2" />
<text  x="136.74" y="1135.5" ></text>
</g>
<g >
<title>__fdget_pos (2 samples, 0.01%)</title><rect x="511.2" y="1109" width="0.2" height="15.0" fill="rgb(213,213,3)" rx="2" ry="2" />
<text  x="514.21" y="1119.5" ></text>
</g>
<g >
<title>[unknown] (87 samples, 0.52%)</title><rect x="672.4" y="1157" width="6.2" height="15.0" fill="rgb(214,162,27)" rx="2" ry="2" />
<text  x="675.43" y="1167.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::staticLookup(absl::string_view) (4 samples, 0.02%)</title><rect x="860.8" y="885" width="0.3" height="15.0" fill="rgb(229,63,40)" rx="2" ry="2" />
<text  x="863.81" y="895.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onMessageComplete() (929 samples, 5.60%)</title><rect x="737.7" y="1077" width="66.1" height="15.0" fill="rgb(218,203,34)" rx="2" ry="2" />
<text  x="740.71" y="1087.5" >Envoy::..</text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="657.9" y="1253" width="0.2" height="15.0" fill="rgb(215,196,13)" rx="2" ry="2" />
<text  x="660.92" y="1263.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.01%)</title><rect x="598.1" y="1205" width="0.2" height="15.0" fill="rgb(239,51,18)" rx="2" ry="2" />
<text  x="601.12" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::addStreamDecoderFilterWorker(std::__1::shared_ptr&lt;Envoy::Http::StreamDecoderFilter&gt;, std::__1::shared_ptr&lt;Envoy::Http::FilterMatchState&gt;, bool) (2 samples, 0.01%)</title><rect x="829.0" y="965" width="0.1" height="15.0" fill="rgb(252,76,50)" rx="2" ry="2" />
<text  x="831.95" y="975.5" ></text>
</g>
<g >
<title>Envoy::Network::RawBufferSocket::doWrite(Envoy::Buffer::Instance&amp;, bool) (257 samples, 1.55%)</title><rect x="1169.9" y="1221" width="18.3" height="15.0" fill="rgb(206,13,22)" rx="2" ry="2" />
<text  x="1172.87" y="1231.5" ></text>
</g>
<g >
<title>get_futex_key (3 samples, 0.02%)</title><rect x="95.5" y="1157" width="0.2" height="15.0" fill="rgb(254,32,12)" rx="2" ry="2" />
<text  x="98.48" y="1167.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (3 samples, 0.02%)</title><rect x="557.3" y="949" width="0.2" height="15.0" fill="rgb(210,60,19)" rx="2" ry="2" />
<text  x="560.30" y="959.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (2 samples, 0.01%)</title><rect x="491.1" y="901" width="0.1" height="15.0" fill="rgb(254,21,54)" rx="2" ry="2" />
<text  x="494.09" y="911.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::maybeAddSentinelBufferFragment(Envoy::Buffer::Instance&amp;) (2 samples, 0.01%)</title><rect x="872.5" y="965" width="0.1" height="15.0" fill="rgb(221,167,23)" rx="2" ry="2" />
<text  x="875.47" y="975.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::RenderField(google::protobuf::Field const*, google::protobuf::stringpiece_internal::StringPiece, google::protobuf::util::converter::ObjectWriter*) const (4 samples, 0.02%)</title><rect x="1004.4" y="709" width="0.3" height="15.0" fill="rgb(206,1,9)" rx="2" ry="2" />
<text  x="1007.39" y="719.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Http::Http1::StreamEncoderImpl::encodeData(Envoy::Buffer::Instance&amp;, bool) (2 samples, 0.01%)</title><rect x="803.1" y="997" width="0.2" height="15.0" fill="rgb(253,207,11)" rx="2" ry="2" />
<text  x="806.14" y="1007.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::get(Envoy::Http::LowerCaseString const&amp;) const (4 samples, 0.02%)</title><rect x="779.3" y="805" width="0.3" height="15.0" fill="rgb(233,59,21)" rx="2" ry="2" />
<text  x="782.31" y="815.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (2 samples, 0.01%)</title><rect x="906.3" y="837" width="0.1" height="15.0" fill="rgb(235,139,17)" rx="2" ry="2" />
<text  x="909.25" y="847.5" ></text>
</g>
<g >
<title>iptable_mangle_hook (2 samples, 0.01%)</title><rect x="1162.4" y="405" width="0.1" height="15.0" fill="rgb(205,33,8)" rx="2" ry="2" />
<text  x="1165.41" y="415.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::createConnPool(Envoy::Upstream::ThreadLocalCluster&amp;) (34 samples, 0.20%)</title><rect x="1099.1" y="997" width="2.4" height="15.0" fill="rgb(218,73,1)" rx="2" ry="2" />
<text  x="1102.12" y="1007.5" ></text>
</g>
<g >
<title>runtime.casgstatus (2 samples, 0.01%)</title><rect x="170.6" y="1205" width="0.2" height="15.0" fill="rgb(249,110,27)" rx="2" ry="2" />
<text  x="173.65" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Http::AsyncClientImpl::send(std::__1::unique_ptr&lt;Envoy::Http::Message&lt;Envoy::Http::RequestHeaderMap, Envoy::Http::RequestTrailerMap&gt;, std::__1::default_delete&lt;Envoy::Http::Message&lt;Envoy::Http::RequestHeaderMap, Envoy::Http::RequestTrailerMap&gt; &gt; &gt;&amp;&amp;, Envoy::Http::AsyncClient::Callbacks&amp;, Envoy::Http::AsyncClient::RequestOptions const&amp;) (2 samples, 0.01%)</title><rect x="1005.1" y="885" width="0.1" height="15.0" fill="rgb(227,16,33)" rx="2" ry="2" />
<text  x="1008.10" y="895.5" ></text>
</g>
<g >
<title>memcg_numa_stat_show (81 samples, 0.49%)</title><rect x="672.9" y="981" width="5.7" height="15.0" fill="rgb(251,185,14)" rx="2" ry="2" />
<text  x="675.86" y="991.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (3 samples, 0.02%)</title><rect x="1127.1" y="917" width="0.2" height="15.0" fill="rgb(207,196,0)" rx="2" ry="2" />
<text  x="1130.06" y="927.5" ></text>
</g>
<g >
<title>aa_file_perm (2 samples, 0.01%)</title><rect x="1187.6" y="997" width="0.1" height="15.0" fill="rgb(208,131,26)" rx="2" ry="2" />
<text  x="1190.58" y="1007.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelProtoWrapper::CreateMessage(google::protobuf::Message const*, google::protobuf::Arena*) (2 samples, 0.01%)</title><rect x="1018.4" y="757" width="0.1" height="15.0" fill="rgb(221,142,16)" rx="2" ry="2" />
<text  x="1021.40" y="767.5" ></text>
</g>
<g >
<title>tcp_rcv_established (5 samples, 0.03%)</title><rect x="1184.2" y="533" width="0.3" height="15.0" fill="rgb(234,67,35)" rx="2" ry="2" />
<text  x="1187.17" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (101 samples, 0.61%)</title><rect x="499.4" y="1093" width="7.2" height="15.0" fill="rgb(230,115,41)" rx="2" ry="2" />
<text  x="502.41" y="1103.5" ></text>
</g>
<g >
<title>dst_release (2 samples, 0.01%)</title><rect x="1144.1" y="933" width="0.2" height="15.0" fill="rgb(238,126,35)" rx="2" ry="2" />
<text  x="1147.13" y="943.5" ></text>
</g>
<g >
<title>Wasm::Common::populateRequestProtocol(Wasm::Common::RequestInfo*) (7 samples, 0.04%)</title><rect x="778.6" y="837" width="0.5" height="15.0" fill="rgb(214,133,13)" rx="2" ry="2" />
<text  x="781.60" y="847.5" ></text>
</g>
<g >
<title>local.internal/poll.(*FD).Write (230 samples, 1.39%)</title><rect x="232.6" y="1285" width="16.3" height="15.0" fill="rgb(232,26,41)" rx="2" ry="2" />
<text  x="235.59" y="1295.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::get_header_map_value(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (27 samples, 0.16%)</title><rect x="982.3" y="901" width="2.0" height="15.0" fill="rgb(229,163,19)" rx="2" ry="2" />
<text  x="985.35" y="911.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="778.1" y="805" width="0.2" height="15.0" fill="rgb(223,180,14)" rx="2" ry="2" />
<text  x="781.11" y="815.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::OwnedImplReservationSlicesOwnerMultiple::ownedSlices() (3 samples, 0.02%)</title><rect x="1134.1" y="1157" width="0.2" height="15.0" fill="rgb(225,16,18)" rx="2" ry="2" />
<text  x="1137.10" y="1167.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.02%)</title><rect x="119.9" y="1109" width="0.3" height="15.0" fill="rgb(243,118,4)" rx="2" ry="2" />
<text  x="122.87" y="1119.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (2 samples, 0.01%)</title><rect x="618.9" y="1093" width="0.1" height="15.0" fill="rgb(217,4,50)" rx="2" ry="2" />
<text  x="621.88" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::staticLookup(absl::string_view) (2 samples, 0.01%)</title><rect x="778.8" y="757" width="0.2" height="15.0" fill="rgb(213,36,51)" rx="2" ry="2" />
<text  x="781.82" y="767.5" ></text>
</g>
<g >
<title>wake_up_q (3 samples, 0.02%)</title><rect x="506.7" y="1029" width="0.2" height="15.0" fill="rgb(242,140,50)" rx="2" ry="2" />
<text  x="509.73" y="1039.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (37 samples, 0.22%)</title><rect x="626.1" y="1125" width="2.7" height="15.0" fill="rgb(236,16,51)" rx="2" ry="2" />
<text  x="629.13" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::addIntToBuffer(unsigned long) (4 samples, 0.02%)</title><rect x="721.8" y="933" width="0.3" height="15.0" fill="rgb(217,151,29)" rx="2" ry="2" />
<text  x="724.78" y="943.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::add(void const*, unsigned long) (14 samples, 0.08%)</title><rect x="839.8" y="741" width="1.0" height="15.0" fill="rgb(238,178,30)" rx="2" ry="2" />
<text  x="842.76" y="751.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (6 samples, 0.04%)</title><rect x="164.5" y="1061" width="0.5" height="15.0" fill="rgb(222,174,45)" rx="2" ry="2" />
<text  x="167.53" y="1071.5" ></text>
</g>
<g >
<title>__lock_text_start (136 samples, 0.82%)</title><rect x="547.0" y="949" width="9.7" height="15.0" fill="rgb(215,209,52)" rx="2" ry="2" />
<text  x="549.98" y="959.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.01%)</title><rect x="1164.8" y="597" width="0.2" height="15.0" fill="rgb(244,57,39)" rx="2" ry="2" />
<text  x="1167.83" y="607.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::get(Envoy::Http::LowerCaseString const&amp;) const (4 samples, 0.02%)</title><rect x="1110.7" y="901" width="0.3" height="15.0" fill="rgb(215,205,31)" rx="2" ry="2" />
<text  x="1113.71" y="911.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CreateErrorValue(google::protobuf::Arena*, absl::string_view, absl::StatusCode, int) (3 samples, 0.02%)</title><rect x="1038.8" y="741" width="0.2" height="15.0" fill="rgb(225,20,34)" rx="2" ry="2" />
<text  x="1041.81" y="751.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Http::OriginalIPDetection::Xff::XffIPDetection::detect(Envoy::Http::OriginalIPDetectionParams&amp;) (2 samples, 0.01%)</title><rect x="1072.9" y="1013" width="0.2" height="15.0" fill="rgb(248,171,18)" rx="2" ry="2" />
<text  x="1075.95" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::length() const (2 samples, 0.01%)</title><rect x="977.7" y="901" width="0.2" height="15.0" fill="rgb(244,173,18)" rx="2" ry="2" />
<text  x="980.72" y="911.5" ></text>
</g>
<g >
<title>vfs_read (3 samples, 0.02%)</title><rect x="496.9" y="997" width="0.2" height="15.0" fill="rgb(223,58,51)" rx="2" ry="2" />
<text  x="499.92" y="1007.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (37 samples, 0.22%)</title><rect x="540.5" y="1109" width="2.6" height="15.0" fill="rgb(234,100,29)" rx="2" ry="2" />
<text  x="543.51" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::RequestEncoderImpl::encodeHeaders(Envoy::Http::RequestHeaderMap const&amp;, bool) (62 samples, 0.37%)</title><rect x="838.1" y="837" width="4.4" height="15.0" fill="rgb(247,24,35)" rx="2" ry="2" />
<text  x="841.13" y="847.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.12%)</title><rect x="1126.9" y="965" width="1.4" height="15.0" fill="rgb(230,16,46)" rx="2" ry="2" />
<text  x="1129.92" y="975.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::JsonV2Serializer::serialize(std::__1::vector&lt;Envoy::Extensions::Tracers::Zipkin::Span, std::__1::allocator&lt;Envoy::Extensions::Tracers::Zipkin::Span&gt; &gt; const&amp;) (14 samples, 0.08%)</title><rect x="1004.1" y="885" width="1.0" height="15.0" fill="rgb(248,27,49)" rx="2" ry="2" />
<text  x="1007.11" y="895.5" ></text>
</g>
<g >
<title>[unknown] (838 samples, 5.05%)</title><rect x="430.3" y="1045" width="59.6" height="15.0" fill="rgb(234,122,5)" rx="2" ry="2" />
<text  x="433.29" y="1055.5" >[unkno..</text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::getExisting(absl::string_view) (8 samples, 0.05%)</title><rect x="821.3" y="933" width="0.6" height="15.0" fill="rgb(252,187,32)" rx="2" ry="2" />
<text  x="824.34" y="943.5" ></text>
</g>
<g >
<title>skb_release_data (5 samples, 0.03%)</title><rect x="895.0" y="949" width="0.4" height="15.0" fill="rgb(213,76,52)" rx="2" ry="2" />
<text  x="898.02" y="959.5" ></text>
</g>
<g >
<title>void std::__1::vector&lt;Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation, std::__1::allocator&lt;Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation&gt; &gt;::__emplace_back_slow_path&lt;Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation&gt;(Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation&amp;&amp;) (2 samples, 0.01%)</title><rect x="759.5" y="917" width="0.1" height="15.0" fill="rgb(227,222,47)" rx="2" ry="2" />
<text  x="762.47" y="927.5" ></text>
</g>
<g >
<title>Envoy::Logger::Context::useFancyLogger() (2 samples, 0.01%)</title><rect x="966.6" y="1237" width="0.1" height="15.0" fill="rgb(205,175,3)" rx="2" ry="2" />
<text  x="969.56" y="1247.5" ></text>
</g>
<g >
<title>import_iovec (2 samples, 0.01%)</title><rect x="1187.9" y="1077" width="0.1" height="15.0" fill="rgb(244,189,54)" rx="2" ry="2" />
<text  x="1190.87" y="1087.5" ></text>
</g>
<g >
<title>do_epoll_wait (2 samples, 0.01%)</title><rect x="34.4" y="1077" width="0.1" height="15.0" fill="rgb(253,44,29)" rx="2" ry="2" />
<text  x="37.39" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="623.7" y="1237" width="0.2" height="15.0" fill="rgb(215,165,38)" rx="2" ry="2" />
<text  x="626.72" y="1247.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const (3 samples, 0.02%)</title><rect x="682.5" y="1317" width="0.2" height="15.0" fill="rgb(230,12,30)" rx="2" ry="2" />
<text  x="685.53" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="972.2" y="1061" width="0.2" height="15.0" fill="rgb(226,141,25)" rx="2" ry="2" />
<text  x="975.18" y="1071.5" ></text>
</g>
<g >
<title>tcp_recvmsg (19 samples, 0.11%)</title><rect x="1146.1" y="981" width="1.4" height="15.0" fill="rgb(218,110,40)" rx="2" ry="2" />
<text  x="1149.12" y="991.5" ></text>
</g>
<g >
<title>[unknown] (30 samples, 0.18%)</title><rect x="940.9" y="1365" width="2.1" height="15.0" fill="rgb(217,205,24)" rx="2" ry="2" />
<text  x="943.89" y="1375.5" ></text>
</g>
<g >
<title>netif_rx_internal (2 samples, 0.01%)</title><rect x="1165.8" y="709" width="0.2" height="15.0" fill="rgb(225,129,47)" rx="2" ry="2" />
<text  x="1168.82" y="719.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 0.02%)</title><rect x="744.8" y="677" width="0.2" height="15.0" fill="rgb(233,49,28)" rx="2" ry="2" />
<text  x="747.75" y="687.5" ></text>
</g>
<g >
<title>skb_release_data (2 samples, 0.01%)</title><rect x="895.2" y="933" width="0.2" height="15.0" fill="rgb(210,154,10)" rx="2" ry="2" />
<text  x="898.23" y="943.5" ></text>
</g>
<g >
<title>runtime.notesleep (18 samples, 0.11%)</title><rect x="134.0" y="1093" width="1.3" height="15.0" fill="rgb(226,19,17)" rx="2" ry="2" />
<text  x="137.02" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::serializeValue(google::api::expr::runtime::CelValue, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (2 samples, 0.01%)</title><rect x="765.7" y="757" width="0.1" height="15.0" fill="rgb(231,188,41)" rx="2" ry="2" />
<text  x="768.66" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2 samples, 0.01%)</title><rect x="33.7" y="1061" width="0.1" height="15.0" fill="rgb(234,115,31)" rx="2" ry="2" />
<text  x="36.68" y="1071.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append(char const*, unsigned long) (3 samples, 0.02%)</title><rect x="937.9" y="1365" width="0.2" height="15.0" fill="rgb(213,198,23)" rx="2" ry="2" />
<text  x="940.90" y="1375.5" ></text>
</g>
<g >
<title>schedule (8 samples, 0.05%)</title><rect x="624.8" y="1157" width="0.6" height="15.0" fill="rgb(211,73,37)" rx="2" ry="2" />
<text  x="627.78" y="1167.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::write(Envoy::Buffer::Instance&amp;) (222 samples, 1.34%)</title><rect x="1152.5" y="1205" width="15.8" height="15.0" fill="rgb(251,193,0)" rx="2" ry="2" />
<text  x="1155.52" y="1215.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (64 samples, 0.39%)</title><rect x="491.6" y="965" width="4.5" height="15.0" fill="rgb(220,49,18)" rx="2" ry="2" />
<text  x="494.59" y="975.5" ></text>
</g>
<g >
<title>try_to_wake_up (11 samples, 0.07%)</title><rect x="508.4" y="1061" width="0.8" height="15.0" fill="rgb(230,92,49)" rx="2" ry="2" />
<text  x="511.44" y="1071.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (155 samples, 0.93%)</title><rect x="84.4" y="1173" width="11.0" height="15.0" fill="rgb(226,191,42)" rx="2" ry="2" />
<text  x="87.39" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Runtime::LoaderImpl::snapshot() (2 samples, 0.01%)</title><rect x="827.2" y="1013" width="0.1" height="15.0" fill="rgb(220,191,35)" rx="2" ry="2" />
<text  x="830.17" y="1023.5" ></text>
</g>
<g >
<title>futex_wake (3 samples, 0.02%)</title><rect x="506.7" y="1045" width="0.2" height="15.0" fill="rgb(241,131,11)" rx="2" ry="2" />
<text  x="509.73" y="1055.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;absl::string_view, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;absl::string_view const, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt; &gt; &gt;::iterator absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;absl::string_view, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;absl::string_view const, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt; &gt; &gt;::find&lt;absl::string_view&gt;(absl::string_view const&amp;) (2 samples, 0.01%)</title><rect x="861.1" y="885" width="0.1" height="15.0" fill="rgb(232,75,46)" rx="2" ry="2" />
<text  x="864.10" y="895.5" ></text>
</g>
<g >
<title>nf_hook_slow (2 samples, 0.01%)</title><rect x="932.9" y="645" width="0.1" height="15.0" fill="rgb(243,207,42)" rx="2" ry="2" />
<text  x="935.85" y="655.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (124 samples, 0.75%)</title><rect x="1156.5" y="677" width="8.8" height="15.0" fill="rgb(205,15,42)" rx="2" ry="2" />
<text  x="1159.51" y="687.5" ></text>
</g>
<g >
<title>sock_write_iter (2 samples, 0.01%)</title><rect x="918.0" y="1029" width="0.1" height="15.0" fill="rgb(216,137,5)" rx="2" ry="2" />
<text  x="920.99" y="1039.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.0 (9 samples, 0.05%)</title><rect x="875.4" y="885" width="0.6" height="15.0" fill="rgb(249,70,39)" rx="2" ry="2" />
<text  x="878.39" y="895.5" ></text>
</g>
<g >
<title>inet_sendmsg (216 samples, 1.30%)</title><rect x="1172.0" y="1013" width="15.4" height="15.0" fill="rgb(239,46,40)" rx="2" ry="2" />
<text  x="1175.01" y="1023.5" ></text>
</g>
<g >
<title>__x64_sys_futex (6 samples, 0.04%)</title><rect x="507.4" y="1093" width="0.4" height="15.0" fill="rgb(227,34,17)" rx="2" ry="2" />
<text  x="510.37" y="1103.5" ></text>
</g>
<g >
<title>submit_bio (2 samples, 0.01%)</title><rect x="659.0" y="1189" width="0.1" height="15.0" fill="rgb(242,127,12)" rx="2" ry="2" />
<text  x="661.99" y="1199.5" ></text>
</g>
<g >
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="507.4" y="1013" width="0.4" height="15.0" fill="rgb(236,155,40)" rx="2" ry="2" />
<text  x="510.44" y="1023.5" ></text>
</g>
<g >
<title>ksys_write (26 samples, 0.16%)</title><rect x="642.4" y="1221" width="1.9" height="15.0" fill="rgb(240,35,47)" rx="2" ry="2" />
<text  x="645.42" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::findValue(absl::string_view, google::protobuf::Arena*, bool) const (15 samples, 0.09%)</title><rect x="780.5" y="805" width="1.0" height="15.0" fill="rgb(227,172,20)" rx="2" ry="2" />
<text  x="783.45" y="815.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_fn (2 samples, 0.01%)</title><rect x="561.8" y="853" width="0.2" height="15.0" fill="rgb(210,53,12)" rx="2" ry="2" />
<text  x="564.85" y="863.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#1}::__invoke(http_parser*) (17 samples, 0.10%)</title><rect x="715.2" y="1093" width="1.2" height="15.0" fill="rgb(226,98,6)" rx="2" ry="2" />
<text  x="718.24" y="1103.5" ></text>
</g>
<g >
<title>vfs_write (6 samples, 0.04%)</title><rect x="592.1" y="1109" width="0.5" height="15.0" fill="rgb(253,151,14)" rx="2" ry="2" />
<text  x="595.14" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onWriteReady() (218 samples, 1.31%)</title><rect x="920.7" y="1237" width="15.5" height="15.0" fill="rgb(229,74,42)" rx="2" ry="2" />
<text  x="923.69" y="1247.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="1109.3" y="965" width="0.1" height="15.0" fill="rgb(242,33,24)" rx="2" ry="2" />
<text  x="1112.29" y="975.5" ></text>
</g>
<g >
<title>do_syscall_64 (101 samples, 0.61%)</title><rect x="499.4" y="1077" width="7.2" height="15.0" fill="rgb(211,37,15)" rx="2" ry="2" />
<text  x="502.41" y="1087.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::DefaultValueObjectWriter::Node::WriteTo(google::protobuf::util::converter::ObjectWriter*) (2 samples, 0.01%)</title><rect x="1004.2" y="725" width="0.1" height="15.0" fill="rgb(243,145,15)" rx="2" ry="2" />
<text  x="1007.18" y="735.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ThreadSafeArena::Init(bool) (3 samples, 0.02%)</title><rect x="777.4" y="789" width="0.2" height="15.0" fill="rgb(232,155,26)" rx="2" ry="2" />
<text  x="780.39" y="799.5" ></text>
</g>
<g >
<title>mutex_unlock (2 samples, 0.01%)</title><rect x="876.6" y="901" width="0.1" height="15.0" fill="rgb(253,156,29)" rx="2" ry="2" />
<text  x="879.60" y="911.5" ></text>
</g>
<g >
<title>nf_nat_packet (3 samples, 0.02%)</title><rect x="916.2" y="773" width="0.2" height="15.0" fill="rgb(227,227,43)" rx="2" ry="2" />
<text  x="919.21" y="783.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::HeaderList::~HeaderList() (6 samples, 0.04%)</title><rect x="709.9" y="1237" width="0.4" height="15.0" fill="rgb(211,141,10)" rx="2" ry="2" />
<text  x="712.91" y="1247.5" ></text>
</g>
<g >
<title>tcp_rcv_established (101 samples, 0.61%)</title><rect x="924.8" y="549" width="7.2" height="15.0" fill="rgb(240,134,42)" rx="2" ry="2" />
<text  x="927.81" y="559.5" ></text>
</g>
<g >
<title>local.runtime.epollwait (4 samples, 0.02%)</title><rect x="133.1" y="1125" width="0.3" height="15.0" fill="rgb(235,179,17)" rx="2" ry="2" />
<text  x="136.10" y="1135.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.02%)</title><rect x="623.4" y="1237" width="0.2" height="15.0" fill="rgb(214,67,26)" rx="2" ry="2" />
<text  x="626.36" y="1247.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::FilterStateImpl(std::__1::shared_ptr&lt;Envoy::StreamInfo::FilterState&gt;, Envoy::StreamInfo::FilterState::LifeSpan) (4 samples, 0.02%)</title><rect x="843.7" y="869" width="0.3" height="15.0" fill="rgb(238,52,3)" rx="2" ry="2" />
<text  x="846.67" y="879.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Span::setTag(absl::string_view, absl::string_view) (9 samples, 0.05%)</title><rect x="1009.4" y="901" width="0.7" height="15.0" fill="rgb(222,60,52)" rx="2" ry="2" />
<text  x="1012.44" y="911.5" ></text>
</g>
<g >
<title>ep_insert (12 samples, 0.07%)</title><rect x="999.3" y="757" width="0.8" height="15.0" fill="rgb(207,66,25)" rx="2" ry="2" />
<text  x="1002.27" y="767.5" ></text>
</g>
<g >
<title>http_parser_execute (1,039 samples, 6.26%)</title><rect x="1057.9" y="1125" width="73.9" height="15.0" fill="rgb(227,221,32)" rx="2" ry="2" />
<text  x="1060.87" y="1135.5" >http_par..</text>
</g>
<g >
<title>ip_rcv_finish (150 samples, 0.90%)</title><rect x="1174.4" y="645" width="10.6" height="15.0" fill="rgb(216,46,18)" rx="2" ry="2" />
<text  x="1177.35" y="655.5" ></text>
</g>
<g >
<title>runtime.futex (156 samples, 0.94%)</title><rect x="214.3" y="1173" width="11.1" height="15.0" fill="rgb(222,105,46)" rx="2" ry="2" />
<text  x="217.31" y="1183.5" ></text>
</g>
<g >
<title>ip_forward (4 samples, 0.02%)</title><rect x="1157.7" y="405" width="0.3" height="15.0" fill="rgb(206,151,8)" rx="2" ry="2" />
<text  x="1160.71" y="415.5" ></text>
</g>
<g >
<title>common_file_perm (2 samples, 0.01%)</title><rect x="98.2" y="1109" width="0.1" height="15.0" fill="rgb(226,102,29)" rx="2" ry="2" />
<text  x="101.18" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Stats::SymbolTableImpl::join(absl::InlinedVector&lt;Envoy::Stats::StatName, 8ul, std::__1::allocator&lt;Envoy::Stats::StatName&gt; &gt; const&amp;) const (3 samples, 0.02%)</title><rect x="985.8" y="885" width="0.2" height="15.0" fill="rgb(250,95,39)" rx="2" ry="2" />
<text  x="988.83" y="895.5" ></text>
</g>
<g >
<title>local.os.(*File).Read (2 samples, 0.01%)</title><rect x="171.1" y="1285" width="0.2" height="15.0" fill="rgb(218,65,27)" rx="2" ry="2" />
<text  x="174.15" y="1295.5" ></text>
</g>
<g >
<title>Envoy::Server::ListenerFactoryContextBaseImpl::drainDecision() (2 samples, 0.01%)</title><rect x="725.1" y="949" width="0.2" height="15.0" fill="rgb(232,175,13)" rx="2" ry="2" />
<text  x="728.13" y="959.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::shared_ptr&lt;Envoy::Tracing::CustomTag const&gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::shared_ptr&lt;Envoy::Tracing::CustomTag const&gt; &gt; &gt; &gt;::prepare_insert(unsigned long) (8 samples, 0.05%)</title><rect x="1066.9" y="965" width="0.6" height="15.0" fill="rgb(236,108,10)" rx="2" ry="2" />
<text  x="1069.90" y="975.5" ></text>
</g>
<g >
<title>do_nanosleep (3 samples, 0.02%)</title><rect x="100.7" y="1205" width="0.3" height="15.0" fill="rgb(225,45,29)" rx="2" ry="2" />
<text  x="103.74" y="1215.5" ></text>
</g>
<g >
<title>__inet_lookup_established (2 samples, 0.01%)</title><rect x="563.5" y="597" width="0.1" height="15.0" fill="rgb(247,131,19)" rx="2" ry="2" />
<text  x="566.48" y="607.5" ></text>
</g>
<g >
<title>mutex_lock (17 samples, 0.10%)</title><rect x="165.0" y="1093" width="1.2" height="15.0" fill="rgb(215,165,12)" rx="2" ry="2" />
<text  x="167.96" y="1103.5" ></text>
</g>
<g >
<title>mutex_unlock (2 samples, 0.01%)</title><rect x="517.4" y="1045" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="520.40" y="1055.5" ></text>
</g>
<g >
<title>schedule (8 samples, 0.05%)</title><rect x="510.0" y="1077" width="0.6" height="15.0" fill="rgb(241,25,33)" rx="2" ry="2" />
<text  x="513.00" y="1087.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;absl::string_view, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;absl::string_view const, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt; &gt; &gt;::prepare_insert(unsigned long) (2 samples, 0.01%)</title><rect x="983.1" y="805" width="0.1" height="15.0" fill="rgb(227,129,30)" rx="2" ry="2" />
<text  x="986.06" y="815.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::StreamInfoImpl(absl::optional&lt;Envoy::Http::Protocol&gt;, Envoy::TimeSource&amp;, std::__1::shared_ptr&lt;Envoy::Network::ConnectionInfoProvider const&gt; const&amp;, std::__1::shared_ptr&lt;Envoy::StreamInfo::FilterState&gt;) (2 samples, 0.01%)</title><rect x="1103.1" y="965" width="0.1" height="15.0" fill="rgb(245,75,37)" rx="2" ry="2" />
<text  x="1106.10" y="975.5" ></text>
</g>
<g >
<title>__libc_cfree (2 samples, 0.01%)</title><rect x="1034.5" y="789" width="0.2" height="15.0" fill="rgb(206,160,27)" rx="2" ry="2" />
<text  x="1037.54" y="799.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.01%)</title><rect x="598.5" y="1061" width="0.1" height="15.0" fill="rgb(218,226,2)" rx="2" ry="2" />
<text  x="601.47" y="1071.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (3 samples, 0.02%)</title><rect x="894.4" y="997" width="0.2" height="15.0" fill="rgb(237,29,50)" rx="2" ry="2" />
<text  x="897.38" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="867.4" y="1045" width="0.1" height="15.0" fill="rgb(221,38,37)" rx="2" ry="2" />
<text  x="870.35" y="1055.5" ></text>
</g>
<g >
<title>nf_hook_slow (2 samples, 0.01%)</title><rect x="1173.7" y="821" width="0.2" height="15.0" fill="rgb(233,57,12)" rx="2" ry="2" />
<text  x="1176.71" y="831.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Extensions::HttpFilters::Fault::FaultFilter::encodeData(Envoy::Buffer::Instance&amp;, bool) (2 samples, 0.01%)</title><rect x="1051.5" y="997" width="0.1" height="15.0" fill="rgb(225,2,6)" rx="2" ry="2" />
<text  x="1054.47" y="1007.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (4 samples, 0.02%)</title><rect x="545.7" y="1141" width="0.3" height="15.0" fill="rgb(219,142,44)" rx="2" ry="2" />
<text  x="548.70" y="1151.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (70 samples, 0.42%)</title><rect x="252.2" y="1333" width="5.0" height="15.0" fill="rgb(223,164,37)" rx="2" ry="2" />
<text  x="255.22" y="1343.5" ></text>
</g>
<g >
<title>google::protobuf::FileDescriptorTables::FindNestedSymbol(void const*, google::protobuf::stringpiece_internal::StringPiece) const (3 samples, 0.02%)</title><rect x="768.7" y="757" width="0.2" height="15.0" fill="rgb(246,178,5)" rx="2" ry="2" />
<text  x="771.72" y="767.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::null_plugin::MetadataExchange::Plugin::$_0, std::__1::allocator&lt;proxy_wasm::null_plugin::MetadataExchange::Plugin::$_0&gt;, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::Context, std::__1::default_delete&lt;proxy_wasm::null_plugin::Context&gt; &gt; (unsigned int, proxy_wasm::null_plugin::RootContext*)&gt;::operator()(unsigned int&amp;&amp;, proxy_wasm::null_plugin::RootContext*&amp;&amp;) (30 samples, 0.18%)</title><rect x="857.2" y="949" width="2.1" height="15.0" fill="rgb(205,22,36)" rx="2" ry="2" />
<text  x="860.18" y="959.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="507.4" y="1125" width="0.4" height="15.0" fill="rgb(223,205,25)" rx="2" ry="2" />
<text  x="510.37" y="1135.5" ></text>
</g>
<g >
<title>net_rx_action (4 samples, 0.02%)</title><rect x="484.6" y="821" width="0.3" height="15.0" fill="rgb(254,82,21)" rx="2" ry="2" />
<text  x="487.62" y="831.5" ></text>
</g>
<g >
<title>[unknown] (907 samples, 5.47%)</title><rect x="19.7" y="1253" width="64.5" height="15.0" fill="rgb(221,8,1)" rx="2" ry="2" />
<text  x="22.74" y="1263.5" >[unknown]</text>
</g>
<g >
<title>std::__1::__shared_ptr_emplace&lt;Envoy::Extensions::HttpFilters::Cors::CorsFilter, std::__1::allocator&lt;Envoy::Extensions::HttpFilters::Cors::CorsFilter&gt; &gt;::__shared_ptr_emplace&lt;std::__1::shared_ptr&lt;Envoy::Extensions::HttpFilters::Cors::CorsFilterConfig&gt; const&amp;&gt;(std::__1::allocator&lt;Envoy::Extensions::HttpFilters::Cors::CorsFilter&gt;, std::__1::shared_ptr&lt;Envoy::Extensions::HttpFilters::Cors::CorsFilterConfig&gt; const&amp;) (2 samples, 0.01%)</title><rect x="1077.4" y="981" width="0.2" height="15.0" fill="rgb(248,165,20)" rx="2" ry="2" />
<text  x="1080.43" y="991.5" ></text>
</g>
<g >
<title>runtime.pidleget (2 samples, 0.01%)</title><rect x="208.5" y="1189" width="0.1" height="15.0" fill="rgb(236,23,26)" rx="2" ry="2" />
<text  x="211.48" y="1199.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ResponseHeaderMapImpl::setStatus(unsigned long) (2 samples, 0.01%)</title><rect x="991.5" y="1029" width="0.2" height="15.0" fill="rgb(227,118,15)" rx="2" ry="2" />
<text  x="994.52" y="1039.5" ></text>
</g>
<g >
<title>rw_verify_area (5 samples, 0.03%)</title><rect x="98.1" y="1173" width="0.4" height="15.0" fill="rgb(249,91,42)" rx="2" ry="2" />
<text  x="101.11" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*, char const*, unsigned long)#3}::__invoke(http_parser*, char const*, unsigned long) (8 samples, 0.05%)</title><rect x="1130.4" y="1109" width="0.6" height="15.0" fill="rgb(221,138,4)" rx="2" ry="2" />
<text  x="1133.41" y="1119.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (123 samples, 0.74%)</title><rect x="647.5" y="1253" width="8.8" height="15.0" fill="rgb(215,199,42)" rx="2" ry="2" />
<text  x="650.54" y="1263.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="539.7" y="1061" width="0.2" height="15.0" fill="rgb(236,196,49)" rx="2" ry="2" />
<text  x="542.73" y="1071.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (4 samples, 0.02%)</title><rect x="659.9" y="1333" width="0.3" height="15.0" fill="rgb(231,75,34)" rx="2" ry="2" />
<text  x="662.91" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="682.0" y="1253" width="0.2" height="15.0" fill="rgb(249,191,26)" rx="2" ry="2" />
<text  x="685.03" y="1263.5" ></text>
</g>
<g >
<title>github.com/docker/docker/pkg/broadcaster.(*Unbuffered).Write (122 samples, 0.74%)</title><rect x="121.2" y="1285" width="8.6" height="15.0" fill="rgb(216,100,2)" rx="2" ry="2" />
<text  x="124.15" y="1295.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getProperty(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (47 samples, 0.28%)</title><rect x="779.9" y="821" width="3.3" height="15.0" fill="rgb(219,140,28)" rx="2" ry="2" />
<text  x="782.88" y="831.5" ></text>
</g>
<g >
<title>std::__1::pair&lt;unsigned long, bool&gt; absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;absl::string_view, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;absl::string_view const, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt; &gt; &gt;::find_or_prepare_insert&lt;absl::string_view&gt;(absl::string_view const&amp;) (2 samples, 0.01%)</title><rect x="980.6" y="901" width="0.2" height="15.0" fill="rgb(228,139,7)" rx="2" ry="2" />
<text  x="983.64" y="911.5" ></text>
</g>
<g >
<title>http_parser_parse_url (9 samples, 0.05%)</title><rect x="1114.7" y="1013" width="0.6" height="15.0" fill="rgb(244,173,37)" rx="2" ry="2" />
<text  x="1117.69" y="1023.5" ></text>
</g>
<g >
<title>Wasm::Common::populateRequestInfo(bool, bool, Wasm::Common::RequestInfo*) (194 samples, 1.17%)</title><rect x="764.8" y="837" width="13.8" height="15.0" fill="rgb(252,101,10)" rx="2" ry="2" />
<text  x="767.81" y="847.5" ></text>
</g>
<g >
<title>Envoy::Router::VirtualHostImpl::getRouteFromEntries(std::__1::function&lt;Envoy::Router::RouteMatchStatus (std::__1::shared_ptr&lt;Envoy::Router::Route const&gt;, Envoy::Router::RouteEvalStatus)&gt; const&amp;, Envoy::Http::RequestHeaderMap const&amp;, Envoy::StreamInfo::StreamInfo const&amp;, unsigned long) const (7 samples, 0.04%)</title><rect x="819.4" y="997" width="0.5" height="15.0" fill="rgb(246,200,54)" rx="2" ry="2" />
<text  x="822.42" y="1007.5" ></text>
</g>
<g >
<title>futex_wake (12 samples, 0.07%)</title><rect x="508.4" y="1093" width="0.8" height="15.0" fill="rgb(251,185,51)" rx="2" ry="2" />
<text  x="511.37" y="1103.5" ></text>
</g>
<g >
<title>futex_wake (178 samples, 1.07%)</title><rect x="62.6" y="1109" width="12.6" height="15.0" fill="rgb(237,85,49)" rx="2" ry="2" />
<text  x="65.55" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::add(void const*, unsigned long) (2 samples, 0.01%)</title><rect x="722.5" y="869" width="0.1" height="15.0" fill="rgb(251,128,29)" rx="2" ry="2" />
<text  x="725.49" y="879.5" ></text>
</g>
<g >
<title>rw_verify_area (10 samples, 0.06%)</title><rect x="1148.5" y="1061" width="0.7" height="15.0" fill="rgb(227,22,29)" rx="2" ry="2" />
<text  x="1151.47" y="1071.5" ></text>
</g>
<g >
<title>__sched_text_start (150 samples, 0.90%)</title><rect x="84.7" y="1141" width="10.7" height="15.0" fill="rgb(216,91,41)" rx="2" ry="2" />
<text  x="87.74" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::encodeData(Envoy::Http::ActiveStreamEncoderFilter*, Envoy::Buffer::Instance&amp;, bool, Envoy::Http::FilterManager::FilterIterationStartState) (790 samples, 4.76%)</title><rect x="740.5" y="997" width="56.2" height="15.0" fill="rgb(243,173,44)" rx="2" ry="2" />
<text  x="743.49" y="1007.5" >Envoy..</text>
</g>
<g >
<title>schedule (60 samples, 0.36%)</title><rect x="598.9" y="1125" width="4.3" height="15.0" fill="rgb(223,169,51)" rx="2" ry="2" />
<text  x="601.90" y="1135.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.01%)</title><rect x="624.4" y="1109" width="0.2" height="15.0" fill="rgb(214,132,52)" rx="2" ry="2" />
<text  x="627.43" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Http::ActiveStreamFilterBase::commonHandleAfterDataCallback(Envoy::Http::FilterDataStatus, Envoy::Buffer::Instance&amp;, bool&amp;) (8 samples, 0.05%)</title><rect x="871.1" y="1029" width="0.6" height="15.0" fill="rgb(225,177,34)" rx="2" ry="2" />
<text  x="874.12" y="1039.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::IdentStep::Evaluate(google::api::expr::runtime::ExecutionFrame*) const (19 samples, 0.11%)</title><rect x="1038.5" y="757" width="1.3" height="15.0" fill="rgb(219,100,2)" rx="2" ry="2" />
<text  x="1041.46" y="767.5" ></text>
</g>
<g >
<title>rb_erase (2 samples, 0.01%)</title><rect x="876.1" y="885" width="0.1" height="15.0" fill="rgb(211,156,12)" rx="2" ry="2" />
<text  x="879.10" y="895.5" ></text>
</g>
<g >
<title>Envoy::Http::ResponseDecoderWrapper::decodeData(Envoy::Buffer::Instance&amp;, bool) (40 samples, 0.24%)</title><rect x="1051.8" y="1061" width="2.9" height="15.0" fill="rgb(207,67,17)" rx="2" ry="2" />
<text  x="1054.82" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderUtility::checkRequiredRequestHeaders(Envoy::Http::RequestHeaderMap const&amp;) (3 samples, 0.02%)</title><rect x="1088.9" y="821" width="0.3" height="15.0" fill="rgb(223,121,26)" rx="2" ry="2" />
<text  x="1091.95" y="831.5" ></text>
</g>
<g >
<title>Envoy::Http::ActiveStreamFilterBase::streamInfo() (2 samples, 0.01%)</title><rect x="832.9" y="1013" width="0.1" height="15.0" fill="rgb(241,109,19)" rx="2" ry="2" />
<text  x="835.86" y="1023.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.01%)</title><rect x="1143.0" y="1045" width="0.1" height="15.0" fill="rgb(243,204,6)" rx="2" ry="2" />
<text  x="1145.99" y="1055.5" ></text>
</g>
<g >
<title>__slab_free (2 samples, 0.01%)</title><rect x="565.5" y="453" width="0.1" height="15.0" fill="rgb(212,56,36)" rx="2" ry="2" />
<text  x="568.47" y="463.5" ></text>
</g>
<g >
<title>__lock_text_start (274 samples, 1.65%)</title><rect x="517.7" y="997" width="19.5" height="15.0" fill="rgb(207,41,10)" rx="2" ry="2" />
<text  x="520.69" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::~UpstreamRequest() (21 samples, 0.13%)</title><rect x="1049.5" y="965" width="1.5" height="15.0" fill="rgb(222,202,26)" rx="2" ry="2" />
<text  x="1052.48" y="975.5" ></text>
</g>
<g >
<title>proxy_wasm::ContextBase::onResponseBody(unsigned int, bool) (3 samples, 0.02%)</title><rect x="1048.0" y="965" width="0.2" height="15.0" fill="rgb(252,180,44)" rx="2" ry="2" />
<text  x="1050.98" y="975.5" ></text>
</g>
<g >
<title>ip_output (136 samples, 0.82%)</title><rect x="906.9" y="853" width="9.7" height="15.0" fill="rgb(235,93,53)" rx="2" ry="2" />
<text  x="909.89" y="863.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (3 samples, 0.02%)</title><rect x="119.2" y="1205" width="0.2" height="15.0" fill="rgb(247,218,22)" rx="2" ry="2" />
<text  x="122.23" y="1215.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ThreadSafeArena::GetSerialArenaFallback(void*) (3 samples, 0.02%)</title><rect x="781.3" y="773" width="0.2" height="15.0" fill="rgb(240,204,16)" rx="2" ry="2" />
<text  x="784.31" y="783.5" ></text>
</g>
<g >
<title>runtime.futex (7 samples, 0.04%)</title><rect x="119.7" y="1253" width="0.5" height="15.0" fill="rgb(237,41,24)" rx="2" ry="2" />
<text  x="122.73" y="1263.5" ></text>
</g>
<g >
<title>jbd2/sda1-8 (2 samples, 0.01%)</title><rect x="659.0" y="1381" width="0.1" height="15.0" fill="rgb(230,154,15)" rx="2" ry="2" />
<text  x="661.99" y="1391.5" ></text>
</g>
<g >
<title>futex_wake (100 samples, 0.60%)</title><rect x="499.5" y="1029" width="7.1" height="15.0" fill="rgb(220,14,7)" rx="2" ry="2" />
<text  x="502.48" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Stats::ThreadLocalHistogramImpl::recordValue(unsigned long) (4 samples, 0.02%)</title><rect x="791.8" y="805" width="0.3" height="15.0" fill="rgb(241,222,22)" rx="2" ry="2" />
<text  x="794.83" y="815.5" ></text>
</g>
<g >
<title>__sched_text_start (149 samples, 0.90%)</title><rect x="102.0" y="1189" width="10.6" height="15.0" fill="rgb(222,21,7)" rx="2" ry="2" />
<text  x="105.02" y="1199.5" ></text>
</g>
<g >
<title>skb_release_head_state (2 samples, 0.01%)</title><rect x="1144.1" y="949" width="0.2" height="15.0" fill="rgb(225,198,12)" rx="2" ry="2" />
<text  x="1147.13" y="959.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::addBytesSent(unsigned long) (2 samples, 0.01%)</title><rect x="841.3" y="773" width="0.1" height="15.0" fill="rgb(250,220,11)" rx="2" ry="2" />
<text  x="844.26" y="783.5" ></text>
</g>
<g >
<title>__ip_finish_output (2 samples, 0.01%)</title><rect x="657.1" y="1013" width="0.2" height="15.0" fill="rgb(234,181,29)" rx="2" ry="2" />
<text  x="660.14" y="1023.5" ></text>
</g>
<g >
<title>ip_rcv_finish (110 samples, 0.66%)</title><rect x="924.6" y="645" width="7.8" height="15.0" fill="rgb(252,167,20)" rx="2" ry="2" />
<text  x="927.60" y="655.5" ></text>
</g>
<g >
<title>std::__1::__tree&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;::destroy(std::__1::__tree_node&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, void*&gt;*) (2 samples, 0.01%)</title><rect x="785.1" y="773" width="0.1" height="15.0" fill="rgb(235,19,45)" rx="2" ry="2" />
<text  x="788.08" y="783.5" ></text>
</g>
<g >
<title>finish_task_switch (150 samples, 0.90%)</title><rect x="84.7" y="1125" width="10.7" height="15.0" fill="rgb(227,101,50)" rx="2" ry="2" />
<text  x="87.74" y="1135.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::getPathValue() const (2 samples, 0.01%)</title><rect x="1072.4" y="1013" width="0.2" height="15.0" fill="rgb(210,133,39)" rx="2" ry="2" />
<text  x="1075.45" y="1023.5" ></text>
</g>
<g >
<title>__x64_sys_futex (7 samples, 0.04%)</title><rect x="496.4" y="1029" width="0.4" height="15.0" fill="rgb(239,6,40)" rx="2" ry="2" />
<text  x="499.35" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.10%)</title><rect x="878.0" y="965" width="1.2" height="15.0" fill="rgb(226,52,50)" rx="2" ry="2" />
<text  x="881.02" y="975.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::RenderMap(google::protobuf::Field const*, google::protobuf::stringpiece_internal::StringPiece, unsigned int, google::protobuf::util::converter::ObjectWriter*) const (3 samples, 0.02%)</title><rect x="1004.4" y="677" width="0.2" height="15.0" fill="rgb(251,50,38)" rx="2" ry="2" />
<text  x="1007.39" y="687.5" ></text>
</g>
<g >
<title>void proxy_wasm::exports::marshalPairs&lt;std::__1::vector&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;(std::__1::vector&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, char*) (6 samples, 0.04%)</title><rect x="767.1" y="757" width="0.4" height="15.0" fill="rgb(243,207,44)" rx="2" ry="2" />
<text  x="770.08" y="767.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ResponseHeaderMapImpl::Upgrade() const (3 samples, 0.02%)</title><rect x="991.7" y="1061" width="0.2" height="15.0" fill="rgb(217,187,51)" rx="2" ry="2" />
<text  x="994.73" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::ReporterImpl::flushSpans() (18 samples, 0.11%)</title><rect x="750.7" y="901" width="1.3" height="15.0" fill="rgb(242,68,28)" rx="2" ry="2" />
<text  x="753.73" y="911.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 0.02%)</title><rect x="914.9" y="581" width="0.2" height="15.0" fill="rgb(233,125,30)" rx="2" ry="2" />
<text  x="917.93" y="591.5" ></text>
</g>
<g >
<title>generic_writepages (2 samples, 0.01%)</title><rect x="659.0" y="1269" width="0.1" height="15.0" fill="rgb(215,110,1)" rx="2" ry="2" />
<text  x="661.99" y="1279.5" ></text>
</g>
<g >
<title>ip_rcv (319 samples, 1.92%)</title><rect x="563.3" y="693" width="22.7" height="15.0" fill="rgb(218,22,11)" rx="2" ry="2" />
<text  x="566.27" y="703.5" >i..</text>
</g>
<g >
<title>veth_xmit (4 samples, 0.02%)</title><rect x="915.6" y="741" width="0.3" height="15.0" fill="rgb(223,128,31)" rx="2" ry="2" />
<text  x="918.57" y="751.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (10 samples, 0.06%)</title><rect x="647.8" y="1205" width="0.7" height="15.0" fill="rgb(223,79,35)" rx="2" ry="2" />
<text  x="650.75" y="1215.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="498.8" y="933" width="0.2" height="15.0" fill="rgb(244,19,48)" rx="2" ry="2" />
<text  x="501.84" y="943.5" ></text>
</g>
<g >
<title>do_syscall_64 (201 samples, 1.21%)</title><rect x="921.9" y="1141" width="14.3" height="15.0" fill="rgb(216,40,14)" rx="2" ry="2" />
<text  x="924.90" y="1151.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ThreadSafeArena::AllocateAlignedWithCleanupFallback(unsigned long, std::type_info const*) (2 samples, 0.01%)</title><rect x="788.3" y="693" width="0.2" height="15.0" fill="rgb(221,202,0)" rx="2" ry="2" />
<text  x="791.35" y="703.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Span::traceIdAsHexString() const (5 samples, 0.03%)</title><rect x="1084.1" y="981" width="0.4" height="15.0" fill="rgb(214,179,3)" rx="2" ry="2" />
<text  x="1087.11" y="991.5" ></text>
</g>
<g >
<title>proxy_wasm::NullPlugin::getContext(unsigned long) (2 samples, 0.01%)</title><rect x="1048.0" y="933" width="0.1" height="15.0" fill="rgb(210,60,2)" rx="2" ry="2" />
<text  x="1050.98" y="943.5" ></text>
</g>
<g >
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="507.9" y="1045" width="0.3" height="15.0" fill="rgb(225,180,15)" rx="2" ry="2" />
<text  x="510.94" y="1055.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (179 samples, 1.08%)</title><rect x="62.6" y="1173" width="12.7" height="15.0" fill="rgb(215,3,39)" rx="2" ry="2" />
<text  x="65.55" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::SpanContextExtractor::extractSampled(Envoy::Tracing::Decision) (8 samples, 0.05%)</title><rect x="1070.0" y="981" width="0.6" height="15.0" fill="rgb(248,177,29)" rx="2" ry="2" />
<text  x="1073.03" y="991.5" ></text>
</g>
<g >
<title>epoll_wait (159 samples, 0.96%)</title><rect x="947.6" y="1301" width="11.3" height="15.0" fill="rgb(220,98,45)" rx="2" ry="2" />
<text  x="950.57" y="1311.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (17 samples, 0.10%)</title><rect x="37.0" y="1029" width="1.2" height="15.0" fill="rgb(216,111,46)" rx="2" ry="2" />
<text  x="39.95" y="1039.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append(unsigned long, char) (4 samples, 0.02%)</title><rect x="938.1" y="1365" width="0.3" height="15.0" fill="rgb(246,193,49)" rx="2" ry="2" />
<text  x="941.11" y="1375.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;absl::string_view, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;absl::string_view const, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt; &gt; &gt;::resize(unsigned long) (5 samples, 0.03%)</title><rect x="1085.1" y="901" width="0.4" height="15.0" fill="rgb(237,124,2)" rx="2" ry="2" />
<text  x="1088.11" y="911.5" ></text>
</g>
<g >
<title>Envoy::Runtime::LoaderImpl::threadsafeSnapshot() (2 samples, 0.01%)</title><rect x="1101.7" y="965" width="0.1" height="15.0" fill="rgb(206,88,44)" rx="2" ry="2" />
<text  x="1104.68" y="975.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::execute(char const*, int) (1,048 samples, 6.32%)</title><rect x="808.5" y="1141" width="74.6" height="15.0" fill="rgb(251,11,22)" rx="2" ry="2" />
<text  x="811.54" y="1151.5" >Envoy::H..</text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::Method() const (2 samples, 0.01%)</title><rect x="842.1" y="821" width="0.2" height="15.0" fill="rgb(244,119,3)" rx="2" ry="2" />
<text  x="845.11" y="831.5" ></text>
</g>
<g >
<title>ksys_write (158 samples, 0.95%)</title><rect x="236.1" y="1205" width="11.2" height="15.0" fill="rgb(224,17,11)" rx="2" ry="2" />
<text  x="239.07" y="1215.5" ></text>
</g>
<g >
<title>do_nanosleep (2 samples, 0.01%)</title><rect x="485.4" y="933" width="0.1" height="15.0" fill="rgb(245,80,24)" rx="2" ry="2" />
<text  x="488.40" y="943.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Extensions::HttpFilters::Wasm::WasmFilterConfig::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::wasm::v3::Wasm const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0, std::__1::allocator&lt;Envoy::Extensions::HttpFilters::Wasm::WasmFilterConfig::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::wasm::v3::Wasm const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0&gt;, void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt;::__clone(std::__1::__function::__base&lt;void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt;*) const (3 samples, 0.02%)</title><rect x="1076.9" y="981" width="0.2" height="15.0" fill="rgb(236,209,36)" rx="2" ry="2" />
<text  x="1079.86" y="991.5" ></text>
</g>
<g >
<title>ip_output (2 samples, 0.01%)</title><rect x="588.2" y="869" width="0.1" height="15.0" fill="rgb(245,115,1)" rx="2" ry="2" />
<text  x="591.16" y="879.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (47 samples, 0.28%)</title><rect x="625.9" y="1173" width="3.3" height="15.0" fill="rgb(221,118,34)" rx="2" ry="2" />
<text  x="628.85" y="1183.5" ></text>
</g>
<g >
<title>vfs_writev (2 samples, 0.01%)</title><rect x="935.8" y="1077" width="0.2" height="15.0" fill="rgb(244,107,20)" rx="2" ry="2" />
<text  x="938.84" y="1087.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (5 samples, 0.03%)</title><rect x="878.7" y="901" width="0.3" height="15.0" fill="rgb(216,222,2)" rx="2" ry="2" />
<text  x="881.66" y="911.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::getInline(Envoy::Http::CustomInlineHeaderRegistry::Handle&lt;(Envoy::Http::CustomInlineHeaderRegistry::Type)0&gt;) const (2 samples, 0.01%)</title><rect x="1093.6" y="885" width="0.1" height="15.0" fill="rgb(244,165,8)" rx="2" ry="2" />
<text  x="1096.57" y="895.5" ></text>
</g>
<g >
<title>absl::hash_internal::MixingHashState::combine_contiguous(absl::hash_internal::MixingHashState, unsigned char const*, unsigned long) (2 samples, 0.01%)</title><rect x="849.6" y="885" width="0.1" height="15.0" fill="rgb(242,206,39)" rx="2" ry="2" />
<text  x="852.58" y="895.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/daemon/logger.(*Copier).copySrc (1,109 samples, 6.68%)</title><rect x="171.5" y="1349" width="78.9" height="15.0" fill="rgb(234,167,30)" rx="2" ry="2" />
<text  x="174.50" y="1359.5" >local.git..</text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::doDeferredStreamDestroy(Envoy::Http::ConnectionManagerImpl::ActiveStream&amp;) (649 samples, 3.91%)</title><rect x="1000.8" y="965" width="46.1" height="15.0" fill="rgb(220,215,54)" rx="2" ry="2" />
<text  x="1003.76" y="975.5" >Envo..</text>
</g>
<g >
<title>Envoy::Http::Http1::ClientConnectionImpl::onMessageCompleteBase() (898 samples, 5.41%)</title><rect x="737.8" y="1061" width="63.8" height="15.0" fill="rgb(213,46,17)" rx="2" ry="2" />
<text  x="740.78" y="1071.5" >Envoy::..</text>
</g>
<g >
<title>futex_wait_setup (4 samples, 0.02%)</title><rect x="224.6" y="1077" width="0.2" height="15.0" fill="rgb(208,164,26)" rx="2" ry="2" />
<text  x="227.55" y="1087.5" ></text>
</g>
<g >
<title>char* absl::inlined_vector_internal::Storage&lt;char, 128ul, std::__1::allocator&lt;char&gt; &gt;::Insert&lt;absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt; &gt;(char const*, absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt;, unsigned long) (2 samples, 0.01%)</title><rect x="1129.3" y="1077" width="0.2" height="15.0" fill="rgb(213,98,31)" rx="2" ry="2" />
<text  x="1132.34" y="1087.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::upstreamHost() const (3 samples, 0.02%)</title><rect x="1023.8" y="773" width="0.2" height="15.0" fill="rgb(214,19,0)" rx="2" ry="2" />
<text  x="1026.81" y="783.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::callAndClearDrainTrackersAndCharges() (2 samples, 0.01%)</title><rect x="978.0" y="853" width="0.2" height="15.0" fill="rgb(245,87,12)" rx="2" ry="2" />
<text  x="981.01" y="863.5" ></text>
</g>
<g >
<title>__x64_sys_tgkill (3 samples, 0.02%)</title><rect x="622.6" y="1205" width="0.2" height="15.0" fill="rgb(253,8,13)" rx="2" ry="2" />
<text  x="625.58" y="1215.5" ></text>
</g>
<g >
<title>gro_cell_poll (2 samples, 0.01%)</title><rect x="1156.3" y="709" width="0.1" height="15.0" fill="rgb(218,213,0)" rx="2" ry="2" />
<text  x="1159.29" y="719.5" ></text>
</g>
<g >
<title>runtime.procyield (3 samples, 0.02%)</title><rect x="225.8" y="1205" width="0.2" height="15.0" fill="rgb(227,164,10)" rx="2" ry="2" />
<text  x="228.76" y="1215.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (53 samples, 0.32%)</title><rect x="594.3" y="1205" width="3.8" height="15.0" fill="rgb(245,178,5)" rx="2" ry="2" />
<text  x="597.35" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::completeLastHeader() (12 samples, 0.07%)</title><rect x="1055.2" y="1061" width="0.8" height="15.0" fill="rgb(207,4,33)" rx="2" ry="2" />
<text  x="1058.17" y="1071.5" ></text>
</g>
<g >
<title>std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; Envoy::Http::HeaderMapImpl::HeaderList::insert&lt;Envoy::Http::LowerCaseString const&amp;&gt;(Envoy::Http::LowerCaseString const&amp;) (2 samples, 0.01%)</title><rect x="1074.0" y="997" width="0.2" height="15.0" fill="rgb(224,137,16)" rx="2" ry="2" />
<text  x="1077.01" y="1007.5" ></text>
</g>
<g >
<title>__xfrm_decode_session (2 samples, 0.01%)</title><rect x="1167.0" y="789" width="0.1" height="15.0" fill="rgb(237,86,49)" rx="2" ry="2" />
<text  x="1169.96" y="799.5" ></text>
</g>
<g >
<title>ip_finish_output (149 samples, 0.90%)</title><rect x="1156.0" y="837" width="10.6" height="15.0" fill="rgb(223,35,7)" rx="2" ry="2" />
<text  x="1159.01" y="847.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::addImpl(void const*, unsigned long) (5 samples, 0.03%)</title><rect x="1089.9" y="709" width="0.3" height="15.0" fill="rgb(222,32,14)" rx="2" ry="2" />
<text  x="1092.87" y="719.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation::~BinaryAnnotation() (4 samples, 0.02%)</title><rect x="960.2" y="1221" width="0.2" height="15.0" fill="rgb(242,48,33)" rx="2" ry="2" />
<text  x="963.16" y="1231.5" ></text>
</g>
<g >
<title>absl::hash_internal::MixingHashState::combine_contiguous(absl::hash_internal::MixingHashState, unsigned char const*, unsigned long) (3 samples, 0.02%)</title><rect x="983.3" y="789" width="0.3" height="15.0" fill="rgb(250,4,28)" rx="2" ry="2" />
<text  x="986.34" y="799.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="657.1" y="1157" width="0.2" height="15.0" fill="rgb(206,222,42)" rx="2" ry="2" />
<text  x="660.14" y="1167.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="893.0" y="1109" width="0.2" height="15.0" fill="rgb(244,96,25)" rx="2" ry="2" />
<text  x="896.03" y="1119.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (2 samples, 0.01%)</title><rect x="114.0" y="1141" width="0.2" height="15.0" fill="rgb(246,211,48)" rx="2" ry="2" />
<text  x="117.04" y="1151.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (751 samples, 4.53%)</title><rect x="540.4" y="1189" width="53.4" height="15.0" fill="rgb(247,51,34)" rx="2" ry="2" />
<text  x="543.37" y="1199.5" >entry..</text>
</g>
<g >
<title>do_futex (3 samples, 0.02%)</title><rect x="506.7" y="1061" width="0.2" height="15.0" fill="rgb(220,166,13)" rx="2" ry="2" />
<text  x="509.73" y="1071.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelExpressionFlatEvaluationState::~CelExpressionFlatEvaluationState() (2 samples, 0.01%)</title><rect x="1037.7" y="789" width="0.1" height="15.0" fill="rgb(209,187,32)" rx="2" ry="2" />
<text  x="1040.67" y="799.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Router::Filter::callbacks() (2 samples, 0.01%)</title><rect x="1054.5" y="1029" width="0.1" height="15.0" fill="rgb(209,153,47)" rx="2" ry="2" />
<text  x="1057.46" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::encodeData(Envoy::Buffer::Instance&amp;, bool) (87 samples, 0.52%)</title><rect x="740.6" y="965" width="6.1" height="15.0" fill="rgb(241,93,40)" rx="2" ry="2" />
<text  x="743.56" y="975.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::insertByKey(Envoy::Http::HeaderString&amp;&amp;, Envoy::Http::HeaderString&amp;&amp;) (2 samples, 0.01%)</title><rect x="716.7" y="1045" width="0.1" height="15.0" fill="rgb(254,80,9)" rx="2" ry="2" />
<text  x="719.66" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Http::StreamFilterBase::onStreamComplete() (3 samples, 0.02%)</title><rect x="795.7" y="965" width="0.3" height="15.0" fill="rgb(250,173,12)" rx="2" ry="2" />
<text  x="798.74" y="975.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.01%)</title><rect x="999.6" y="725" width="0.1" height="15.0" fill="rgb(219,167,1)" rx="2" ry="2" />
<text  x="1002.56" y="735.5" ></text>
</g>
<g >
<title>down_read (3 samples, 0.02%)</title><rect x="546.3" y="1125" width="0.2" height="15.0" fill="rgb(205,136,12)" rx="2" ry="2" />
<text  x="549.27" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Router::ProdFilter::createRetryState(Envoy::Router::RetryPolicy const&amp;, Envoy::Http::RequestHeaderMap&amp;, Envoy::Upstream::ClusterInfo const&amp;, Envoy::Router::VirtualCluster const*, Envoy::Runtime::Loader&amp;, Envoy::Random::RandomGenerator&amp;, Envoy::Event::Dispatcher&amp;, Envoy::TimeSource&amp;, Envoy::Upstream::ResourcePriority) (6 samples, 0.04%)</title><rect x="852.5" y="997" width="0.4" height="15.0" fill="rgb(225,38,23)" rx="2" ry="2" />
<text  x="855.49" y="1007.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_out (5 samples, 0.03%)</title><rect x="916.2" y="821" width="0.4" height="15.0" fill="rgb(227,179,23)" rx="2" ry="2" />
<text  x="919.21" y="831.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="1035.8" y="853" width="0.2" height="15.0" fill="rgb(252,2,2)" rx="2" ry="2" />
<text  x="1038.75" y="863.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Extensions::HttpFilters::Wasm::WasmFilterConfig::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::wasm::v3::Wasm const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0, std::__1::allocator&lt;Envoy::Extensions::HttpFilters::Wasm::WasmFilterConfig::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::wasm::v3::Wasm const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0&gt;, void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt;::operator()(Envoy::Http::FilterChainFactoryCallbacks&amp;) (37 samples, 0.22%)</title><rect x="1078.3" y="997" width="2.6" height="15.0" fill="rgb(238,64,8)" rx="2" ry="2" />
<text  x="1081.28" y="1007.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (3 samples, 0.02%)</title><rect x="1173.5" y="821" width="0.2" height="15.0" fill="rgb(233,189,13)" rx="2" ry="2" />
<text  x="1176.50" y="831.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::RenderMap(google::protobuf::Field const*, google::protobuf::stringpiece_internal::StringPiece, unsigned int, google::protobuf::util::converter::ObjectWriter*) const (6 samples, 0.04%)</title><rect x="751.3" y="757" width="0.4" height="15.0" fill="rgb(208,8,36)" rx="2" ry="2" />
<text  x="754.30" y="767.5" ></text>
</g>
<g >
<title>runtime.readyWithTime (63 samples, 0.38%)</title><rect x="125.2" y="1221" width="4.5" height="15.0" fill="rgb(205,33,27)" rx="2" ry="2" />
<text  x="128.21" y="1231.5" ></text>
</g>
<g >
<title>tcp_recvmsg (15 samples, 0.09%)</title><rect x="897.0" y="981" width="1.1" height="15.0" fill="rgb(238,103,10)" rx="2" ry="2" />
<text  x="900.01" y="991.5" ></text>
</g>
<g >
<title>Envoy::Tracing::HttpTracerUtility::finalizeDownstreamSpan(Envoy::Tracing::Span&amp;, Envoy::Http::RequestHeaderMap const*, Envoy::Http::ResponseHeaderMap const*, Envoy::Http::ResponseTrailerMap const*, Envoy::StreamInfo::StreamInfo const&amp;, Envoy::Tracing::Config const&amp;) (148 samples, 0.89%)</title><rect x="749.1" y="933" width="10.5" height="15.0" fill="rgb(234,196,3)" rx="2" ry="2" />
<text  x="752.09" y="943.5" ></text>
</g>
<g >
<title>__lock_text_start (29 samples, 0.17%)</title><rect x="543.5" y="1061" width="2.1" height="15.0" fill="rgb(250,221,47)" rx="2" ry="2" />
<text  x="546.50" y="1071.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (8 samples, 0.05%)</title><rect x="170.3" y="1221" width="0.6" height="15.0" fill="rgb(234,202,46)" rx="2" ry="2" />
<text  x="173.29" y="1231.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.01%)</title><rect x="660.1" y="1285" width="0.1" height="15.0" fill="rgb(231,161,54)" rx="2" ry="2" />
<text  x="663.06" y="1295.5" ></text>
</g>
<g >
<title>evthread_posix_get_id (2 samples, 0.01%)</title><rect x="1091.6" y="741" width="0.2" height="15.0" fill="rgb(210,62,0)" rx="2" ry="2" />
<text  x="1094.65" y="751.5" ></text>
</g>
<g >
<title>tcp_poll (5 samples, 0.03%)</title><rect x="744.7" y="709" width="0.3" height="15.0" fill="rgb(212,228,45)" rx="2" ry="2" />
<text  x="747.68" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="119.9" y="1237" width="0.3" height="15.0" fill="rgb(210,48,48)" rx="2" ry="2" />
<text  x="122.87" y="1247.5" ></text>
</g>
<g >
<title>parse_url_char (3 samples, 0.02%)</title><rect x="882.9" y="1125" width="0.2" height="15.0" fill="rgb(242,182,1)" rx="2" ry="2" />
<text  x="885.86" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::~Slice() (2 samples, 0.01%)</title><rect x="705.2" y="1189" width="0.2" height="15.0" fill="rgb(216,18,9)" rx="2" ry="2" />
<text  x="708.21" y="1199.5" ></text>
</g>
<g >
<title>__slab_free (2 samples, 0.01%)</title><rect x="565.5" y="437" width="0.1" height="15.0" fill="rgb(210,59,13)" rx="2" ry="2" />
<text  x="568.47" y="447.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (3 samples, 0.02%)</title><rect x="925.5" y="501" width="0.2" height="15.0" fill="rgb(231,71,13)" rx="2" ry="2" />
<text  x="928.45" y="511.5" ></text>
</g>
<g >
<title>aa_label_sk_perm.part.0 (2 samples, 0.01%)</title><rect x="1148.0" y="949" width="0.1" height="15.0" fill="rgb(239,60,16)" rx="2" ry="2" />
<text  x="1150.97" y="959.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2 samples, 0.01%)</title><rect x="250.4" y="1157" width="0.2" height="15.0" fill="rgb(226,160,51)" rx="2" ry="2" />
<text  x="253.44" y="1167.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::get_header_map_value(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (7 samples, 0.04%)</title><rect x="779.3" y="837" width="0.5" height="15.0" fill="rgb(254,147,27)" rx="2" ry="2" />
<text  x="782.31" y="847.5" ></text>
</g>
<g >
<title>Envoy::Upstream::ClusterInfoImpl::resourceManager(Envoy::Upstream::ResourcePriority) const (5 samples, 0.03%)</title><rect x="1096.8" y="949" width="0.4" height="15.0" fill="rgb(207,48,13)" rx="2" ry="2" />
<text  x="1099.84" y="959.5" ></text>
</g>
<g >
<title>tcp_ack (2 samples, 0.01%)</title><rect x="565.0" y="549" width="0.1" height="15.0" fill="rgb(237,203,43)" rx="2" ry="2" />
<text  x="567.98" y="559.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::encodeFormattedHeader(absl::string_view, absl::string_view, Envoy::OptRef&lt;Envoy::Http::HeaderKeyFormatter const&gt;) (17 samples, 0.10%)</title><rect x="839.5" y="757" width="1.3" height="15.0" fill="rgb(213,77,46)" rx="2" ry="2" />
<text  x="842.55" y="767.5" ></text>
</g>
<g >
<title>Envoy::Event::TimerImpl::enableTimer(std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000l&gt; &gt;, Envoy::ScopeTrackedObject const*) (2 samples, 0.01%)</title><rect x="1001.8" y="933" width="0.2" height="15.0" fill="rgb(229,197,1)" rx="2" ry="2" />
<text  x="1004.83" y="943.5" ></text>
</g>
<g >
<title>Envoy::Upstream::ClusterManagerImpl::getThreadLocalCluster(absl::string_view) (2 samples, 0.01%)</title><rect x="818.9" y="997" width="0.2" height="15.0" fill="rgb(220,214,24)" rx="2" ry="2" />
<text  x="821.93" y="1007.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.02%)</title><rect x="490.2" y="965" width="0.2" height="15.0" fill="rgb(212,189,53)" rx="2" ry="2" />
<text  x="493.24" y="975.5" ></text>
</g>
<g >
<title>Envoy::Stats::ParentHistogramImpl::recordValue(unsigned long) (2 samples, 0.01%)</title><rect x="1043.1" y="837" width="0.1" height="15.0" fill="rgb(249,202,51)" rx="2" ry="2" />
<text  x="1046.08" y="847.5" ></text>
</g>
<g >
<title>get_futex_value_locked (3 samples, 0.02%)</title><rect x="459.0" y="901" width="0.2" height="15.0" fill="rgb(223,64,31)" rx="2" ry="2" />
<text  x="462.02" y="911.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::ZipkinSpan::injectContext(Envoy::Tracing::TraceContext&amp;) (25 samples, 0.15%)</title><rect x="1084.1" y="997" width="1.8" height="15.0" fill="rgb(221,72,40)" rx="2" ry="2" />
<text  x="1087.11" y="1007.5" ></text>
</g>
<g >
<title>local.runtime.notetsleep_internal (7 samples, 0.04%)</title><rect x="119.7" y="1269" width="0.5" height="15.0" fill="rgb(248,21,17)" rx="2" ry="2" />
<text  x="122.73" y="1279.5" ></text>
</g>
<g >
<title>google::protobuf::FileDescriptorTables::FindNestedSymbol(void const*, google::protobuf::stringpiece_internal::StringPiece) const (4 samples, 0.02%)</title><rect x="776.0" y="725" width="0.3" height="15.0" fill="rgb(231,33,31)" rx="2" ry="2" />
<text  x="778.97" y="735.5" ></text>
</g>
<g >
<title>sock_recvmsg (67 samples, 0.40%)</title><rect x="1143.6" y="1029" width="4.8" height="15.0" fill="rgb(218,165,16)" rx="2" ry="2" />
<text  x="1146.63" y="1039.5" ></text>
</g>
<g >
<title>wake_up_q (19 samples, 0.11%)</title><rect x="596.4" y="1125" width="1.4" height="15.0" fill="rgb(226,42,17)" rx="2" ry="2" />
<text  x="599.41" y="1135.5" ></text>
</g>
<g >
<title>__sched_text_start (23 samples, 0.14%)</title><rect x="198.2" y="1077" width="1.7" height="15.0" fill="rgb(213,0,10)" rx="2" ry="2" />
<text  x="201.24" y="1087.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (3 samples, 0.02%)</title><rect x="246.0" y="1093" width="0.2" height="15.0" fill="rgb(220,97,41)" rx="2" ry="2" />
<text  x="248.96" y="1103.5" ></text>
</g>
<g >
<title>__lock_text_start (12 samples, 0.07%)</title><rect x="169.4" y="1013" width="0.8" height="15.0" fill="rgb(248,103,48)" rx="2" ry="2" />
<text  x="172.37" y="1023.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::is_map_message_type() const (2 samples, 0.01%)</title><rect x="768.9" y="773" width="0.2" height="15.0" fill="rgb(210,156,16)" rx="2" ry="2" />
<text  x="771.93" y="783.5" ></text>
</g>
<g >
<title>pskb_expand_head (3 samples, 0.02%)</title><rect x="1162.7" y="405" width="0.2" height="15.0" fill="rgb(236,76,23)" rx="2" ry="2" />
<text  x="1165.69" y="415.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.01%)</title><rect x="246.0" y="1061" width="0.1" height="15.0" fill="rgb(254,81,50)" rx="2" ry="2" />
<text  x="248.96" y="1071.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Extensions::HttpFilters::Fault::FaultFilter::encodeData(Envoy::Buffer::Instance&amp;, bool) (2 samples, 0.01%)</title><rect x="800.9" y="997" width="0.2" height="15.0" fill="rgb(250,11,19)" rx="2" ry="2" />
<text  x="803.93" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::addImpl(void const*, unsigned long) (6 samples, 0.04%)</title><rect x="723.1" y="837" width="0.5" height="15.0" fill="rgb(205,98,30)" rx="2" ry="2" />
<text  x="726.13" y="847.5" ></text>
</g>
<g >
<title>ret_from_fork (2 samples, 0.01%)</title><rect x="659.0" y="1365" width="0.1" height="15.0" fill="rgb(228,13,34)" rx="2" ry="2" />
<text  x="661.99" y="1375.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Extensions::HttpFilters::Cors::CorsFilterFactory::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::cors::v3::Cors const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0, std::__1::allocator&lt;Envoy::Extensions::HttpFilters::Cors::CorsFilterFactory::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::cors::v3::Cors const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0&gt;, void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt;::operator()(Envoy::Http::FilterChainFactoryCallbacks&amp;) (7 samples, 0.04%)</title><rect x="1077.1" y="997" width="0.5" height="15.0" fill="rgb(205,9,9)" rx="2" ry="2" />
<text  x="1080.07" y="1007.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (42 samples, 0.25%)</title><rect x="485.4" y="965" width="3.0" height="15.0" fill="rgb(212,143,39)" rx="2" ry="2" />
<text  x="488.40" y="975.5" ></text>
</g>
<g >
<title>mod_timer (2 samples, 0.01%)</title><rect x="589.9" y="901" width="0.1" height="15.0" fill="rgb(206,133,9)" rx="2" ry="2" />
<text  x="592.87" y="911.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.01%)</title><rect x="490.0" y="981" width="0.2" height="15.0" fill="rgb(251,100,41)" rx="2" ry="2" />
<text  x="493.02" y="991.5" ></text>
</g>
<g >
<title>schedule (20 samples, 0.12%)</title><rect x="646.0" y="1173" width="1.5" height="15.0" fill="rgb(244,225,37)" rx="2" ry="2" />
<text  x="649.05" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.03%)</title><rect x="672.4" y="1141" width="0.4" height="15.0" fill="rgb(226,32,5)" rx="2" ry="2" />
<text  x="675.43" y="1151.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (20 samples, 0.12%)</title><rect x="943.3" y="1349" width="1.4" height="15.0" fill="rgb(213,48,39)" rx="2" ry="2" />
<text  x="946.30" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_futex (178 samples, 1.07%)</title><rect x="62.6" y="1141" width="12.6" height="15.0" fill="rgb(211,103,21)" rx="2" ry="2" />
<text  x="65.55" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Event::FileEventImpl::assignEvents(unsigned int, event_base*)::$_1::__invoke(int, short, void*) (2,948 samples, 17.77%)</title><rect x="710.3" y="1285" width="209.7" height="15.0" fill="rgb(240,3,7)" rx="2" ry="2" />
<text  x="713.33" y="1295.5" >Envoy::Event::FileEventImpl..</text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="1108.1" y="933" width="0.2" height="15.0" fill="rgb(214,210,15)" rx="2" ry="2" />
<text  x="1111.15" y="943.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="679.5" y="1285" width="0.2" height="15.0" fill="rgb(218,184,51)" rx="2" ry="2" />
<text  x="682.54" y="1295.5" ></text>
</g>
<g >
<title>pipe_poll (5 samples, 0.03%)</title><rect x="197.5" y="1077" width="0.3" height="15.0" fill="rgb(214,176,10)" rx="2" ry="2" />
<text  x="200.46" y="1087.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (22 samples, 0.13%)</title><rect x="243.0" y="1061" width="1.6" height="15.0" fill="rgb(245,181,40)" rx="2" ry="2" />
<text  x="246.04" y="1071.5" ></text>
</g>
<g >
<title>mem_cgroup_iter (2 samples, 0.01%)</title><rect x="672.9" y="949" width="0.1" height="15.0" fill="rgb(238,31,4)" rx="2" ry="2" />
<text  x="675.86" y="959.5" ></text>
</g>
<g >
<title>[unknown] (24 samples, 0.14%)</title><rect x="681.0" y="1365" width="1.7" height="15.0" fill="rgb(218,70,8)" rx="2" ry="2" />
<text  x="684.03" y="1375.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (143 samples, 0.86%)</title><rect x="1174.6" y="613" width="10.1" height="15.0" fill="rgb(249,122,7)" rx="2" ry="2" />
<text  x="1177.57" y="623.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="672.5" y="1077" width="0.3" height="15.0" fill="rgb(243,176,7)" rx="2" ry="2" />
<text  x="675.50" y="1087.5" ></text>
</g>
<g >
<title>github.com/docker/docker/api/server/router/container.(*containerRouter).getContainersJSON-fm (18 samples, 0.11%)</title><rect x="250.8" y="1221" width="1.3" height="15.0" fill="rgb(206,212,7)" rx="2" ry="2" />
<text  x="253.79" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::StaticLookupTable&lt;Envoy::Http::RequestHeaderMap&gt;::lookup(Envoy::Http::HeaderMapImpl&amp;, absl::string_view) (10 samples, 0.06%)</title><rect x="1030.1" y="741" width="0.7" height="15.0" fill="rgb(213,146,45)" rx="2" ry="2" />
<text  x="1033.13" y="751.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="598.1" y="1157" width="0.2" height="15.0" fill="rgb(244,30,21)" rx="2" ry="2" />
<text  x="601.12" y="1167.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (7 samples, 0.04%)</title><rect x="515.3" y="1029" width="0.5" height="15.0" fill="rgb(219,50,24)" rx="2" ry="2" />
<text  x="518.27" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::add(void const*, unsigned long) (3 samples, 0.02%)</title><rect x="722.8" y="837" width="0.3" height="15.0" fill="rgb(240,187,12)" rx="2" ry="2" />
<text  x="725.85" y="847.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (320 samples, 1.93%)</title><rect x="37.0" y="1045" width="22.7" height="15.0" fill="rgb(243,36,25)" rx="2" ry="2" />
<text  x="39.95" y="1055.5" >s..</text>
</g>
<g >
<title>__tcp_transmit_skb (154 samples, 0.93%)</title><rect x="905.8" y="917" width="11.0" height="15.0" fill="rgb(231,185,17)" rx="2" ry="2" />
<text  x="908.83" y="927.5" ></text>
</g>
<g >
<title>Envoy::Runtime::runtimeFeatureEnabled(absl::string_view) (2 samples, 0.01%)</title><rect x="872.8" y="1029" width="0.1" height="15.0" fill="rgb(211,188,34)" rx="2" ry="2" />
<text  x="875.76" y="1039.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::getDataReadOnlyGeneric(absl::string_view) const (2 samples, 0.01%)</title><rect x="846.9" y="965" width="0.2" height="15.0" fill="rgb(208,91,53)" rx="2" ry="2" />
<text  x="849.94" y="975.5" ></text>
</g>
<g >
<title>Envoy::Event::SchedulableCallbackImpl::enabled() (2 samples, 0.01%)</title><rect x="739.1" y="997" width="0.2" height="15.0" fill="rgb(230,45,30)" rx="2" ry="2" />
<text  x="742.14" y="1007.5" ></text>
</g>
<g >
<title>absl::string_view::find(absl::string_view, unsigned long) const (2 samples, 0.01%)</title><rect x="988.5" y="917" width="0.1" height="15.0" fill="rgb(228,128,15)" rx="2" ry="2" />
<text  x="991.46" y="927.5" ></text>
</g>
<g >
<title>Envoy::Runtime::runtimeFeatureEnabled(absl::string_view) (2 samples, 0.01%)</title><rect x="854.0" y="997" width="0.1" height="15.0" fill="rgb(218,128,29)" rx="2" ry="2" />
<text  x="856.98" y="1007.5" ></text>
</g>
<g >
<title>epoll_nochangelist_del (44 samples, 0.27%)</title><rect x="873.7" y="981" width="3.1" height="15.0" fill="rgb(232,124,17)" rx="2" ry="2" />
<text  x="876.68" y="991.5" ></text>
</g>
<g >
<title>ip_forward_finish (2 samples, 0.01%)</title><rect x="1131.5" y="885" width="0.2" height="15.0" fill="rgb(212,74,48)" rx="2" ry="2" />
<text  x="1134.54" y="895.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestHeaderMapImpl::inlineHeaders() (3 samples, 0.02%)</title><rect x="825.3" y="1013" width="0.2" height="15.0" fill="rgb(224,215,28)" rx="2" ry="2" />
<text  x="828.25" y="1023.5" ></text>
</g>
<g >
<title>finish_task_switch (39 samples, 0.24%)</title><rect x="485.6" y="885" width="2.8" height="15.0" fill="rgb(228,173,15)" rx="2" ry="2" />
<text  x="488.61" y="895.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="785.9" y="757" width="0.2" height="15.0" fill="rgb(227,57,24)" rx="2" ry="2" />
<text  x="788.93" y="767.5" ></text>
</g>
<g >
<title>epoll_ctl (26 samples, 0.16%)</title><rect x="1123.8" y="965" width="1.8" height="15.0" fill="rgb(210,129,29)" rx="2" ry="2" />
<text  x="1126.79" y="975.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (121 samples, 0.73%)</title><rect x="907.0" y="773" width="8.6" height="15.0" fill="rgb(224,125,37)" rx="2" ry="2" />
<text  x="909.96" y="783.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (8 samples, 0.05%)</title><rect x="686.4" y="1301" width="0.5" height="15.0" fill="rgb(240,201,20)" rx="2" ry="2" />
<text  x="689.37" y="1311.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5, std::__1::allocator&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5&gt;, void (unsigned int)&gt;::operator()(unsigned int&amp;&amp;) (264 samples, 1.59%)</title><rect x="1169.6" y="1269" width="18.8" height="15.0" fill="rgb(220,14,15)" rx="2" ry="2" />
<text  x="1172.59" y="1279.5" ></text>
</g>
<g >
<title>runtime.sysmon (69 samples, 0.42%)</title><rect x="115.4" y="1301" width="4.9" height="15.0" fill="rgb(253,102,12)" rx="2" ry="2" />
<text  x="118.39" y="1311.5" ></text>
</g>
<g >
<title>Envoy::Stats::ParentHistogramImpl::recordValue(unsigned long) (6 samples, 0.04%)</title><rect x="1042.5" y="821" width="0.4" height="15.0" fill="rgb(250,11,17)" rx="2" ry="2" />
<text  x="1045.51" y="831.5" ></text>
</g>
<g >
<title>__lock_text_start (85 samples, 0.51%)</title><rect x="925.7" y="453" width="6.0" height="15.0" fill="rgb(253,13,15)" rx="2" ry="2" />
<text  x="928.67" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::RenderStructValue(google::protobuf::util::converter::ProtoStreamObjectSource const*, google::protobuf::Type const&amp;, google::protobuf::stringpiece_internal::StringPiece, google::protobuf::util::converter::ObjectWriter*) (4 samples, 0.02%)</title><rect x="1004.4" y="725" width="0.3" height="15.0" fill="rgb(215,177,25)" rx="2" ry="2" />
<text  x="1007.39" y="735.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="682.0" y="1269" width="0.2" height="15.0" fill="rgb(210,59,10)" rx="2" ry="2" />
<text  x="685.03" y="1279.5" ></text>
</g>
<g >
<title>containerd (30 samples, 0.18%)</title><rect x="113.3" y="1381" width="2.1" height="15.0" fill="rgb(222,120,6)" rx="2" ry="2" />
<text  x="116.26" y="1391.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Router::Filter::callbacks() (2 samples, 0.01%)</title><rect x="1094.4" y="901" width="0.1" height="15.0" fill="rgb(210,156,45)" rx="2" ry="2" />
<text  x="1097.35" y="911.5" ></text>
</g>
<g >
<title>ip_local_deliver (110 samples, 0.66%)</title><rect x="924.6" y="629" width="7.8" height="15.0" fill="rgb(225,175,46)" rx="2" ry="2" />
<text  x="927.60" y="639.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (3 samples, 0.02%)</title><rect x="878.8" y="885" width="0.2" height="15.0" fill="rgb(228,153,19)" rx="2" ry="2" />
<text  x="881.80" y="895.5" ></text>
</g>
<g >
<title>wake_up_q (100 samples, 0.60%)</title><rect x="499.5" y="1013" width="7.1" height="15.0" fill="rgb(210,228,19)" rx="2" ry="2" />
<text  x="502.48" y="1023.5" ></text>
</g>
<g >
<title>absl::Status::Status(absl::StatusCode, absl::string_view) (2 samples, 0.01%)</title><rect x="1038.8" y="725" width="0.2" height="15.0" fill="rgb(225,98,14)" rx="2" ry="2" />
<text  x="1041.81" y="735.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation::~BinaryAnnotation() (2 samples, 0.01%)</title><rect x="1007.0" y="885" width="0.1" height="15.0" fill="rgb(209,205,45)" rx="2" ry="2" />
<text  x="1009.95" y="895.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Upstreams::Http::Http::HttpConnPool::HttpConnPool(Envoy::Upstream::ThreadLocalCluster&amp;, bool, Envoy::Router::RouteEntry const&amp;, absl::optional&lt;Envoy::Http::Protocol&gt;, Envoy::Upstream::LoadBalancerContext*) (26 samples, 0.16%)</title><rect x="1099.2" y="965" width="1.8" height="15.0" fill="rgb(229,41,53)" rx="2" ry="2" />
<text  x="1102.19" y="975.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (8 samples, 0.05%)</title><rect x="1145.4" y="981" width="0.6" height="15.0" fill="rgb(244,132,30)" rx="2" ry="2" />
<text  x="1148.41" y="991.5" ></text>
</g>
<g >
<title>event_add (25 samples, 0.15%)</title><rect x="998.6" y="885" width="1.7" height="15.0" fill="rgb(248,24,17)" rx="2" ry="2" />
<text  x="1001.56" y="895.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (3 samples, 0.02%)</title><rect x="1007.1" y="885" width="0.2" height="15.0" fill="rgb(212,110,3)" rx="2" ry="2" />
<text  x="1010.09" y="895.5" ></text>
</g>
<g >
<title>__x64_sys_read (81 samples, 0.49%)</title><rect x="672.9" y="1109" width="5.7" height="15.0" fill="rgb(219,45,0)" rx="2" ry="2" />
<text  x="675.86" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ClientConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (1,255 samples, 7.56%)</title><rect x="968.0" y="1173" width="89.2" height="15.0" fill="rgb(222,32,42)" rx="2" ry="2" />
<text  x="970.98" y="1183.5" >Envoy::Htt..</text>
</g>
<g >
<title>Envoy::Http::AsyncClientImpl::send(std::__1::unique_ptr&lt;Envoy::Http::Message&lt;Envoy::Http::RequestHeaderMap, Envoy::Http::RequestTrailerMap&gt;, std::__1::default_delete&lt;Envoy::Http::Message&lt;Envoy::Http::RequestHeaderMap, Envoy::Http::RequestTrailerMap&gt; &gt; &gt;&amp;&amp;, Envoy::Http::AsyncClient::Callbacks&amp;, Envoy::Http::AsyncClient::RequestOptions const&amp;) (2 samples, 0.01%)</title><rect x="751.9" y="885" width="0.1" height="15.0" fill="rgb(226,138,2)" rx="2" ry="2" />
<text  x="754.86" y="895.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (3 samples, 0.02%)</title><rect x="1149.6" y="1045" width="0.2" height="15.0" fill="rgb(243,102,50)" rx="2" ry="2" />
<text  x="1152.61" y="1055.5" ></text>
</g>
<g >
<title>select_estimate_accuracy (3 samples, 0.02%)</title><rect x="701.8" y="1205" width="0.2" height="15.0" fill="rgb(205,155,54)" rx="2" ry="2" />
<text  x="704.80" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::completeLastHeader() (6 samples, 0.04%)</title><rect x="1064.3" y="1077" width="0.5" height="15.0" fill="rgb(213,20,11)" rx="2" ry="2" />
<text  x="1067.34" y="1087.5" ></text>
</g>
<g >
<title>_copy_to_iter (5 samples, 0.03%)</title><rect x="514.4" y="949" width="0.4" height="15.0" fill="rgb(225,0,50)" rx="2" ry="2" />
<text  x="517.41" y="959.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::getExisting(absl::string_view) (6 samples, 0.04%)</title><rect x="1070.1" y="933" width="0.4" height="15.0" fill="rgb(237,216,9)" rx="2" ry="2" />
<text  x="1073.10" y="943.5" ></text>
</g>
<g >
<title>release_sock (137 samples, 0.83%)</title><rect x="547.0" y="1013" width="9.7" height="15.0" fill="rgb(214,176,31)" rx="2" ry="2" />
<text  x="549.98" y="1023.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (2 samples, 0.01%)</title><rect x="908.5" y="389" width="0.2" height="15.0" fill="rgb(213,182,11)" rx="2" ry="2" />
<text  x="911.53" y="399.5" ></text>
</g>
<g >
<title>read_tsc (3 samples, 0.02%)</title><rect x="587.2" y="709" width="0.2" height="15.0" fill="rgb(215,102,25)" rx="2" ry="2" />
<text  x="590.16" y="719.5" ></text>
</g>
<g >
<title>[unknown] (18 samples, 0.11%)</title><rect x="436.4" y="933" width="1.3" height="15.0" fill="rgb(205,74,15)" rx="2" ry="2" />
<text  x="439.40" y="943.5" ></text>
</g>
<g >
<title>__lock_text_start (110 samples, 0.66%)</title><rect x="1176.2" y="453" width="7.8" height="15.0" fill="rgb(249,174,2)" rx="2" ry="2" />
<text  x="1179.20" y="463.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::addImpl(void const*, unsigned long) (2 samples, 0.01%)</title><rect x="721.6" y="917" width="0.2" height="15.0" fill="rgb(205,198,8)" rx="2" ry="2" />
<text  x="724.64" y="927.5" ></text>
</g>
<g >
<title>proxy_wasm::NullPlugin::getContext(unsigned long) (2 samples, 0.01%)</title><rect x="727.6" y="917" width="0.2" height="15.0" fill="rgb(214,94,27)" rx="2" ry="2" />
<text  x="730.61" y="927.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::removeEnvoyRetriableStatusCodes() (3 samples, 0.02%)</title><rect x="826.1" y="1013" width="0.2" height="15.0" fill="rgb(220,27,44)" rx="2" ry="2" />
<text  x="829.11" y="1023.5" ></text>
</g>
<g >
<title>schedule (12 samples, 0.07%)</title><rect x="212.6" y="1093" width="0.9" height="15.0" fill="rgb(240,26,14)" rx="2" ry="2" />
<text  x="215.60" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Event::FileEventImpl::setEnabled(unsigned int) (47 samples, 0.28%)</title><rect x="873.5" y="1045" width="3.3" height="15.0" fill="rgb(217,141,15)" rx="2" ry="2" />
<text  x="876.47" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::HeaderMapImpl() (8 samples, 0.05%)</title><rect x="970.4" y="1029" width="0.6" height="15.0" fill="rgb(237,1,15)" rx="2" ry="2" />
<text  x="973.40" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="672.6" y="1045" width="0.2" height="15.0" fill="rgb(250,138,2)" rx="2" ry="2" />
<text  x="675.64" y="1055.5" ></text>
</g>
<g >
<title>finish_task_switch (37 samples, 0.22%)</title><rect x="540.5" y="1061" width="2.6" height="15.0" fill="rgb(248,187,29)" rx="2" ry="2" />
<text  x="543.51" y="1071.5" ></text>
</g>
<g >
<title>epoll_ctl (29 samples, 0.17%)</title><rect x="877.2" y="981" width="2.0" height="15.0" fill="rgb(234,20,35)" rx="2" ry="2" />
<text  x="880.17" y="991.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Extensions::Common::Wasm::Context::encodeData(Envoy::Buffer::Instance&amp;, bool) (3 samples, 0.02%)</title><rect x="1048.0" y="981" width="0.2" height="15.0" fill="rgb(205,148,45)" rx="2" ry="2" />
<text  x="1050.98" y="991.5" ></text>
</g>
<g >
<title>finish_task_switch (107 samples, 0.64%)</title><rect x="648.6" y="1157" width="7.6" height="15.0" fill="rgb(251,197,41)" rx="2" ry="2" />
<text  x="651.61" y="1167.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (115 samples, 0.69%)</title><rect x="693.6" y="1205" width="8.2" height="15.0" fill="rgb(211,122,4)" rx="2" ry="2" />
<text  x="696.62" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::read(Envoy::Buffer::Instance&amp;, absl::optional&lt;unsigned long&gt;) (2 samples, 0.01%)</title><rect x="1132.9" y="1221" width="0.1" height="15.0" fill="rgb(235,100,40)" rx="2" ry="2" />
<text  x="1135.90" y="1231.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (199 samples, 1.20%)</title><rect x="1173.0" y="949" width="14.2" height="15.0" fill="rgb(237,188,12)" rx="2" ry="2" />
<text  x="1176.00" y="959.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Extensions::Common::Wasm::Context::log(Envoy::Http::RequestHeaderMap const*, Envoy::Http::ResponseHeaderMap const*, Envoy::Http::ResponseTrailerMap const*, Envoy::StreamInfo::StreamInfo const&amp;) (476 samples, 2.87%)</title><rect x="760.3" y="933" width="33.9" height="15.0" fill="rgb(224,99,17)" rx="2" ry="2" />
<text  x="763.33" y="943.5" >no..</text>
</g>
<g >
<title>ext4_reserve_inode_write (19 samples, 0.11%)</title><rect x="244.6" y="1061" width="1.4" height="15.0" fill="rgb(230,6,18)" rx="2" ry="2" />
<text  x="247.61" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onHeaderField(char const*, unsigned long) (34 samples, 0.20%)</title><rect x="804.1" y="1077" width="2.4" height="15.0" fill="rgb(222,219,5)" rx="2" ry="2" />
<text  x="807.06" y="1087.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/api/server/httputils.WriteJSON (7 samples, 0.04%)</title><rect x="251.6" y="1189" width="0.5" height="15.0" fill="rgb(241,102,38)" rx="2" ry="2" />
<text  x="254.58" y="1199.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="489.5" y="981" width="0.2" height="15.0" fill="rgb(238,77,0)" rx="2" ry="2" />
<text  x="492.52" y="991.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (2 samples, 0.01%)</title><rect x="224.6" y="1029" width="0.2" height="15.0" fill="rgb(220,99,33)" rx="2" ry="2" />
<text  x="227.62" y="1039.5" ></text>
</g>
<g >
<title>vfs_write (293 samples, 1.77%)</title><rect x="517.3" y="1109" width="20.9" height="15.0" fill="rgb(236,143,25)" rx="2" ry="2" />
<text  x="520.33" y="1119.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.02%)</title><rect x="997.8" y="677" width="0.3" height="15.0" fill="rgb(218,18,46)" rx="2" ry="2" />
<text  x="1000.85" y="687.5" ></text>
</g>
<g >
<title>nf_nat_manip_pkt (2 samples, 0.01%)</title><rect x="916.3" y="757" width="0.1" height="15.0" fill="rgb(235,150,34)" rx="2" ry="2" />
<text  x="919.28" y="767.5" ></text>
</g>
<g >
<title>Envoy::ConnectionPool::ConnPoolImplBase::newStreamImpl(Envoy::ConnectionPool::AttachContext&amp;) (140 samples, 0.84%)</title><rect x="836.6" y="965" width="9.9" height="15.0" fill="rgb(231,202,30)" rx="2" ry="2" />
<text  x="839.56" y="975.5" ></text>
</g>
<g >
<title>__fdget (3 samples, 0.02%)</title><rect x="490.2" y="997" width="0.2" height="15.0" fill="rgb(250,25,25)" rx="2" ry="2" />
<text  x="493.24" y="1007.5" ></text>
</g>
<g >
<title>do_syscall_64 (42 samples, 0.25%)</title><rect x="116.5" y="1253" width="2.9" height="15.0" fill="rgb(215,138,28)" rx="2" ry="2" />
<text  x="119.46" y="1263.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::decodeData(Envoy::Buffer::Instance&amp;, bool) (853 samples, 5.14%)</title><rect x="740.4" y="1013" width="60.7" height="15.0" fill="rgb(206,151,13)" rx="2" ry="2" />
<text  x="743.42" y="1023.5" >Envoy:..</text>
</g>
<g >
<title>Envoy::Event::FileEventImpl::activate(unsigned int) (9 samples, 0.05%)</title><rect x="978.2" y="901" width="0.6" height="15.0" fill="rgb(212,116,23)" rx="2" ry="2" />
<text  x="981.15" y="911.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onWriteReady() (235 samples, 1.42%)</title><rect x="1151.6" y="1237" width="16.7" height="15.0" fill="rgb(243,115,30)" rx="2" ry="2" />
<text  x="1154.60" y="1247.5" ></text>
</g>
<g >
<title>std::__1::__unique_if&lt;Envoy::Buffer::WatermarkBuffer&gt;::__unique_single std::__1::make_unique&lt;Envoy::Buffer::WatermarkBuffer, std::__1::function&lt;void ()&gt;&amp;, std::__1::function&lt;void ()&gt;&amp;, std::__1::function&lt;void ()&gt;&amp;&gt;(std::__1::function&lt;void ()&gt;&amp;, std::__1::function&lt;void ()&gt;&amp;, std::__1::function&lt;void ()&gt;&amp;) (4 samples, 0.02%)</title><rect x="871.3" y="981" width="0.3" height="15.0" fill="rgb(228,16,19)" rx="2" ry="2" />
<text  x="874.34" y="991.5" ></text>
</g>
<g >
<title>absl::Status::UnrefNonInlined(unsigned long) (2 samples, 0.01%)</title><rect x="787.0" y="725" width="0.1" height="15.0" fill="rgb(244,184,42)" rx="2" ry="2" />
<text  x="790.00" y="735.5" ></text>
</g>
<g >
<title>ip_finish_output2 (2 samples, 0.01%)</title><rect x="657.1" y="997" width="0.2" height="15.0" fill="rgb(206,128,4)" rx="2" ry="2" />
<text  x="660.14" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Upstreams::Http::Generic::GenericGenericConnPoolFactory::createGenericConnPool(Envoy::Upstream::ThreadLocalCluster&amp;, bool, Envoy::Router::RouteEntry const&amp;, absl::optional&lt;Envoy::Http::Protocol&gt;, Envoy::Upstream::LoadBalancerContext*) const (2 samples, 0.01%)</title><rect x="1085.9" y="997" width="0.1" height="15.0" fill="rgb(225,178,51)" rx="2" ry="2" />
<text  x="1088.89" y="1007.5" ></text>
</g>
<g >
<title>__libc_cfree (8 samples, 0.05%)</title><rect x="707.9" y="1221" width="0.6" height="15.0" fill="rgb(239,227,51)" rx="2" ry="2" />
<text  x="710.92" y="1231.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (321 samples, 1.93%)</title><rect x="36.9" y="1061" width="22.8" height="15.0" fill="rgb(229,75,31)" rx="2" ry="2" />
<text  x="39.88" y="1071.5" >s..</text>
</g>
<g >
<title>absl::strings_internal::ResizeUninitializedTraits&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, void&gt;::Resize(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, unsigned long) (2 samples, 0.01%)</title><rect x="834.4" y="949" width="0.1" height="15.0" fill="rgb(248,168,36)" rx="2" ry="2" />
<text  x="837.36" y="959.5" ></text>
</g>
<g >
<title>do_syscall_64 (169 samples, 1.02%)</title><rect x="645.1" y="1269" width="12.0" height="15.0" fill="rgb(226,138,29)" rx="2" ry="2" />
<text  x="648.05" y="1279.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool) (258 samples, 1.55%)</title><rect x="717.8" y="1013" width="18.3" height="15.0" fill="rgb(254,129,21)" rx="2" ry="2" />
<text  x="720.80" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestHeaderMapImpl::setByReferenceKey(absl::string_view, absl::string_view) (17 samples, 0.10%)</title><rect x="1084.5" y="981" width="1.2" height="15.0" fill="rgb(211,53,39)" rx="2" ry="2" />
<text  x="1087.54" y="991.5" ></text>
</g>
<g >
<title>runtime.findrunnable (3 samples, 0.02%)</title><rect x="250.4" y="1269" width="0.2" height="15.0" fill="rgb(239,14,44)" rx="2" ry="2" />
<text  x="253.37" y="1279.5" ></text>
</g>
<g >
<title>tcp_push (199 samples, 1.20%)</title><rect x="1173.0" y="965" width="14.2" height="15.0" fill="rgb(224,76,1)" rx="2" ry="2" />
<text  x="1176.00" y="975.5" ></text>
</g>
<g >
<title>veth_xmit (6 samples, 0.04%)</title><rect x="1165.7" y="741" width="0.4" height="15.0" fill="rgb(232,218,18)" rx="2" ry="2" />
<text  x="1168.68" y="751.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (3 samples, 0.02%)</title><rect x="1155.4" y="789" width="0.2" height="15.0" fill="rgb(225,209,18)" rx="2" ry="2" />
<text  x="1158.37" y="799.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::StaticLookupTable&lt;Envoy::Http::ResponseHeaderMap&gt;::lookup(Envoy::Http::HeaderMapImpl&amp;, absl::string_view) (2 samples, 0.01%)</title><rect x="971.9" y="1013" width="0.1" height="15.0" fill="rgb(212,172,5)" rx="2" ry="2" />
<text  x="974.89" y="1023.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (105 samples, 0.63%)</title><rect x="924.6" y="597" width="7.5" height="15.0" fill="rgb(231,70,27)" rx="2" ry="2" />
<text  x="927.60" y="607.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::ValueFromMessage(google::protobuf::Value const*, google::protobuf::Arena*) (2 samples, 0.01%)</title><rect x="1025.0" y="773" width="0.2" height="15.0" fill="rgb(238,28,36)" rx="2" ry="2" />
<text  x="1028.01" y="783.5" ></text>
</g>
<g >
<title>mutex_lock (5 samples, 0.03%)</title><rect x="36.3" y="1045" width="0.4" height="15.0" fill="rgb(225,178,31)" rx="2" ry="2" />
<text  x="39.31" y="1055.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.01%)</title><rect x="490.0" y="997" width="0.2" height="15.0" fill="rgb(223,182,36)" rx="2" ry="2" />
<text  x="493.02" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::encodeFormattedHeader(absl::string_view, absl::string_view, Envoy::OptRef&lt;Envoy::Http::HeaderKeyFormatter const&gt;) (14 samples, 0.08%)</title><rect x="722.8" y="869" width="1.0" height="15.0" fill="rgb(246,43,46)" rx="2" ry="2" />
<text  x="725.78" y="879.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (134 samples, 0.81%)</title><rect x="1156.1" y="789" width="9.5" height="15.0" fill="rgb(218,163,26)" rx="2" ry="2" />
<text  x="1159.08" y="799.5" ></text>
</g>
<g >
<title>do_nanosleep (42 samples, 0.25%)</title><rect x="485.4" y="949" width="3.0" height="15.0" fill="rgb(207,102,5)" rx="2" ry="2" />
<text  x="488.40" y="959.5" ></text>
</g>
<g >
<title>ip_output (2 samples, 0.01%)</title><rect x="1156.3" y="549" width="0.1" height="15.0" fill="rgb(232,95,20)" rx="2" ry="2" />
<text  x="1159.29" y="559.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::insertByKey(Envoy::Http::HeaderString&amp;&amp;, Envoy::Http::HeaderString&amp;&amp;) (2 samples, 0.01%)</title><rect x="804.1" y="1061" width="0.1" height="15.0" fill="rgb(220,26,13)" rx="2" ry="2" />
<text  x="807.06" y="1071.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.01%)</title><rect x="484.7" y="773" width="0.1" height="15.0" fill="rgb(240,148,2)" rx="2" ry="2" />
<text  x="487.69" y="783.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::insertByKey(Envoy::Http::HeaderString&amp;&amp;, Envoy::Http::HeaderString&amp;&amp;) (5 samples, 0.03%)</title><rect x="814.8" y="1061" width="0.4" height="15.0" fill="rgb(219,47,12)" rx="2" ry="2" />
<text  x="817.80" y="1071.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ResponseHeaderMapImpl::setStatus(unsigned long) (2 samples, 0.01%)</title><rect x="737.5" y="1045" width="0.1" height="15.0" fill="rgb(247,32,4)" rx="2" ry="2" />
<text  x="740.50" y="1055.5" ></text>
</g>
<g >
<title>security_file_permission (4 samples, 0.02%)</title><rect x="622.2" y="1141" width="0.3" height="15.0" fill="rgb(231,51,22)" rx="2" ry="2" />
<text  x="625.22" y="1151.5" ></text>
</g>
<g >
<title>skb_release_data (3 samples, 0.02%)</title><rect x="1175.4" y="453" width="0.2" height="15.0" fill="rgb(226,166,0)" rx="2" ry="2" />
<text  x="1178.42" y="463.5" ></text>
</g>
<g >
<title>proxy_wasm::ContextBase::ContextBase(proxy_wasm::WasmBase*, unsigned int, std::__1::shared_ptr&lt;proxy_wasm::PluginHandleBase&gt;) (5 samples, 0.03%)</title><rect x="830.2" y="917" width="0.3" height="15.0" fill="rgb(253,201,23)" rx="2" ry="2" />
<text  x="833.16" y="927.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (4 samples, 0.02%)</title><rect x="645.6" y="1173" width="0.3" height="15.0" fill="rgb(252,101,9)" rx="2" ry="2" />
<text  x="648.62" y="1183.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.02%)</title><rect x="657.4" y="1269" width="0.2" height="15.0" fill="rgb(212,4,48)" rx="2" ry="2" />
<text  x="660.35" y="1279.5" ></text>
</g>
<g >
<title>tcp_update_skb_after_send (2 samples, 0.01%)</title><rect x="590.2" y="949" width="0.1" height="15.0" fill="rgb(217,174,31)" rx="2" ry="2" />
<text  x="593.15" y="959.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (202 samples, 1.22%)</title><rect x="1153.9" y="1157" width="14.4" height="15.0" fill="rgb(224,142,39)" rx="2" ry="2" />
<text  x="1156.95" y="1167.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::Slice(unsigned long, std::__1::shared_ptr&lt;Envoy::Buffer::BufferMemoryAccount&gt;, absl::optional&lt;Envoy::Buffer::Slice::FreeListReference&gt;) (9 samples, 0.05%)</title><rect x="1136.9" y="1157" width="0.6" height="15.0" fill="rgb(245,82,31)" rx="2" ry="2" />
<text  x="1139.88" y="1167.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::encodeData(Envoy::Http::ActiveStreamEncoderFilter*, Envoy::Buffer::Instance&amp;, bool, Envoy::Http::FilterManager::FilterIterationStartState) (29 samples, 0.17%)</title><rect x="1052.3" y="1013" width="2.0" height="15.0" fill="rgb(234,108,32)" rx="2" ry="2" />
<text  x="1055.25" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getProperty(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (15 samples, 0.09%)</title><rect x="763.5" y="821" width="1.1" height="15.0" fill="rgb(205,188,50)" rx="2" ry="2" />
<text  x="766.53" y="831.5" ></text>
</g>
<g >
<title>finish_task_switch (148 samples, 0.89%)</title><rect x="102.1" y="1157" width="10.5" height="15.0" fill="rgb(250,202,26)" rx="2" ry="2" />
<text  x="105.09" y="1167.5" ></text>
</g>
<g >
<title>do_syscall_64 (18 samples, 0.11%)</title><rect x="997.0" y="773" width="1.3" height="15.0" fill="rgb(245,216,5)" rx="2" ry="2" />
<text  x="1000.00" y="783.5" ></text>
</g>
<g >
<title>Envoy::Runtime::SnapshotImpl::getInteger(absl::string_view, unsigned long) const (2 samples, 0.01%)</title><rect x="994.6" y="965" width="0.1" height="15.0" fill="rgb(207,135,0)" rx="2" ry="2" />
<text  x="997.58" y="975.5" ></text>
</g>
<g >
<title>runtime.epollwait (2 samples, 0.01%)</title><rect x="114.0" y="1253" width="0.2" height="15.0" fill="rgb(230,109,0)" rx="2" ry="2" />
<text  x="117.04" y="1263.5" ></text>
</g>
<g >
<title>time.appendInt (4 samples, 0.02%)</title><rect x="230.4" y="1221" width="0.3" height="15.0" fill="rgb(227,117,18)" rx="2" ry="2" />
<text  x="233.38" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::~UpstreamRequest() (19 samples, 0.11%)</title><rect x="798.7" y="949" width="1.4" height="15.0" fill="rgb(215,44,21)" rx="2" ry="2" />
<text  x="801.73" y="959.5" ></text>
</g>
<g >
<title>runtime.futex (17 samples, 0.10%)</title><rect x="134.1" y="1077" width="1.2" height="15.0" fill="rgb(233,151,11)" rx="2" ry="2" />
<text  x="137.09" y="1087.5" ></text>
</g>
<g >
<title>proxy_wasm::ContextBase::onCreate() (37 samples, 0.22%)</title><rect x="1106.3" y="997" width="2.6" height="15.0" fill="rgb(226,82,28)" rx="2" ry="2" />
<text  x="1109.30" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::StaticLookupTable&lt;Envoy::Http::RequestHeaderMap&gt;::lookup(Envoy::Http::HeaderMapImpl&amp;, absl::string_view) (4 samples, 0.02%)</title><rect x="779.3" y="757" width="0.3" height="15.0" fill="rgb(217,3,11)" rx="2" ry="2" />
<text  x="782.31" y="767.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::hasDataWithName(absl::string_view) const (5 samples, 0.03%)</title><rect x="847.5" y="965" width="0.4" height="15.0" fill="rgb(228,92,11)" rx="2" ry="2" />
<text  x="850.51" y="975.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (176 samples, 1.06%)</title><rect x="905.0" y="981" width="12.5" height="15.0" fill="rgb(234,3,37)" rx="2" ry="2" />
<text  x="907.97" y="991.5" ></text>
</g>
<g >
<title>ip_finish_output (367 samples, 2.21%)</title><rect x="562.1" y="869" width="26.1" height="15.0" fill="rgb(235,213,18)" rx="2" ry="2" />
<text  x="565.06" y="879.5" >i..</text>
</g>
<g >
<title>Envoy::ConnectionPool::ConnPoolImplBase::tryCreateNewConnection(float) (3 samples, 0.02%)</title><rect x="1096.6" y="949" width="0.2" height="15.0" fill="rgb(227,12,31)" rx="2" ry="2" />
<text  x="1099.56" y="959.5" ></text>
</g>
<g >
<title>Envoy::Thread::ThreadImplPosix::ThreadImplPosix(std::__1::function&lt;void ()&gt;, absl::optional&lt;Envoy::Thread::Options&gt; const&amp;)::{lambda(void*)#1}::__invoke(void*) (3,549 samples, 21.39%)</title><rect x="685.4" y="1349" width="252.4" height="15.0" fill="rgb(206,104,19)" rx="2" ry="2" />
<text  x="688.37" y="1359.5" >Envoy::Thread::ThreadImplPosix::T..</text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::RenderField(google::protobuf::Field const*, google::protobuf::stringpiece_internal::StringPiece, google::protobuf::util::converter::ObjectWriter*) const (3 samples, 0.02%)</title><rect x="1004.4" y="661" width="0.2" height="15.0" fill="rgb(220,4,46)" rx="2" ry="2" />
<text  x="1007.39" y="671.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="842.6" y="837" width="0.1" height="15.0" fill="rgb(230,170,19)" rx="2" ry="2" />
<text  x="845.61" y="847.5" ></text>
</g>
<g >
<title>generic_perform_write (104 samples, 0.63%)</title><rect x="238.8" y="1109" width="7.4" height="15.0" fill="rgb(243,83,22)" rx="2" ry="2" />
<text  x="241.85" y="1119.5" ></text>
</g>
<g >
<title>ext4_get_block (2 samples, 0.01%)</title><rect x="240.3" y="1061" width="0.2" height="15.0" fill="rgb(229,78,13)" rx="2" ry="2" />
<text  x="243.34" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::encodeHeadersBase(Envoy::Http::RequestOrResponseHeaderMap const&amp;, absl::optional&lt;unsigned long&gt;, bool, bool) (36 samples, 0.22%)</title><rect x="722.1" y="933" width="2.5" height="15.0" fill="rgb(210,220,20)" rx="2" ry="2" />
<text  x="725.07" y="943.5" ></text>
</g>
<g >
<title>__lock_text_start (333 samples, 2.01%)</title><rect x="140.9" y="1061" width="23.6" height="15.0" fill="rgb(236,194,32)" rx="2" ry="2" />
<text  x="143.85" y="1071.5" >_..</text>
</g>
<g >
<title>__fget (12 samples, 0.07%)</title><rect x="236.1" y="1157" width="0.8" height="15.0" fill="rgb(238,192,5)" rx="2" ry="2" />
<text  x="239.07" y="1167.5" ></text>
</g>
<g >
<title>__fget_light (8 samples, 0.05%)</title><rect x="139.2" y="1141" width="0.6" height="15.0" fill="rgb(209,96,4)" rx="2" ry="2" />
<text  x="142.21" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Logger::Registry::getLog(Envoy::Logger::Id) (2 samples, 0.01%)</title><rect x="794.2" y="949" width="0.2" height="15.0" fill="rgb(223,54,29)" rx="2" ry="2" />
<text  x="797.25" y="959.5" ></text>
</g>
<g >
<title>sock_zerocopy_put (2 samples, 0.01%)</title><rect x="556.7" y="1013" width="0.2" height="15.0" fill="rgb(215,52,40)" rx="2" ry="2" />
<text  x="559.73" y="1023.5" ></text>
</g>
<g >
<title>__ip_local_out (14 samples, 0.08%)</title><rect x="1155.0" y="853" width="1.0" height="15.0" fill="rgb(249,27,52)" rx="2" ry="2" />
<text  x="1158.01" y="863.5" ></text>
</g>
<g >
<title>ip_finish_output (135 samples, 0.81%)</title><rect x="924.2" y="837" width="9.6" height="15.0" fill="rgb(221,46,9)" rx="2" ry="2" />
<text  x="927.25" y="847.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Span::setTag(absl::string_view, absl::string_view) (20 samples, 0.12%)</title><rect x="756.4" y="901" width="1.4" height="15.0" fill="rgb(238,25,45)" rx="2" ry="2" />
<text  x="759.42" y="911.5" ></text>
</g>
<g >
<title>finish_task_switch (14 samples, 0.08%)</title><rect x="617.7" y="1125" width="1.0" height="15.0" fill="rgb(241,54,54)" rx="2" ry="2" />
<text  x="620.67" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Http::AsyncStreamImpl::sendHeaders(Envoy::Http::RequestHeaderMap&amp;, bool) (2 samples, 0.01%)</title><rect x="751.9" y="853" width="0.1" height="15.0" fill="rgb(222,201,19)" rx="2" ry="2" />
<text  x="754.86" y="863.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (159 samples, 0.96%)</title><rect x="1174.1" y="789" width="11.3" height="15.0" fill="rgb(242,90,51)" rx="2" ry="2" />
<text  x="1177.07" y="799.5" ></text>
</g>
<g >
<title>sock_read_iter (2 samples, 0.01%)</title><rect x="512.0" y="1045" width="0.1" height="15.0" fill="rgb(251,127,48)" rx="2" ry="2" />
<text  x="515.00" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::traceRequest() (48 samples, 0.29%)</title><rect x="820.3" y="1029" width="3.5" height="15.0" fill="rgb(211,76,13)" rx="2" ry="2" />
<text  x="823.35" y="1039.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (4 samples, 0.02%)</title><rect x="896.5" y="949" width="0.3" height="15.0" fill="rgb(225,202,3)" rx="2" ry="2" />
<text  x="899.51" y="959.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Network::ConnectionImpl::connectionInfoProvider() const (2 samples, 0.01%)</title><rect x="1087.4" y="885" width="0.1" height="15.0" fill="rgb(231,121,14)" rx="2" ry="2" />
<text  x="1090.38" y="895.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::onDestroy() (4 samples, 0.02%)</title><rect x="1047.1" y="965" width="0.2" height="15.0" fill="rgb(229,100,53)" rx="2" ry="2" />
<text  x="1050.06" y="975.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (7 samples, 0.04%)</title><rect x="238.0" y="1029" width="0.5" height="15.0" fill="rgb(247,147,1)" rx="2" ry="2" />
<text  x="240.99" y="1039.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_26, std::__1::allocator&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_26&gt;, proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;::operator()(proxy_wasm::ContextBase*&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;) (2 samples, 0.01%)</title><rect x="1122.6" y="997" width="0.1" height="15.0" fill="rgb(236,96,1)" rx="2" ry="2" />
<text  x="1125.58" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Http::StreamFilterBase::onStreamComplete() (2 samples, 0.01%)</title><rect x="1046.9" y="965" width="0.2" height="15.0" fill="rgb(233,54,16)" rx="2" ry="2" />
<text  x="1049.92" y="975.5" ></text>
</g>
<g >
<title>do_syscall_64 (82 samples, 0.49%)</title><rect x="672.8" y="1125" width="5.8" height="15.0" fill="rgb(236,206,47)" rx="2" ry="2" />
<text  x="675.79" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="986.9" y="885" width="0.2" height="15.0" fill="rgb(241,173,49)" rx="2" ry="2" />
<text  x="989.90" y="895.5" ></text>
</g>
<g >
<title>do_futex (2 samples, 0.01%)</title><rect x="131.4" y="1013" width="0.1" height="15.0" fill="rgb(211,145,52)" rx="2" ry="2" />
<text  x="134.39" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::~Slice() (2 samples, 0.01%)</title><rect x="1137.5" y="1157" width="0.2" height="15.0" fill="rgb(215,94,19)" rx="2" ry="2" />
<text  x="1140.52" y="1167.5" ></text>
</g>
<g >
<title>nf_ct_get_tuple (3 samples, 0.02%)</title><rect x="561.6" y="805" width="0.2" height="15.0" fill="rgb(224,117,13)" rx="2" ry="2" />
<text  x="564.56" y="815.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getProperty(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (90 samples, 0.54%)</title><rect x="1023.1" y="805" width="6.4" height="15.0" fill="rgb(211,72,14)" rx="2" ry="2" />
<text  x="1026.09" y="815.5" ></text>
</g>
<g >
<title>try_to_wake_up (100 samples, 0.60%)</title><rect x="499.5" y="997" width="7.1" height="15.0" fill="rgb(251,134,18)" rx="2" ry="2" />
<text  x="502.48" y="1007.5" ></text>
</g>
<g >
<title>absl::Status::Status(absl::StatusCode, absl::string_view) (2 samples, 0.01%)</title><rect x="787.2" y="709" width="0.2" height="15.0" fill="rgb(211,142,19)" rx="2" ry="2" />
<text  x="790.21" y="719.5" ></text>
</g>
<g >
<title>__sched_text_start (107 samples, 0.64%)</title><rect x="694.1" y="1157" width="7.6" height="15.0" fill="rgb(236,159,11)" rx="2" ry="2" />
<text  x="697.12" y="1167.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Extensions::NetworkFilters::HttpConnectionManager::HttpConnectionManagerConfig::xffNumTrustedHops() const (2 samples, 0.01%)</title><rect x="825.8" y="1013" width="0.1" height="15.0" fill="rgb(227,93,24)" rx="2" ry="2" />
<text  x="828.75" y="1023.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::RenderStructValue(google::protobuf::util::converter::ProtoStreamObjectSource const*, google::protobuf::Type const&amp;, google::protobuf::stringpiece_internal::StringPiece, google::protobuf::util::converter::ObjectWriter*) (4 samples, 0.02%)</title><rect x="751.4" y="725" width="0.3" height="15.0" fill="rgb(214,126,26)" rx="2" ry="2" />
<text  x="754.37" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.07%)</title><rect x="212.6" y="1173" width="0.9" height="15.0" fill="rgb(247,74,6)" rx="2" ry="2" />
<text  x="215.60" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Registry::FactoryRegistry&lt;Envoy::Router::GenericConnPoolFactory&gt;::getFactory(absl::string_view) (3 samples, 0.02%)</title><rect x="1101.2" y="965" width="0.3" height="15.0" fill="rgb(228,214,41)" rx="2" ry="2" />
<text  x="1104.25" y="975.5" ></text>
</g>
<g >
<title>release_sock (2 samples, 0.01%)</title><rect x="1144.6" y="981" width="0.1" height="15.0" fill="rgb(209,198,22)" rx="2" ry="2" />
<text  x="1147.56" y="991.5" ></text>
</g>
<g >
<title>absl::hash_internal::MixingHashState::combine_contiguous(absl::hash_internal::MixingHashState, unsigned char const*, unsigned long) (2 samples, 0.01%)</title><rect x="729.7" y="805" width="0.1" height="15.0" fill="rgb(218,115,27)" rx="2" ry="2" />
<text  x="732.68" y="815.5" ></text>
</g>
<g >
<title>std::__1::__shared_weak_count::lock() (2 samples, 0.01%)</title><rect x="819.8" y="965" width="0.1" height="15.0" fill="rgb(252,27,2)" rx="2" ry="2" />
<text  x="822.78" y="975.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Extensions::Common::Wasm::Context::encodeHeaders(Envoy::Http::ResponseHeaderMap&amp;, bool) (2 samples, 0.01%)</title><rect x="989.4" y="981" width="0.1" height="15.0" fill="rgb(205,21,53)" rx="2" ry="2" />
<text  x="992.39" y="991.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::~ActiveStream() (64 samples, 0.39%)</title><rect x="959.8" y="1253" width="4.6" height="15.0" fill="rgb(231,5,49)" rx="2" ry="2" />
<text  x="962.80" y="1263.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.01%)</title><rect x="1145.8" y="645" width="0.2" height="15.0" fill="rgb(242,4,37)" rx="2" ry="2" />
<text  x="1148.84" y="655.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ResponseHeaderMapImpl::getStatusValue() const (2 samples, 0.01%)</title><rect x="990.2" y="997" width="0.2" height="15.0" fill="rgb(242,45,39)" rx="2" ry="2" />
<text  x="993.24" y="1007.5" ></text>
</g>
<g >
<title>mutex_lock (2 samples, 0.01%)</title><rect x="491.4" y="949" width="0.1" height="15.0" fill="rgb(215,143,1)" rx="2" ry="2" />
<text  x="494.37" y="959.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerUtility::mutateRequestHeaders(Envoy::Http::RequestHeaderMap&amp;, Envoy::Network::Connection&amp;, Envoy::Http::ConnectionManagerConfig&amp;, Envoy::Router::Config const&amp;, Envoy::LocalInfo::LocalInfo const&amp;) (31 samples, 0.19%)</title><rect x="824.4" y="1029" width="2.2" height="15.0" fill="rgb(213,226,19)" rx="2" ry="2" />
<text  x="827.40" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Upstream::ClusterManagerImpl::getThreadLocalCluster(absl::string_view) (2 samples, 0.01%)</title><rect x="854.6" y="997" width="0.2" height="15.0" fill="rgb(237,23,16)" rx="2" ry="2" />
<text  x="857.62" y="1007.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.01%)</title><rect x="875.7" y="869" width="0.2" height="15.0" fill="rgb(214,180,40)" rx="2" ry="2" />
<text  x="878.75" y="879.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (3 samples, 0.02%)</title><rect x="894.4" y="1013" width="0.2" height="15.0" fill="rgb(205,152,9)" rx="2" ry="2" />
<text  x="897.38" y="1023.5" ></text>
</g>
<g >
<title>ksys_read (2 samples, 0.01%)</title><rect x="656.3" y="1237" width="0.1" height="15.0" fill="rgb(216,104,10)" rx="2" ry="2" />
<text  x="659.29" y="1247.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="623.4" y="901" width="0.2" height="15.0" fill="rgb(247,58,4)" rx="2" ry="2" />
<text  x="626.43" y="911.5" ></text>
</g>
<g >
<title>ksys_read (77 samples, 0.46%)</title><rect x="511.2" y="1125" width="5.5" height="15.0" fill="rgb(222,83,39)" rx="2" ry="2" />
<text  x="514.21" y="1135.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::get_header_map_value(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (15 samples, 0.09%)</title><rect x="1029.9" y="821" width="1.1" height="15.0" fill="rgb(211,197,3)" rx="2" ry="2" />
<text  x="1032.92" y="831.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Router::Filter::onUpstreamData(Envoy::Buffer::Instance&amp;, Envoy::Router::UpstreamRequest&amp;, bool) (45 samples, 0.27%)</title><rect x="1048.3" y="997" width="3.2" height="15.0" fill="rgb(235,57,31)" rx="2" ry="2" />
<text  x="1051.27" y="1007.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (35 samples, 0.21%)</title><rect x="626.2" y="1093" width="2.5" height="15.0" fill="rgb(207,46,27)" rx="2" ry="2" />
<text  x="629.21" y="1103.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word)&gt;*)::$_15, std::__1::allocator&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word)&gt;*)::$_15&gt;, proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word)&gt;::operator()(proxy_wasm::ContextBase*&amp;&amp;, proxy_wasm::Word&amp;&amp;) (3 samples, 0.02%)</title><rect x="795.5" y="917" width="0.2" height="15.0" fill="rgb(250,199,39)" rx="2" ry="2" />
<text  x="798.46" y="927.5" ></text>
</g>
<g >
<title>ep_send_events_proc (12 samples, 0.07%)</title><rect x="197.1" y="1109" width="0.9" height="15.0" fill="rgb(240,27,31)" rx="2" ry="2" />
<text  x="200.10" y="1119.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (5 samples, 0.03%)</title><rect x="1154.1" y="949" width="0.3" height="15.0" fill="rgb(221,229,4)" rx="2" ry="2" />
<text  x="1157.09" y="959.5" ></text>
</g>
<g >
<title>event_add_nolock_ (31 samples, 0.19%)</title><rect x="877.0" y="1029" width="2.2" height="15.0" fill="rgb(236,59,12)" rx="2" ry="2" />
<text  x="880.03" y="1039.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.02%)</title><rect x="598.3" y="1221" width="0.2" height="15.0" fill="rgb(218,89,53)" rx="2" ry="2" />
<text  x="601.26" y="1231.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (10 samples, 0.06%)</title><rect x="950.6" y="1173" width="0.7" height="15.0" fill="rgb(219,27,52)" rx="2" ry="2" />
<text  x="953.56" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getHeaderMapValue(proxy_wasm::WasmHeaderMapType, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;*) (4 samples, 0.02%)</title><rect x="1110.7" y="917" width="0.3" height="15.0" fill="rgb(212,90,42)" rx="2" ry="2" />
<text  x="1113.71" y="927.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.01%)</title><rect x="644.4" y="1237" width="0.2" height="15.0" fill="rgb(251,10,9)" rx="2" ry="2" />
<text  x="647.41" y="1247.5" ></text>
</g>
<g >
<title>tcp_current_mss (4 samples, 0.02%)</title><rect x="590.8" y="965" width="0.3" height="15.0" fill="rgb(238,158,13)" rx="2" ry="2" />
<text  x="593.79" y="975.5" ></text>
</g>
<g >
<title>[unknown] (1,451 samples, 8.74%)</title><rect x="10.1" y="1365" width="103.2" height="15.0" fill="rgb(245,94,7)" rx="2" ry="2" />
<text  x="13.07" y="1375.5" >[unknown]</text>
</g>
<g >
<title>jbd2_journal_stop (12 samples, 0.07%)</title><rect x="241.8" y="1061" width="0.8" height="15.0" fill="rgb(220,208,23)" rx="2" ry="2" />
<text  x="244.76" y="1071.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::get(Envoy::Http::LowerCaseString const&amp;) const (3 samples, 0.02%)</title><rect x="826.4" y="1013" width="0.2" height="15.0" fill="rgb(248,134,23)" rx="2" ry="2" />
<text  x="829.39" y="1023.5" ></text>
</g>
<g >
<title>std::__1::__shared_ptr_emplace&lt;Envoy::StreamInfo::FilterStateImpl, std::__1::allocator&lt;Envoy::StreamInfo::FilterStateImpl&gt; &gt;::__shared_ptr_emplace&lt;std::__1::shared_ptr&lt;Envoy::StreamInfo::FilterState&gt;, Envoy::StreamInfo::FilterState::LifeSpan&gt;(std::__1::allocator&lt;Envoy::StreamInfo::FilterStateImpl&gt;, std::__1::shared_ptr&lt;Envoy::StreamInfo::FilterState&gt;&amp;&amp;, Envoy::StreamInfo::FilterState::LifeSpan&amp;&amp;) (4 samples, 0.02%)</title><rect x="843.7" y="885" width="0.3" height="15.0" fill="rgb(251,60,1)" rx="2" ry="2" />
<text  x="846.67" y="895.5" ></text>
</g>
<g >
<title>tcp_write_xmit (183 samples, 1.10%)</title><rect x="1154.8" y="933" width="13.0" height="15.0" fill="rgb(246,75,4)" rx="2" ry="2" />
<text  x="1157.80" y="943.5" ></text>
</g>
<g >
<title>__lock_text_start (12 samples, 0.07%)</title><rect x="563.8" y="501" width="0.9" height="15.0" fill="rgb(212,176,30)" rx="2" ry="2" />
<text  x="566.84" y="511.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.01%)</title><rect x="114.0" y="1093" width="0.2" height="15.0" fill="rgb(233,192,46)" rx="2" ry="2" />
<text  x="117.04" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (4,818 samples, 29.04%)</title><rect x="299.4" y="1269" width="342.6" height="15.0" fill="rgb(237,55,52)" rx="2" ry="2" />
<text  x="302.36" y="1279.5" >[unknown]</text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::RenderStruct(google::protobuf::util::converter::ProtoStreamObjectSource const*, google::protobuf::Type const&amp;, google::protobuf::stringpiece_internal::StringPiece, google::protobuf::util::converter::ObjectWriter*) (7 samples, 0.04%)</title><rect x="1004.2" y="773" width="0.5" height="15.0" fill="rgb(226,90,41)" rx="2" ry="2" />
<text  x="1007.18" y="783.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (8 samples, 0.05%)</title><rect x="560.3" y="821" width="0.6" height="15.0" fill="rgb(252,144,17)" rx="2" ry="2" />
<text  x="563.28" y="831.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Extensions::Common::Wasm::Context::decodeData(Envoy::Buffer::Instance&amp;, bool) (7 samples, 0.04%)</title><rect x="1119.2" y="1029" width="0.5" height="15.0" fill="rgb(243,183,26)" rx="2" ry="2" />
<text  x="1122.17" y="1039.5" ></text>
</g>
<g >
<title>aa_label_sk_perm.part.0 (3 samples, 0.02%)</title><rect x="917.8" y="965" width="0.2" height="15.0" fill="rgb(205,140,20)" rx="2" ry="2" />
<text  x="920.77" y="975.5" ></text>
</g>
<g >
<title>std::__1::__shared_ptr_emplace&lt;Envoy::Extensions::Common::Wasm::Context, std::__1::allocator&lt;Envoy::Extensions::Common::Wasm::Context&gt; &gt;::__shared_ptr_emplace&lt;Envoy::Extensions::Common::Wasm::Wasm*&amp;, unsigned int, std::__1::shared_ptr&lt;Envoy::Extensions::Common::Wasm::PluginHandle&gt;&amp;&gt;(std::__1::allocator&lt;Envoy::Extensions::Common::Wasm::Context&gt;, Envoy::Extensions::Common::Wasm::Wasm*&amp;, unsigned int&amp;&amp;, std::__1::shared_ptr&lt;Envoy::Extensions::Common::Wasm::PluginHandle&gt;&amp;) (8 samples, 0.05%)</title><rect x="829.9" y="949" width="0.6" height="15.0" fill="rgb(241,183,26)" rx="2" ry="2" />
<text  x="832.95" y="959.5" ></text>
</g>
<g >
<title>google::protobuf::Symbol::parent_key() const (2 samples, 0.01%)</title><rect x="768.8" y="741" width="0.1" height="15.0" fill="rgb(211,122,51)" rx="2" ry="2" />
<text  x="771.79" y="751.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.02%)</title><rect x="645.1" y="1205" width="0.3" height="15.0" fill="rgb(248,47,42)" rx="2" ry="2" />
<text  x="648.12" y="1215.5" ></text>
</g>
<g >
<title>tcp_recvmsg (41 samples, 0.25%)</title><rect x="512.4" y="1013" width="2.9" height="15.0" fill="rgb(218,45,5)" rx="2" ry="2" />
<text  x="515.35" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::StaticLookupTable&lt;Envoy::Http::RequestHeaderMap&gt;::lookup(Envoy::Http::HeaderMapImpl&amp;, absl::string_view) (4 samples, 0.02%)</title><rect x="814.8" y="1029" width="0.3" height="15.0" fill="rgb(237,132,46)" rx="2" ry="2" />
<text  x="817.80" y="1039.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (3 samples, 0.02%)</title><rect x="1172.6" y="933" width="0.3" height="15.0" fill="rgb(238,68,35)" rx="2" ry="2" />
<text  x="1175.65" y="943.5" ></text>
</g>
<g >
<title>absl::hash_internal::Wyhash(void const*, unsigned long, unsigned long, unsigned long const*) (2 samples, 0.01%)</title><rect x="827.3" y="981" width="0.2" height="15.0" fill="rgb(228,44,22)" rx="2" ry="2" />
<text  x="830.32" y="991.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (7 samples, 0.04%)</title><rect x="999.6" y="741" width="0.5" height="15.0" fill="rgb(215,141,24)" rx="2" ry="2" />
<text  x="1002.56" y="751.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="893.0" y="1141" width="0.2" height="15.0" fill="rgb(238,217,11)" rx="2" ry="2" />
<text  x="896.03" y="1151.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.18%)</title><rect x="173.6" y="1157" width="2.1" height="15.0" fill="rgb(243,125,19)" rx="2" ry="2" />
<text  x="176.56" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="783.7" y="853" width="0.2" height="15.0" fill="rgb(239,1,48)" rx="2" ry="2" />
<text  x="786.65" y="863.5" ></text>
</g>
<g >
<title>dev_queue_xmit (2 samples, 0.01%)</title><rect x="1156.3" y="485" width="0.1" height="15.0" fill="rgb(220,53,11)" rx="2" ry="2" />
<text  x="1159.29" y="495.5" ></text>
</g>
<g >
<title>ksoftirqd/2 (3 samples, 0.02%)</title><rect x="659.5" y="1381" width="0.2" height="15.0" fill="rgb(247,172,39)" rx="2" ry="2" />
<text  x="662.49" y="1391.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestEncoderWrapper::encodeData(Envoy::Buffer::Instance&amp;, bool) (10 samples, 0.06%)</title><rect x="1117.9" y="997" width="0.7" height="15.0" fill="rgb(230,130,14)" rx="2" ry="2" />
<text  x="1120.89" y="1007.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (177 samples, 1.07%)</title><rect x="100.4" y="1285" width="12.6" height="15.0" fill="rgb(246,134,42)" rx="2" ry="2" />
<text  x="103.39" y="1295.5" ></text>
</g>
<g >
<title>mod_timer (2 samples, 0.01%)</title><rect x="916.8" y="869" width="0.2" height="15.0" fill="rgb(248,45,6)" rx="2" ry="2" />
<text  x="919.85" y="879.5" ></text>
</g>
<g >
<title>veth_xmit (2 samples, 0.01%)</title><rect x="1166.2" y="741" width="0.1" height="15.0" fill="rgb(228,50,28)" rx="2" ry="2" />
<text  x="1169.18" y="751.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.03%)</title><rect x="840.4" y="725" width="0.4" height="15.0" fill="rgb(239,181,18)" rx="2" ry="2" />
<text  x="843.40" y="735.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.01%)</title><rect x="489.5" y="1013" width="0.2" height="15.0" fill="rgb(250,13,12)" rx="2" ry="2" />
<text  x="492.52" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (197 samples, 1.19%)</title><rect x="664.8" y="1301" width="14.0" height="15.0" fill="rgb(224,95,1)" rx="2" ry="2" />
<text  x="667.82" y="1311.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::checkMaxHeadersSize() (3 samples, 0.02%)</title><rect x="1129.6" y="1077" width="0.2" height="15.0" fill="rgb(235,216,11)" rx="2" ry="2" />
<text  x="1132.55" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="755.3" y="901" width="0.3" height="15.0" fill="rgb(227,42,41)" rx="2" ry="2" />
<text  x="758.28" y="911.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::DefaultValueObjectWriter::Node::WriteTo(google::protobuf::util::converter::ObjectWriter*) (3 samples, 0.02%)</title><rect x="1004.2" y="741" width="0.2" height="15.0" fill="rgb(251,164,6)" rx="2" ry="2" />
<text  x="1007.18" y="751.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="625.6" y="1109" width="0.1" height="15.0" fill="rgb(211,193,3)" rx="2" ry="2" />
<text  x="628.57" y="1119.5" ></text>
</g>
<g >
<title>__netif_receive_skb (156 samples, 0.94%)</title><rect x="1174.2" y="693" width="11.1" height="15.0" fill="rgb(205,175,50)" rx="2" ry="2" />
<text  x="1177.21" y="703.5" ></text>
</g>
<g >
<title>__lock_text_start (85 samples, 0.51%)</title><rect x="925.7" y="469" width="6.0" height="15.0" fill="rgb(254,14,40)" rx="2" ry="2" />
<text  x="928.67" y="479.5" ></text>
</g>
<g >
<title>__ip_finish_output (47 samples, 0.28%)</title><rect x="908.7" y="357" width="3.3" height="15.0" fill="rgb(235,201,27)" rx="2" ry="2" />
<text  x="911.67" y="367.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ActiveStreamDecoderFilter::decoderBufferLimit() (2 samples, 0.01%)</title><rect x="829.0" y="949" width="0.1" height="15.0" fill="rgb(224,64,10)" rx="2" ry="2" />
<text  x="831.95" y="959.5" ></text>
</g>
<g >
<title>__x64_sys_read (3 samples, 0.02%)</title><rect x="138.9" y="1189" width="0.2" height="15.0" fill="rgb(209,8,25)" rx="2" ry="2" />
<text  x="141.93" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="942.5" y="1317" width="0.1" height="15.0" fill="rgb(221,55,0)" rx="2" ry="2" />
<text  x="945.45" y="1327.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::encodeHeaders(Envoy::Http::ActiveStreamEncoderFilter*, Envoy::Http::ResponseHeaderMap&amp;, bool) (146 samples, 0.88%)</title><rect x="974.0" y="981" width="10.4" height="15.0" fill="rgb(247,222,10)" rx="2" ry="2" />
<text  x="977.03" y="991.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::push_back(char) (2 samples, 0.01%)</title><rect x="1084.3" y="965" width="0.2" height="15.0" fill="rgb(251,210,40)" rx="2" ry="2" />
<text  x="1087.32" y="975.5" ></text>
</g>
<g >
<title>Envoy::Event::TimerImpl::enableTimer(std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000l&gt; &gt;, Envoy::ScopeTrackedObject const*) (2 samples, 0.01%)</title><rect x="992.7" y="997" width="0.2" height="15.0" fill="rgb(232,33,50)" rx="2" ry="2" />
<text  x="995.73" y="1007.5" ></text>
</g>
<g >
<title>std::__1::__shared_ptr_emplace&lt;Envoy::Router::ProdFilter, std::__1::allocator&lt;Envoy::Router::ProdFilter&gt; &gt;::__on_zero_shared() (2 samples, 0.01%)</title><rect x="708.7" y="1221" width="0.1" height="15.0" fill="rgb(206,113,15)" rx="2" ry="2" />
<text  x="711.70" y="1231.5" ></text>
</g>
<g >
<title>__x64_sys_writev (198 samples, 1.19%)</title><rect x="921.9" y="1125" width="14.1" height="15.0" fill="rgb(233,133,30)" rx="2" ry="2" />
<text  x="924.90" y="1135.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::EnvoyRetryOn() const (2 samples, 0.01%)</title><rect x="852.8" y="981" width="0.1" height="15.0" fill="rgb(224,162,39)" rx="2" ry="2" />
<text  x="855.78" y="991.5" ></text>
</g>
<g >
<title>Envoy::Stats::ThreadLocalStoreImpl::ScopeImpl::counterFromStatNameWithTags(Envoy::Stats::StatName const&amp;, absl::optional&lt;std::__1::reference_wrapper&lt;std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; const&gt; &gt;) (12 samples, 0.07%)</title><rect x="985.3" y="917" width="0.9" height="15.0" fill="rgb(239,72,29)" rx="2" ry="2" />
<text  x="988.33" y="927.5" ></text>
</g>
<g >
<title>Envoy::Runtime::runtimeFeatureEnabled(absl::string_view) (2 samples, 0.01%)</title><rect x="812.0" y="1029" width="0.1" height="15.0" fill="rgb(208,158,14)" rx="2" ry="2" />
<text  x="814.96" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::recordMetric(unsigned int, unsigned long) (3 samples, 0.02%)</title><rect x="762.7" y="853" width="0.3" height="15.0" fill="rgb(254,158,7)" rx="2" ry="2" />
<text  x="765.75" y="863.5" ></text>
</g>
<g >
<title>google::protobuf::FileDescriptorTables::FindNestedSymbol(void const*, google::protobuf::stringpiece_internal::StringPiece) const (8 samples, 0.05%)</title><rect x="1027.9" y="773" width="0.5" height="15.0" fill="rgb(245,196,44)" rx="2" ry="2" />
<text  x="1030.86" y="783.5" ></text>
</g>
<g >
<title>wrk:worker_0 (3,640 samples, 21.94%)</title><rect x="680.0" y="1381" width="258.8" height="15.0" fill="rgb(219,17,52)" rx="2" ry="2" />
<text  x="682.97" y="1391.5" >wrk:worker_0</text>
</g>
<g >
<title>flatbuffers::FlatBufferBuilder::EndTable(unsigned int) (4 samples, 0.02%)</title><rect x="1015.4" y="821" width="0.3" height="15.0" fill="rgb(254,134,24)" rx="2" ry="2" />
<text  x="1018.41" y="831.5" ></text>
</g>
<g >
<title>Envoy::Router::VirtualHostImpl::getRouteFromEntries(std::__1::function&lt;Envoy::Router::RouteMatchStatus (std::__1::shared_ptr&lt;Envoy::Router::Route const&gt;, Envoy::Router::RouteEvalStatus)&gt; const&amp;, Envoy::Http::RequestHeaderMap const&amp;, Envoy::StreamInfo::StreamInfo const&amp;, unsigned long) const (7 samples, 0.04%)</title><rect x="1068.3" y="997" width="0.5" height="15.0" fill="rgb(218,130,39)" rx="2" ry="2" />
<text  x="1071.32" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::OwnedImplReservationSlicesOwnerMultiple::~OwnedImplReservationSlicesOwnerMultiple() (11 samples, 0.07%)</title><rect x="1134.4" y="1141" width="0.8" height="15.0" fill="rgb(210,73,18)" rx="2" ry="2" />
<text  x="1137.39" y="1151.5" ></text>
</g>
<g >
<title>ip_finish_output2 (2 samples, 0.01%)</title><rect x="1145.8" y="821" width="0.2" height="15.0" fill="rgb(240,139,10)" rx="2" ry="2" />
<text  x="1148.84" y="831.5" ></text>
</g>
<g >
<title>proxy_wasm::ContextBase::~ContextBase() (8 samples, 0.05%)</title><rect x="706.5" y="1205" width="0.6" height="15.0" fill="rgb(210,100,43)" rx="2" ry="2" />
<text  x="709.49" y="1215.5" ></text>
</g>
<g >
<title>ext4_ind_map_blocks (2 samples, 0.01%)</title><rect x="240.3" y="1013" width="0.2" height="15.0" fill="rgb(225,139,36)" rx="2" ry="2" />
<text  x="243.34" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Stats::TagUtility::TagStatNameJoiner::TagStatNameJoiner(Envoy::Stats::StatName, Envoy::Stats::StatName, absl::optional&lt;std::__1::reference_wrapper&lt;std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; const&gt; &gt;, Envoy::Stats::SymbolTable&amp;) (3 samples, 0.02%)</title><rect x="985.8" y="901" width="0.2" height="15.0" fill="rgb(219,172,48)" rx="2" ry="2" />
<text  x="988.83" y="911.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (2 samples, 0.01%)</title><rect x="1174.7" y="533" width="0.2" height="15.0" fill="rgb(225,45,26)" rx="2" ry="2" />
<text  x="1177.71" y="543.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="1032.6" y="789" width="0.1" height="15.0" fill="rgb(245,131,25)" rx="2" ry="2" />
<text  x="1035.55" y="799.5" ></text>
</g>
<g >
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="84.5" y="1125" width="0.2" height="15.0" fill="rgb(228,149,14)" rx="2" ry="2" />
<text  x="87.46" y="1135.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::filterState() (2 samples, 0.01%)</title><rect x="1063.5" y="1029" width="0.1" height="15.0" fill="rgb(211,93,7)" rx="2" ry="2" />
<text  x="1066.49" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::createFilterChain() (53 samples, 0.32%)</title><rect x="827.9" y="1029" width="3.8" height="15.0" fill="rgb(226,16,54)" rx="2" ry="2" />
<text  x="830.89" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Router::ConfigImpl::route(std::__1::function&lt;Envoy::Router::RouteMatchStatus (std::__1::shared_ptr&lt;Envoy::Router::Route const&gt;, Envoy::Router::RouteEvalStatus)&gt; const&amp;, Envoy::Http::RequestHeaderMap const&amp;, Envoy::StreamInfo::StreamInfo const&amp;, unsigned long) const (8 samples, 0.05%)</title><rect x="1068.3" y="1013" width="0.6" height="15.0" fill="rgb(213,226,19)" rx="2" ry="2" />
<text  x="1071.32" y="1023.5" ></text>
</g>
<g >
<title>__x64_sys_read (3 samples, 0.02%)</title><rect x="138.9" y="1205" width="0.2" height="15.0" fill="rgb(231,63,16)" rx="2" ry="2" />
<text  x="141.93" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Network::RawBufferSocket::doWrite(Envoy::Buffer::Instance&amp;, bool) (225 samples, 1.36%)</title><rect x="1152.3" y="1221" width="16.0" height="15.0" fill="rgb(215,22,20)" rx="2" ry="2" />
<text  x="1155.31" y="1231.5" ></text>
</g>
<g >
<title>local.runtime.park_m (3 samples, 0.02%)</title><rect x="120.4" y="1333" width="0.3" height="15.0" fill="rgb(251,24,40)" rx="2" ry="2" />
<text  x="123.44" y="1343.5" ></text>
</g>
<g >
<title>schedule (21 samples, 0.13%)</title><rect x="605.4" y="1125" width="1.5" height="15.0" fill="rgb(247,30,1)" rx="2" ry="2" />
<text  x="608.44" y="1135.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::hasDataWithName(absl::string_view) const (3 samples, 0.02%)</title><rect x="1098.7" y="965" width="0.2" height="15.0" fill="rgb(223,124,22)" rx="2" ry="2" />
<text  x="1101.69" y="975.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.02%)</title><rect x="506.9" y="1093" width="0.3" height="15.0" fill="rgb(243,96,39)" rx="2" ry="2" />
<text  x="509.95" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Buffer::SliceDeque::~SliceDeque() (2 samples, 0.01%)</title><rect x="992.1" y="1045" width="0.1" height="15.0" fill="rgb(218,111,39)" rx="2" ry="2" />
<text  x="995.09" y="1055.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::FilterStateImpl(Envoy::StreamInfo::FilterState::LifeSpan) (2 samples, 0.01%)</title><rect x="1103.0" y="965" width="0.1" height="15.0" fill="rgb(254,181,15)" rx="2" ry="2" />
<text  x="1105.96" y="975.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::doDeferredStreamDestroy(Envoy::Http::ConnectionManagerImpl::ActiveStream&amp;) (684 samples, 4.12%)</title><rect x="747.1" y="965" width="48.6" height="15.0" fill="rgb(210,162,30)" rx="2" ry="2" />
<text  x="750.10" y="975.5" >Envo..</text>
</g>
<g >
<title>__kfree_skb (5 samples, 0.03%)</title><rect x="1143.9" y="981" width="0.4" height="15.0" fill="rgb(243,70,21)" rx="2" ry="2" />
<text  x="1146.92" y="991.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (5 samples, 0.03%)</title><rect x="1154.1" y="933" width="0.3" height="15.0" fill="rgb(206,84,35)" rx="2" ry="2" />
<text  x="1157.09" y="943.5" ></text>
</g>
<g >
<title>ep_remove (5 samples, 0.03%)</title><rect x="742.4" y="725" width="0.4" height="15.0" fill="rgb(253,176,3)" rx="2" ry="2" />
<text  x="745.41" y="735.5" ></text>
</g>
<g >
<title>nf_hook_slow (33 samples, 0.20%)</title><rect x="559.6" y="869" width="2.4" height="15.0" fill="rgb(214,183,10)" rx="2" ry="2" />
<text  x="562.64" y="879.5" ></text>
</g>
<g >
<title>__cxxabiv1::__class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const (2 samples, 0.01%)</title><rect x="681.8" y="1317" width="0.2" height="15.0" fill="rgb(227,62,40)" rx="2" ry="2" />
<text  x="684.82" y="1327.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (126 samples, 0.76%)</title><rect x="924.3" y="773" width="9.0" height="15.0" fill="rgb(208,163,33)" rx="2" ry="2" />
<text  x="927.32" y="783.5" ></text>
</g>
<g >
<title>Envoy::Http::ActiveStreamFilterBase::commonHandleAfterHeadersCallback(Envoy::Http::FilterHeadersStatus, bool&amp;) (2 samples, 0.01%)</title><rect x="832.7" y="1013" width="0.2" height="15.0" fill="rgb(222,29,39)" rx="2" ry="2" />
<text  x="835.72" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*, char const*, unsigned long)#4}::__invoke(http_parser*, char const*, unsigned long) (5 samples, 0.03%)</title><rect x="807.2" y="1093" width="0.3" height="15.0" fill="rgb(235,150,46)" rx="2" ry="2" />
<text  x="810.19" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Tracing::HttpTracerUtility::finalizeDownstreamSpan(Envoy::Tracing::Span&amp;, Envoy::Http::RequestHeaderMap const*, Envoy::Http::ResponseHeaderMap const*, Envoy::Http::ResponseTrailerMap const*, Envoy::StreamInfo::StreamInfo const&amp;, Envoy::Tracing::Config const&amp;) (2 samples, 0.01%)</title><rect x="794.6" y="949" width="0.1" height="15.0" fill="rgb(227,109,31)" rx="2" ry="2" />
<text  x="797.60" y="959.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/image.(*store).Get (7 samples, 0.04%)</title><rect x="251.1" y="1077" width="0.5" height="15.0" fill="rgb(250,179,40)" rx="2" ry="2" />
<text  x="254.08" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::StaticLookupTable&lt;Envoy::Http::ResponseHeaderMap&gt;::lookup(Envoy::Http::HeaderMapImpl&amp;, absl::string_view) (14 samples, 0.08%)</title><rect x="804.8" y="1013" width="1.0" height="15.0" fill="rgb(221,145,27)" rx="2" ry="2" />
<text  x="807.84" y="1023.5" ></text>
</g>
<g >
<title>finish_task_switch (145 samples, 0.87%)</title><rect x="630.8" y="1141" width="10.3" height="15.0" fill="rgb(241,87,36)" rx="2" ry="2" />
<text  x="633.76" y="1151.5" ></text>
</g>
<g >
<title>std::__1::__murmur2_or_cityhash&lt;unsigned long, 64ul&gt;::operator()(void const*, unsigned long) (2 samples, 0.01%)</title><rect x="792.7" y="837" width="0.1" height="15.0" fill="rgb(245,82,8)" rx="2" ry="2" />
<text  x="795.68" y="847.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.13%)</title><rect x="741.8" y="789" width="1.5" height="15.0" fill="rgb(229,62,1)" rx="2" ry="2" />
<text  x="744.77" y="799.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (5 samples, 0.03%)</title><rect x="895.5" y="981" width="0.4" height="15.0" fill="rgb(205,158,37)" rx="2" ry="2" />
<text  x="898.52" y="991.5" ></text>
</g>
<g >
<title>do_syscall_64 (53 samples, 0.32%)</title><rect x="594.3" y="1189" width="3.8" height="15.0" fill="rgb(243,38,23)" rx="2" ry="2" />
<text  x="597.35" y="1199.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CreateValueFromMapValue(google::protobuf::Message const*, google::protobuf::FieldDescriptor const*, google::protobuf::MapValueConstRef const*, google::protobuf::Arena*, google::api::expr::runtime::CelValue*) (4 samples, 0.02%)</title><rect x="775.1" y="773" width="0.3" height="15.0" fill="rgb(238,115,31)" rx="2" ry="2" />
<text  x="778.12" y="783.5" ></text>
</g>
<g >
<title>__ip_local_out (2 samples, 0.01%)</title><rect x="1145.7" y="869" width="0.1" height="15.0" fill="rgb(233,46,28)" rx="2" ry="2" />
<text  x="1148.70" y="879.5" ></text>
</g>
<g >
<title>Envoy::Http::ActiveStreamFilterBase::maybeEvaluateMatchTreeWithNewData(std::__1::function&lt;void (Envoy::Http::Matching::HttpMatchingDataImpl&amp;)&gt;) (6 samples, 0.04%)</title><rect x="719.7" y="965" width="0.4" height="15.0" fill="rgb(227,21,7)" rx="2" ry="2" />
<text  x="722.72" y="975.5" ></text>
</g>
<g >
<title>do_syscall_64 (396 samples, 2.39%)</title><rect x="34.1" y="1125" width="28.2" height="15.0" fill="rgb(230,25,36)" rx="2" ry="2" />
<text  x="37.11" y="1135.5" >d..</text>
</g>
<g >
<title>Envoy::Http::ActiveStreamDecoderFilter::~ActiveStreamDecoderFilter() (20 samples, 0.12%)</title><rect x="961.2" y="1221" width="1.4" height="15.0" fill="rgb(249,0,3)" rx="2" ry="2" />
<text  x="964.15" y="1231.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (2 samples, 0.01%)</title><rect x="1172.5" y="933" width="0.1" height="15.0" fill="rgb(224,47,32)" rx="2" ry="2" />
<text  x="1175.51" y="943.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Extensions::HttpFilters::Fault::FaultFilterFactory::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::fault::v3::HTTPFault const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0, std::__1::allocator&lt;Envoy::Extensions::HttpFilters::Fault::FaultFilterFactory::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::fault::v3::HTTPFault const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0&gt;, void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt;::operator()(Envoy::Http::FilterChainFactoryCallbacks&amp;) (3 samples, 0.02%)</title><rect x="828.7" y="997" width="0.3" height="15.0" fill="rgb(211,8,23)" rx="2" ry="2" />
<text  x="831.74" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (802 samples, 4.83%)</title><rect x="432.6" y="1029" width="57.1" height="15.0" fill="rgb(232,87,35)" rx="2" ry="2" />
<text  x="435.63" y="1039.5" >[unkno..</text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::hasDataWithName(absl::string_view) const (8 samples, 0.05%)</title><rect x="847.5" y="981" width="0.6" height="15.0" fill="rgb(251,23,42)" rx="2" ry="2" />
<text  x="850.51" y="991.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2 samples, 0.01%)</title><rect x="438.7" y="965" width="0.1" height="15.0" fill="rgb(221,30,41)" rx="2" ry="2" />
<text  x="441.68" y="975.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.01%)</title><rect x="690.9" y="1173" width="0.2" height="15.0" fill="rgb(207,204,44)" rx="2" ry="2" />
<text  x="693.92" y="1183.5" ></text>
</g>
<g >
<title>apparmor_file_permission (6 samples, 0.04%)</title><rect x="167.1" y="1109" width="0.4" height="15.0" fill="rgb(231,90,5)" rx="2" ry="2" />
<text  x="170.09" y="1119.5" ></text>
</g>
<g >
<title>event_add (34 samples, 0.20%)</title><rect x="877.0" y="1045" width="2.4" height="15.0" fill="rgb(238,118,35)" rx="2" ry="2" />
<text  x="879.95" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Runtime::LoaderImpl::threadsafeSnapshot() (2 samples, 0.01%)</title><rect x="754.9" y="885" width="0.1" height="15.0" fill="rgb(229,28,0)" rx="2" ry="2" />
<text  x="757.85" y="895.5" ></text>
</g>
<g >
<title>do_anonymous_page (2 samples, 0.01%)</title><rect x="593.8" y="1093" width="0.2" height="15.0" fill="rgb(240,122,36)" rx="2" ry="2" />
<text  x="596.85" y="1103.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (17 samples, 0.10%)</title><rect x="238.8" y="1077" width="1.3" height="15.0" fill="rgb(225,110,50)" rx="2" ry="2" />
<text  x="241.85" y="1087.5" ></text>
</g>
<g >
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="119.9" y="1205" width="0.3" height="15.0" fill="rgb(233,153,7)" rx="2" ry="2" />
<text  x="122.87" y="1215.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Extensions::Common::Wasm::PropertyToken&gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Extensions::Common::Wasm::PropertyToken&gt; &gt; &gt;::iterator absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Extensions::Common::Wasm::PropertyToken&gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Extensions::Common::Wasm::PropertyToken&gt; &gt; &gt;::find&lt;absl::string_view&gt;(absl::string_view const&amp;, unsigned long) (2 samples, 0.01%)</title><rect x="1016.8" y="789" width="0.2" height="15.0" fill="rgb(210,192,29)" rx="2" ry="2" />
<text  x="1019.84" y="799.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::RequestHeaderMap, std::__1::default_delete&lt;Envoy::Http::RequestHeaderMap&gt; &gt;&amp;&amp;, bool) (679 samples, 4.09%)</title><rect x="1065.3" y="1045" width="48.3" height="15.0" fill="rgb(211,95,9)" rx="2" ry="2" />
<text  x="1068.27" y="1055.5" >Envo..</text>
</g>
<g >
<title>futex_wait (29 samples, 0.17%)</title><rect x="594.3" y="1141" width="2.1" height="15.0" fill="rgb(223,118,53)" rx="2" ry="2" />
<text  x="597.35" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::addStreamEncoderFilterWorker(std::__1::shared_ptr&lt;Envoy::Http::StreamEncoderFilter&gt;, std::__1::shared_ptr&lt;Envoy::Http::FilterMatchState&gt;, bool) (4 samples, 0.02%)</title><rect x="831.0" y="965" width="0.3" height="15.0" fill="rgb(228,96,5)" rx="2" ry="2" />
<text  x="834.01" y="975.5" ></text>
</g>
<g >
<title>github.com/docker/docker/pkg/ioutils.(*BytesPipe).Read (761 samples, 4.59%)</title><rect x="172.1" y="1333" width="54.2" height="15.0" fill="rgb(239,225,13)" rx="2" ry="2" />
<text  x="175.14" y="1343.5" >githu..</text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::add(void const*, unsigned long) (8 samples, 0.05%)</title><rect x="1088.3" y="821" width="0.6" height="15.0" fill="rgb(252,127,47)" rx="2" ry="2" />
<text  x="1091.31" y="831.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (170 samples, 1.02%)</title><rect x="645.0" y="1285" width="12.1" height="15.0" fill="rgb(250,27,51)" rx="2" ry="2" />
<text  x="647.98" y="1295.5" ></text>
</g>
<g >
<title>ip_local_out (148 samples, 0.89%)</title><rect x="906.1" y="869" width="10.5" height="15.0" fill="rgb(237,4,3)" rx="2" ry="2" />
<text  x="909.11" y="879.5" ></text>
</g>
<g >
<title>local.runtime.goready.func1 (59 samples, 0.36%)</title><rect x="125.5" y="1189" width="4.2" height="15.0" fill="rgb(213,7,33)" rx="2" ry="2" />
<text  x="128.49" y="1199.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::decodeData(Envoy::Buffer::Instance&amp;, bool) (27 samples, 0.16%)</title><rect x="801.7" y="1029" width="1.9" height="15.0" fill="rgb(207,130,28)" rx="2" ry="2" />
<text  x="804.72" y="1039.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelList::~CelList() (2 samples, 0.01%)</title><rect x="774.3" y="789" width="0.1" height="15.0" fill="rgb(206,209,8)" rx="2" ry="2" />
<text  x="777.27" y="799.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (4 samples, 0.02%)</title><rect x="240.1" y="1061" width="0.2" height="15.0" fill="rgb(215,173,51)" rx="2" ry="2" />
<text  x="243.05" y="1071.5" ></text>
</g>
<g >
<title>hist_internal_find (2 samples, 0.01%)</title><rect x="792.0" y="773" width="0.1" height="15.0" fill="rgb(236,72,46)" rx="2" ry="2" />
<text  x="794.97" y="783.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="438.8" y="949" width="0.2" height="15.0" fill="rgb(209,96,45)" rx="2" ry="2" />
<text  x="441.82" y="959.5" ></text>
</g>
<g >
<title>ip_finish_output (56 samples, 0.34%)</title><rect x="1158.1" y="373" width="4.0" height="15.0" fill="rgb(229,112,24)" rx="2" ry="2" />
<text  x="1161.07" y="383.5" ></text>
</g>
<g >
<title>std::__1::vector&lt;absl::strings_internal::ViableSubstitution, std::__1::allocator&lt;absl::strings_internal::ViableSubstitution&gt; &gt; absl::strings_internal::FindSubstitutions&lt;std::__1::vector&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt; &gt; &gt; &gt;(absl::string_view, std::__1::vector&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt; &gt; &gt; const&amp;) (4 samples, 0.02%)</title><rect x="1004.8" y="853" width="0.3" height="15.0" fill="rgb(206,47,4)" rx="2" ry="2" />
<text  x="1007.82" y="863.5" ></text>
</g>
<g >
<title>runtime.notesleep (3 samples, 0.02%)</title><rect x="114.3" y="1221" width="0.2" height="15.0" fill="rgb(235,48,20)" rx="2" ry="2" />
<text  x="117.25" y="1231.5" ></text>
</g>
<g >
<title>__fget (8 samples, 0.05%)</title><rect x="139.2" y="1109" width="0.6" height="15.0" fill="rgb(247,75,27)" rx="2" ry="2" />
<text  x="142.21" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Filters::Common::Expr::RequestWrapper::operator[](google::api::expr::runtime::CelValue) const (8 samples, 0.05%)</title><rect x="781.7" y="805" width="0.6" height="15.0" fill="rgb(224,179,38)" rx="2" ry="2" />
<text  x="784.73" y="815.5" ></text>
</g>
<g >
<title>do_nanosleep (12 samples, 0.07%)</title><rect x="212.6" y="1109" width="0.9" height="15.0" fill="rgb(239,23,20)" rx="2" ry="2" />
<text  x="215.60" y="1119.5" ></text>
</g>
<g >
<title>__x64_sys_writev (195 samples, 1.18%)</title><rect x="904.7" y="1125" width="13.9" height="15.0" fill="rgb(249,177,46)" rx="2" ry="2" />
<text  x="907.69" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::findValue(absl::string_view, google::protobuf::Arena*, bool) const (6 samples, 0.04%)</title><rect x="787.6" y="725" width="0.5" height="15.0" fill="rgb(246,194,44)" rx="2" ry="2" />
<text  x="790.64" y="735.5" ></text>
</g>
<g >
<title>Envoy::Runtime::runtimeFeatureEnabled(absl::string_view) (3 samples, 0.02%)</title><rect x="1115.3" y="1029" width="0.2" height="15.0" fill="rgb(221,113,36)" rx="2" ry="2" />
<text  x="1118.33" y="1039.5" ></text>
</g>
<g >
<title>__ip_finish_output (148 samples, 0.89%)</title><rect x="1156.1" y="821" width="10.5" height="15.0" fill="rgb(216,53,34)" rx="2" ry="2" />
<text  x="1159.08" y="831.5" ></text>
</g>
<g >
<title>void absl::inlined_vector_internal::Storage&lt;char, 128ul, std::__1::allocator&lt;char&gt; &gt;::Assign&lt;absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt; &gt;(absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt;, unsigned long) (4 samples, 0.02%)</title><rect x="721.0" y="933" width="0.3" height="15.0" fill="rgb(249,72,43)" rx="2" ry="2" />
<text  x="724.00" y="943.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_out (2 samples, 0.01%)</title><rect x="911.4" y="181" width="0.2" height="15.0" fill="rgb(247,79,49)" rx="2" ry="2" />
<text  x="914.45" y="191.5" ></text>
</g>
<g >
<title>char* absl::inlined_vector_internal::Storage&lt;char, 128ul, std::__1::allocator&lt;char&gt; &gt;::Insert&lt;absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt; &gt;(char const*, absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt;, unsigned long) (3 samples, 0.02%)</title><rect x="1129.1" y="1061" width="0.2" height="15.0" fill="rgb(245,43,35)" rx="2" ry="2" />
<text  x="1132.06" y="1071.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::removeEnvoyMaxRetries() (2 samples, 0.01%)</title><rect x="1102.1" y="981" width="0.1" height="15.0" fill="rgb(251,81,6)" rx="2" ry="2" />
<text  x="1105.10" y="991.5" ></text>
</g>
<g >
<title>rw_verify_area (11 samples, 0.07%)</title><rect x="515.8" y="1093" width="0.8" height="15.0" fill="rgb(213,57,23)" rx="2" ry="2" />
<text  x="518.84" y="1103.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (6 samples, 0.04%)</title><rect x="684.9" y="1365" width="0.5" height="15.0" fill="rgb(212,140,17)" rx="2" ry="2" />
<text  x="687.95" y="1375.5" ></text>
</g>
<g >
<title>__libc_malloc (3 samples, 0.02%)</title><rect x="859.0" y="901" width="0.2" height="15.0" fill="rgb(249,75,39)" rx="2" ry="2" />
<text  x="862.03" y="911.5" ></text>
</g>
<g >
<title>finish_task_switch (14 samples, 0.08%)</title><rect x="134.2" y="917" width="1.0" height="15.0" fill="rgb(226,102,27)" rx="2" ry="2" />
<text  x="137.24" y="927.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::completeLastHeader() (4 samples, 0.02%)</title><rect x="971.8" y="1061" width="0.2" height="15.0" fill="rgb(209,24,23)" rx="2" ry="2" />
<text  x="974.75" y="1071.5" ></text>
</g>
<g >
<title>event_queue_remove_timeout (2 samples, 0.01%)</title><rect x="703.4" y="1285" width="0.1" height="15.0" fill="rgb(215,180,37)" rx="2" ry="2" />
<text  x="706.36" y="1295.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_27, std::__1::allocator&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_27&gt;, proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;::operator()(proxy_wasm::ContextBase*&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;) (34 samples, 0.20%)</title><rect x="727.6" y="933" width="2.4" height="15.0" fill="rgb(244,222,7)" rx="2" ry="2" />
<text  x="730.61" y="943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (256 samples, 1.54%)</title><rect x="605.1" y="1237" width="18.2" height="15.0" fill="rgb(246,129,49)" rx="2" ry="2" />
<text  x="608.08" y="1247.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::log(unsigned int, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;) (3 samples, 0.02%)</title><rect x="1042.1" y="837" width="0.2" height="15.0" fill="rgb(232,179,45)" rx="2" ry="2" />
<text  x="1045.08" y="847.5" ></text>
</g>
<g >
<title>ip_send_check (2 samples, 0.01%)</title><rect x="588.7" y="869" width="0.2" height="15.0" fill="rgb(243,132,5)" rx="2" ry="2" />
<text  x="591.73" y="879.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::OverridableRemoteConnectionInfoSetterStreamInfo::sslConnection() const (3 samples, 0.02%)</title><rect x="777.7" y="789" width="0.2" height="15.0" fill="rgb(234,3,24)" rx="2" ry="2" />
<text  x="780.68" y="799.5" ></text>
</g>
<g >
<title>nf_hook_slow (77 samples, 0.46%)</title><rect x="908.5" y="469" width="5.5" height="15.0" fill="rgb(230,176,25)" rx="2" ry="2" />
<text  x="911.53" y="479.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.02%)</title><rect x="1131.5" y="1045" width="0.3" height="15.0" fill="rgb(238,103,39)" rx="2" ry="2" />
<text  x="1134.54" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Runtime::runtimeFeatureEnabled(absl::string_view) (5 samples, 0.03%)</title><rect x="866.4" y="1029" width="0.4" height="15.0" fill="rgb(248,206,10)" rx="2" ry="2" />
<text  x="869.43" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Upstream::ClusterManagerImpl::getThreadLocalCluster(absl::string_view) (2 samples, 0.01%)</title><rect x="1067.8" y="997" width="0.1" height="15.0" fill="rgb(215,76,49)" rx="2" ry="2" />
<text  x="1070.75" y="1007.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (29 samples, 0.17%)</title><rect x="594.3" y="1125" width="2.1" height="15.0" fill="rgb(216,11,43)" rx="2" ry="2" />
<text  x="597.35" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::recordMetric(unsigned int, unsigned long) (13 samples, 0.08%)</title><rect x="791.4" y="837" width="0.9" height="15.0" fill="rgb(225,211,7)" rx="2" ry="2" />
<text  x="794.40" y="847.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (2 samples, 0.01%)</title><rect x="878.4" y="853" width="0.1" height="15.0" fill="rgb(230,87,28)" rx="2" ry="2" />
<text  x="881.38" y="863.5" ></text>
</g>
<g >
<title>do_iter_write (200 samples, 1.21%)</title><rect x="1153.9" y="1077" width="14.3" height="15.0" fill="rgb(251,32,13)" rx="2" ry="2" />
<text  x="1156.95" y="1087.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.16%)</title><rect x="744.1" y="805" width="1.9" height="15.0" fill="rgb(221,78,10)" rx="2" ry="2" />
<text  x="747.11" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="641.1" y="1221" width="0.5" height="15.0" fill="rgb(241,204,11)" rx="2" ry="2" />
<text  x="644.07" y="1231.5" ></text>
</g>
<g >
<title>runtime.casgstatus (2 samples, 0.01%)</title><rect x="201.5" y="1221" width="0.2" height="15.0" fill="rgb(226,20,2)" rx="2" ry="2" />
<text  x="204.51" y="1231.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CreateValueFromMapValue(google::protobuf::Message const*, google::protobuf::FieldDescriptor const*, google::protobuf::MapValueConstRef const*, google::protobuf::Arena*, google::api::expr::runtime::CelValue*) (3 samples, 0.02%)</title><rect x="1026.9" y="773" width="0.2" height="15.0" fill="rgb(220,37,6)" rx="2" ry="2" />
<text  x="1029.86" y="783.5" ></text>
</g>
<g >
<title>sock_read_iter (48 samples, 0.29%)</title><rect x="618.8" y="1125" width="3.4" height="15.0" fill="rgb(224,78,12)" rx="2" ry="2" />
<text  x="621.81" y="1135.5" ></text>
</g>
<g >
<title>security_file_permission (4 samples, 0.02%)</title><rect x="1187.6" y="1045" width="0.3" height="15.0" fill="rgb(214,185,15)" rx="2" ry="2" />
<text  x="1190.58" y="1055.5" ></text>
</g>
<g >
<title>futex_wait (12 samples, 0.07%)</title><rect x="624.6" y="1189" width="0.8" height="15.0" fill="rgb(236,151,18)" rx="2" ry="2" />
<text  x="627.57" y="1199.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (4 samples, 0.02%)</title><rect x="895.9" y="949" width="0.3" height="15.0" fill="rgb(226,70,40)" rx="2" ry="2" />
<text  x="898.94" y="959.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_fast64 (4 samples, 0.02%)</title><rect x="122.5" y="1237" width="0.3" height="15.0" fill="rgb(250,122,15)" rx="2" ry="2" />
<text  x="125.50" y="1247.5" ></text>
</g>
<g >
<title>proxy_wasm::null_plugin::Stats::PluginRootContext::report(Wasm::Common::RequestInfo&amp;, bool) (2 samples, 0.01%)</title><rect x="793.9" y="885" width="0.1" height="15.0" fill="rgb(227,76,50)" rx="2" ry="2" />
<text  x="796.89" y="895.5" ></text>
</g>
<g >
<title>event_del (37 samples, 0.22%)</title><rect x="740.8" y="869" width="2.7" height="15.0" fill="rgb(227,98,5)" rx="2" ry="2" />
<text  x="743.84" y="879.5" ></text>
</g>
<g >
<title>__sched_text_start (3 samples, 0.02%)</title><rect x="511.0" y="1077" width="0.2" height="15.0" fill="rgb(251,147,43)" rx="2" ry="2" />
<text  x="514.00" y="1087.5" ></text>
</g>
<g >
<title>wake_up_q (6 samples, 0.04%)</title><rect x="437.8" y="853" width="0.4" height="15.0" fill="rgb(239,168,30)" rx="2" ry="2" />
<text  x="440.75" y="863.5" ></text>
</g>
<g >
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="932.1" y="613" width="0.3" height="15.0" fill="rgb(219,40,34)" rx="2" ry="2" />
<text  x="935.14" y="623.5" ></text>
</g>
<g >
<title>__ip_finish_output (14 samples, 0.08%)</title><rect x="910.4" y="165" width="1.0" height="15.0" fill="rgb(215,30,21)" rx="2" ry="2" />
<text  x="913.45" y="175.5" ></text>
</g>
<g >
<title>Envoy::Http::CodeStatsImpl::incCounter(Envoy::Stats::Scope&amp;, Envoy::Stats::StatName, Envoy::Stats::StatName) const (21 samples, 0.13%)</title><rect x="984.8" y="933" width="1.5" height="15.0" fill="rgb(220,93,43)" rx="2" ry="2" />
<text  x="987.84" y="943.5" ></text>
</g>
<g >
<title>lru_add_drain (3 samples, 0.02%)</title><rect x="625.6" y="1173" width="0.2" height="15.0" fill="rgb(230,15,31)" rx="2" ry="2" />
<text  x="628.57" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Tracing::CustomTagBase::apply(Envoy::Tracing::Span&amp;, Envoy::Tracing::CustomTagContext const&amp;) const (2 samples, 0.01%)</title><rect x="1009.2" y="917" width="0.1" height="15.0" fill="rgb(221,1,33)" rx="2" ry="2" />
<text  x="1012.16" y="927.5" ></text>
</g>
<g >
<title>Envoy::Event::DispatcherImpl::timeSource() (2 samples, 0.01%)</title><rect x="1102.8" y="981" width="0.2" height="15.0" fill="rgb(229,56,10)" rx="2" ry="2" />
<text  x="1105.81" y="991.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::getExisting(absl::string_view) (2 samples, 0.01%)</title><rect x="1031.4" y="789" width="0.2" height="15.0" fill="rgb(210,150,49)" rx="2" ry="2" />
<text  x="1034.42" y="799.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="938.3" y="1349" width="0.1" height="15.0" fill="rgb(213,106,9)" rx="2" ry="2" />
<text  x="941.26" y="1359.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (2 samples, 0.01%)</title><rect x="561.3" y="805" width="0.1" height="15.0" fill="rgb(234,61,7)" rx="2" ry="2" />
<text  x="564.28" y="815.5" ></text>
</g>
<g >
<title>ipt_do_table (3 samples, 0.02%)</title><rect x="1164.3" y="565" width="0.2" height="15.0" fill="rgb(236,115,38)" rx="2" ry="2" />
<text  x="1167.26" y="575.5" ></text>
</g>
<g >
<title>proxy_wasm::ContextBase::onRequestHeaders(unsigned int, bool) (31 samples, 0.19%)</title><rect x="1108.9" y="997" width="2.2" height="15.0" fill="rgb(252,12,39)" rx="2" ry="2" />
<text  x="1111.93" y="1007.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode-fm (6 samples, 0.04%)</title><rect x="251.6" y="1029" width="0.4" height="15.0" fill="rgb(248,57,18)" rx="2" ry="2" />
<text  x="254.58" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.08%)</title><rect x="508.4" y="1157" width="0.9" height="15.0" fill="rgb(251,211,18)" rx="2" ry="2" />
<text  x="511.37" y="1167.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="1079.2" y="949" width="0.1" height="15.0" fill="rgb(210,184,24)" rx="2" ry="2" />
<text  x="1082.20" y="959.5" ></text>
</g>
<g >
<title>readv (189 samples, 1.14%)</title><rect x="888.5" y="1173" width="13.5" height="15.0" fill="rgb(244,57,20)" rx="2" ry="2" />
<text  x="891.55" y="1183.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (2 samples, 0.01%)</title><rect x="1164.7" y="565" width="0.1" height="15.0" fill="rgb(250,104,33)" rx="2" ry="2" />
<text  x="1167.68" y="575.5" ></text>
</g>
<g >
<title>fdb_find_rcu (2 samples, 0.01%)</title><rect x="1157.0" y="549" width="0.1" height="15.0" fill="rgb(228,74,25)" rx="2" ry="2" />
<text  x="1160.00" y="559.5" ></text>
</g>
<g >
<title>schedule (296 samples, 1.78%)</title><rect x="38.7" y="1029" width="21.0" height="15.0" fill="rgb(229,195,25)" rx="2" ry="2" />
<text  x="41.66" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="1040.8" y="741" width="0.1" height="15.0" fill="rgb(223,225,54)" rx="2" ry="2" />
<text  x="1043.80" y="751.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::findValue(absl::string_view, google::protobuf::Arena*, bool) const (14 samples, 0.08%)</title><rect x="1016.0" y="805" width="1.0" height="15.0" fill="rgb(245,188,1)" rx="2" ry="2" />
<text  x="1018.98" y="815.5" ></text>
</g>
<g >
<title>runtime.handoff (14 samples, 0.08%)</title><rect x="254.0" y="1285" width="1.0" height="15.0" fill="rgb(230,173,32)" rx="2" ry="2" />
<text  x="256.99" y="1295.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (110 samples, 0.66%)</title><rect x="75.7" y="1093" width="7.8" height="15.0" fill="rgb(222,167,50)" rx="2" ry="2" />
<text  x="78.71" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::writev(Envoy::Buffer::RawSlice const*, unsigned long) (252 samples, 1.52%)</title><rect x="1170.2" y="1189" width="18.0" height="15.0" fill="rgb(249,2,50)" rx="2" ry="2" />
<text  x="1173.23" y="1199.5" ></text>
</g>
<g >
<title>ip_rcv_core.isra.0 (2 samples, 0.01%)</title><rect x="1157.5" y="469" width="0.1" height="15.0" fill="rgb(212,57,13)" rx="2" ry="2" />
<text  x="1160.50" y="479.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (8 samples, 0.05%)</title><rect x="899.6" y="1061" width="0.6" height="15.0" fill="rgb(227,77,36)" rx="2" ry="2" />
<text  x="902.64" y="1071.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::ClientConnectionImpl::allocHeaders(std::__1::unique_ptr&lt;Envoy::Http::StatefulHeaderKeyFormatter, std::__1::default_delete&lt;Envoy::Http::StatefulHeaderKeyFormatter&gt; &gt;&amp;&amp;) (15 samples, 0.09%)</title><rect x="715.3" y="1061" width="1.1" height="15.0" fill="rgb(236,2,44)" rx="2" ry="2" />
<text  x="718.31" y="1071.5" ></text>
</g>
<g >
<title>ip_list_rcv (2 samples, 0.01%)</title><rect x="498.8" y="901" width="0.2" height="15.0" fill="rgb(238,107,48)" rx="2" ry="2" />
<text  x="501.84" y="911.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::shared_ptr&lt;Envoy::Tracing::CustomTag const&gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::shared_ptr&lt;Envoy::Tracing::CustomTag const&gt; &gt; &gt; &gt;::resize(unsigned long) (6 samples, 0.04%)</title><rect x="817.9" y="949" width="0.5" height="15.0" fill="rgb(248,161,30)" rx="2" ry="2" />
<text  x="820.93" y="959.5" ></text>
</g>
<g >
<title>dst_cache_per_cpu_get.isra.0 (2 samples, 0.01%)</title><rect x="1161.3" y="213" width="0.1" height="15.0" fill="rgb(229,159,12)" rx="2" ry="2" />
<text  x="1164.27" y="223.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::statusCode() const (2 samples, 0.01%)</title><rect x="737.1" y="1045" width="0.2" height="15.0" fill="rgb(240,146,39)" rx="2" ry="2" />
<text  x="740.14" y="1055.5" ></text>
</g>
<g >
<title>add_transaction_credits (3 samples, 0.02%)</title><rect x="239.6" y="1013" width="0.2" height="15.0" fill="rgb(210,4,15)" rx="2" ry="2" />
<text  x="242.63" y="1023.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;absl::string_view, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;absl::string_view const, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt; &gt; &gt;::prepare_insert(unsigned long) (4 samples, 0.02%)</title><rect x="821.3" y="885" width="0.3" height="15.0" fill="rgb(229,171,5)" rx="2" ry="2" />
<text  x="824.34" y="895.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (2 samples, 0.01%)</title><rect x="624.1" y="1237" width="0.2" height="15.0" fill="rgb(224,209,41)" rx="2" ry="2" />
<text  x="627.14" y="1247.5" ></text>
</g>
<g >
<title>wake_up_q (68 samples, 0.41%)</title><rect x="203.6" y="1077" width="4.8" height="15.0" fill="rgb(248,60,40)" rx="2" ry="2" />
<text  x="206.57" y="1087.5" ></text>
</g>
<g >
<title>inet_recvmsg (56 samples, 0.34%)</title><rect x="1143.7" y="1013" width="4.0" height="15.0" fill="rgb(242,43,37)" rx="2" ry="2" />
<text  x="1146.70" y="1023.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::ServerConnectionImpl::allocHeaders(std::__1::unique_ptr&lt;Envoy::Http::StatefulHeaderKeyFormatter, std::__1::default_delete&lt;Envoy::Http::StatefulHeaderKeyFormatter&gt; &gt;&amp;&amp;) (15 samples, 0.09%)</title><rect x="1060.3" y="1077" width="1.1" height="15.0" fill="rgb(213,58,53)" rx="2" ry="2" />
<text  x="1063.29" y="1087.5" ></text>
</g>
<g >
<title>ip_route_input_slow (6 samples, 0.04%)</title><rect x="913.0" y="373" width="0.4" height="15.0" fill="rgb(216,172,50)" rx="2" ry="2" />
<text  x="916.01" y="383.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (3 samples, 0.02%)</title><rect x="936.7" y="1301" width="0.2" height="15.0" fill="rgb(206,46,2)" rx="2" ry="2" />
<text  x="939.69" y="1311.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::setAndCheckCallbackStatus(absl::Status&amp;&amp;) (2 samples, 0.01%)</title><rect x="1060.1" y="1109" width="0.2" height="15.0" fill="rgb(246,145,32)" rx="2" ry="2" />
<text  x="1063.15" y="1119.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (3 samples, 0.02%)</title><rect x="589.9" y="949" width="0.2" height="15.0" fill="rgb(237,91,31)" rx="2" ry="2" />
<text  x="592.87" y="959.5" ></text>
</g>
<g >
<title>ext4_inode_table (2 samples, 0.01%)</title><rect x="245.8" y="1029" width="0.2" height="15.0" fill="rgb(250,139,32)" rx="2" ry="2" />
<text  x="248.82" y="1039.5" ></text>
</g>
<g >
<title>absl::substitute_internal::SubstituteAndAppendArray(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, absl::string_view, absl::string_view const*, unsigned long) (2 samples, 0.01%)</title><rect x="1038.5" y="741" width="0.2" height="15.0" fill="rgb(219,184,13)" rx="2" ry="2" />
<text  x="1041.53" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_write (120 samples, 0.72%)</title><rect x="75.5" y="1205" width="8.5" height="15.0" fill="rgb(229,33,30)" rx="2" ry="2" />
<text  x="78.50" y="1215.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (14 samples, 0.08%)</title><rect x="1162.9" y="389" width="1.0" height="15.0" fill="rgb(210,16,5)" rx="2" ry="2" />
<text  x="1165.91" y="399.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::~StreamEncoderImpl() (80 samples, 0.48%)</title><rect x="740.6" y="917" width="5.7" height="15.0" fill="rgb(225,42,43)" rx="2" ry="2" />
<text  x="743.63" y="927.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::~FilterStateImpl() (2 samples, 0.01%)</title><rect x="799.4" y="917" width="0.1" height="15.0" fill="rgb(227,177,46)" rx="2" ry="2" />
<text  x="802.37" y="927.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::encodeData(Envoy::Buffer::Instance&amp;, bool) (4 samples, 0.02%)</title><rect x="872.4" y="981" width="0.3" height="15.0" fill="rgb(226,228,51)" rx="2" ry="2" />
<text  x="875.40" y="991.5" ></text>
</g>
<g >
<title>pipe_poll (2 samples, 0.01%)</title><rect x="133.2" y="997" width="0.2" height="15.0" fill="rgb(210,82,46)" rx="2" ry="2" />
<text  x="136.24" y="1007.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (2 samples, 0.01%)</title><rect x="1174.7" y="517" width="0.2" height="15.0" fill="rgb(212,152,16)" rx="2" ry="2" />
<text  x="1177.71" y="527.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Router::Filter::decodeHeaders(Envoy::Http::RequestHeaderMap&amp;, bool)::$_0, std::__1::allocator&lt;Envoy::Router::Filter::decodeHeaders(Envoy::Http::RequestHeaderMap&amp;, bool)::$_0&gt;, void (Envoy::Http::ResponseHeaderMap&amp;)&gt;::__clone(std::__1::__function::__base&lt;void (Envoy::Http::ResponseHeaderMap&amp;)&gt;*) const (3 samples, 0.02%)</title><rect x="1106.0" y="1013" width="0.2" height="15.0" fill="rgb(226,72,3)" rx="2" ry="2" />
<text  x="1109.01" y="1023.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="628.8" y="1109" width="0.1" height="15.0" fill="rgb(249,122,48)" rx="2" ry="2" />
<text  x="631.77" y="1119.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.01%)</title><rect x="509.3" y="1141" width="0.1" height="15.0" fill="rgb(213,85,12)" rx="2" ry="2" />
<text  x="512.29" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::completeLastHeader() (4 samples, 0.02%)</title><rect x="716.6" y="1061" width="0.3" height="15.0" fill="rgb(250,34,53)" rx="2" ry="2" />
<text  x="719.59" y="1071.5" ></text>
</g>
<g >
<title>proxy_wasm::null_plugin::Stats::PluginContext::onLog() (466 samples, 2.81%)</title><rect x="760.8" y="885" width="33.1" height="15.0" fill="rgb(242,176,52)" rx="2" ry="2" />
<text  x="763.75" y="895.5" >pr..</text>
</g>
<g >
<title>Envoy::Runtime::runtimeFeatureEnabled(absl::string_view) (2 samples, 0.01%)</title><rect x="1122.2" y="1029" width="0.1" height="15.0" fill="rgb(253,171,19)" rx="2" ry="2" />
<text  x="1125.16" y="1039.5" ></text>
</g>
<g >
<title>github.com/docker/docker/container/stream.(*Config).CopyToPipe.func1.1 (714 samples, 4.30%)</title><rect x="120.7" y="1349" width="50.7" height="15.0" fill="rgb(248,179,0)" rx="2" ry="2" />
<text  x="123.65" y="1359.5" >githu..</text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::add(absl::string_view) (7 samples, 0.04%)</title><rect x="1089.8" y="741" width="0.5" height="15.0" fill="rgb(246,217,29)" rx="2" ry="2" />
<text  x="1092.80" y="751.5" ></text>
</g>
<g >
<title>github.com/docker/docker/pkg/ioutils.(*BytesPipe).Write (107 samples, 0.64%)</title><rect x="122.1" y="1269" width="7.6" height="15.0" fill="rgb(225,96,53)" rx="2" ry="2" />
<text  x="125.08" y="1279.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (84 samples, 0.51%)</title><rect x="908.2" y="581" width="6.0" height="15.0" fill="rgb(214,141,35)" rx="2" ry="2" />
<text  x="911.25" y="591.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::move(Envoy::Buffer::Instance&amp;) (2 samples, 0.01%)</title><rect x="869.3" y="965" width="0.2" height="15.0" fill="rgb(239,32,7)" rx="2" ry="2" />
<text  x="872.35" y="975.5" ></text>
</g>
<g >
<title>ep_insert (10 samples, 0.06%)</title><rect x="878.3" y="917" width="0.7" height="15.0" fill="rgb(244,25,11)" rx="2" ry="2" />
<text  x="881.31" y="927.5" ></text>
</g>
<g >
<title>aa_label_sk_perm.part.0 (3 samples, 0.02%)</title><rect x="591.7" y="997" width="0.2" height="15.0" fill="rgb(215,9,32)" rx="2" ry="2" />
<text  x="594.72" y="1007.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (6 samples, 0.04%)</title><rect x="628.8" y="1141" width="0.4" height="15.0" fill="rgb(206,222,11)" rx="2" ry="2" />
<text  x="631.77" y="1151.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::getDataReadOnlyGeneric(absl::string_view) const (2 samples, 0.01%)</title><rect x="846.9" y="949" width="0.2" height="15.0" fill="rgb(249,220,33)" rx="2" ry="2" />
<text  x="849.94" y="959.5" ></text>
</g>
<g >
<title>schedule (108 samples, 0.65%)</title><rect x="694.1" y="1173" width="7.7" height="15.0" fill="rgb(229,3,35)" rx="2" ry="2" />
<text  x="697.12" y="1183.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (132 samples, 0.80%)</title><rect x="1156.2" y="773" width="9.4" height="15.0" fill="rgb(241,186,32)" rx="2" ry="2" />
<text  x="1159.22" y="783.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::onData(Envoy::Buffer::Instance&amp;, bool) (1,059 samples, 6.38%)</title><rect x="808.1" y="1205" width="75.3" height="15.0" fill="rgb(247,208,17)" rx="2" ry="2" />
<text  x="811.12" y="1215.5" >Envoy::H..</text>
</g>
<g >
<title>loopback_xmit (2 samples, 0.01%)</title><rect x="587.4" y="789" width="0.2" height="15.0" fill="rgb(240,199,13)" rx="2" ry="2" />
<text  x="590.45" y="799.5" ></text>
</g>
<g >
<title>ip_vs_local_reply4 (2 samples, 0.01%)</title><rect x="559.2" y="853" width="0.2" height="15.0" fill="rgb(206,141,41)" rx="2" ry="2" />
<text  x="562.22" y="863.5" ></text>
</g>
<g >
<title>ksys_read (401 samples, 2.42%)</title><rect x="139.2" y="1173" width="28.5" height="15.0" fill="rgb(226,167,50)" rx="2" ry="2" />
<text  x="142.21" y="1183.5" >ks..</text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::move(Envoy::Buffer::Instance&amp;) (2 samples, 0.01%)</title><rect x="1053.0" y="933" width="0.2" height="15.0" fill="rgb(210,220,41)" rx="2" ry="2" />
<text  x="1056.03" y="943.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Annotation::~Annotation() (2 samples, 0.01%)</title><rect x="1069.7" y="981" width="0.1" height="15.0" fill="rgb(209,103,35)" rx="2" ry="2" />
<text  x="1072.67" y="991.5" ></text>
</g>
<g >
<title>do_writev (235 samples, 1.42%)</title><rect x="1171.3" y="1109" width="16.7" height="15.0" fill="rgb(236,119,16)" rx="2" ry="2" />
<text  x="1174.30" y="1119.5" ></text>
</g>
<g >
<title>__find_get_block (15 samples, 0.09%)</title><rect x="244.7" y="1013" width="1.0" height="15.0" fill="rgb(245,98,1)" rx="2" ry="2" />
<text  x="247.68" y="1023.5" ></text>
</g>
<g >
<title>evmap_io_del_ (45 samples, 0.27%)</title><rect x="873.6" y="997" width="3.2" height="15.0" fill="rgb(212,220,17)" rx="2" ry="2" />
<text  x="876.61" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::UpstreamRequest(Envoy::Router::RouterFilterInterface&amp;, std::__1::unique_ptr&lt;Envoy::Router::GenericConnPool, std::__1::default_delete&lt;Envoy::Router::GenericConnPool&gt; &gt;&amp;&amp;) (8 samples, 0.05%)</title><rect x="1102.7" y="997" width="0.6" height="15.0" fill="rgb(250,132,50)" rx="2" ry="2" />
<text  x="1105.74" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::addStreamDecoderFilter(std::__1::shared_ptr&lt;Envoy::Http::StreamDecoderFilter&gt;) (2 samples, 0.01%)</title><rect x="1078.0" y="981" width="0.1" height="15.0" fill="rgb(228,184,40)" rx="2" ry="2" />
<text  x="1080.99" y="991.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="679.5" y="1301" width="0.2" height="15.0" fill="rgb(229,68,9)" rx="2" ry="2" />
<text  x="682.54" y="1311.5" ></text>
</g>
<g >
<title>loopback_xmit (2 samples, 0.01%)</title><rect x="587.4" y="773" width="0.2" height="15.0" fill="rgb(253,201,7)" rx="2" ry="2" />
<text  x="590.45" y="783.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (4 samples, 0.02%)</title><rect x="591.7" y="1045" width="0.3" height="15.0" fill="rgb(226,99,35)" rx="2" ry="2" />
<text  x="594.72" y="1055.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_fn (3 samples, 0.02%)</title><rect x="916.2" y="805" width="0.2" height="15.0" fill="rgb(249,151,6)" rx="2" ry="2" />
<text  x="919.21" y="815.5" ></text>
</g>
<g >
<title>start_this_handle (6 samples, 0.04%)</title><rect x="239.6" y="1045" width="0.5" height="15.0" fill="rgb(234,77,24)" rx="2" ry="2" />
<text  x="242.63" y="1055.5" ></text>
</g>
<g >
<title>ipt_do_table (4 samples, 0.02%)</title><rect x="1158.9" y="149" width="0.3" height="15.0" fill="rgb(251,78,44)" rx="2" ry="2" />
<text  x="1161.92" y="159.5" ></text>
</g>
<g >
<title>aa_profile_af_perm (2 samples, 0.01%)</title><rect x="917.8" y="949" width="0.1" height="15.0" fill="rgb(216,39,30)" rx="2" ry="2" />
<text  x="920.77" y="959.5" ></text>
</g>
<g >
<title>__fget (7 samples, 0.04%)</title><rect x="516.8" y="1061" width="0.5" height="15.0" fill="rgb(248,111,38)" rx="2" ry="2" />
<text  x="519.76" y="1071.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (2 samples, 0.01%)</title><rect x="586.8" y="773" width="0.2" height="15.0" fill="rgb(223,222,35)" rx="2" ry="2" />
<text  x="589.81" y="783.5" ></text>
</g>
<g >
<title>process_backlog (2 samples, 0.01%)</title><rect x="915.4" y="693" width="0.1" height="15.0" fill="rgb(226,182,15)" rx="2" ry="2" />
<text  x="918.36" y="703.5" ></text>
</g>
<g >
<title>ipt_do_table (3 samples, 0.02%)</title><rect x="912.2" y="341" width="0.2" height="15.0" fill="rgb(216,169,47)" rx="2" ry="2" />
<text  x="915.16" y="351.5" ></text>
</g>
<g >
<title>__libc_cfree (2 samples, 0.01%)</title><rect x="732.2" y="901" width="0.2" height="15.0" fill="rgb(213,28,8)" rx="2" ry="2" />
<text  x="735.24" y="911.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::NamedWriteTo(google::protobuf::stringpiece_internal::StringPiece, google::protobuf::util::converter::ObjectWriter*) const (8 samples, 0.05%)</title><rect x="751.2" y="805" width="0.5" height="15.0" fill="rgb(226,167,3)" rx="2" ry="2" />
<text  x="754.15" y="815.5" ></text>
</g>
<g >
<title>Envoy::Filter::StaticFilterConfigProviderImpl::config() (3 samples, 0.02%)</title><rect x="828.2" y="997" width="0.2" height="15.0" fill="rgb(237,65,39)" rx="2" ry="2" />
<text  x="831.17" y="1007.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.01%)</title><rect x="509.3" y="1109" width="0.1" height="15.0" fill="rgb(254,144,47)" rx="2" ry="2" />
<text  x="512.29" y="1119.5" ></text>
</g>
<g >
<title>all (16,593 samples, 100%)</title><rect x="10.0" y="1397" width="1180.0" height="15.0" fill="rgb(221,225,16)" rx="2" ry="2" />
<text  x="13.00" y="1407.5" ></text>
</g>
<g >
<title>aa_sk_perm (4 samples, 0.02%)</title><rect x="591.7" y="1013" width="0.3" height="15.0" fill="rgb(247,9,7)" rx="2" ry="2" />
<text  x="594.72" y="1023.5" ></text>
</g>
<g >
<title>ip_local_out (32 samples, 0.19%)</title><rect x="909.3" y="213" width="2.3" height="15.0" fill="rgb(228,28,33)" rx="2" ry="2" />
<text  x="912.31" y="223.5" ></text>
</g>
<g >
<title>Envoy::Http::Utility::Url::initialize(absl::string_view, bool) (14 samples, 0.08%)</title><rect x="865.4" y="1029" width="1.0" height="15.0" fill="rgb(209,177,42)" rx="2" ry="2" />
<text  x="868.43" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::handlePath(Envoy::Http::RequestHeaderMap&amp;, absl::string_view) (27 samples, 0.16%)</title><rect x="865.0" y="1045" width="1.9" height="15.0" fill="rgb(222,4,52)" rx="2" ry="2" />
<text  x="868.01" y="1055.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.02%)</title><rect x="586.2" y="773" width="0.3" height="15.0" fill="rgb(214,186,39)" rx="2" ry="2" />
<text  x="589.24" y="783.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (3 samples, 0.02%)</title><rect x="585.7" y="661" width="0.2" height="15.0" fill="rgb(226,157,4)" rx="2" ry="2" />
<text  x="588.67" y="671.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::getEnvoyUpstreamRequestPerTryTimeoutMsValue() const (3 samples, 0.02%)</title><rect x="1104.4" y="997" width="0.2" height="15.0" fill="rgb(212,163,20)" rx="2" ry="2" />
<text  x="1107.38" y="1007.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (5 samples, 0.03%)</title><rect x="914.4" y="597" width="0.4" height="15.0" fill="rgb(206,156,38)" rx="2" ry="2" />
<text  x="917.43" y="607.5" ></text>
</g>
<g >
<title>new_sync_read (3 samples, 0.02%)</title><rect x="496.9" y="965" width="0.2" height="15.0" fill="rgb(239,99,13)" rx="2" ry="2" />
<text  x="499.92" y="975.5" ></text>
</g>
<g >
<title>aa_profile_af_perm (2 samples, 0.01%)</title><rect x="917.8" y="933" width="0.1" height="15.0" fill="rgb(221,187,13)" rx="2" ry="2" />
<text  x="920.77" y="943.5" ></text>
</g>
<g >
<title>ip_local_out (186 samples, 1.12%)</title><rect x="1173.2" y="869" width="13.2" height="15.0" fill="rgb(219,106,49)" rx="2" ry="2" />
<text  x="1176.22" y="879.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (15 samples, 0.09%)</title><rect x="999.1" y="773" width="1.1" height="15.0" fill="rgb(212,65,21)" rx="2" ry="2" />
<text  x="1002.13" y="783.5" ></text>
</g>
<g >
<title>absl::string_view::find_first_not_of(absl::string_view, unsigned long) const (2 samples, 0.01%)</title><rect x="807.0" y="1061" width="0.2" height="15.0" fill="rgb(241,115,34)" rx="2" ry="2" />
<text  x="810.05" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Http::ResponseHeaderMapImpl::inlineHeaders() (2 samples, 0.01%)</title><rect x="975.4" y="933" width="0.1" height="15.0" fill="rgb(231,0,25)" rx="2" ry="2" />
<text  x="978.38" y="943.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (52 samples, 0.31%)</title><rect x="1158.1" y="309" width="3.7" height="15.0" fill="rgb(227,206,27)" rx="2" ry="2" />
<text  x="1161.07" y="319.5" ></text>
</g>
<g >
<title>evmap_io_add_ (30 samples, 0.18%)</title><rect x="743.9" y="853" width="2.1" height="15.0" fill="rgb(218,16,20)" rx="2" ry="2" />
<text  x="746.90" y="863.5" ></text>
</g>
<g >
<title>sock_poll (3 samples, 0.02%)</title><rect x="645.7" y="1157" width="0.2" height="15.0" fill="rgb(250,31,39)" rx="2" ry="2" />
<text  x="648.69" y="1167.5" ></text>
</g>
<g >
<title>time.Time.Format (40 samples, 0.24%)</title><rect x="227.8" y="1237" width="2.9" height="15.0" fill="rgb(238,5,35)" rx="2" ry="2" />
<text  x="230.82" y="1247.5" ></text>
</g>
<g >
<title>process_backlog (326 samples, 1.96%)</title><rect x="562.9" y="741" width="23.2" height="15.0" fill="rgb(242,165,39)" rx="2" ry="2" />
<text  x="565.91" y="751.5" >p..</text>
</g>
<g >
<title>__check_object_size (7 samples, 0.04%)</title><rect x="513.9" y="949" width="0.5" height="15.0" fill="rgb(220,153,44)" rx="2" ry="2" />
<text  x="516.92" y="959.5" ></text>
</g>
<g >
<title>do_nanosleep (3 samples, 0.02%)</title><rect x="545.7" y="1125" width="0.2" height="15.0" fill="rgb(247,55,27)" rx="2" ry="2" />
<text  x="548.70" y="1135.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::setResponseCodeDetails(absl::string_view) (5 samples, 0.03%)</title><rect x="734.5" y="965" width="0.4" height="15.0" fill="rgb(250,176,48)" rx="2" ry="2" />
<text  x="737.51" y="975.5" ></text>
</g>
<g >
<title>ip_output (2 samples, 0.01%)</title><rect x="1145.8" y="869" width="0.2" height="15.0" fill="rgb(227,41,8)" rx="2" ry="2" />
<text  x="1148.84" y="879.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::checkHeaderNameForUnderscores() (2 samples, 0.01%)</title><rect x="804.4" y="1061" width="0.2" height="15.0" fill="rgb(248,74,32)" rx="2" ry="2" />
<text  x="807.42" y="1071.5" ></text>
</g>
<g >
<title>ip_output (21 samples, 0.13%)</title><rect x="1159.5" y="197" width="1.5" height="15.0" fill="rgb(206,75,49)" rx="2" ry="2" />
<text  x="1162.49" y="207.5" ></text>
</g>
<g >
<title>proxy_wasm::ContextBase::onResponseHeaders(unsigned int, bool) (40 samples, 0.24%)</title><rect x="981.4" y="949" width="2.9" height="15.0" fill="rgb(221,76,37)" rx="2" ry="2" />
<text  x="984.42" y="959.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::staticLookup(absl::string_view) (10 samples, 0.06%)</title><rect x="1030.1" y="757" width="0.7" height="15.0" fill="rgb(249,146,13)" rx="2" ry="2" />
<text  x="1033.13" y="767.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::operator=(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) (3 samples, 0.02%)</title><rect x="1009.9" y="869" width="0.2" height="15.0" fill="rgb(236,187,26)" rx="2" ry="2" />
<text  x="1012.87" y="879.5" ></text>
</g>
<g >
<title>__x64_sys_futex (48 samples, 0.29%)</title><rect x="594.3" y="1173" width="3.5" height="15.0" fill="rgb(220,124,20)" rx="2" ry="2" />
<text  x="597.35" y="1183.5" ></text>
</g>
<g >
<title>do_futex (12 samples, 0.07%)</title><rect x="508.4" y="1109" width="0.8" height="15.0" fill="rgb(227,21,45)" rx="2" ry="2" />
<text  x="511.37" y="1119.5" ></text>
</g>
<g >
<title>aa_file_perm (2 samples, 0.01%)</title><rect x="537.8" y="1029" width="0.2" height="15.0" fill="rgb(250,18,40)" rx="2" ry="2" />
<text  x="540.81" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::decodeData(Envoy::Buffer::Instance&amp;, bool) (12 samples, 0.07%)</title><rect x="1121.3" y="1029" width="0.9" height="15.0" fill="rgb(218,137,12)" rx="2" ry="2" />
<text  x="1124.30" y="1039.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (2 samples, 0.01%)</title><rect x="878.5" y="853" width="0.2" height="15.0" fill="rgb(248,112,45)" rx="2" ry="2" />
<text  x="881.52" y="863.5" ></text>
</g>
<g >
<title>flannel (3 samples, 0.02%)</title><rect x="658.7" y="1381" width="0.2" height="15.0" fill="rgb(220,227,5)" rx="2" ry="2" />
<text  x="661.70" y="1391.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Network::ConnectionImpl::connectionInfoProvider() const (2 samples, 0.01%)</title><rect x="1113.3" y="1029" width="0.2" height="15.0" fill="rgb(244,147,40)" rx="2" ry="2" />
<text  x="1116.34" y="1039.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::~StreamInfoImpl() (6 samples, 0.04%)</title><rect x="962.8" y="1221" width="0.4" height="15.0" fill="rgb(240,223,27)" rx="2" ry="2" />
<text  x="965.79" y="1231.5" ></text>
</g>
<g >
<title>runtime.notewakeup (49 samples, 0.30%)</title><rect x="126.2" y="1125" width="3.5" height="15.0" fill="rgb(225,144,21)" rx="2" ry="2" />
<text  x="129.20" y="1135.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (6 samples, 0.04%)</title><rect x="164.5" y="1077" width="0.5" height="15.0" fill="rgb(245,204,11)" rx="2" ry="2" />
<text  x="167.53" y="1087.5" ></text>
</g>
<g >
<title>ip_finish_output (19 samples, 0.11%)</title><rect x="1159.5" y="181" width="1.3" height="15.0" fill="rgb(247,180,40)" rx="2" ry="2" />
<text  x="1162.49" y="191.5" ></text>
</g>
<g >
<title>bictcp_cwnd_event (2 samples, 0.01%)</title><rect x="934.1" y="901" width="0.1" height="15.0" fill="rgb(233,21,6)" rx="2" ry="2" />
<text  x="937.06" y="911.5" ></text>
</g>
<g >
<title>Envoy::Router::InternalRedirectPolicyImpl::enabled() const (2 samples, 0.01%)</title><rect x="989.5" y="997" width="0.2" height="15.0" fill="rgb(236,228,52)" rx="2" ry="2" />
<text  x="992.53" y="1007.5" ></text>
</g>
<g >
<title>vfs_write (646 samples, 3.89%)</title><rect x="546.6" y="1125" width="46.0" height="15.0" fill="rgb(247,167,21)" rx="2" ry="2" />
<text  x="549.63" y="1135.5" >vfs_..</text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::CastingValueFromMessageFactory&lt;google::protobuf::Struct&gt;::CreateValue(google::protobuf::Message const*, google::protobuf::Arena*) const (3 samples, 0.02%)</title><rect x="773.1" y="741" width="0.2" height="15.0" fill="rgb(217,41,26)" rx="2" ry="2" />
<text  x="776.13" y="751.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (4 samples, 0.02%)</title><rect x="745.1" y="725" width="0.3" height="15.0" fill="rgb(208,167,51)" rx="2" ry="2" />
<text  x="748.11" y="735.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (3 samples, 0.02%)</title><rect x="1067.3" y="933" width="0.2" height="15.0" fill="rgb(235,212,20)" rx="2" ry="2" />
<text  x="1070.26" y="943.5" ></text>
</g>
<g >
<title>wake_up_q (359 samples, 2.16%)</title><rect x="459.5" y="933" width="25.5" height="15.0" fill="rgb(247,195,53)" rx="2" ry="2" />
<text  x="462.51" y="943.5" >w..</text>
</g>
<g >
<title>__ip_finish_output (2 samples, 0.01%)</title><rect x="1145.8" y="837" width="0.2" height="15.0" fill="rgb(243,183,10)" rx="2" ry="2" />
<text  x="1148.84" y="847.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getProperty(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (15 samples, 0.09%)</title><rect x="857.8" y="901" width="1.1" height="15.0" fill="rgb(237,85,3)" rx="2" ry="2" />
<text  x="860.82" y="911.5" ></text>
</g>
<g >
<title>local.runtime.updateTimerPMask (5 samples, 0.03%)</title><rect x="201.0" y="1205" width="0.4" height="15.0" fill="rgb(234,145,47)" rx="2" ry="2" />
<text  x="204.01" y="1215.5" ></text>
</g>
<g >
<title>generic_make_request (2 samples, 0.01%)</title><rect x="659.0" y="1173" width="0.1" height="15.0" fill="rgb(242,39,14)" rx="2" ry="2" />
<text  x="661.99" y="1183.5" ></text>
</g>
<g >
<title>Envoy::BasicResourceLimitImpl::max() (5 samples, 0.03%)</title><rect x="994.2" y="965" width="0.3" height="15.0" fill="rgb(207,70,35)" rx="2" ry="2" />
<text  x="997.15" y="975.5" ></text>
</g>
<g >
<title>apparmor_file_permission (3 samples, 0.02%)</title><rect x="918.2" y="1029" width="0.2" height="15.0" fill="rgb(221,139,24)" rx="2" ry="2" />
<text  x="921.20" y="1039.5" ></text>
</g>
<g >
<title>local.runtime.findObject (7 samples, 0.04%)</title><rect x="255.9" y="1285" width="0.5" height="15.0" fill="rgb(221,0,41)" rx="2" ry="2" />
<text  x="258.91" y="1295.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::maybeCreateInline(Envoy::Http::HeaderMapImpl::HeaderEntryImpl**, Envoy::Http::LowerCaseString const&amp;, Envoy::Http::HeaderString&amp;&amp;) (4 samples, 0.02%)</title><rect x="880.6" y="1045" width="0.3" height="15.0" fill="rgb(207,173,14)" rx="2" ry="2" />
<text  x="883.58" y="1055.5" ></text>
</g>
<g >
<title>void std::__1::vector&lt;Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation, std::__1::allocator&lt;Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation&gt; &gt;::__emplace_back_slow_path&lt;Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation&gt;(Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation&amp;&amp;) (8 samples, 0.05%)</title><rect x="1009.5" y="885" width="0.6" height="15.0" fill="rgb(242,168,6)" rx="2" ry="2" />
<text  x="1012.51" y="895.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerUtility::mutateTracingRequestHeader(Envoy::Http::RequestHeaderMap&amp;, Envoy::Runtime::Loader&amp;, Envoy::Http::ConnectionManagerConfig&amp;, Envoy::Router::Route const*) (19 samples, 0.11%)</title><rect x="1075.4" y="1029" width="1.3" height="15.0" fill="rgb(213,170,54)" rx="2" ry="2" />
<text  x="1078.36" y="1039.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::get_property(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (61 samples, 0.37%)</title><rect x="765.1" y="805" width="4.3" height="15.0" fill="rgb(228,130,43)" rx="2" ry="2" />
<text  x="768.09" y="815.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::encodeData(Envoy::Buffer::Instance&amp;, bool) (6 samples, 0.04%)</title><rect x="869.3" y="981" width="0.5" height="15.0" fill="rgb(216,209,27)" rx="2" ry="2" />
<text  x="872.35" y="991.5" ></text>
</g>
<g >
<title>ip_queue_xmit (5 samples, 0.03%)</title><rect x="1145.6" y="917" width="0.4" height="15.0" fill="rgb(206,114,24)" rx="2" ry="2" />
<text  x="1148.62" y="927.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (3 samples, 0.02%)</title><rect x="439.2" y="917" width="0.3" height="15.0" fill="rgb(243,170,28)" rx="2" ry="2" />
<text  x="442.25" y="927.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="1114.5" y="997" width="0.2" height="15.0" fill="rgb(250,73,26)" rx="2" ry="2" />
<text  x="1117.55" y="1007.5" ></text>
</g>
<g >
<title>tcp_update_skb_after_send (2 samples, 0.01%)</title><rect x="590.2" y="933" width="0.1" height="15.0" fill="rgb(218,187,9)" rx="2" ry="2" />
<text  x="593.15" y="943.5" ></text>
</g>
<g >
<title>ext4_inode_table (2 samples, 0.01%)</title><rect x="245.8" y="1045" width="0.2" height="15.0" fill="rgb(232,208,8)" rx="2" ry="2" />
<text  x="248.82" y="1055.5" ></text>
</g>
<g >
<title>finish_task_switch (19 samples, 0.11%)</title><rect x="646.1" y="1125" width="1.4" height="15.0" fill="rgb(224,113,15)" rx="2" ry="2" />
<text  x="649.12" y="1135.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Extensions::Common::Wasm::Context::decodeHeaders(Envoy::Http::RequestHeaderMap&amp;, bool) (68 samples, 0.41%)</title><rect x="1106.3" y="1013" width="4.8" height="15.0" fill="rgb(225,140,36)" rx="2" ry="2" />
<text  x="1109.30" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::~FilterManager() (44 samples, 0.27%)</title><rect x="960.6" y="1237" width="3.1" height="15.0" fill="rgb(224,134,33)" rx="2" ry="2" />
<text  x="963.59" y="1247.5" ></text>
</g>
<g >
<title>skb_release_all (6 samples, 0.04%)</title><rect x="565.5" y="517" width="0.4" height="15.0" fill="rgb(216,125,47)" rx="2" ry="2" />
<text  x="568.47" y="527.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::onUpstreamHostSelected(std::__1::shared_ptr&lt;Envoy::Upstream::HostDescription const&gt;) (3 samples, 0.02%)</title><rect x="1092.9" y="885" width="0.2" height="15.0" fill="rgb(247,142,32)" rx="2" ry="2" />
<text  x="1095.93" y="895.5" ></text>
</g>
<g >
<title>net_rx_action (124 samples, 0.75%)</title><rect x="924.5" y="725" width="8.8" height="15.0" fill="rgb(240,13,46)" rx="2" ry="2" />
<text  x="927.46" y="735.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (4 samples, 0.02%)</title><rect x="657.6" y="1301" width="0.3" height="15.0" fill="rgb(219,37,18)" rx="2" ry="2" />
<text  x="660.64" y="1311.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (3 samples, 0.02%)</title><rect x="133.2" y="1029" width="0.2" height="15.0" fill="rgb(207,123,6)" rx="2" ry="2" />
<text  x="136.17" y="1039.5" ></text>
</g>
<g >
<title>do_futex (28 samples, 0.17%)</title><rect x="173.6" y="1109" width="2.0" height="15.0" fill="rgb(218,92,21)" rx="2" ry="2" />
<text  x="176.56" y="1119.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (2 samples, 0.01%)</title><rect x="237.9" y="1045" width="0.1" height="15.0" fill="rgb(230,210,11)" rx="2" ry="2" />
<text  x="240.85" y="1055.5" ></text>
</g>
<g >
<title>sch_direct_xmit (9 samples, 0.05%)</title><rect x="910.7" y="101" width="0.7" height="15.0" fill="rgb(229,105,3)" rx="2" ry="2" />
<text  x="913.73" y="111.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::addImpl(void const*, unsigned long) (6 samples, 0.04%)</title><rect x="1088.3" y="805" width="0.4" height="15.0" fill="rgb(244,4,38)" rx="2" ry="2" />
<text  x="1091.31" y="815.5" ></text>
</g>
<g >
<title>schedule (38 samples, 0.23%)</title><rect x="116.5" y="1189" width="2.7" height="15.0" fill="rgb(227,169,14)" rx="2" ry="2" />
<text  x="119.46" y="1199.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (425 samples, 2.56%)</title><rect x="138.9" y="1221" width="30.3" height="15.0" fill="rgb(210,71,6)" rx="2" ry="2" />
<text  x="141.93" y="1231.5" >en..</text>
</g>
<g >
<title>proxy_wasm::exports::get_property(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (55 samples, 0.33%)</title><rect x="1031.7" y="837" width="3.9" height="15.0" fill="rgb(253,202,18)" rx="2" ry="2" />
<text  x="1034.70" y="847.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::add(absl::string_view) (3 samples, 0.02%)</title><rect x="977.0" y="853" width="0.2" height="15.0" fill="rgb(226,212,4)" rx="2" ry="2" />
<text  x="980.01" y="863.5" ></text>
</g>
<g >
<title>rw_verify_area (6 samples, 0.04%)</title><rect x="246.7" y="1173" width="0.5" height="15.0" fill="rgb(254,94,51)" rx="2" ry="2" />
<text  x="249.74" y="1183.5" ></text>
</g>
<g >
<title>ep_remove (12 samples, 0.07%)</title><rect x="742.3" y="741" width="0.9" height="15.0" fill="rgb(213,141,20)" rx="2" ry="2" />
<text  x="745.34" y="751.5" ></text>
</g>
<g >
<title>vfs_readv (95 samples, 0.57%)</title><rect x="1143.2" y="1093" width="6.8" height="15.0" fill="rgb(227,8,33)" rx="2" ry="2" />
<text  x="1146.21" y="1103.5" ></text>
</g>
<g >
<title>Envoy::ThreadLocal::InstanceImpl::SlotImpl::get() (2 samples, 0.01%)</title><rect x="1080.7" y="981" width="0.1" height="15.0" fill="rgb(246,224,54)" rx="2" ry="2" />
<text  x="1083.70" y="991.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.01%)</title><rect x="1156.1" y="773" width="0.1" height="15.0" fill="rgb(213,55,26)" rx="2" ry="2" />
<text  x="1159.08" y="783.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (6 samples, 0.04%)</title><rect x="1144.9" y="901" width="0.4" height="15.0" fill="rgb(253,211,16)" rx="2" ry="2" />
<text  x="1147.91" y="911.5" ></text>
</g>
<g >
<title>do_nanosleep (3 samples, 0.02%)</title><rect x="629.8" y="1173" width="0.2" height="15.0" fill="rgb(230,11,41)" rx="2" ry="2" />
<text  x="632.76" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Stats::SymbolTableImpl::join(absl::InlinedVector&lt;Envoy::Stats::StatName, 8ul, std::__1::allocator&lt;Envoy::Stats::StatName&gt; &gt; const&amp;) const (3 samples, 0.02%)</title><rect x="985.1" y="917" width="0.2" height="15.0" fill="rgb(220,184,40)" rx="2" ry="2" />
<text  x="988.12" y="927.5" ></text>
</g>
<g >
<title>__lock_text_start (26 samples, 0.16%)</title><rect x="173.7" y="1029" width="1.9" height="15.0" fill="rgb(214,112,22)" rx="2" ry="2" />
<text  x="176.71" y="1039.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.01%)</title><rect x="623.4" y="1141" width="0.2" height="15.0" fill="rgb(254,110,52)" rx="2" ry="2" />
<text  x="626.43" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::findValue(absl::string_view, google::protobuf::Arena*, bool) const (12 samples, 0.07%)</title><rect x="1023.5" y="789" width="0.8" height="15.0" fill="rgb(233,104,35)" rx="2" ry="2" />
<text  x="1026.45" y="799.5" ></text>
</g>
<g >
<title>do_syscall_64 (18 samples, 0.11%)</title><rect x="167.8" y="1189" width="1.3" height="15.0" fill="rgb(218,223,47)" rx="2" ry="2" />
<text  x="170.80" y="1199.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::StaticLookupTable&lt;Envoy::Http::RequestHeaderMap&gt;::lookup(Envoy::Http::HeaderMapImpl&amp;, absl::string_view) (3 samples, 0.02%)</title><rect x="861.2" y="853" width="0.3" height="15.0" fill="rgb(245,215,44)" rx="2" ry="2" />
<text  x="864.24" y="863.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.01%)</title><rect x="33.7" y="965" width="0.1" height="15.0" fill="rgb(254,133,18)" rx="2" ry="2" />
<text  x="36.68" y="975.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="918.6" y="1125" width="0.2" height="15.0" fill="rgb(230,169,6)" rx="2" ry="2" />
<text  x="921.56" y="1135.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (5 samples, 0.03%)</title><rect x="1164.5" y="597" width="0.3" height="15.0" fill="rgb(227,107,39)" rx="2" ry="2" />
<text  x="1167.47" y="607.5" ></text>
</g>
<g >
<title>__lock_text_start (34 samples, 0.20%)</title><rect x="614.9" y="1109" width="2.4" height="15.0" fill="rgb(227,112,24)" rx="2" ry="2" />
<text  x="617.90" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestHeaderMapImpl::getByKey(absl::string_view) const (7 samples, 0.04%)</title><rect x="1070.1" y="949" width="0.5" height="15.0" fill="rgb(226,56,9)" rx="2" ry="2" />
<text  x="1073.10" y="959.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderString::rtrim() (2 samples, 0.01%)</title><rect x="1055.9" y="1045" width="0.1" height="15.0" fill="rgb(234,80,24)" rx="2" ry="2" />
<text  x="1058.88" y="1055.5" ></text>
</g>
<g >
<title>github.com/docker/docker/api/server/middleware.VersionMiddleware.WrapHandler.func1 (19 samples, 0.11%)</title><rect x="250.8" y="1253" width="1.3" height="15.0" fill="rgb(231,55,5)" rx="2" ry="2" />
<text  x="253.79" y="1263.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation::~BinaryAnnotation() (2 samples, 0.01%)</title><rect x="756.6" y="885" width="0.2" height="15.0" fill="rgb(209,149,36)" rx="2" ry="2" />
<text  x="759.63" y="895.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestHeaderMapImpl::constInlineHeaders() const (2 samples, 0.01%)</title><rect x="1115.6" y="1045" width="0.2" height="15.0" fill="rgb(247,213,39)" rx="2" ry="2" />
<text  x="1118.61" y="1055.5" ></text>
</g>
<g >
<title>__dev_forward_skb (2 samples, 0.01%)</title><rect x="1165.7" y="725" width="0.1" height="15.0" fill="rgb(232,164,32)" rx="2" ry="2" />
<text  x="1168.68" y="735.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ThreadSafeArena::~ThreadSafeArena() (6 samples, 0.04%)</title><rect x="1028.7" y="789" width="0.4" height="15.0" fill="rgb(212,134,14)" rx="2" ry="2" />
<text  x="1031.71" y="799.5" ></text>
</g>
<g >
<title>memset_erms (2 samples, 0.01%)</title><rect x="557.5" y="949" width="0.2" height="15.0" fill="rgb(219,99,3)" rx="2" ry="2" />
<text  x="560.51" y="959.5" ></text>
</g>
<g >
<title>ip_vs_local_request4 (5 samples, 0.03%)</title><rect x="559.8" y="853" width="0.3" height="15.0" fill="rgb(213,214,24)" rx="2" ry="2" />
<text  x="562.78" y="863.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Upstreams::Http::Generic::GenericGenericConnPoolFactory::createGenericConnPool(Envoy::Upstream::ThreadLocalCluster&amp;, bool, Envoy::Router::RouteEntry const&amp;, absl::optional&lt;Envoy::Http::Protocol&gt;, Envoy::Upstream::LoadBalancerContext*) const (27 samples, 0.16%)</title><rect x="1099.2" y="981" width="1.9" height="15.0" fill="rgb(205,8,45)" rx="2" ry="2" />
<text  x="1102.19" y="991.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::addImpl(void const*, unsigned long) (3 samples, 0.02%)</title><rect x="882.3" y="1093" width="0.2" height="15.0" fill="rgb(242,1,4)" rx="2" ry="2" />
<text  x="885.29" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Stats::StatsMatcherImpl::rejectsAll() const (2 samples, 0.01%)</title><rect x="798.0" y="933" width="0.2" height="15.0" fill="rgb(246,159,42)" rx="2" ry="2" />
<text  x="801.02" y="943.5" ></text>
</g>
<g >
<title>futex_wait (16 samples, 0.10%)</title><rect x="134.1" y="997" width="1.1" height="15.0" fill="rgb(239,190,36)" rx="2" ry="2" />
<text  x="137.09" y="1007.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_fn (4 samples, 0.02%)</title><rect x="1166.7" y="805" width="0.3" height="15.0" fill="rgb(210,37,18)" rx="2" ry="2" />
<text  x="1169.67" y="815.5" ></text>
</g>
<g >
<title>do_epoll_wait (2 samples, 0.01%)</title><rect x="598.5" y="1173" width="0.1" height="15.0" fill="rgb(223,194,24)" rx="2" ry="2" />
<text  x="601.47" y="1183.5" ></text>
</g>
<g >
<title>__lock_text_start (246 samples, 1.48%)</title><rect x="566.3" y="485" width="17.5" height="15.0" fill="rgb(252,213,41)" rx="2" ry="2" />
<text  x="569.33" y="495.5" ></text>
</g>
<g >
<title>__ip_finish_output (169 samples, 1.02%)</title><rect x="1174.1" y="821" width="12.0" height="15.0" fill="rgb(231,82,51)" rx="2" ry="2" />
<text  x="1177.07" y="831.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::callAndClearDrainTrackersAndCharges() (2 samples, 0.01%)</title><rect x="1134.8" y="1109" width="0.2" height="15.0" fill="rgb(253,152,50)" rx="2" ry="2" />
<text  x="1137.82" y="1119.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (11 samples, 0.07%)</title><rect x="241.8" y="1029" width="0.8" height="15.0" fill="rgb(245,103,39)" rx="2" ry="2" />
<text  x="244.83" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (1,052 samples, 6.34%)</title><rect x="1057.4" y="1173" width="74.8" height="15.0" fill="rgb(213,70,6)" rx="2" ry="2" />
<text  x="1060.37" y="1183.5" >Envoy::H..</text>
</g>
<g >
<title>do_signal (2 samples, 0.01%)</title><rect x="657.4" y="1237" width="0.1" height="15.0" fill="rgb(250,122,26)" rx="2" ry="2" />
<text  x="660.35" y="1247.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelProtoWrapper::CreateMessage(google::protobuf::Message const*, google::protobuf::Arena*) (2 samples, 0.01%)</title><rect x="765.4" y="757" width="0.2" height="15.0" fill="rgb(241,84,43)" rx="2" ry="2" />
<text  x="768.45" y="767.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_28, std::__1::allocator&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_28&gt;, proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;::operator()(proxy_wasm::ContextBase*&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;) (2 samples, 0.01%)</title><rect x="803.0" y="965" width="0.1" height="15.0" fill="rgb(237,124,11)" rx="2" ry="2" />
<text  x="806.00" y="975.5" ></text>
</g>
<g >
<title>event_add_nolock_ (2 samples, 0.01%)</title><rect x="724.1" y="853" width="0.1" height="15.0" fill="rgb(218,106,40)" rx="2" ry="2" />
<text  x="727.06" y="863.5" ></text>
</g>
<g >
<title>udp4_gro_receive (2 samples, 0.01%)</title><rect x="484.7" y="725" width="0.1" height="15.0" fill="rgb(228,187,8)" rx="2" ry="2" />
<text  x="487.69" y="735.5" ></text>
</g>
<g >
<title>mutex_spin_on_owner (2 samples, 0.01%)</title><rect x="198.0" y="1061" width="0.1" height="15.0" fill="rgb(220,47,20)" rx="2" ry="2" />
<text  x="200.96" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedBufferFragmentImpl::size() const (2 samples, 0.01%)</title><rect x="746.3" y="917" width="0.2" height="15.0" fill="rgb(246,107,38)" rx="2" ry="2" />
<text  x="749.32" y="927.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (4 samples, 0.02%)</title><rect x="35.1" y="1045" width="0.3" height="15.0" fill="rgb(223,8,9)" rx="2" ry="2" />
<text  x="38.10" y="1055.5" ></text>
</g>
<g >
<title>dst_cache_get_ip4 (2 samples, 0.01%)</title><rect x="1161.3" y="229" width="0.1" height="15.0" fill="rgb(207,171,5)" rx="2" ry="2" />
<text  x="1164.27" y="239.5" ></text>
</g>
<g >
<title>nf_nat_inet_fn (2 samples, 0.01%)</title><rect x="933.8" y="773" width="0.2" height="15.0" fill="rgb(252,201,34)" rx="2" ry="2" />
<text  x="936.85" y="783.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (5 samples, 0.03%)</title><rect x="1145.6" y="901" width="0.4" height="15.0" fill="rgb(206,30,7)" rx="2" ry="2" />
<text  x="1148.62" y="911.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::DynamicMap::operator[](google::api::expr::runtime::CelValue) const (2 samples, 0.01%)</title><rect x="1038.3" y="741" width="0.2" height="15.0" fill="rgb(253,209,33)" rx="2" ry="2" />
<text  x="1041.31" y="751.5" ></text>
</g>
<g >
<title>Envoy::Stats::AllocatorImpl::symbolTable() (3 samples, 0.02%)</title><rect x="984.8" y="917" width="0.2" height="15.0" fill="rgb(217,206,23)" rx="2" ry="2" />
<text  x="987.84" y="927.5" ></text>
</g>
<g >
<title>pipe_read (25 samples, 0.15%)</title><rect x="96.3" y="1141" width="1.8" height="15.0" fill="rgb(236,194,7)" rx="2" ry="2" />
<text  x="99.33" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ResponseEncoderImpl::encodeHeaders(Envoy::Http::ResponseHeaderMap const&amp;, bool) (49 samples, 0.30%)</title><rect x="721.4" y="949" width="3.5" height="15.0" fill="rgb(206,187,17)" rx="2" ry="2" />
<text  x="724.43" y="959.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (4 samples, 0.02%)</title><rect x="100.1" y="1285" width="0.3" height="15.0" fill="rgb(239,142,37)" rx="2" ry="2" />
<text  x="103.10" y="1295.5" ></text>
</g>
<g >
<title>vfs_writev (202 samples, 1.22%)</title><rect x="1153.9" y="1093" width="14.4" height="15.0" fill="rgb(246,157,42)" rx="2" ry="2" />
<text  x="1156.95" y="1103.5" ></text>
</g>
<g >
<title>epoll_dispatch (8 samples, 0.05%)</title><rect x="947.0" y="1301" width="0.6" height="15.0" fill="rgb(211,57,44)" rx="2" ry="2" />
<text  x="950.00" y="1311.5" ></text>
</g>
<g >
<title>finish_task_switch (108 samples, 0.65%)</title><rect x="648.6" y="1173" width="7.7" height="15.0" fill="rgb(210,91,17)" rx="2" ry="2" />
<text  x="651.61" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::SpanContextExtractor::extractSampled(Envoy::Tracing::Decision) (9 samples, 0.05%)</title><rect x="821.3" y="981" width="0.6" height="15.0" fill="rgb(244,52,32)" rx="2" ry="2" />
<text  x="824.27" y="991.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.02%)</title><rect x="1131.5" y="1109" width="0.3" height="15.0" fill="rgb(218,147,6)" rx="2" ry="2" />
<text  x="1134.54" y="1119.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (4 samples, 0.02%)</title><rect x="604.2" y="1189" width="0.2" height="15.0" fill="rgb(229,98,5)" rx="2" ry="2" />
<text  x="607.16" y="1199.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="1156.3" y="613" width="0.1" height="15.0" fill="rgb(243,92,16)" rx="2" ry="2" />
<text  x="1159.29" y="623.5" ></text>
</g>
<g >
<title>ret_from_fork (4 samples, 0.02%)</title><rect x="659.9" y="1365" width="0.3" height="15.0" fill="rgb(227,112,10)" rx="2" ry="2" />
<text  x="662.91" y="1375.5" ></text>
</g>
<g >
<title>runtime.entersyscall (16 samples, 0.10%)</title><rect x="169.2" y="1221" width="1.1" height="15.0" fill="rgb(243,101,37)" rx="2" ry="2" />
<text  x="172.15" y="1231.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="624.0" y="1141" width="0.1" height="15.0" fill="rgb(228,202,22)" rx="2" ry="2" />
<text  x="627.00" y="1151.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (294 samples, 1.77%)</title><rect x="563.7" y="597" width="20.9" height="15.0" fill="rgb(210,111,1)" rx="2" ry="2" />
<text  x="566.70" y="607.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::get_header_map_value(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (5 samples, 0.03%)</title><rect x="1110.7" y="933" width="0.4" height="15.0" fill="rgb(216,72,44)" rx="2" ry="2" />
<text  x="1113.71" y="943.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Router::PrefixRouteEntryImpl::matches(Envoy::Http::RequestHeaderMap const&amp;, Envoy::StreamInfo::StreamInfo const&amp;, unsigned long) const (2 samples, 0.01%)</title><rect x="819.9" y="997" width="0.2" height="15.0" fill="rgb(249,26,24)" rx="2" ry="2" />
<text  x="822.92" y="1007.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::DynamicMap::DynamicMapKeyList::operator[](int) const (14 samples, 0.08%)</title><rect x="1019.1" y="757" width="1.0" height="15.0" fill="rgb(215,70,23)" rx="2" ry="2" />
<text  x="1022.11" y="767.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (4 samples, 0.02%)</title><rect x="249.9" y="1301" width="0.3" height="15.0" fill="rgb(218,143,25)" rx="2" ry="2" />
<text  x="252.94" y="1311.5" ></text>
</g>
<g >
<title>finish_task_switch (8 samples, 0.05%)</title><rect x="510.0" y="1029" width="0.6" height="15.0" fill="rgb(237,10,15)" rx="2" ry="2" />
<text  x="513.00" y="1039.5" ></text>
</g>
<g >
<title>file_update_time (17 samples, 0.10%)</title><rect x="237.6" y="1109" width="1.2" height="15.0" fill="rgb(205,65,38)" rx="2" ry="2" />
<text  x="240.64" y="1119.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::basic_string(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) (3 samples, 0.02%)</title><rect x="1068.0" y="997" width="0.2" height="15.0" fill="rgb(254,6,9)" rx="2" ry="2" />
<text  x="1070.97" y="1007.5" ></text>
</g>
<g >
<title>nf_conntrack_udp_packet (2 samples, 0.01%)</title><rect x="910.2" y="117" width="0.1" height="15.0" fill="rgb(238,114,52)" rx="2" ry="2" />
<text  x="913.17" y="127.5" ></text>
</g>
<g >
<title>Envoy::Upstream::HostDescriptionImpl::outlierDetector() const (2 samples, 0.01%)</title><rect x="989.8" y="997" width="0.2" height="15.0" fill="rgb(242,224,46)" rx="2" ry="2" />
<text  x="992.81" y="1007.5" ></text>
</g>
<g >
<title>github.com/docker/docker/daemon.(*Daemon).reduceContainers (11 samples, 0.07%)</title><rect x="250.8" y="1173" width="0.8" height="15.0" fill="rgb(218,3,19)" rx="2" ry="2" />
<text  x="253.79" y="1183.5" ></text>
</g>
<g >
<title>do_syscall_64 (237 samples, 1.43%)</title><rect x="1171.3" y="1141" width="16.9" height="15.0" fill="rgb(241,2,45)" rx="2" ry="2" />
<text  x="1174.30" y="1151.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::LookupMapValue(google::protobuf::Message const&amp;, google::protobuf::FieldDescriptor const*, google::protobuf::MapKey const&amp;, google::protobuf::MapValueConstRef*) const (6 samples, 0.04%)</title><rect x="1027.1" y="757" width="0.4" height="15.0" fill="rgb(205,144,4)" rx="2" ry="2" />
<text  x="1030.08" y="767.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (436 samples, 2.63%)</title><rect x="558.4" y="949" width="31.0" height="15.0" fill="rgb(207,180,37)" rx="2" ry="2" />
<text  x="561.43" y="959.5" >__..</text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::StreamInfoImpl(Envoy::TimeSource&amp;, std::__1::shared_ptr&lt;Envoy::Network::ConnectionInfoProvider const&gt; const&amp;, Envoy::StreamInfo::FilterState::LifeSpan) (4 samples, 0.02%)</title><rect x="1103.0" y="981" width="0.2" height="15.0" fill="rgb(229,27,49)" rx="2" ry="2" />
<text  x="1105.96" y="991.5" ></text>
</g>
<g >
<title>proxy_wasm::null_plugin::Stats::PluginRootContext::report(Wasm::Common::RequestInfo&amp;, bool) (443 samples, 2.67%)</title><rect x="761.6" y="869" width="31.5" height="15.0" fill="rgb(229,122,44)" rx="2" ry="2" />
<text  x="764.61" y="879.5" >pr..</text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::DynamicMap::operator[](google::api::expr::runtime::CelValue) const (10 samples, 0.06%)</title><rect x="773.4" y="789" width="0.7" height="15.0" fill="rgb(208,98,49)" rx="2" ry="2" />
<text  x="776.41" y="799.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.01%)</title><rect x="935.6" y="1029" width="0.2" height="15.0" fill="rgb(209,107,21)" rx="2" ry="2" />
<text  x="938.62" y="1039.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (2 samples, 0.01%)</title><rect x="916.8" y="901" width="0.2" height="15.0" fill="rgb(224,26,20)" rx="2" ry="2" />
<text  x="919.85" y="911.5" ></text>
</g>
<g >
<title>finish_task_switch (38 samples, 0.23%)</title><rect x="116.5" y="1157" width="2.7" height="15.0" fill="rgb(228,161,46)" rx="2" ry="2" />
<text  x="119.46" y="1167.5" ></text>
</g>
<g >
<title>absl::hash_internal::MixingHashState::combine_contiguous(absl::hash_internal::MixingHashState, unsigned char const*, unsigned long) (2 samples, 0.01%)</title><rect x="827.3" y="997" width="0.2" height="15.0" fill="rgb(253,6,19)" rx="2" ry="2" />
<text  x="830.32" y="1007.5" ></text>
</g>
<g >
<title>proxy_wasm::null_plugin::Context::asContext() (2 samples, 0.01%)</title><rect x="727.8" y="917" width="0.1" height="15.0" fill="rgb(233,211,0)" rx="2" ry="2" />
<text  x="730.76" y="927.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::~FilterStateImpl() (5 samples, 0.03%)</title><rect x="962.9" y="1205" width="0.3" height="15.0" fill="rgb(228,126,39)" rx="2" ry="2" />
<text  x="965.86" y="1215.5" ></text>
</g>
<g >
<title>std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, proxy_wasm::ContextBase*&gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, proxy_wasm::ContextBase*&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, proxy_wasm::ContextBase*&gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, proxy_wasm::ContextBase*&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, proxy_wasm::ContextBase*&gt; &gt; &gt;::__emplace_unique_key_args&lt;unsigned int, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;unsigned int const&amp;&gt;, std::__1::tuple&lt;&gt; &gt;(unsigned int const&amp;, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;unsigned int const&amp;&gt;&amp;&amp;, std::__1::tuple&lt;&gt;&amp;&amp;) (3 samples, 0.02%)</title><rect x="830.3" y="901" width="0.2" height="15.0" fill="rgb(238,38,11)" rx="2" ry="2" />
<text  x="833.30" y="911.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="509.6" y="1157" width="0.2" height="15.0" fill="rgb(226,102,3)" rx="2" ry="2" />
<text  x="512.58" y="1167.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.03%)</title><rect x="119.9" y="1189" width="0.3" height="15.0" fill="rgb(214,119,10)" rx="2" ry="2" />
<text  x="122.87" y="1199.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ThreadSafeArena::~ThreadSafeArena() (5 samples, 0.03%)</title><rect x="1034.3" y="805" width="0.4" height="15.0" fill="rgb(210,186,8)" rx="2" ry="2" />
<text  x="1037.33" y="815.5" ></text>
</g>
<g >
<title>Envoy::Tracing::MetadataCustomTag::apply(Envoy::Tracing::Span&amp;, Envoy::Tracing::CustomTagContext const&amp;) const (5 samples, 0.03%)</title><rect x="758.1" y="917" width="0.4" height="15.0" fill="rgb(241,83,9)" rx="2" ry="2" />
<text  x="761.12" y="927.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.0 (6 samples, 0.04%)</title><rect x="742.8" y="725" width="0.4" height="15.0" fill="rgb(239,99,35)" rx="2" ry="2" />
<text  x="745.76" y="735.5" ></text>
</g>
<g >
<title>Envoy::Stats::ThreadLocalStoreImpl::ScopeImpl::histogramFromStatNameWithTags(Envoy::Stats::StatName const&amp;, absl::optional&lt;std::__1::reference_wrapper&lt;std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; const&gt; &gt;, Envoy::Stats::Histogram::Unit) (2 samples, 0.01%)</title><rect x="800.4" y="965" width="0.1" height="15.0" fill="rgb(222,99,24)" rx="2" ry="2" />
<text  x="803.36" y="975.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Http::Http1::StreamEncoderImpl::encodeHeadersBase(Envoy::Http::RequestOrResponseHeaderMap const&amp;, absl::optional&lt;unsigned long&gt;, bool, bool)::$_0, std::__1::allocator&lt;Envoy::Http::Http1::StreamEncoderImpl::encodeHeadersBase(Envoy::Http::RequestOrResponseHeaderMap const&amp;, absl::optional&lt;unsigned long&gt;, bool, bool)::$_0&gt;, Envoy::Http::HeaderMap::Iterate (Envoy::Http::HeaderEntry const&amp;)&gt;::operator()(Envoy::Http::HeaderEntry const&amp;) (24 samples, 0.14%)</title><rect x="1089.3" y="773" width="1.7" height="15.0" fill="rgb(225,222,18)" rx="2" ry="2" />
<text  x="1092.30" y="783.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::Path() const (3 samples, 0.02%)</title><rect x="1082.6" y="997" width="0.2" height="15.0" fill="rgb(242,195,47)" rx="2" ry="2" />
<text  x="1085.62" y="1007.5" ></text>
</g>
<g >
<title>nf_hook_slow (2 samples, 0.01%)</title><rect x="933.8" y="837" width="0.2" height="15.0" fill="rgb(209,89,50)" rx="2" ry="2" />
<text  x="936.85" y="847.5" ></text>
</g>
<g >
<title>__sched_text_start (2 samples, 0.01%)</title><rect x="630.6" y="1141" width="0.2" height="15.0" fill="rgb(217,146,10)" rx="2" ry="2" />
<text  x="633.61" y="1151.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Http::FilterManager::decodeHeaders(Envoy::Http::ActiveStreamDecoderFilter*, Envoy::Http::RequestHeaderMap&amp;, bool)::$_0, std::__1::allocator&lt;Envoy::Http::FilterManager::decodeHeaders(Envoy::Http::ActiveStreamDecoderFilter*, Envoy::Http::RequestHeaderMap&amp;, bool)::$_0&gt;, void (Envoy::Http::Matching::HttpMatchingDataImpl&amp;)&gt;::destroy() (2 samples, 0.01%)</title><rect x="1113.1" y="1029" width="0.1" height="15.0" fill="rgb(240,156,27)" rx="2" ry="2" />
<text  x="1116.05" y="1039.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (2 samples, 0.01%)</title><rect x="240.5" y="1029" width="0.1" height="15.0" fill="rgb(221,78,0)" rx="2" ry="2" />
<text  x="243.48" y="1039.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (3 samples, 0.02%)</title><rect x="509.6" y="1173" width="0.2" height="15.0" fill="rgb(233,83,6)" rx="2" ry="2" />
<text  x="512.58" y="1183.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::removeTransferEncoding() (2 samples, 0.01%)</title><rect x="1112.8" y="1029" width="0.1" height="15.0" fill="rgb(224,126,35)" rx="2" ry="2" />
<text  x="1115.77" y="1039.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (51 samples, 0.31%)</title><rect x="196.2" y="1173" width="3.7" height="15.0" fill="rgb(249,106,54)" rx="2" ry="2" />
<text  x="199.25" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatchSlice(char const*, unsigned long) (1,331 samples, 8.02%)</title><rect x="712.9" y="1141" width="94.6" height="15.0" fill="rgb(220,123,8)" rx="2" ry="2" />
<text  x="715.89" y="1151.5" >Envoy::Http..</text>
</g>
<g >
<title>dev_hard_start_xmit (2 samples, 0.01%)</title><rect x="1156.3" y="453" width="0.1" height="15.0" fill="rgb(209,20,13)" rx="2" ry="2" />
<text  x="1159.29" y="463.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5, std::__1::allocator&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5&gt;, void (unsigned int)&gt;::operator()(unsigned int&amp;&amp;) (2 samples, 0.01%)</title><rect x="920.3" y="1285" width="0.1" height="15.0" fill="rgb(226,73,48)" rx="2" ry="2" />
<text  x="923.26" y="1295.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Router::PrefixRouteEntryImpl::matches(Envoy::Http::RequestHeaderMap const&amp;, Envoy::StreamInfo::StreamInfo const&amp;, unsigned long) const (4 samples, 0.02%)</title><rect x="819.6" y="981" width="0.3" height="15.0" fill="rgb(225,106,53)" rx="2" ry="2" />
<text  x="822.64" y="991.5" ></text>
</g>
<g >
<title>event_process_active_single_queue (3,275 samples, 19.74%)</title><rect x="703.5" y="1301" width="232.9" height="15.0" fill="rgb(226,125,45)" rx="2" ry="2" />
<text  x="706.51" y="1311.5" >event_process_active_single_qu..</text>
</g>
<g >
<title>irq_exit (3 samples, 0.02%)</title><rect x="509.6" y="1141" width="0.2" height="15.0" fill="rgb(210,168,33)" rx="2" ry="2" />
<text  x="512.58" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::findValue(absl::string_view, google::protobuf::Arena*, bool) const (15 samples, 0.09%)</title><rect x="771.1" y="789" width="1.0" height="15.0" fill="rgb(247,71,48)" rx="2" ry="2" />
<text  x="774.07" y="799.5" ></text>
</g>
<g >
<title>std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; Envoy::Http::HeaderMapImpl::HeaderList::insert&lt;Envoy::Http::HeaderString, Envoy::Http::HeaderString&gt;(Envoy::Http::HeaderString&amp;&amp;, Envoy::Http::HeaderString&amp;&amp;) (12 samples, 0.07%)</title><rect x="1084.7" y="949" width="0.8" height="15.0" fill="rgb(252,105,8)" rx="2" ry="2" />
<text  x="1087.68" y="959.5" ></text>
</g>
<g >
<title>[unknown] (112 samples, 0.67%)</title><rect x="670.8" y="1253" width="8.0" height="15.0" fill="rgb(209,149,12)" rx="2" ry="2" />
<text  x="673.79" y="1263.5" ></text>
</g>
<g >
<title>__lock_text_start (12 samples, 0.07%)</title><rect x="169.4" y="1029" width="0.8" height="15.0" fill="rgb(212,181,53)" rx="2" ry="2" />
<text  x="172.37" y="1039.5" ></text>
</g>
<g >
<title>std::__1::vector&lt;absl::strings_internal::ViableSubstitution, std::__1::allocator&lt;absl::strings_internal::ViableSubstitution&gt; &gt;::reserve(unsigned long) (2 samples, 0.01%)</title><rect x="988.6" y="917" width="0.1" height="15.0" fill="rgb(243,76,13)" rx="2" ry="2" />
<text  x="991.60" y="927.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.02%)</title><rect x="1171.3" y="1045" width="0.2" height="15.0" fill="rgb(213,154,24)" rx="2" ry="2" />
<text  x="1174.30" y="1055.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (163 samples, 0.98%)</title><rect x="923.1" y="949" width="11.6" height="15.0" fill="rgb(209,76,24)" rx="2" ry="2" />
<text  x="926.11" y="959.5" ></text>
</g>
<g >
<title>__vfs_write (115 samples, 0.69%)</title><rect x="75.6" y="1157" width="8.2" height="15.0" fill="rgb(219,209,4)" rx="2" ry="2" />
<text  x="78.64" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="827.5" y="1013" width="0.2" height="15.0" fill="rgb(232,95,1)" rx="2" ry="2" />
<text  x="830.53" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="1088.7" y="805" width="0.2" height="15.0" fill="rgb(225,134,16)" rx="2" ry="2" />
<text  x="1091.73" y="815.5" ></text>
</g>
<g >
<title>fsnotify (4 samples, 0.02%)</title><rect x="516.1" y="1045" width="0.3" height="15.0" fill="rgb(225,97,12)" rx="2" ry="2" />
<text  x="519.12" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::drainImpl(unsigned long) (2 samples, 0.01%)</title><rect x="1170.1" y="1173" width="0.1" height="15.0" fill="rgb(221,83,43)" rx="2" ry="2" />
<text  x="1173.09" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (1,434 samples, 8.64%)</title><rect x="11.0" y="1301" width="102.0" height="15.0" fill="rgb(250,62,0)" rx="2" ry="2" />
<text  x="14.00" y="1311.5" >[unknown]</text>
</g>
<g >
<title>github.com/docker/docker/daemon.(*Daemon).reducePsContainer (8 samples, 0.05%)</title><rect x="251.0" y="1157" width="0.6" height="15.0" fill="rgb(238,203,48)" rx="2" ry="2" />
<text  x="254.01" y="1167.5" ></text>
</g>
<g >
<title>__lock_text_start (36 samples, 0.22%)</title><rect x="126.8" y="981" width="2.6" height="15.0" fill="rgb(222,183,28)" rx="2" ry="2" />
<text  x="129.84" y="991.5" ></text>
</g>
<g >
<title>down_read (3 samples, 0.02%)</title><rect x="546.3" y="1109" width="0.2" height="15.0" fill="rgb(227,170,24)" rx="2" ry="2" />
<text  x="549.27" y="1119.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append(char const*) (3 samples, 0.02%)</title><rect x="793.3" y="869" width="0.2" height="15.0" fill="rgb(239,165,40)" rx="2" ry="2" />
<text  x="796.32" y="879.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::onUpstreamHostSelected(std::__1::shared_ptr&lt;Envoy::Upstream::HostDescription const&gt;) (3 samples, 0.02%)</title><rect x="1093.1" y="885" width="0.3" height="15.0" fill="rgb(237,134,10)" rx="2" ry="2" />
<text  x="1096.14" y="895.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Filters::Common::Expr::RequestWrapper::operator[](google::api::expr::runtime::CelValue) const (5 samples, 0.03%)</title><rect x="1033.4" y="805" width="0.4" height="15.0" fill="rgb(231,147,27)" rx="2" ry="2" />
<text  x="1036.41" y="815.5" ></text>
</g>
<g >
<title>xas_load (2 samples, 0.01%)</title><rect x="241.3" y="1013" width="0.1" height="15.0" fill="rgb(227,75,2)" rx="2" ry="2" />
<text  x="244.26" y="1023.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (156 samples, 0.94%)</title><rect x="1174.2" y="677" width="11.1" height="15.0" fill="rgb(249,140,53)" rx="2" ry="2" />
<text  x="1177.21" y="687.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/vendor/github.com/gorilla/mux.(*Router).ServeHTTP (19 samples, 0.11%)</title><rect x="250.8" y="1317" width="1.3" height="15.0" fill="rgb(216,137,34)" rx="2" ry="2" />
<text  x="253.79" y="1327.5" ></text>
</g>
<g >
<title>ksize (2 samples, 0.01%)</title><rect x="905.5" y="933" width="0.1" height="15.0" fill="rgb(207,157,15)" rx="2" ry="2" />
<text  x="908.47" y="943.5" ></text>
</g>
<g >
<title>Envoy::Network::SocketImpl::connectionInfoProvider() (3 samples, 0.02%)</title><rect x="867.0" y="1045" width="0.2" height="15.0" fill="rgb(225,75,14)" rx="2" ry="2" />
<text  x="870.00" y="1055.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ResponseHeaderMapImpl::Connection() const (2 samples, 0.01%)</title><rect x="717.6" y="997" width="0.1" height="15.0" fill="rgb(225,119,16)" rx="2" ry="2" />
<text  x="720.59" y="1007.5" ></text>
</g>
<g >
<title>proxy_wasm::ContextBase::onResponseBody(unsigned int, bool) (3 samples, 0.02%)</title><rect x="802.9" y="981" width="0.2" height="15.0" fill="rgb(223,199,32)" rx="2" ry="2" />
<text  x="805.92" y="991.5" ></text>
</g>
<g >
<title>encoding/json.sliceEncoder.encode (6 samples, 0.04%)</title><rect x="251.6" y="1109" width="0.4" height="15.0" fill="rgb(225,150,20)" rx="2" ry="2" />
<text  x="254.58" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool) (2 samples, 0.01%)</title><rect x="736.9" y="1029" width="0.1" height="15.0" fill="rgb(233,179,31)" rx="2" ry="2" />
<text  x="739.86" y="1039.5" ></text>
</g>
<g >
<title>finish_task_switch (3 samples, 0.02%)</title><rect x="597.9" y="1077" width="0.2" height="15.0" fill="rgb(217,33,54)" rx="2" ry="2" />
<text  x="600.90" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::encodeHeaders(Envoy::Http::ResponseHeaderMap&amp;, bool) (3 samples, 0.02%)</title><rect x="973.8" y="981" width="0.2" height="15.0" fill="rgb(236,143,45)" rx="2" ry="2" />
<text  x="976.81" y="991.5" ></text>
</g>
<g >
<title>nf_conntrack_in (3 samples, 0.02%)</title><rect x="1173.5" y="805" width="0.2" height="15.0" fill="rgb(227,205,54)" rx="2" ry="2" />
<text  x="1176.50" y="815.5" ></text>
</g>
<g >
<title>vfs_write (118 samples, 0.71%)</title><rect x="75.6" y="1173" width="8.4" height="15.0" fill="rgb(227,120,32)" rx="2" ry="2" />
<text  x="78.64" y="1183.5" ></text>
</g>
<g >
<title>sync.runtime_notifyListNotifyAll (69 samples, 0.42%)</title><rect x="124.8" y="1237" width="4.9" height="15.0" fill="rgb(218,140,3)" rx="2" ry="2" />
<text  x="127.78" y="1247.5" ></text>
</g>
<g >
<title>Envoy::Http::ResponseDecoderWrapper::decodeData(Envoy::Buffer::Instance&amp;, bool) (40 samples, 0.24%)</title><rect x="1051.8" y="1045" width="2.9" height="15.0" fill="rgb(212,167,1)" rx="2" ry="2" />
<text  x="1054.82" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onHeadersComplete() (749 samples, 4.51%)</title><rect x="814.7" y="1093" width="53.3" height="15.0" fill="rgb(237,122,17)" rx="2" ry="2" />
<text  x="817.73" y="1103.5" >Envoy..</text>
</g>
<g >
<title>__netif_receive_skb_one_core (119 samples, 0.72%)</title><rect x="924.5" y="677" width="8.5" height="15.0" fill="rgb(213,93,12)" rx="2" ry="2" />
<text  x="927.53" y="687.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (275 samples, 1.66%)</title><rect x="517.7" y="1029" width="19.5" height="15.0" fill="rgb(253,202,5)" rx="2" ry="2" />
<text  x="520.69" y="1039.5" ></text>
</g>
<g >
<title>wake_up_q (17 samples, 0.10%)</title><rect x="436.5" y="837" width="1.2" height="15.0" fill="rgb(220,18,18)" rx="2" ry="2" />
<text  x="439.47" y="847.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (161 samples, 0.97%)</title><rect x="629.6" y="1221" width="11.5" height="15.0" fill="rgb(253,219,9)" rx="2" ry="2" />
<text  x="632.62" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onReadReady() (2,686 samples, 16.19%)</title><rect x="711.4" y="1237" width="191.0" height="15.0" fill="rgb(241,42,5)" rx="2" ry="2" />
<text  x="714.40" y="1247.5" >Envoy::Network::Connecti..</text>
</g>
<g >
<title>[unknown] (258 samples, 1.55%)</title><rect x="660.6" y="1333" width="18.3" height="15.0" fill="rgb(222,40,9)" rx="2" ry="2" />
<text  x="663.55" y="1343.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (4 samples, 0.02%)</title><rect x="934.2" y="917" width="0.3" height="15.0" fill="rgb(214,78,20)" rx="2" ry="2" />
<text  x="937.20" y="927.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="598.1" y="1077" width="0.2" height="15.0" fill="rgb(230,144,50)" rx="2" ry="2" />
<text  x="601.12" y="1087.5" ></text>
</g>
<g >
<title>nf_ct_get_tuple (3 samples, 0.02%)</title><rect x="561.6" y="821" width="0.2" height="15.0" fill="rgb(228,120,5)" rx="2" ry="2" />
<text  x="564.56" y="831.5" ></text>
</g>
<g >
<title>ep_poll (152 samples, 0.92%)</title><rect x="691.2" y="1221" width="10.8" height="15.0" fill="rgb(245,169,33)" rx="2" ry="2" />
<text  x="694.20" y="1231.5" ></text>
</g>
<g >
<title>finish_task_switch (8 samples, 0.05%)</title><rect x="510.0" y="1045" width="0.6" height="15.0" fill="rgb(207,39,34)" rx="2" ry="2" />
<text  x="513.00" y="1055.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (4 samples, 0.02%)</title><rect x="819.1" y="981" width="0.3" height="15.0" fill="rgb(214,118,40)" rx="2" ry="2" />
<text  x="822.14" y="991.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="1131.5" y="965" width="0.2" height="15.0" fill="rgb(232,219,45)" rx="2" ry="2" />
<text  x="1134.54" y="975.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (5 samples, 0.03%)</title><rect x="586.5" y="789" width="0.3" height="15.0" fill="rgb(242,194,22)" rx="2" ry="2" />
<text  x="589.45" y="799.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="131.4" y="933" width="0.1" height="15.0" fill="rgb(215,39,0)" rx="2" ry="2" />
<text  x="134.39" y="943.5" ></text>
</g>
<g >
<title>Envoy::Runtime::runtimeFeatureEnabled(absl::string_view) (3 samples, 0.02%)</title><rect x="869.8" y="1029" width="0.3" height="15.0" fill="rgb(225,170,17)" rx="2" ry="2" />
<text  x="872.84" y="1039.5" ></text>
</g>
<g >
<title>try_to_wake_up (6 samples, 0.04%)</title><rect x="510.6" y="1077" width="0.4" height="15.0" fill="rgb(243,172,15)" rx="2" ry="2" />
<text  x="513.57" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getHeaderMapValue(proxy_wasm::WasmHeaderMapType, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;*) (13 samples, 0.08%)</title><rect x="1029.9" y="805" width="0.9" height="15.0" fill="rgb(251,229,42)" rx="2" ry="2" />
<text  x="1032.92" y="815.5" ></text>
</g>
<g >
<title>finish_task_switch (60 samples, 0.36%)</title><rect x="598.9" y="1093" width="4.3" height="15.0" fill="rgb(246,77,46)" rx="2" ry="2" />
<text  x="601.90" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*, char const*, unsigned long)#2}::__invoke(http_parser*, char const*, unsigned long) (26 samples, 0.16%)</title><rect x="879.9" y="1109" width="1.9" height="15.0" fill="rgb(248,50,52)" rx="2" ry="2" />
<text  x="882.94" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatchSlice(char const*, unsigned long) (1,042 samples, 6.28%)</title><rect x="1057.8" y="1157" width="74.1" height="15.0" fill="rgb(216,73,51)" rx="2" ry="2" />
<text  x="1060.80" y="1167.5" >Envoy::H..</text>
</g>
<g >
<title>dev_hard_start_xmit (2 samples, 0.01%)</title><rect x="910.7" y="69" width="0.2" height="15.0" fill="rgb(216,194,26)" rx="2" ry="2" />
<text  x="913.73" y="79.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; absl::StrReplaceAll&lt;std::__1::vector&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt; &gt; &gt; &gt;(absl::string_view, std::__1::vector&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt; &gt; &gt; const&amp;) (2 samples, 0.01%)</title><rect x="751.7" y="869" width="0.2" height="15.0" fill="rgb(221,171,22)" rx="2" ry="2" />
<text  x="754.72" y="879.5" ></text>
</g>
<g >
<title>Envoy::Router::RouteEntryImplBase::mostSpecificPerFilterConfig(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) const (2 samples, 0.01%)</title><rect x="832.4" y="997" width="0.1" height="15.0" fill="rgb(210,82,3)" rx="2" ry="2" />
<text  x="835.37" y="1007.5" ></text>
</g>
<g >
<title>do_anonymous_page (2 samples, 0.01%)</title><rect x="506.6" y="997" width="0.1" height="15.0" fill="rgb(233,110,23)" rx="2" ry="2" />
<text  x="509.59" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::decodeHeaders(Envoy::Http::ActiveStreamDecoderFilter*, Envoy::Http::RequestHeaderMap&amp;, bool) (425 samples, 2.56%)</title><rect x="831.7" y="1029" width="30.2" height="15.0" fill="rgb(228,27,39)" rx="2" ry="2" />
<text  x="834.65" y="1039.5" >En..</text>
</g>
<g >
<title>mem_cgroup_nr_lru_pages (24 samples, 0.14%)</title><rect x="676.9" y="949" width="1.7" height="15.0" fill="rgb(246,150,52)" rx="2" ry="2" />
<text  x="679.91" y="959.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (364 samples, 2.19%)</title><rect x="34.1" y="1109" width="25.9" height="15.0" fill="rgb(234,10,3)" rx="2" ry="2" />
<text  x="37.11" y="1119.5" >_..</text>
</g>
<g >
<title>Envoy::Http::Http1::ClientConnectionImpl::newStream(Envoy::Http::ResponseDecoder&amp;) (2 samples, 0.01%)</title><rect x="845.1" y="885" width="0.1" height="15.0" fill="rgb(249,214,17)" rx="2" ry="2" />
<text  x="848.10" y="895.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.02%)</title><rect x="34.2" y="1061" width="0.2" height="15.0" fill="rgb(214,182,5)" rx="2" ry="2" />
<text  x="37.18" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation::BinaryAnnotation(Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation const&amp;) (2 samples, 0.01%)</title><rect x="756.8" y="869" width="0.1" height="15.0" fill="rgb(243,103,19)" rx="2" ry="2" />
<text  x="759.77" y="879.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (6 samples, 0.04%)</title><rect x="1145.6" y="949" width="0.4" height="15.0" fill="rgb(212,84,29)" rx="2" ry="2" />
<text  x="1148.55" y="959.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (7 samples, 0.04%)</title><rect x="1149.3" y="1061" width="0.5" height="15.0" fill="rgb(241,154,51)" rx="2" ry="2" />
<text  x="1152.32" y="1071.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.01%)</title><rect x="509.3" y="1125" width="0.1" height="15.0" fill="rgb(223,136,15)" rx="2" ry="2" />
<text  x="512.29" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::encodeData(Envoy::Buffer::Instance&amp;, bool) (7 samples, 0.04%)</title><rect x="869.3" y="1013" width="0.5" height="15.0" fill="rgb(233,205,0)" rx="2" ry="2" />
<text  x="872.27" y="1023.5" ></text>
</g>
<g >
<title>mutex_lock (3 samples, 0.02%)</title><rect x="491.3" y="965" width="0.2" height="15.0" fill="rgb(210,75,0)" rx="2" ry="2" />
<text  x="494.30" y="975.5" ></text>
</g>
<g >
<title>epoll_ctl (30 samples, 0.18%)</title><rect x="743.9" y="821" width="2.1" height="15.0" fill="rgb(249,215,19)" rx="2" ry="2" />
<text  x="746.90" y="831.5" ></text>
</g>
<g >
<title>get_timespec64 (3 samples, 0.02%)</title><rect x="485.2" y="965" width="0.2" height="15.0" fill="rgb(210,182,45)" rx="2" ry="2" />
<text  x="488.19" y="975.5" ></text>
</g>
<g >
<title>__fdget (3 samples, 0.02%)</title><rect x="34.2" y="1077" width="0.2" height="15.0" fill="rgb(229,110,28)" rx="2" ry="2" />
<text  x="37.18" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::requestHeadersInitialized() (4 samples, 0.02%)</title><rect x="862.2" y="1029" width="0.3" height="15.0" fill="rgb(228,192,18)" rx="2" ry="2" />
<text  x="865.23" y="1039.5" ></text>
</g>
<g >
<title>proxy_wasm::null_plugin::Stats::PluginContext::onRequestHeaders(unsigned int, bool) (5 samples, 0.03%)</title><rect x="861.2" y="965" width="0.4" height="15.0" fill="rgb(250,146,22)" rx="2" ry="2" />
<text  x="864.24" y="975.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerUtility::mutateResponseHeaders(Envoy::Http::ResponseHeaderMap&amp;, Envoy::Http::RequestHeaderMap const*, Envoy::Http::ConnectionManagerConfig&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, bool) (8 samples, 0.05%)</title><rect x="975.4" y="949" width="0.5" height="15.0" fill="rgb(254,143,42)" rx="2" ry="2" />
<text  x="978.38" y="959.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::getExisting(absl::string_view) (4 samples, 0.02%)</title><rect x="1075.0" y="997" width="0.3" height="15.0" fill="rgb(215,52,54)" rx="2" ry="2" />
<text  x="1078.01" y="1007.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.01%)</title><rect x="691.3" y="1189" width="0.2" height="15.0" fill="rgb(212,89,49)" rx="2" ry="2" />
<text  x="694.35" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 0.45%)</title><rect x="115.4" y="1365" width="5.3" height="15.0" fill="rgb(208,215,35)" rx="2" ry="2" />
<text  x="118.39" y="1375.5" ></text>
</g>
<g >
<title>runtime.schedule (3 samples, 0.02%)</title><rect x="250.4" y="1285" width="0.2" height="15.0" fill="rgb(224,123,53)" rx="2" ry="2" />
<text  x="253.37" y="1295.5" ></text>
</g>
<g >
<title>kfree (4 samples, 0.02%)</title><rect x="1175.1" y="437" width="0.3" height="15.0" fill="rgb(249,10,37)" rx="2" ry="2" />
<text  x="1178.14" y="447.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.01%)</title><rect x="644.8" y="1285" width="0.1" height="15.0" fill="rgb(217,78,30)" rx="2" ry="2" />
<text  x="647.77" y="1295.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (23 samples, 0.14%)</title><rect x="560.1" y="853" width="1.7" height="15.0" fill="rgb(223,137,17)" rx="2" ry="2" />
<text  x="563.14" y="863.5" ></text>
</g>
<g >
<title>Envoy::Http::ActiveStreamFilterBase::route() (2 samples, 0.01%)</title><rect x="832.1" y="997" width="0.1" height="15.0" fill="rgb(247,211,17)" rx="2" ry="2" />
<text  x="835.08" y="1007.5" ></text>
</g>
<g >
<title>runtime.schedule (59 samples, 0.36%)</title><rect x="131.2" y="1157" width="4.2" height="15.0" fill="rgb(254,28,46)" rx="2" ry="2" />
<text  x="134.25" y="1167.5" ></text>
</g>
<g >
<title>tcp_current_mss (6 samples, 0.04%)</title><rect x="590.6" y="981" width="0.5" height="15.0" fill="rgb(249,181,41)" rx="2" ry="2" />
<text  x="593.65" y="991.5" ></text>
</g>
<g >
<title>ip_local_out (147 samples, 0.89%)</title><rect x="923.5" y="869" width="10.5" height="15.0" fill="rgb(221,157,13)" rx="2" ry="2" />
<text  x="926.53" y="879.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="506.7" y="1109" width="0.2" height="15.0" fill="rgb(222,134,51)" rx="2" ry="2" />
<text  x="509.73" y="1119.5" ></text>
</g>
<g >
<title>ip_send_check (2 samples, 0.01%)</title><rect x="588.7" y="885" width="0.2" height="15.0" fill="rgb(250,111,27)" rx="2" ry="2" />
<text  x="591.73" y="895.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::FieldBackedMapImpl::LookupMapValue(google::api::expr::runtime::CelValue const&amp;, google::protobuf::MapValueConstRef*) const (19 samples, 0.11%)</title><rect x="775.4" y="773" width="1.4" height="15.0" fill="rgb(242,79,1)" rx="2" ry="2" />
<text  x="778.40" y="783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (59 samples, 0.36%)</title><rect x="196.2" y="1205" width="4.2" height="15.0" fill="rgb(237,158,34)" rx="2" ry="2" />
<text  x="199.25" y="1215.5" ></text>
</g>
<g >
<title>napi_complete_done (2 samples, 0.01%)</title><rect x="1156.3" y="693" width="0.1" height="15.0" fill="rgb(207,95,37)" rx="2" ry="2" />
<text  x="1159.29" y="703.5" ></text>
</g>
<g >
<title>Envoy::Stats::NullGaugeImpl::dec() (2 samples, 0.01%)</title><rect x="994.9" y="997" width="0.1" height="15.0" fill="rgb(219,217,18)" rx="2" ry="2" />
<text  x="997.86" y="1007.5" ></text>
</g>
<g >
<title>gro_normal_list.part.0 (2 samples, 0.01%)</title><rect x="1156.3" y="677" width="0.1" height="15.0" fill="rgb(252,183,25)" rx="2" ry="2" />
<text  x="1159.29" y="687.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Extensions::Common::Wasm::EvaluateExpressionFactory::create(std::__1::shared_ptr&lt;Envoy::Extensions::Common::Wasm::EvaluateExpressionFactory&gt;) const::{lambda(proxy_wasm::WasmBase&amp;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void* (unsigned long)&gt; const&amp;)#1}, std::__1::allocator&lt;{lambda(proxy_wasm::WasmBase&amp;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void* (unsigned long)&gt; const&amp;)#1}&gt;, proxy_wasm::WasmResult (proxy_wasm::WasmBase&amp;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void* (unsigned long)&gt;)&gt;::__clone(std::__1::__function::__base&lt;proxy_wasm::WasmResult&gt;*) const (2 samples, 0.01%)</title><rect x="790.9" y="821" width="0.1" height="15.0" fill="rgb(235,48,13)" rx="2" ry="2" />
<text  x="793.91" y="831.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.0 (3 samples, 0.02%)</title><rect x="742.8" y="709" width="0.2" height="15.0" fill="rgb(238,127,3)" rx="2" ry="2" />
<text  x="745.76" y="719.5" ></text>
</g>
<g >
<title>void absl::inlined_vector_internal::Storage&lt;char, 128ul, std::__1::allocator&lt;char&gt; &gt;::Assign&lt;absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt; &gt;(absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt;, unsigned long) (3 samples, 0.02%)</title><rect x="1114.3" y="1013" width="0.2" height="15.0" fill="rgb(245,40,32)" rx="2" ry="2" />
<text  x="1117.26" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.10%)</title><rect x="999.1" y="805" width="1.2" height="15.0" fill="rgb(249,26,43)" rx="2" ry="2" />
<text  x="1002.13" y="815.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_fn (2 samples, 0.01%)</title><rect x="585.2" y="613" width="0.1" height="15.0" fill="rgb(245,166,1)" rx="2" ry="2" />
<text  x="588.17" y="623.5" ></text>
</g>
<g >
<title>Envoy::MainCommon::main(int, char**, std::__1::function&lt;void (Envoy::Server::Instance&amp;)&gt;) (6 samples, 0.04%)</title><rect x="658.3" y="1333" width="0.4" height="15.0" fill="rgb(248,155,50)" rx="2" ry="2" />
<text  x="661.28" y="1343.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="644.3" y="1237" width="0.1" height="15.0" fill="rgb(221,87,6)" rx="2" ry="2" />
<text  x="647.27" y="1247.5" ></text>
</g>
<g >
<title>vfs_writev (229 samples, 1.38%)</title><rect x="1171.7" y="1093" width="16.3" height="15.0" fill="rgb(227,183,27)" rx="2" ry="2" />
<text  x="1174.72" y="1103.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::getByKey(absl::string_view) const (8 samples, 0.05%)</title><rect x="821.3" y="965" width="0.6" height="15.0" fill="rgb(242,25,34)" rx="2" ry="2" />
<text  x="824.34" y="975.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.02%)</title><rect x="922.3" y="981" width="0.2" height="15.0" fill="rgb(236,197,22)" rx="2" ry="2" />
<text  x="925.33" y="991.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (4 samples, 0.02%)</title><rect x="237.0" y="1109" width="0.3" height="15.0" fill="rgb(226,204,18)" rx="2" ry="2" />
<text  x="240.00" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::~Slice() (2 samples, 0.01%)</title><rect x="887.6" y="1157" width="0.2" height="15.0" fill="rgb(222,126,30)" rx="2" ry="2" />
<text  x="890.62" y="1167.5" ></text>
</g>
<g >
<title>nf_nat_manip_pkt (3 samples, 0.02%)</title><rect x="1166.7" y="757" width="0.2" height="15.0" fill="rgb(234,183,3)" rx="2" ry="2" />
<text  x="1169.67" y="767.5" ></text>
</g>
<g >
<title>common_file_perm (5 samples, 0.03%)</title><rect x="167.2" y="1077" width="0.3" height="15.0" fill="rgb(227,175,24)" rx="2" ry="2" />
<text  x="170.16" y="1087.5" ></text>
</g>
<g >
<title>aa_profile_af_perm (2 samples, 0.01%)</title><rect x="591.8" y="981" width="0.1" height="15.0" fill="rgb(212,216,32)" rx="2" ry="2" />
<text  x="594.79" y="991.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (3 samples, 0.02%)</title><rect x="900.0" y="1045" width="0.2" height="15.0" fill="rgb(227,177,29)" rx="2" ry="2" />
<text  x="903.00" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Runtime::getInteger(absl::string_view, unsigned long) (7 samples, 0.04%)</title><rect x="811.5" y="1029" width="0.5" height="15.0" fill="rgb(227,42,34)" rx="2" ry="2" />
<text  x="814.46" y="1039.5" ></text>
</g>
<g >
<title>release_pages (6 samples, 0.04%)</title><rect x="628.8" y="1125" width="0.4" height="15.0" fill="rgb(211,147,49)" rx="2" ry="2" />
<text  x="631.77" y="1135.5" ></text>
</g>
<g >
<title>ext4_get_branch (2 samples, 0.01%)</title><rect x="240.3" y="997" width="0.2" height="15.0" fill="rgb(224,131,9)" rx="2" ry="2" />
<text  x="243.34" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (258 samples, 1.55%)</title><rect x="660.6" y="1349" width="18.3" height="15.0" fill="rgb(252,38,35)" rx="2" ry="2" />
<text  x="663.55" y="1359.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::EnvoyDownstreamServiceCluster() const (2 samples, 0.01%)</title><rect x="1011.4" y="917" width="0.2" height="15.0" fill="rgb(238,222,2)" rx="2" ry="2" />
<text  x="1014.43" y="927.5" ></text>
</g>
<g >
<title>pipe_read (9 samples, 0.05%)</title><rect x="166.2" y="1093" width="0.6" height="15.0" fill="rgb(212,139,12)" rx="2" ry="2" />
<text  x="169.17" y="1103.5" ></text>
</g>
<g >
<title>runtime.mallocgc (11 samples, 0.07%)</title><rect x="123.7" y="1237" width="0.8" height="15.0" fill="rgb(212,179,22)" rx="2" ry="2" />
<text  x="126.71" y="1247.5" ></text>
</g>
<g >
<title>rw_verify_area (5 samples, 0.03%)</title><rect x="537.7" y="1093" width="0.4" height="15.0" fill="rgb(240,33,29)" rx="2" ry="2" />
<text  x="540.74" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Span::setTag(absl::string_view, absl::string_view) (4 samples, 0.02%)</title><rect x="823.1" y="997" width="0.2" height="15.0" fill="rgb(215,55,14)" rx="2" ry="2" />
<text  x="826.05" y="1007.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (2 samples, 0.01%)</title><rect x="251.3" y="1029" width="0.1" height="15.0" fill="rgb(221,176,18)" rx="2" ry="2" />
<text  x="254.29" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Upstream::ClusterManagerImpl::ThreadLocalClusterManagerImpl::getHttpConnPoolsContainer(std::__1::shared_ptr&lt;Envoy::Upstream::Host const&gt; const&amp;, bool) (2 samples, 0.01%)</title><rect x="1100.5" y="933" width="0.1" height="15.0" fill="rgb(219,125,14)" rx="2" ry="2" />
<text  x="1103.47" y="943.5" ></text>
</g>
<g >
<title>try_to_wake_up (6 samples, 0.04%)</title><rect x="437.8" y="837" width="0.4" height="15.0" fill="rgb(210,96,3)" rx="2" ry="2" />
<text  x="440.75" y="847.5" ></text>
</g>
<g >
<title>Envoy::Event::SchedulableCallbackImpl::scheduleCallbackNextIteration() (4 samples, 0.02%)</title><rect x="724.0" y="885" width="0.3" height="15.0" fill="rgb(233,189,4)" rx="2" ry="2" />
<text  x="726.99" y="895.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ResponseHeaderMapImpl::~ResponseHeaderMapImpl() (4 samples, 0.02%)</title><rect x="964.1" y="1237" width="0.3" height="15.0" fill="rgb(224,105,4)" rx="2" ry="2" />
<text  x="967.07" y="1247.5" ></text>
</g>
<g >
<title>event_del (32 samples, 0.19%)</title><rect x="996.1" y="869" width="2.2" height="15.0" fill="rgb(219,26,27)" rx="2" ry="2" />
<text  x="999.07" y="879.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::insertByKey(Envoy::Http::HeaderString&amp;&amp;, Envoy::Http::HeaderString&amp;&amp;) (19 samples, 0.11%)</title><rect x="804.6" y="1045" width="1.4" height="15.0" fill="rgb(233,119,8)" rx="2" ry="2" />
<text  x="807.63" y="1055.5" ></text>
</g>
<g >
<title>do_futex (6 samples, 0.04%)</title><rect x="507.4" y="1077" width="0.4" height="15.0" fill="rgb(214,221,16)" rx="2" ry="2" />
<text  x="510.37" y="1087.5" ></text>
</g>
<g >
<title>uncharge_batch (3 samples, 0.02%)</title><rect x="629.0" y="1093" width="0.2" height="15.0" fill="rgb(214,87,29)" rx="2" ry="2" />
<text  x="631.98" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::statusToInt(Envoy::Http::Http1::ParserStatus) const (2 samples, 0.01%)</title><rect x="1064.0" y="1093" width="0.1" height="15.0" fill="rgb(207,141,27)" rx="2" ry="2" />
<text  x="1066.99" y="1103.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append(char const*, unsigned long) (7 samples, 0.04%)</title><rect x="1189.0" y="1365" width="0.5" height="15.0" fill="rgb(243,46,19)" rx="2" ry="2" />
<text  x="1192.00" y="1375.5" ></text>
</g>
<g >
<title>xas_load (2 samples, 0.01%)</title><rect x="241.3" y="1029" width="0.1" height="15.0" fill="rgb(253,134,18)" rx="2" ry="2" />
<text  x="244.26" y="1039.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::upstreamHost() const (2 samples, 0.01%)</title><rect x="1010.4" y="901" width="0.2" height="15.0" fill="rgb(243,185,41)" rx="2" ry="2" />
<text  x="1013.44" y="911.5" ></text>
</g>
<g >
<title>pskb_expand_head (2 samples, 0.01%)</title><rect x="912.8" y="405" width="0.1" height="15.0" fill="rgb(210,214,19)" rx="2" ry="2" />
<text  x="915.80" y="415.5" ></text>
</g>
<g >
<title>__lock_text_start (68 samples, 0.41%)</title><rect x="203.6" y="1045" width="4.8" height="15.0" fill="rgb(208,22,26)" rx="2" ry="2" />
<text  x="206.57" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Extensions::RequestId::UUIDRequestIDExtension::set(Envoy::Http::RequestHeaderMap&amp;, bool) (2 samples, 0.01%)</title><rect x="1073.1" y="1013" width="0.1" height="15.0" fill="rgb(216,53,43)" rx="2" ry="2" />
<text  x="1076.09" y="1023.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="242.8" y="1013" width="0.2" height="15.0" fill="rgb(218,7,30)" rx="2" ry="2" />
<text  x="245.83" y="1023.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (13 samples, 0.08%)</title><rect x="910.4" y="117" width="1.0" height="15.0" fill="rgb(220,186,21)" rx="2" ry="2" />
<text  x="913.45" y="127.5" ></text>
</g>
<g >
<title>__libc_cfree (3 samples, 0.02%)</title><rect x="783.9" y="853" width="0.2" height="15.0" fill="rgb(216,94,42)" rx="2" ry="2" />
<text  x="786.87" y="863.5" ></text>
</g>
<g >
<title>epoll_ctl (28 samples, 0.17%)</title><rect x="741.3" y="805" width="2.0" height="15.0" fill="rgb(254,115,33)" rx="2" ry="2" />
<text  x="744.34" y="815.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::hasDataWithName(absl::string_view) const (2 samples, 0.01%)</title><rect x="763.8" y="773" width="0.2" height="15.0" fill="rgb(210,194,10)" rx="2" ry="2" />
<text  x="766.81" y="783.5" ></text>
</g>
<g >
<title>schedule (16 samples, 0.10%)</title><rect x="134.1" y="965" width="1.1" height="15.0" fill="rgb(217,182,32)" rx="2" ry="2" />
<text  x="137.09" y="975.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::ResponseHeaderMap&gt;::staticLookup(absl::string_view) (6 samples, 0.04%)</title><rect x="1055.5" y="1029" width="0.4" height="15.0" fill="rgb(224,126,47)" rx="2" ry="2" />
<text  x="1058.45" y="1039.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::get_header_map_value(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (5 samples, 0.03%)</title><rect x="778.7" y="821" width="0.3" height="15.0" fill="rgb(227,206,36)" rx="2" ry="2" />
<text  x="781.67" y="831.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="686.1" y="1301" width="0.3" height="15.0" fill="rgb(229,120,32)" rx="2" ry="2" />
<text  x="689.08" y="1311.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::setRouteName(absl::string_view) (2 samples, 0.01%)</title><rect x="1105.4" y="1013" width="0.1" height="15.0" fill="rgb(239,34,33)" rx="2" ry="2" />
<text  x="1108.37" y="1023.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/daemon.(*Daemon).refreshImage-fm (7 samples, 0.04%)</title><rect x="251.1" y="1141" width="0.5" height="15.0" fill="rgb(224,211,40)" rx="2" ry="2" />
<text  x="254.08" y="1151.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::ValueFromMessage(google::protobuf::Value const*, google::protobuf::Arena*) (2 samples, 0.01%)</title><rect x="766.4" y="741" width="0.2" height="15.0" fill="rgb(250,21,39)" rx="2" ry="2" />
<text  x="769.44" y="751.5" ></text>
</g>
<g >
<title>Envoy::Router::RouteEntryImplBase::maxStreamDuration() const (2 samples, 0.01%)</title><rect x="818.7" y="981" width="0.2" height="15.0" fill="rgb(254,12,54)" rx="2" ry="2" />
<text  x="821.71" y="991.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="879.1" y="933" width="0.1" height="15.0" fill="rgb(254,32,40)" rx="2" ry="2" />
<text  x="882.09" y="943.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::move(Envoy::Buffer::Instance&amp;) (4 samples, 0.02%)</title><rect x="977.9" y="885" width="0.3" height="15.0" fill="rgb(243,106,51)" rx="2" ry="2" />
<text  x="980.87" y="895.5" ></text>
</g>
<g >
<title>finish_task_switch (105 samples, 0.63%)</title><rect x="607.4" y="1109" width="7.4" height="15.0" fill="rgb(231,54,42)" rx="2" ry="2" />
<text  x="610.36" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Runtime::SnapshotImpl::runtimeFeatureEnabled(absl::string_view) const (3 samples, 0.02%)</title><rect x="1061.0" y="1013" width="0.2" height="15.0" fill="rgb(210,136,17)" rx="2" ry="2" />
<text  x="1064.00" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onMessageBegin() (52 samples, 0.31%)</title><rect x="1060.3" y="1093" width="3.7" height="15.0" fill="rgb(235,36,49)" rx="2" ry="2" />
<text  x="1063.29" y="1103.5" ></text>
</g>
<g >
<title>sock_sendmsg (638 samples, 3.84%)</title><rect x="546.7" y="1061" width="45.4" height="15.0" fill="rgb(220,85,3)" rx="2" ry="2" />
<text  x="549.70" y="1071.5" >sock..</text>
</g>
<g >
<title>schedule (39 samples, 0.24%)</title><rect x="485.6" y="933" width="2.8" height="15.0" fill="rgb(250,73,17)" rx="2" ry="2" />
<text  x="488.61" y="943.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (4 samples, 0.02%)</title><rect x="753.8" y="885" width="0.3" height="15.0" fill="rgb(224,121,30)" rx="2" ry="2" />
<text  x="756.78" y="895.5" ></text>
</g>
<g >
<title>do_syscall_64 (16 samples, 0.10%)</title><rect x="878.1" y="949" width="1.1" height="15.0" fill="rgb(231,211,47)" rx="2" ry="2" />
<text  x="881.09" y="959.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::encodeData(Envoy::Buffer::Instance&amp;, bool) (67 samples, 0.40%)</title><rect x="995.9" y="981" width="4.7" height="15.0" fill="rgb(220,79,39)" rx="2" ry="2" />
<text  x="998.86" y="991.5" ></text>
</g>
<g >
<title>local.internal/poll.(*pollDesc).wait (66 samples, 0.40%)</title><rect x="130.8" y="1237" width="4.6" height="15.0" fill="rgb(253,147,46)" rx="2" ry="2" />
<text  x="133.75" y="1247.5" ></text>
</g>
<g >
<title>hash_conntrack_raw (2 samples, 0.01%)</title><rect x="1155.6" y="789" width="0.1" height="15.0" fill="rgb(210,0,38)" rx="2" ry="2" />
<text  x="1158.58" y="799.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (2 samples, 0.01%)</title><rect x="257.7" y="1253" width="0.1" height="15.0" fill="rgb(208,199,31)" rx="2" ry="2" />
<text  x="260.69" y="1263.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelExpressionFlatImpl::Evaluate(google::api::expr::runtime::BaseActivation const&amp;, google::api::expr::runtime::CelEvaluationState*) const (56 samples, 0.34%)</title><rect x="785.2" y="789" width="4.0" height="15.0" fill="rgb(238,129,12)" rx="2" ry="2" />
<text  x="788.22" y="799.5" ></text>
</g>
<g >
<title>ip_vs_local_request4 (3 samples, 0.02%)</title><rect x="559.4" y="869" width="0.2" height="15.0" fill="rgb(209,90,34)" rx="2" ry="2" />
<text  x="562.36" y="879.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="598.8" y="1077" width="0.1" height="15.0" fill="rgb(242,134,21)" rx="2" ry="2" />
<text  x="601.76" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Stats::Counter&amp; Envoy::Stats::ThreadLocalStoreImpl::ScopeImpl::safeMakeStat&lt;Envoy::Stats::Counter&gt;(Envoy::Stats::StatName, Envoy::Stats::StatName, absl::optional&lt;std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; &gt; const&amp;, absl::flat_hash_map&lt;Envoy::Stats::StatName, Envoy::Stats::RefcountPtr&lt;Envoy::Stats::Counter&gt;, absl::hash_internal::Hash&lt;Envoy::Stats::StatName&gt;, std::__1::equal_to&lt;Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName const, Envoy::Stats::RefcountPtr&lt;Envoy::Stats::Counter&gt; &gt; &gt; &gt;&amp;, Envoy::Stats::StatsMatcher::FastResult, Envoy::Stats::StatNameStorageSet&amp;, std::__1::function&lt;Envoy::Stats::RefcountPtr&lt;Envoy::Stats::Counter&gt; (Envoy::Stats::Allocator&amp;, Envoy::Stats::StatName, Envoy::Stats::StatName, std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; const&amp;)&gt;, absl::flat_hash_map&lt;Envoy::Stats::StatName, std::__1::reference_wrapper&lt;Envoy::Stats::Counter&gt;, absl::hash_internal::Hash&lt;Envoy::Stats::StatName&gt;, std::__1::equal_to&lt;Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName const, std::__1::reference_wrapper&lt;Envoy::Stats::Counter&gt; &gt; &gt; &gt;*, absl::flat_hash_set&lt;Envoy::Stats::StatName, absl::hash_internal::Hash&lt;Envoy::Stats::StatName&gt;, std::__1::equal_to&lt;Envoy::Stats::StatName&gt;, std::__1::allocator&lt;Envoy::Stats::StatName&gt; &gt;*, Envoy::Stats::Counter&amp;) (8 samples, 0.05%)</title><rect x="731.5" y="901" width="0.6" height="15.0" fill="rgb(211,201,19)" rx="2" ry="2" />
<text  x="734.53" y="911.5" ></text>
</g>
<g >
<title>__lock_text_start (100 samples, 0.60%)</title><rect x="499.5" y="981" width="7.1" height="15.0" fill="rgb(240,96,8)" rx="2" ry="2" />
<text  x="502.48" y="991.5" ></text>
</g>
<g >
<title>[unknown] (179 samples, 1.08%)</title><rect x="666.1" y="1285" width="12.7" height="15.0" fill="rgb(252,228,49)" rx="2" ry="2" />
<text  x="669.10" y="1295.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::RenderStruct(google::protobuf::util::converter::ProtoStreamObjectSource const*, google::protobuf::Type const&amp;, google::protobuf::stringpiece_internal::StringPiece, google::protobuf::util::converter::ObjectWriter*) (8 samples, 0.05%)</title><rect x="751.2" y="773" width="0.5" height="15.0" fill="rgb(229,47,25)" rx="2" ry="2" />
<text  x="754.15" y="783.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::ClientConnectionImpl::allocHeaders(std::__1::unique_ptr&lt;Envoy::Http::StatefulHeaderKeyFormatter, std::__1::default_delete&lt;Envoy::Http::StatefulHeaderKeyFormatter&gt; &gt;&amp;&amp;) (10 samples, 0.06%)</title><rect x="970.3" y="1061" width="0.7" height="15.0" fill="rgb(211,113,1)" rx="2" ry="2" />
<text  x="973.33" y="1071.5" ></text>
</g>
<g >
<title>aa_file_perm (5 samples, 0.03%)</title><rect x="246.7" y="1109" width="0.4" height="15.0" fill="rgb(226,32,50)" rx="2" ry="2" />
<text  x="249.74" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Extensions::HttpFilters::Cors::CorsFilter::decodeHeaders(Envoy::Http::RequestHeaderMap&amp;, bool) (2 samples, 0.01%)</title><rect x="832.1" y="1013" width="0.1" height="15.0" fill="rgb(227,36,22)" rx="2" ry="2" />
<text  x="835.08" y="1023.5" ></text>
</g>
<g >
<title>encoding/json.ptrEncoder.encode (6 samples, 0.04%)</title><rect x="251.6" y="1045" width="0.4" height="15.0" fill="rgb(233,161,35)" rx="2" ry="2" />
<text  x="254.58" y="1055.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::RenderMap(google::protobuf::Field const*, google::protobuf::stringpiece_internal::StringPiece, unsigned int, google::protobuf::util::converter::ObjectWriter*) const (4 samples, 0.02%)</title><rect x="1004.4" y="757" width="0.3" height="15.0" fill="rgb(216,188,37)" rx="2" ry="2" />
<text  x="1007.39" y="767.5" ></text>
</g>
<g >
<title>aa_label_sk_perm.part.0 (7 samples, 0.04%)</title><rect x="515.3" y="981" width="0.5" height="15.0" fill="rgb(226,69,50)" rx="2" ry="2" />
<text  x="518.27" y="991.5" ></text>
</g>
<g >
<title>ep_remove (2 samples, 0.01%)</title><rect x="876.5" y="901" width="0.1" height="15.0" fill="rgb(209,45,26)" rx="2" ry="2" />
<text  x="879.46" y="911.5" ></text>
</g>
<g >
<title>get_futex_key (3 samples, 0.02%)</title><rect x="224.6" y="1061" width="0.2" height="15.0" fill="rgb(217,108,9)" rx="2" ry="2" />
<text  x="227.55" y="1071.5" ></text>
</g>
<g >
<title>sk_reset_timer (2 samples, 0.01%)</title><rect x="916.8" y="885" width="0.2" height="15.0" fill="rgb(205,21,13)" rx="2" ry="2" />
<text  x="919.85" y="895.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (3 samples, 0.02%)</title><rect x="172.5" y="1301" width="0.2" height="15.0" fill="rgb(207,181,54)" rx="2" ry="2" />
<text  x="175.50" y="1311.5" ></text>
</g>
<g >
<title>github.com/docker/docker/pkg/authorization.(*Middleware).WrapHandler.func1 (19 samples, 0.11%)</title><rect x="250.8" y="1269" width="1.3" height="15.0" fill="rgb(253,48,31)" rx="2" ry="2" />
<text  x="253.79" y="1279.5" ></text>
</g>
<g >
<title>__lock_text_start (9 samples, 0.05%)</title><rect x="630.0" y="1157" width="0.6" height="15.0" fill="rgb(229,30,4)" rx="2" ry="2" />
<text  x="632.97" y="1167.5" ></text>
</g>
<g >
<title>inet6_recvmsg (45 samples, 0.27%)</title><rect x="619.0" y="1093" width="3.2" height="15.0" fill="rgb(247,132,42)" rx="2" ry="2" />
<text  x="622.02" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (4,986 samples, 30.05%)</title><rect x="290.2" y="1285" width="354.6" height="15.0" fill="rgb(251,196,12)" rx="2" ry="2" />
<text  x="293.19" y="1295.5" >[unknown]</text>
</g>
<g >
<title>futex_wake (19 samples, 0.11%)</title><rect x="596.4" y="1141" width="1.4" height="15.0" fill="rgb(218,194,21)" rx="2" ry="2" />
<text  x="599.41" y="1151.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (161 samples, 0.97%)</title><rect x="905.8" y="949" width="11.5" height="15.0" fill="rgb(249,112,36)" rx="2" ry="2" />
<text  x="908.83" y="959.5" ></text>
</g>
<g >
<title>Envoy::ConnectionPool::ConnPoolImplBase::onStreamClosed(Envoy::ConnectionPool::ActiveClient&amp;, bool) (17 samples, 0.10%)</title><rect x="993.5" y="997" width="1.2" height="15.0" fill="rgb(235,64,22)" rx="2" ry="2" />
<text  x="996.51" y="1007.5" ></text>
</g>
<g >
<title>ipv4_mtu (2 samples, 0.01%)</title><rect x="908.9" y="229" width="0.1" height="15.0" fill="rgb(210,188,30)" rx="2" ry="2" />
<text  x="911.89" y="239.5" ></text>
</g>
<g >
<title>github.com/docker/docker/image.NewFromJSON (4 samples, 0.02%)</title><rect x="251.3" y="1061" width="0.3" height="15.0" fill="rgb(224,207,8)" rx="2" ry="2" />
<text  x="254.29" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::add(absl::string_view) (2 samples, 0.01%)</title><rect x="721.9" y="917" width="0.1" height="15.0" fill="rgb(253,139,34)" rx="2" ry="2" />
<text  x="724.85" y="927.5" ></text>
</g>
<g >
<title>Envoy::Event::DispatcherImpl::timeSource() (3 samples, 0.02%)</title><rect x="1121.5" y="1013" width="0.2" height="15.0" fill="rgb(254,141,10)" rx="2" ry="2" />
<text  x="1124.52" y="1023.5" ></text>
</g>
<g >
<title>__vfs_read (3 samples, 0.02%)</title><rect x="496.9" y="981" width="0.2" height="15.0" fill="rgb(246,52,38)" rx="2" ry="2" />
<text  x="499.92" y="991.5" ></text>
</g>
<g >
<title>ep_poll (2 samples, 0.01%)</title><rect x="950.3" y="1205" width="0.2" height="15.0" fill="rgb(247,198,51)" rx="2" ry="2" />
<text  x="953.34" y="1215.5" ></text>
</g>
<g >
<title>__libc_cfree (2 samples, 0.01%)</title><rect x="1015.7" y="837" width="0.1" height="15.0" fill="rgb(225,136,1)" rx="2" ry="2" />
<text  x="1018.70" y="847.5" ></text>
</g>
<g >
<title>common_file_perm (2 samples, 0.01%)</title><rect x="98.2" y="1125" width="0.1" height="15.0" fill="rgb(214,71,18)" rx="2" ry="2" />
<text  x="101.18" y="1135.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelExpressionFlatImpl::Evaluate(google::api::expr::runtime::BaseActivation const&amp;, google::api::expr::runtime::CelEvaluationState*) const (42 samples, 0.25%)</title><rect x="1037.8" y="789" width="3.0" height="15.0" fill="rgb(213,111,49)" rx="2" ry="2" />
<text  x="1040.82" y="799.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (18 samples, 0.11%)</title><rect x="240.5" y="1077" width="1.3" height="15.0" fill="rgb(240,59,36)" rx="2" ry="2" />
<text  x="243.48" y="1087.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::filterState() const (2 samples, 0.01%)</title><rect x="1105.2" y="1013" width="0.1" height="15.0" fill="rgb(223,37,45)" rx="2" ry="2" />
<text  x="1108.16" y="1023.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="659.3" y="1301" width="0.1" height="15.0" fill="rgb(242,8,30)" rx="2" ry="2" />
<text  x="662.27" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.02%)</title><rect x="922.3" y="965" width="0.2" height="15.0" fill="rgb(208,59,0)" rx="2" ry="2" />
<text  x="925.33" y="975.5" ></text>
</g>
<g >
<title>event_queue_remove_timeout (3 samples, 0.02%)</title><rect x="958.9" y="1285" width="0.2" height="15.0" fill="rgb(214,12,10)" rx="2" ry="2" />
<text  x="961.88" y="1295.5" ></text>
</g>
<g >
<title>do_syscall_64 (71 samples, 0.43%)</title><rect x="203.4" y="1141" width="5.1" height="15.0" fill="rgb(249,72,6)" rx="2" ry="2" />
<text  x="206.43" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Event::FileEventImpl::setEnabled(unsigned int) (34 samples, 0.20%)</title><rect x="996.0" y="885" width="2.4" height="15.0" fill="rgb(237,186,25)" rx="2" ry="2" />
<text  x="999.00" y="895.5" ></text>
</g>
<g >
<title>Envoy::Event::SchedulableCallbackImpl::scheduleCallbackCurrentIteration() (4 samples, 0.02%)</title><rect x="738.6" y="981" width="0.3" height="15.0" fill="rgb(253,32,17)" rx="2" ry="2" />
<text  x="741.64" y="991.5" ></text>
</g>
<g >
<title>mutex_lock (2 samples, 0.01%)</title><rect x="951.6" y="1189" width="0.2" height="15.0" fill="rgb(232,125,17)" rx="2" ry="2" />
<text  x="954.62" y="1199.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (23 samples, 0.14%)</title><rect x="198.2" y="1109" width="1.7" height="15.0" fill="rgb(217,148,30)" rx="2" ry="2" />
<text  x="201.24" y="1119.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.01%)</title><rect x="893.0" y="1093" width="0.2" height="15.0" fill="rgb(215,174,44)" rx="2" ry="2" />
<text  x="896.03" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_read (54 samples, 0.33%)</title><rect x="618.7" y="1205" width="3.8" height="15.0" fill="rgb(243,39,40)" rx="2" ry="2" />
<text  x="621.67" y="1215.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="1156.3" y="661" width="0.1" height="15.0" fill="rgb(246,3,14)" rx="2" ry="2" />
<text  x="1159.29" y="671.5" ></text>
</g>
<g >
<title>std::__1::pair&lt;google::protobuf::Map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, google::protobuf::Value&gt;::InnerMap::iterator_base&lt;google::protobuf::MapPair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, google::protobuf::Value&gt; const&gt;, unsigned long&gt; google::protobuf::Map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, google::protobuf::Value&gt;::InnerMap::FindHelper&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::__map_iterator&lt;std::__1::__tree_iterator&lt;std::__1::__value_type&lt;std::__1::reference_wrapper&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt;, void*&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::reference_wrapper&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&gt;, void*&gt;, void*&gt;*, long&gt; &gt;*) const (5 samples, 0.03%)</title><rect x="1026.0" y="773" width="0.4" height="15.0" fill="rgb(245,120,19)" rx="2" ry="2" />
<text  x="1029.01" y="783.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="1029.5" y="805" width="0.1" height="15.0" fill="rgb(219,199,35)" rx="2" ry="2" />
<text  x="1032.49" y="815.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_out (2 samples, 0.01%)</title><rect x="911.4" y="165" width="0.2" height="15.0" fill="rgb(233,126,27)" rx="2" ry="2" />
<text  x="914.45" y="175.5" ></text>
</g>
<g >
<title>nf_hook_slow (2 samples, 0.01%)</title><rect x="1186.3" y="837" width="0.1" height="15.0" fill="rgb(241,172,17)" rx="2" ry="2" />
<text  x="1189.30" y="847.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (4 samples, 0.02%)</title><rect x="1128.1" y="901" width="0.2" height="15.0" fill="rgb(219,138,8)" rx="2" ry="2" />
<text  x="1131.06" y="911.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.01%)</title><rect x="511.2" y="1077" width="0.2" height="15.0" fill="rgb(230,1,24)" rx="2" ry="2" />
<text  x="514.21" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (3,530 samples, 21.27%)</title><rect x="347.2" y="1221" width="251.1" height="15.0" fill="rgb(225,97,41)" rx="2" ry="2" />
<text  x="350.22" y="1231.5" >[unknown]</text>
</g>
<g >
<title>nf_conntrack_in (2 samples, 0.01%)</title><rect x="906.5" y="805" width="0.2" height="15.0" fill="rgb(241,164,26)" rx="2" ry="2" />
<text  x="909.54" y="815.5" ></text>
</g>
<g >
<title>evmap_io_active_ (5 samples, 0.03%)</title><rect x="947.2" y="1285" width="0.4" height="15.0" fill="rgb(211,116,53)" rx="2" ry="2" />
<text  x="950.22" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (4 samples, 0.02%)</title><rect x="624.3" y="1221" width="0.3" height="15.0" fill="rgb(223,64,45)" rx="2" ry="2" />
<text  x="627.29" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Extensions::RequestId::UUIDRequestIDExtension::toInteger(Envoy::Http::RequestHeaderMap const&amp;) const (5 samples, 0.03%)</title><rect x="826.7" y="1013" width="0.4" height="15.0" fill="rgb(222,110,52)" rx="2" ry="2" />
<text  x="829.75" y="1023.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/daemon/images.(*imageStoreWithLease).Get (7 samples, 0.04%)</title><rect x="251.1" y="1093" width="0.5" height="15.0" fill="rgb(244,139,13)" rx="2" ry="2" />
<text  x="254.08" y="1103.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (2 samples, 0.01%)</title><rect x="557.2" y="965" width="0.1" height="15.0" fill="rgb(237,17,34)" rx="2" ry="2" />
<text  x="560.15" y="975.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__assign_external(char const*, unsigned long) (2 samples, 0.01%)</title><rect x="937.8" y="1365" width="0.1" height="15.0" fill="rgb(232,69,31)" rx="2" ry="2" />
<text  x="940.76" y="1375.5" ></text>
</g>
<g >
<title>Envoy::Http::HttpConnPoolImplBase::onPoolReady(Envoy::ConnectionPool::ActiveClient&amp;, Envoy::ConnectionPool::AttachContext&amp;) (123 samples, 0.74%)</title><rect x="836.9" y="933" width="8.8" height="15.0" fill="rgb(249,95,11)" rx="2" ry="2" />
<text  x="839.92" y="943.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::FilterStateImpl(Envoy::StreamInfo::FilterState::LifeSpan) (4 samples, 0.02%)</title><rect x="853.3" y="965" width="0.3" height="15.0" fill="rgb(218,52,11)" rx="2" ry="2" />
<text  x="856.27" y="975.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (423 samples, 2.55%)</title><rect x="559.1" y="917" width="30.1" height="15.0" fill="rgb(237,42,48)" rx="2" ry="2" />
<text  x="562.14" y="927.5" >__..</text>
</g>
<g >
<title>iptunnel_xmit (37 samples, 0.22%)</title><rect x="1158.5" y="229" width="2.6" height="15.0" fill="rgb(207,132,26)" rx="2" ry="2" />
<text  x="1161.50" y="239.5" ></text>
</g>
<g >
<title>add_transaction_credits (3 samples, 0.02%)</title><rect x="239.6" y="1029" width="0.2" height="15.0" fill="rgb(254,192,34)" rx="2" ry="2" />
<text  x="242.63" y="1039.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::FilterStateImpl(std::__1::pair&lt;std::__1::shared_ptr&lt;Envoy::StreamInfo::FilterState&gt;, Envoy::StreamInfo::FilterState::LifeSpan&gt;, Envoy::StreamInfo::FilterState::LifeSpan) (2 samples, 0.01%)</title><rect x="1063.1" y="965" width="0.1" height="15.0" fill="rgb(235,38,1)" rx="2" ry="2" />
<text  x="1066.06" y="975.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::decodeData(Envoy::Buffer::Instance&amp;, bool) (790 samples, 4.76%)</title><rect x="995.4" y="1013" width="56.2" height="15.0" fill="rgb(226,121,32)" rx="2" ry="2" />
<text  x="998.43" y="1023.5" >Envoy..</text>
</g>
<g >
<title>proxy_wasm::exports::get_property(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (15 samples, 0.09%)</title><rect x="763.5" y="837" width="1.1" height="15.0" fill="rgb(206,148,33)" rx="2" ry="2" />
<text  x="766.53" y="847.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_28, std::__1::allocator&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_28&gt;, proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;::operator()(proxy_wasm::ContextBase*&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;) (4 samples, 0.02%)</title><rect x="1053.8" y="965" width="0.3" height="15.0" fill="rgb(226,120,11)" rx="2" ry="2" />
<text  x="1056.82" y="975.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::onUpstreamHeaders(unsigned long, std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, Envoy::Router::UpstreamRequest&amp;, bool) (224 samples, 1.35%)</title><rect x="973.6" y="997" width="15.9" height="15.0" fill="rgb(211,150,42)" rx="2" ry="2" />
<text  x="976.60" y="1007.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ResponseHeaderMapImpl::removeKeepAlive() (2 samples, 0.01%)</title><rect x="980.2" y="949" width="0.2" height="15.0" fill="rgb(215,55,52)" rx="2" ry="2" />
<text  x="983.21" y="959.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::commit(unsigned long, absl::Span&lt;Envoy::Buffer::RawSlice&gt;, std::__1::unique_ptr&lt;Envoy::Buffer::ReservationSlicesOwner, std::__1::default_delete&lt;Envoy::Buffer::ReservationSlicesOwner&gt; &gt;) (2 samples, 0.01%)</title><rect x="1135.2" y="1157" width="0.2" height="15.0" fill="rgb(218,97,3)" rx="2" ry="2" />
<text  x="1138.24" y="1167.5" ></text>
</g>
<g >
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.01%)</title><rect x="566.0" y="517" width="0.1" height="15.0" fill="rgb(236,77,2)" rx="2" ry="2" />
<text  x="568.97" y="527.5" ></text>
</g>
<g >
<title>Envoy::Event::ScaledRangeTimerManagerImpl::RangeTimerImpl::enableTimer(std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000l&gt; &gt;, Envoy::ScopeTrackedObject const*) (6 samples, 0.04%)</title><rect x="1001.6" y="949" width="0.4" height="15.0" fill="rgb(212,174,52)" rx="2" ry="2" />
<text  x="1004.62" y="959.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.02%)</title><rect x="484.6" y="837" width="0.3" height="15.0" fill="rgb(225,85,47)" rx="2" ry="2" />
<text  x="487.62" y="847.5" ></text>
</g>
<g >
<title>__handle_mm_fault (5 samples, 0.03%)</title><rect x="539.7" y="1093" width="0.3" height="15.0" fill="rgb(219,207,21)" rx="2" ry="2" />
<text  x="542.66" y="1103.5" ></text>
</g>
<g >
<title>ep_poll (49 samples, 0.30%)</title><rect x="196.4" y="1141" width="3.5" height="15.0" fill="rgb(219,184,26)" rx="2" ry="2" />
<text  x="199.39" y="1151.5" ></text>
</g>
<g >
<title>__clock_gettime (14 samples, 0.08%)</title><rect x="682.7" y="1365" width="1.0" height="15.0" fill="rgb(233,30,41)" rx="2" ry="2" />
<text  x="685.74" y="1375.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::onPoolReady(std::__1::unique_ptr&lt;Envoy::Router::GenericUpstream, std::__1::default_delete&lt;Envoy::Router::GenericUpstream&gt; &gt;&amp;&amp;, std::__1::shared_ptr&lt;Envoy::Upstream::HostDescription const&gt;, std::__1::shared_ptr&lt;Envoy::Network::Address::Instance const&gt; const&amp;, Envoy::StreamInfo::StreamInfo const&amp;, absl::optional&lt;Envoy::Http::Protocol&gt;) (88 samples, 0.53%)</title><rect x="1087.6" y="901" width="6.3" height="15.0" fill="rgb(225,85,7)" rx="2" ry="2" />
<text  x="1090.60" y="911.5" ></text>
</g>
<g >
<title>__x64_sys_read (2 samples, 0.01%)</title><rect x="656.3" y="1253" width="0.1" height="15.0" fill="rgb(211,52,45)" rx="2" ry="2" />
<text  x="659.29" y="1263.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ActiveClient::StreamWrapper::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool) (273 samples, 1.65%)</title><rect x="717.3" y="1029" width="19.4" height="15.0" fill="rgb(212,169,1)" rx="2" ry="2" />
<text  x="720.30" y="1039.5" ></text>
</g>
<g >
<title>finish_task_switch (61 samples, 0.37%)</title><rect x="491.8" y="901" width="4.3" height="15.0" fill="rgb(219,86,2)" rx="2" ry="2" />
<text  x="494.80" y="911.5" ></text>
</g>
<g >
<title>ep_remove (3 samples, 0.02%)</title><rect x="997.6" y="725" width="0.2" height="15.0" fill="rgb(242,129,29)" rx="2" ry="2" />
<text  x="1000.56" y="735.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="1078.1" y="981" width="0.2" height="15.0" fill="rgb(248,14,3)" rx="2" ry="2" />
<text  x="1081.14" y="991.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (178 samples, 1.07%)</title><rect x="922.5" y="981" width="12.7" height="15.0" fill="rgb(249,69,31)" rx="2" ry="2" />
<text  x="925.54" y="991.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (5 samples, 0.03%)</title><rect x="255.0" y="1301" width="0.3" height="15.0" fill="rgb(228,4,23)" rx="2" ry="2" />
<text  x="257.99" y="1311.5" ></text>
</g>
<g >
<title>nf_hook_slow (88 samples, 0.53%)</title><rect x="1157.6" y="469" width="6.3" height="15.0" fill="rgb(221,143,28)" rx="2" ry="2" />
<text  x="1160.64" y="479.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Extensions::HttpFilters::Wasm::WasmFilterConfig::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::wasm::v3::Wasm const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0, std::__1::allocator&lt;Envoy::Extensions::HttpFilters::Wasm::WasmFilterConfig::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::wasm::v3::Wasm const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0&gt;, void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt;::operator()(Envoy::Http::FilterChainFactoryCallbacks&amp;) (30 samples, 0.18%)</title><rect x="829.3" y="997" width="2.1" height="15.0" fill="rgb(244,212,10)" rx="2" ry="2" />
<text  x="832.31" y="1007.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Extensions::HttpFilters::RouterFilter::RouterFilterConfig::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::router::v3::Router const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0, std::__1::allocator&lt;Envoy::Extensions::HttpFilters::RouterFilter::RouterFilterConfig::createFilterFactoryFromProtoTyped(envoy::extensions::filters::http::router::v3::Router const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, Envoy::Server::Configuration::FactoryContext&amp;)::$_0&gt;, void (Envoy::Http::FilterChainFactoryCallbacks&amp;)&gt;::operator()(Envoy::Http::FilterChainFactoryCallbacks&amp;) (5 samples, 0.03%)</title><rect x="1077.9" y="997" width="0.4" height="15.0" fill="rgb(247,98,11)" rx="2" ry="2" />
<text  x="1080.92" y="1007.5" ></text>
</g>
<g >
<title>process_backlog (2 samples, 0.01%)</title><rect x="641.8" y="1173" width="0.1" height="15.0" fill="rgb(224,10,48)" rx="2" ry="2" />
<text  x="644.78" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::decodeData(Envoy::Http::ActiveStreamDecoderFilter*, Envoy::Buffer::Instance&amp;, bool, Envoy::Http::FilterManager::FilterIterationStartState) (18 samples, 0.11%)</title><rect x="868.8" y="1045" width="1.3" height="15.0" fill="rgb(246,153,19)" rx="2" ry="2" />
<text  x="871.85" y="1055.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Http::ActiveStreamDecoderFilter::createBuffer()::$_6, std::__1::allocator&lt;Envoy::Http::ActiveStreamDecoderFilter::createBuffer()::$_6&gt;, void ()&gt;::destroy() (2 samples, 0.01%)</title><rect x="708.5" y="1221" width="0.1" height="15.0" fill="rgb(252,145,33)" rx="2" ry="2" />
<text  x="711.48" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Http::ActiveStreamFilterBase::route() (5 samples, 0.03%)</title><rect x="1081.8" y="997" width="0.3" height="15.0" fill="rgb(236,186,45)" rx="2" ry="2" />
<text  x="1084.76" y="1007.5" ></text>
</g>
<g >
<title>schedule (14 samples, 0.08%)</title><rect x="617.7" y="1157" width="1.0" height="15.0" fill="rgb(235,226,5)" rx="2" ry="2" />
<text  x="620.67" y="1167.5" ></text>
</g>
<g >
<title>parse_url_char (5 samples, 0.03%)</title><rect x="866.1" y="997" width="0.3" height="15.0" fill="rgb(221,190,32)" rx="2" ry="2" />
<text  x="869.07" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::Context(Envoy::Extensions::Common::Wasm::Wasm*, unsigned int, std::__1::shared_ptr&lt;Envoy::Extensions::Common::Wasm::PluginHandle&gt;) (5 samples, 0.03%)</title><rect x="830.2" y="933" width="0.3" height="15.0" fill="rgb(214,46,34)" rx="2" ry="2" />
<text  x="833.16" y="943.5" ></text>
</g>
<g >
<title>Envoy::Tracing::MetadataCustomTag::apply(Envoy::Tracing::Span&amp;, Envoy::Tracing::CustomTagContext const&amp;) const (7 samples, 0.04%)</title><rect x="1010.6" y="917" width="0.5" height="15.0" fill="rgb(253,18,7)" rx="2" ry="2" />
<text  x="1013.65" y="927.5" ></text>
</g>
<g >
<title>futex_wake (2 samples, 0.01%)</title><rect x="131.4" y="997" width="0.1" height="15.0" fill="rgb(218,123,54)" rx="2" ry="2" />
<text  x="134.39" y="1007.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::~FilterStateImpl() (2 samples, 0.01%)</title><rect x="799.0" y="933" width="0.2" height="15.0" fill="rgb(205,228,3)" rx="2" ry="2" />
<text  x="802.01" y="943.5" ></text>
</g>
<g >
<title>ip_output (53 samples, 0.32%)</title><rect x="908.7" y="389" width="3.7" height="15.0" fill="rgb(209,14,37)" rx="2" ry="2" />
<text  x="911.67" y="399.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::refreshCachedTracingCustomTags() (27 samples, 0.16%)</title><rect x="816.7" y="997" width="1.9" height="15.0" fill="rgb(205,95,40)" rx="2" ry="2" />
<text  x="819.72" y="1007.5" ></text>
</g>
<g >
<title>i40e_xmit_frame_ring (6 samples, 0.04%)</title><rect x="910.9" y="53" width="0.4" height="15.0" fill="rgb(208,122,19)" rx="2" ry="2" />
<text  x="913.88" y="63.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (2 samples, 0.01%)</title><rect x="645.9" y="1173" width="0.1" height="15.0" fill="rgb(232,77,11)" rx="2" ry="2" />
<text  x="648.90" y="1183.5" ></text>
</g>
<g >
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="951.9" y="1157" width="0.3" height="15.0" fill="rgb(223,207,44)" rx="2" ry="2" />
<text  x="954.91" y="1167.5" ></text>
</g>
<g >
<title>vxlan_get_route (2 samples, 0.01%)</title><rect x="1161.3" y="245" width="0.1" height="15.0" fill="rgb(229,159,11)" rx="2" ry="2" />
<text  x="1164.27" y="255.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (17 samples, 0.10%)</title><rect x="113.3" y="1349" width="1.2" height="15.0" fill="rgb(236,28,48)" rx="2" ry="2" />
<text  x="116.33" y="1359.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::staticLookup(absl::string_view) (3 samples, 0.02%)</title><rect x="861.2" y="869" width="0.3" height="15.0" fill="rgb(228,198,14)" rx="2" ry="2" />
<text  x="864.24" y="879.5" ></text>
</g>
<g >
<title>local.runtime.pidleput (11 samples, 0.07%)</title><rect x="200.6" y="1221" width="0.8" height="15.0" fill="rgb(219,25,16)" rx="2" ry="2" />
<text  x="203.59" y="1231.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelExpressionFlatEvaluationState::CelExpressionFlatEvaluationState(unsigned long, std::__1::set&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, google::protobuf::Arena*) (4 samples, 0.02%)</title><rect x="789.2" y="773" width="0.3" height="15.0" fill="rgb(206,227,37)" rx="2" ry="2" />
<text  x="792.20" y="783.5" ></text>
</g>
<g >
<title>nf_hook_slow (3 samples, 0.02%)</title><rect x="912.2" y="373" width="0.2" height="15.0" fill="rgb(253,204,14)" rx="2" ry="2" />
<text  x="915.16" y="383.5" ></text>
</g>
<g >
<title>absl::substitute_internal::SubstituteAndAppendArray(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, absl::string_view, absl::string_view const*, unsigned long) (4 samples, 0.02%)</title><rect x="786.6" y="741" width="0.3" height="15.0" fill="rgb(236,156,38)" rx="2" ry="2" />
<text  x="789.64" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (2 samples, 0.01%)</title><rect x="114.0" y="1205" width="0.2" height="15.0" fill="rgb(224,164,26)" rx="2" ry="2" />
<text  x="117.04" y="1215.5" ></text>
</g>
<g >
<title>do_nanosleep (3 samples, 0.02%)</title><rect x="604.2" y="1157" width="0.2" height="15.0" fill="rgb(245,91,7)" rx="2" ry="2" />
<text  x="607.23" y="1167.5" ></text>
</g>
<g >
<title>do_send_sig_info (3 samples, 0.02%)</title><rect x="622.6" y="1157" width="0.2" height="15.0" fill="rgb(247,90,1)" rx="2" ry="2" />
<text  x="625.58" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="1092.5" y="837" width="0.1" height="15.0" fill="rgb(223,190,42)" rx="2" ry="2" />
<text  x="1095.50" y="847.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Driver::startSpan(Envoy::Tracing::Config const&amp;, Envoy::Tracing::TraceContext&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::chrono::time_point&lt;std::__1::chrono::system_clock, std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000000l&gt; &gt; &gt;, Envoy::Tracing::Decision) (30 samples, 0.18%)</title><rect x="820.9" y="997" width="2.2" height="15.0" fill="rgb(220,176,27)" rx="2" ry="2" />
<text  x="823.92" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Router::RouteEntryImplBase::internalRedirectPolicy() const (4 samples, 0.02%)</title><rect x="735.4" y="997" width="0.3" height="15.0" fill="rgb(210,54,30)" rx="2" ry="2" />
<text  x="738.37" y="1007.5" ></text>
</g>
<g >
<title>absl::hash_internal::Wyhash(void const*, unsigned long, unsigned long, unsigned long const*) (2 samples, 0.01%)</title><rect x="847.9" y="949" width="0.2" height="15.0" fill="rgb(211,132,33)" rx="2" ry="2" />
<text  x="850.94" y="959.5" ></text>
</g>
<g >
<title>dev_queue_xmit (10 samples, 0.06%)</title><rect x="1165.6" y="789" width="0.7" height="15.0" fill="rgb(241,82,41)" rx="2" ry="2" />
<text  x="1168.61" y="799.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (2 samples, 0.01%)</title><rect x="1187.2" y="965" width="0.2" height="15.0" fill="rgb(212,12,32)" rx="2" ry="2" />
<text  x="1190.23" y="975.5" ></text>
</g>
<g >
<title>Envoy::Config::Metadata::metadataValue(envoy::config::core::v3::Metadata const*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;) (3 samples, 0.02%)</title><rect x="758.1" y="901" width="0.2" height="15.0" fill="rgb(209,182,11)" rx="2" ry="2" />
<text  x="761.12" y="911.5" ></text>
</g>
<g >
<title>finish_task_switch (99 samples, 0.60%)</title><rect x="217.5" y="1029" width="7.1" height="15.0" fill="rgb(221,77,32)" rx="2" ry="2" />
<text  x="220.51" y="1039.5" ></text>
</g>
<g >
<title>net_rx_action (130 samples, 0.78%)</title><rect x="1156.3" y="725" width="9.2" height="15.0" fill="rgb(253,61,51)" rx="2" ry="2" />
<text  x="1159.29" y="735.5" ></text>
</g>
<g >
<title>event_add_nolock_ (4 samples, 0.02%)</title><rect x="1091.4" y="741" width="0.2" height="15.0" fill="rgb(237,121,10)" rx="2" ry="2" />
<text  x="1094.36" y="751.5" ></text>
</g>
<g >
<title>do_page_fault (6 samples, 0.04%)</title><rect x="539.7" y="1157" width="0.4" height="15.0" fill="rgb(213,166,31)" rx="2" ry="2" />
<text  x="542.66" y="1167.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ResponseHeaderMapImpl::setEnvoyDecoratorOperation(absl::string_view) (2 samples, 0.01%)</title><rect x="980.5" y="949" width="0.1" height="15.0" fill="rgb(243,30,29)" rx="2" ry="2" />
<text  x="983.50" y="959.5" ></text>
</g>
<g >
<title>finish_task_switch (270 samples, 1.63%)</title><rect x="439.5" y="869" width="19.2" height="15.0" fill="rgb(220,2,32)" rx="2" ry="2" />
<text  x="442.53" y="879.5" ></text>
</g>
<g >
<title>vfs_write (4 samples, 0.02%)</title><rect x="656.4" y="1221" width="0.3" height="15.0" fill="rgb(213,86,8)" rx="2" ry="2" />
<text  x="659.43" y="1231.5" ></text>
</g>
<g >
<title>runtime.gogo (2 samples, 0.01%)</title><rect x="130.8" y="1189" width="0.2" height="15.0" fill="rgb(244,146,33)" rx="2" ry="2" />
<text  x="133.82" y="1199.5" ></text>
</g>
<g >
<title>gro_cell_poll (2 samples, 0.01%)</title><rect x="1131.5" y="1029" width="0.2" height="15.0" fill="rgb(222,193,3)" rx="2" ry="2" />
<text  x="1134.54" y="1039.5" ></text>
</g>
<g >
<title>absl::hash_internal::MixingHashState Envoy::Stats::AbslHashValue&lt;absl::hash_internal::MixingHashState&gt;(absl::hash_internal::MixingHashState, Envoy::Stats::StatName) (2 samples, 0.01%)</title><rect x="985.5" y="885" width="0.2" height="15.0" fill="rgb(215,74,27)" rx="2" ry="2" />
<text  x="988.55" y="895.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="815.4" y="1077" width="0.3" height="15.0" fill="rgb(230,187,17)" rx="2" ry="2" />
<text  x="818.37" y="1087.5" ></text>
</g>
<g >
<title>tcp_poll (2 samples, 0.01%)</title><rect x="1127.8" y="869" width="0.2" height="15.0" fill="rgb(243,133,2)" rx="2" ry="2" />
<text  x="1130.85" y="879.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Extensions::Common::Wasm::Context::encodeData(Envoy::Buffer::Instance&amp;, bool) (2 samples, 0.01%)</title><rect x="796.5" y="981" width="0.2" height="15.0" fill="rgb(212,136,29)" rx="2" ry="2" />
<text  x="799.52" y="991.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Span::traceIdAsHexString() const (2 samples, 0.01%)</title><rect x="834.0" y="997" width="0.1" height="15.0" fill="rgb(238,13,42)" rx="2" ry="2" />
<text  x="837.00" y="1007.5" ></text>
</g>
<g >
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="438.3" y="869" width="0.3" height="15.0" fill="rgb(231,90,45)" rx="2" ry="2" />
<text  x="441.25" y="879.5" ></text>
</g>
<g >
<title>ip_forward (2 samples, 0.01%)</title><rect x="657.1" y="1077" width="0.2" height="15.0" fill="rgb(254,226,44)" rx="2" ry="2" />
<text  x="660.14" y="1087.5" ></text>
</g>
<g >
<title>futex_wait (8 samples, 0.05%)</title><rect x="510.0" y="1109" width="0.6" height="15.0" fill="rgb(233,134,24)" rx="2" ry="2" />
<text  x="513.00" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::ZipkinSpan::setTag(absl::string_view, absl::string_view) (3 samples, 0.02%)</title><rect x="1002.3" y="933" width="0.2" height="15.0" fill="rgb(206,212,47)" rx="2" ry="2" />
<text  x="1005.33" y="943.5" ></text>
</g>
<g >
<title>__kfree_skb (12 samples, 0.07%)</title><rect x="565.1" y="533" width="0.9" height="15.0" fill="rgb(210,128,14)" rx="2" ry="2" />
<text  x="568.12" y="543.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.01%)</title><rect x="131.4" y="1125" width="0.1" height="15.0" fill="rgb(250,95,16)" rx="2" ry="2" />
<text  x="134.39" y="1135.5" ></text>
</g>
<g >
<title>fib_table_lookup (3 samples, 0.02%)</title><rect x="913.0" y="341" width="0.2" height="15.0" fill="rgb(236,11,14)" rx="2" ry="2" />
<text  x="916.01" y="351.5" ></text>
</g>
<g >
<title>void google::protobuf::internal::arena_destruct_object&lt;Envoy::Extensions::Filters::Common::Expr::ResponseWrapper&gt;(void*) (2 samples, 0.01%)</title><rect x="1034.9" y="805" width="0.1" height="15.0" fill="rgb(232,96,1)" rx="2" ry="2" />
<text  x="1037.90" y="815.5" ></text>
</g>
<g >
<title>Envoy::Http::ActiveStreamFilterBase::route(std::__1::function&lt;Envoy::Router::RouteMatchStatus (std::__1::shared_ptr&lt;Envoy::Router::Route const&gt;, Envoy::Router::RouteEvalStatus)&gt; const&amp;) (3 samples, 0.02%)</title><rect x="1081.8" y="981" width="0.2" height="15.0" fill="rgb(214,13,12)" rx="2" ry="2" />
<text  x="1084.84" y="991.5" ></text>
</g>
<g >
<title>std::__1::__murmur2_or_cityhash&lt;unsigned long, 64ul&gt;::operator()(void const*, unsigned long) (2 samples, 0.01%)</title><rect x="790.8" y="805" width="0.1" height="15.0" fill="rgb(231,217,27)" rx="2" ry="2" />
<text  x="793.76" y="815.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::getSchemeValue() const (2 samples, 0.01%)</title><rect x="1008.8" y="901" width="0.1" height="15.0" fill="rgb(232,222,48)" rx="2" ry="2" />
<text  x="1011.80" y="911.5" ></text>
</g>
<g >
<title>Envoy::Event::DispatcherImpl::updateApproximateMonotonicTime() (2 samples, 0.01%)</title><rect x="685.4" y="1317" width="0.1" height="15.0" fill="rgb(205,162,23)" rx="2" ry="2" />
<text  x="688.37" y="1327.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::maybeCreateInline(Envoy::Http::HeaderMapImpl::HeaderEntryImpl**, Envoy::Http::LowerCaseString const&amp;) (2 samples, 0.01%)</title><rect x="726.1" y="933" width="0.2" height="15.0" fill="rgb(243,62,31)" rx="2" ry="2" />
<text  x="729.12" y="943.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.01%)</title><rect x="499.2" y="1061" width="0.1" height="15.0" fill="rgb(233,45,49)" rx="2" ry="2" />
<text  x="502.20" y="1071.5" ></text>
</g>
<g >
<title>netdev_pick_tx (2 samples, 0.01%)</title><rect x="910.6" y="69" width="0.1" height="15.0" fill="rgb(224,108,1)" rx="2" ry="2" />
<text  x="913.59" y="79.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (8 samples, 0.05%)</title><rect x="35.4" y="1029" width="0.6" height="15.0" fill="rgb(253,67,36)" rx="2" ry="2" />
<text  x="38.39" y="1039.5" ></text>
</g>
<g >
<title>__kfree_skb (7 samples, 0.04%)</title><rect x="894.9" y="981" width="0.5" height="15.0" fill="rgb(221,131,52)" rx="2" ry="2" />
<text  x="897.95" y="991.5" ></text>
</g>
<g >
<title>local.runtime.park_m (63 samples, 0.38%)</title><rect x="131.0" y="1173" width="4.4" height="15.0" fill="rgb(240,95,29)" rx="2" ry="2" />
<text  x="133.97" y="1183.5" ></text>
</g>
<g >
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="656.4" y="1125" width="0.3" height="15.0" fill="rgb(217,72,48)" rx="2" ry="2" />
<text  x="659.43" y="1135.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::get_header_map_value(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (25 samples, 0.15%)</title><rect x="728.1" y="901" width="1.8" height="15.0" fill="rgb(235,223,30)" rx="2" ry="2" />
<text  x="731.11" y="911.5" ></text>
</g>
<g >
<title>fsnotify (4 samples, 0.02%)</title><rect x="516.1" y="1061" width="0.3" height="15.0" fill="rgb(208,69,18)" rx="2" ry="2" />
<text  x="519.12" y="1071.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (131 samples, 0.79%)</title><rect x="1156.3" y="757" width="9.3" height="15.0" fill="rgb(222,120,24)" rx="2" ry="2" />
<text  x="1159.29" y="767.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 0.02%)</title><rect x="239.4" y="1029" width="0.2" height="15.0" fill="rgb(219,97,7)" rx="2" ry="2" />
<text  x="242.41" y="1039.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::RenderField(google::protobuf::Field const*, google::protobuf::stringpiece_internal::StringPiece, google::protobuf::util::converter::ObjectWriter*) const (4 samples, 0.02%)</title><rect x="1004.4" y="741" width="0.3" height="15.0" fill="rgb(244,183,45)" rx="2" ry="2" />
<text  x="1007.39" y="751.5" ></text>
</g>
<g >
<title>ip_vs_in (2 samples, 0.01%)</title><rect x="585.0" y="629" width="0.1" height="15.0" fill="rgb(240,76,27)" rx="2" ry="2" />
<text  x="587.96" y="639.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::ValueFromMessage(google::protobuf::Value const*, google::protobuf::Arena*) (2 samples, 0.01%)</title><rect x="786.2" y="725" width="0.2" height="15.0" fill="rgb(208,19,24)" rx="2" ry="2" />
<text  x="789.21" y="735.5" ></text>
</g>
<g >
<title>Envoy::Http::CodeStatsImpl::chargeResponseTiming(Envoy::Http::CodeStats::ResponseTimingInfo const&amp;) const (17 samples, 0.10%)</title><rect x="797.4" y="965" width="1.2" height="15.0" fill="rgb(218,190,36)" rx="2" ry="2" />
<text  x="800.38" y="975.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getHeaderMapValue(proxy_wasm::WasmHeaderMapType, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;*) (10 samples, 0.06%)</title><rect x="1109.8" y="933" width="0.7" height="15.0" fill="rgb(229,17,4)" rx="2" ry="2" />
<text  x="1112.78" y="943.5" ></text>
</g>
<g >
<title>ip_finish_output2 (128 samples, 0.77%)</title><rect x="907.0" y="805" width="9.1" height="15.0" fill="rgb(245,101,14)" rx="2" ry="2" />
<text  x="909.96" y="815.5" ></text>
</g>
<g >
<title>schedule (3 samples, 0.02%)</title><rect x="597.9" y="1125" width="0.2" height="15.0" fill="rgb(246,6,29)" rx="2" ry="2" />
<text  x="600.90" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Http::ActiveStreamDecoderFilter::createBuffer() (2 samples, 0.01%)</title><rect x="1121.1" y="1013" width="0.1" height="15.0" fill="rgb(252,202,11)" rx="2" ry="2" />
<text  x="1124.09" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (16 samples, 0.10%)</title><rect x="592.6" y="1157" width="1.1" height="15.0" fill="rgb(235,48,46)" rx="2" ry="2" />
<text  x="595.57" y="1167.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::decodeData(Envoy::Http::ActiveStreamDecoderFilter*, Envoy::Buffer::Instance&amp;, bool, Envoy::Http::FilterManager::FilterIterationStartState) (34 samples, 0.20%)</title><rect x="1117.3" y="1045" width="2.4" height="15.0" fill="rgb(214,62,18)" rx="2" ry="2" />
<text  x="1120.25" y="1055.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ActiveStreamDecoderFilter::encodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool, absl::string_view) (8 samples, 0.05%)</title><rect x="988.3" y="981" width="0.6" height="15.0" fill="rgb(224,50,45)" rx="2" ry="2" />
<text  x="991.32" y="991.5" ></text>
</g>
<g >
<title>block_write_end (5 samples, 0.03%)</title><rect x="242.6" y="1077" width="0.4" height="15.0" fill="rgb(246,15,25)" rx="2" ry="2" />
<text  x="245.61" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Network::RawBufferSocket::doRead(Envoy::Buffer::Instance&amp;) (250 samples, 1.51%)</title><rect x="884.2" y="1221" width="17.8" height="15.0" fill="rgb(231,154,16)" rx="2" ry="2" />
<text  x="887.21" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Buffer::SliceDeque::~SliceDeque() (2 samples, 0.01%)</title><rect x="705.2" y="1205" width="0.2" height="15.0" fill="rgb(212,147,5)" rx="2" ry="2" />
<text  x="708.21" y="1215.5" ></text>
</g>
<g >
<title>common_file_perm (6 samples, 0.04%)</title><rect x="899.1" y="1013" width="0.4" height="15.0" fill="rgb(213,21,1)" rx="2" ry="2" />
<text  x="902.07" y="1023.5" ></text>
</g>
<g >
<title>sock_write_iter (199 samples, 1.20%)</title><rect x="1153.9" y="1045" width="14.2" height="15.0" fill="rgb(230,73,41)" rx="2" ry="2" />
<text  x="1156.95" y="1055.5" ></text>
</g>
<g >
<title>ip_finish_output2 (7 samples, 0.04%)</title><rect x="587.7" y="821" width="0.5" height="15.0" fill="rgb(223,164,38)" rx="2" ry="2" />
<text  x="590.66" y="831.5" ></text>
</g>
<g >
<title>Envoy::Http::ActiveStreamFilterBase::streamInfo() (3 samples, 0.02%)</title><rect x="1098.0" y="997" width="0.3" height="15.0" fill="rgb(237,210,53)" rx="2" ry="2" />
<text  x="1101.05" y="1007.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_in (2 samples, 0.01%)</title><rect x="585.3" y="629" width="0.2" height="15.0" fill="rgb(218,132,20)" rx="2" ry="2" />
<text  x="588.31" y="639.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::FilterManager(Envoy::Http::FilterManagerCallbacks&amp;, Envoy::Event::Dispatcher&amp;, Envoy::Network::Connection const&amp;, unsigned long, std::__1::shared_ptr&lt;Envoy::Buffer::BufferMemoryAccount&gt;, bool, unsigned int, Envoy::Http::FilterChainFactory&amp;, Envoy::LocalReply::LocalReply const&amp;, Envoy::Http::Protocol, Envoy::TimeSource&amp;, std::__1::shared_ptr&lt;Envoy::StreamInfo::FilterState&gt;, Envoy::StreamInfo::FilterState::LifeSpan) (4 samples, 0.02%)</title><rect x="812.9" y="1013" width="0.3" height="15.0" fill="rgb(240,168,36)" rx="2" ry="2" />
<text  x="815.88" y="1023.5" ></text>
</g>
<g >
<title>__lock_text_start (11 samples, 0.07%)</title><rect x="241.8" y="997" width="0.8" height="15.0" fill="rgb(212,174,50)" rx="2" ry="2" />
<text  x="244.83" y="1007.5" ></text>
</g>
<g >
<title>__vfs_write (286 samples, 1.72%)</title><rect x="517.4" y="1093" width="20.3" height="15.0" fill="rgb(233,48,8)" rx="2" ry="2" />
<text  x="520.40" y="1103.5" ></text>
</g>
<g >
<title>std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::WasmResult (proxy_wasm::WasmBase&amp;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void* (unsigned long)&gt;)&gt; &gt;, void*&gt;*&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::WasmResult (proxy_wasm::WasmBase&amp;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void* (unsigned long)&gt;)&gt; &gt;, std::__1::__unordered_map_hasher&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::WasmResult (proxy_wasm::WasmBase&amp;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void* (unsigned long)&gt;)&gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::__unordered_map_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::WasmResult (proxy_wasm::WasmBase&amp;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void* (unsigned long)&gt;)&gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::WasmResult (proxy_wasm::WasmBase&amp;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;void* (unsigned long)&gt;)&gt; &gt; &gt; &gt;::find&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) (7 samples, 0.04%)</title><rect x="790.3" y="805" width="0.5" height="15.0" fill="rgb(243,110,50)" rx="2" ry="2" />
<text  x="793.27" y="815.5" ></text>
</g>
<g >
<title>Envoy::Runtime::LoaderImpl::snapshot() (2 samples, 0.01%)</title><rect x="1076.1" y="1013" width="0.1" height="15.0" fill="rgb(235,171,16)" rx="2" ry="2" />
<text  x="1079.07" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::connectionLocalAddress() (2 samples, 0.01%)</title><rect x="1087.4" y="901" width="0.1" height="15.0" fill="rgb(230,214,3)" rx="2" ry="2" />
<text  x="1090.38" y="911.5" ></text>
</g>
<g >
<title>Envoy::Tracing::HttpTracerUtility::finalizeDownstreamSpan(Envoy::Tracing::Span&amp;, Envoy::Http::RequestHeaderMap const*, Envoy::Http::ResponseHeaderMap const*, Envoy::Http::ResponseTrailerMap const*, Envoy::StreamInfo::StreamInfo const&amp;, Envoy::Tracing::Config const&amp;) (131 samples, 0.79%)</title><rect x="1002.8" y="933" width="9.3" height="15.0" fill="rgb(220,35,51)" rx="2" ry="2" />
<text  x="1005.83" y="943.5" ></text>
</g>
<g >
<title>__sched_text_start (39 samples, 0.24%)</title><rect x="485.6" y="917" width="2.8" height="15.0" fill="rgb(241,221,2)" rx="2" ry="2" />
<text  x="488.61" y="927.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (5 samples, 0.03%)</title><rect x="1145.6" y="933" width="0.4" height="15.0" fill="rgb(246,98,50)" rx="2" ry="2" />
<text  x="1148.62" y="943.5" ></text>
</g>
<g >
<title>local.runtime.epollwait (91 samples, 0.55%)</title><rect x="194.0" y="1221" width="6.4" height="15.0" fill="rgb(212,222,25)" rx="2" ry="2" />
<text  x="196.97" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Event::FileEventImpl::activate(unsigned int) (4 samples, 0.02%)</title><rect x="724.0" y="901" width="0.3" height="15.0" fill="rgb(232,170,37)" rx="2" ry="2" />
<text  x="726.99" y="911.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (215 samples, 1.30%)</title><rect x="1172.1" y="981" width="15.3" height="15.0" fill="rgb(237,157,48)" rx="2" ry="2" />
<text  x="1175.08" y="991.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.01%)</title><rect x="511.2" y="1093" width="0.2" height="15.0" fill="rgb(231,183,49)" rx="2" ry="2" />
<text  x="514.21" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_write (4 samples, 0.02%)</title><rect x="656.4" y="1253" width="0.3" height="15.0" fill="rgb(214,44,20)" rx="2" ry="2" />
<text  x="659.43" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="682.0" y="1189" width="0.2" height="15.0" fill="rgb(223,198,34)" rx="2" ry="2" />
<text  x="685.03" y="1199.5" ></text>
</g>
<g >
<title>nf_ct_seq_offset (2 samples, 0.01%)</title><rect x="924.1" y="757" width="0.1" height="15.0" fill="rgb(226,157,3)" rx="2" ry="2" />
<text  x="927.10" y="767.5" ></text>
</g>
<g >
<title>runtime.memhash64 (2 samples, 0.01%)</title><rect x="122.8" y="1237" width="0.1" height="15.0" fill="rgb(238,192,28)" rx="2" ry="2" />
<text  x="125.79" y="1247.5" ></text>
</g>
<g >
<title>ip_output (2 samples, 0.01%)</title><rect x="1162.2" y="405" width="0.1" height="15.0" fill="rgb(253,136,44)" rx="2" ry="2" />
<text  x="1165.19" y="415.5" ></text>
</g>
<g >
<title>copy_page_from_iter (2 samples, 0.01%)</title><rect x="537.3" y="1045" width="0.2" height="15.0" fill="rgb(241,154,41)" rx="2" ry="2" />
<text  x="540.31" y="1055.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.09%)</title><rect x="1124.6" y="949" width="1.0" height="15.0" fill="rgb(221,72,18)" rx="2" ry="2" />
<text  x="1127.57" y="959.5" ></text>
</g>
<g >
<title>security_file_permission (8 samples, 0.05%)</title><rect x="167.1" y="1125" width="0.6" height="15.0" fill="rgb(228,75,30)" rx="2" ry="2" />
<text  x="170.09" y="1135.5" ></text>
</g>
<g >
<title>sock_sendmsg (199 samples, 1.20%)</title><rect x="1153.9" y="1029" width="14.2" height="15.0" fill="rgb(211,72,48)" rx="2" ry="2" />
<text  x="1156.95" y="1039.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelProtoWrapper::CreateMessage(google::protobuf::Message const*, google::protobuf::Arena*) (2 samples, 0.01%)</title><rect x="1025.0" y="757" width="0.2" height="15.0" fill="rgb(213,68,21)" rx="2" ry="2" />
<text  x="1028.01" y="767.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (2 samples, 0.01%)</title><rect x="1145.7" y="837" width="0.1" height="15.0" fill="rgb(247,71,35)" rx="2" ry="2" />
<text  x="1148.70" y="847.5" ></text>
</g>
<g >
<title>__virt_addr_valid (2 samples, 0.01%)</title><rect x="896.2" y="901" width="0.2" height="15.0" fill="rgb(253,70,31)" rx="2" ry="2" />
<text  x="899.23" y="911.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::writev(Envoy::Buffer::RawSlice const*, unsigned long) (209 samples, 1.26%)</title><rect x="904.0" y="1189" width="14.8" height="15.0" fill="rgb(224,154,52)" rx="2" ry="2" />
<text  x="906.98" y="1199.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::addImpl(void const*, unsigned long) (4 samples, 0.02%)</title><rect x="807.2" y="1077" width="0.3" height="15.0" fill="rgb(219,131,18)" rx="2" ry="2" />
<text  x="810.19" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Slice::~Slice() (2 samples, 0.01%)</title><rect x="992.1" y="1029" width="0.1" height="15.0" fill="rgb(243,203,16)" rx="2" ry="2" />
<text  x="995.09" y="1039.5" ></text>
</g>
<g >
<title>rw_verify_area (2 samples, 0.01%)</title><rect x="166.9" y="1125" width="0.2" height="15.0" fill="rgb(215,8,14)" rx="2" ry="2" />
<text  x="169.95" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getHeaderMapValue(proxy_wasm::WasmHeaderMapType, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;*) (3 samples, 0.02%)</title><rect x="861.2" y="917" width="0.3" height="15.0" fill="rgb(235,145,26)" rx="2" ry="2" />
<text  x="864.24" y="927.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Filters::Common::Expr::ConnectionWrapper::operator[](google::api::expr::runtime::CelValue) const (3 samples, 0.02%)</title><rect x="1024.4" y="789" width="0.3" height="15.0" fill="rgb(245,122,12)" rx="2" ry="2" />
<text  x="1027.45" y="799.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::PluginHandle::rootContextId() (10 samples, 0.06%)</title><rect x="1078.4" y="965" width="0.7" height="15.0" fill="rgb(241,179,7)" rx="2" ry="2" />
<text  x="1081.42" y="975.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::add(void const*, unsigned long) (2 samples, 0.01%)</title><rect x="721.6" y="933" width="0.2" height="15.0" fill="rgb(214,48,17)" rx="2" ry="2" />
<text  x="724.64" y="943.5" ></text>
</g>
<g >
<title>inet_sendmsg (181 samples, 1.09%)</title><rect x="922.3" y="1013" width="12.9" height="15.0" fill="rgb(205,210,33)" rx="2" ry="2" />
<text  x="925.33" y="1023.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelValue::CreateDuration(absl::Duration) (2 samples, 0.01%)</title><rect x="1034.0" y="805" width="0.2" height="15.0" fill="rgb(253,16,31)" rx="2" ry="2" />
<text  x="1037.05" y="815.5" ></text>
</g>
<g >
<title>net_rx_action (4 samples, 0.02%)</title><rect x="562.6" y="741" width="0.3" height="15.0" fill="rgb(224,194,16)" rx="2" ry="2" />
<text  x="565.63" y="751.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.03%)</title><rect x="33.5" y="1141" width="0.4" height="15.0" fill="rgb(240,137,26)" rx="2" ry="2" />
<text  x="36.54" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Network::RawBufferSocket::doRead(Envoy::Buffer::Instance&amp;) (2 samples, 0.01%)</title><rect x="1168.3" y="1237" width="0.2" height="15.0" fill="rgb(210,100,40)" rx="2" ry="2" />
<text  x="1171.31" y="1247.5" ></text>
</g>
<g >
<title>__lock_text_start (275 samples, 1.66%)</title><rect x="517.7" y="1013" width="19.5" height="15.0" fill="rgb(212,49,34)" rx="2" ry="2" />
<text  x="520.69" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (747 samples, 4.50%)</title><rect x="22.3" y="1221" width="53.1" height="15.0" fill="rgb(225,0,39)" rx="2" ry="2" />
<text  x="25.30" y="1231.5" >[unkn..</text>
</g>
<g >
<title>__fdget_pos (2 samples, 0.01%)</title><rect x="1143.0" y="1093" width="0.1" height="15.0" fill="rgb(242,201,19)" rx="2" ry="2" />
<text  x="1145.99" y="1103.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.07%)</title><rect x="169.4" y="1141" width="0.8" height="15.0" fill="rgb(231,165,41)" rx="2" ry="2" />
<text  x="172.37" y="1151.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.19%)</title><rect x="642.2" y="1269" width="2.2" height="15.0" fill="rgb(244,141,7)" rx="2" ry="2" />
<text  x="645.21" y="1279.5" ></text>
</g>
<g >
<title>ipv4_mtu (2 samples, 0.01%)</title><rect x="590.6" y="949" width="0.2" height="15.0" fill="rgb(214,165,41)" rx="2" ry="2" />
<text  x="593.65" y="959.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::move(Envoy::Buffer::Instance&amp;) (2 samples, 0.01%)</title><rect x="869.3" y="949" width="0.2" height="15.0" fill="rgb(225,157,8)" rx="2" ry="2" />
<text  x="872.35" y="959.5" ></text>
</g>
<g >
<title>br_pass_frame_up (96 samples, 0.58%)</title><rect x="1157.2" y="565" width="6.8" height="15.0" fill="rgb(240,65,21)" rx="2" ry="2" />
<text  x="1160.22" y="575.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::endEncode() (67 samples, 0.40%)</title><rect x="995.9" y="949" width="4.7" height="15.0" fill="rgb(220,106,53)" rx="2" ry="2" />
<text  x="998.86" y="959.5" ></text>
</g>
<g >
<title>runtime.schedule (746 samples, 4.50%)</title><rect x="173.2" y="1253" width="53.1" height="15.0" fill="rgb(243,169,27)" rx="2" ry="2" />
<text  x="176.21" y="1263.5" >runti..</text>
</g>
<g >
<title>finish_task_switch (40 samples, 0.24%)</title><rect x="619.4" y="997" width="2.8" height="15.0" fill="rgb(249,172,7)" rx="2" ry="2" />
<text  x="622.38" y="1007.5" ></text>
</g>
<g >
<title>do_syscall_64 (21 samples, 0.13%)</title><rect x="900.4" y="1125" width="1.5" height="15.0" fill="rgb(209,41,21)" rx="2" ry="2" />
<text  x="903.42" y="1135.5" ></text>
</g>
<g >
<title>local.runtime.mPark (2 samples, 0.01%)</title><rect x="250.4" y="1237" width="0.2" height="15.0" fill="rgb(232,92,47)" rx="2" ry="2" />
<text  x="253.44" y="1247.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::getExisting(absl::string_view) (11 samples, 0.07%)</title><rect x="1030.1" y="773" width="0.7" height="15.0" fill="rgb(207,119,5)" rx="2" ry="2" />
<text  x="1033.06" y="783.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onReadReady() (2,600 samples, 15.67%)</title><rect x="966.7" y="1237" width="184.9" height="15.0" fill="rgb(218,187,4)" rx="2" ry="2" />
<text  x="969.70" y="1247.5" >Envoy::Network::Connecti..</text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::decodeData(Envoy::Buffer::Instance&amp;, bool) (34 samples, 0.20%)</title><rect x="1120.5" y="1061" width="2.4" height="15.0" fill="rgb(238,131,22)" rx="2" ry="2" />
<text  x="1123.52" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Stats::StatName::dataSize() const (2 samples, 0.01%)</title><rect x="731.9" y="869" width="0.1" height="15.0" fill="rgb(239,178,13)" rx="2" ry="2" />
<text  x="734.88" y="879.5" ></text>
</g>
<g >
<title>kernfs_seq_show (81 samples, 0.49%)</title><rect x="672.9" y="1013" width="5.7" height="15.0" fill="rgb(244,100,36)" rx="2" ry="2" />
<text  x="675.86" y="1023.5" ></text>
</g>
<g >
<title>Envoy::ThreadLocal::InstanceImpl::SlotImpl::currentThreadRegistered() (2 samples, 0.01%)</title><rect x="1008.4" y="885" width="0.2" height="15.0" fill="rgb(205,149,29)" rx="2" ry="2" />
<text  x="1011.45" y="895.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.01%)</title><rect x="690.9" y="1221" width="0.2" height="15.0" fill="rgb(240,8,40)" rx="2" ry="2" />
<text  x="693.92" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Router::FilterUtility::setUpstreamScheme(Envoy::Http::RequestHeaderMap&amp;, bool, bool) (8 samples, 0.05%)</title><rect x="851.8" y="997" width="0.5" height="15.0" fill="rgb(207,46,36)" rx="2" ry="2" />
<text  x="854.78" y="1007.5" ></text>
</g>
<g >
<title>_copy_from_user (2 samples, 0.01%)</title><rect x="899.6" y="1045" width="0.2" height="15.0" fill="rgb(247,166,39)" rx="2" ry="2" />
<text  x="902.64" y="1055.5" ></text>
</g>
<g >
<title>local.runtime.memmove (2 samples, 0.01%)</title><rect x="124.5" y="1253" width="0.1" height="15.0" fill="rgb(232,119,35)" rx="2" ry="2" />
<text  x="127.49" y="1263.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::findValue(absl::string_view, google::protobuf::Arena*, bool) const (17 samples, 0.10%)</title><rect x="1032.2" y="805" width="1.2" height="15.0" fill="rgb(238,113,6)" rx="2" ry="2" />
<text  x="1035.20" y="815.5" ></text>
</g>
<g >
<title>finish_task_switch (14 samples, 0.08%)</title><rect x="134.2" y="933" width="1.0" height="15.0" fill="rgb(232,174,33)" rx="2" ry="2" />
<text  x="137.24" y="943.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (3 samples, 0.02%)</title><rect x="1155.4" y="773" width="0.2" height="15.0" fill="rgb(217,94,18)" rx="2" ry="2" />
<text  x="1158.37" y="783.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.01%)</title><rect x="1145.8" y="805" width="0.2" height="15.0" fill="rgb(217,139,4)" rx="2" ry="2" />
<text  x="1148.84" y="815.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.02%)</title><rect x="509.6" y="1061" width="0.2" height="15.0" fill="rgb(243,131,3)" rx="2" ry="2" />
<text  x="512.58" y="1071.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (50 samples, 0.30%)</title><rect x="1158.2" y="293" width="3.6" height="15.0" fill="rgb(222,34,40)" rx="2" ry="2" />
<text  x="1161.21" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="133.1" y="1109" width="0.3" height="15.0" fill="rgb(218,41,40)" rx="2" ry="2" />
<text  x="136.10" y="1119.5" ></text>
</g>
<g >
<title>__alloc_skb (11 samples, 0.07%)</title><rect x="557.3" y="981" width="0.8" height="15.0" fill="rgb(233,144,17)" rx="2" ry="2" />
<text  x="560.30" y="991.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::get_header_map_value(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (13 samples, 0.08%)</title><rect x="1109.7" y="949" width="0.9" height="15.0" fill="rgb(206,164,15)" rx="2" ry="2" />
<text  x="1112.71" y="959.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::RenderField(google::protobuf::Field const*, google::protobuf::stringpiece_internal::StringPiece, google::protobuf::util::converter::ObjectWriter*) const (4 samples, 0.02%)</title><rect x="751.4" y="741" width="0.3" height="15.0" fill="rgb(218,150,13)" rx="2" ry="2" />
<text  x="754.37" y="751.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::addStreamDecoderFilterWorker(std::__1::shared_ptr&lt;Envoy::Http::StreamDecoderFilter&gt;, std::__1::shared_ptr&lt;Envoy::Http::FilterMatchState&gt;, bool) (2 samples, 0.01%)</title><rect x="1080.5" y="965" width="0.1" height="15.0" fill="rgb(254,122,21)" rx="2" ry="2" />
<text  x="1083.48" y="975.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_27, std::__1::allocator&lt;proxy_wasm::NullPlugin::getFunction(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::function&lt;proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;*)::$_27&gt;, proxy_wasm::Word (proxy_wasm::ContextBase*, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word)&gt;::operator()(proxy_wasm::ContextBase*&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;, proxy_wasm::Word&amp;&amp;) (36 samples, 0.22%)</title><rect x="981.7" y="933" width="2.6" height="15.0" fill="rgb(229,106,53)" rx="2" ry="2" />
<text  x="984.71" y="943.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (2 samples, 0.01%)</title><rect x="908.5" y="405" width="0.2" height="15.0" fill="rgb(241,216,21)" rx="2" ry="2" />
<text  x="911.53" y="415.5" ></text>
</g>
<g >
<title>Envoy::Router::FilterUtility::setUpstreamScheme(Envoy::Http::RequestHeaderMap&amp;, bool, bool) (5 samples, 0.03%)</title><rect x="1101.6" y="997" width="0.4" height="15.0" fill="rgb(207,30,1)" rx="2" ry="2" />
<text  x="1104.60" y="1007.5" ></text>
</g>
<g >
<title>epoll_nochangelist_add (30 samples, 0.18%)</title><rect x="743.9" y="837" width="2.1" height="15.0" fill="rgb(210,116,18)" rx="2" ry="2" />
<text  x="746.90" y="847.5" ></text>
</g>
<g >
<title>do_syscall_64 (202 samples, 1.22%)</title><rect x="1153.9" y="1141" width="14.4" height="15.0" fill="rgb(215,174,11)" rx="2" ry="2" />
<text  x="1156.95" y="1151.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ResponseHeaderMapImpl::setReferenceServer(absl::string_view) (2 samples, 0.01%)</title><rect x="980.6" y="949" width="0.2" height="15.0" fill="rgb(243,132,2)" rx="2" ry="2" />
<text  x="983.64" y="959.5" ></text>
</g>
<g >
<title>unmap_page_range (4 samples, 0.02%)</title><rect x="629.3" y="1157" width="0.2" height="15.0" fill="rgb(228,139,23)" rx="2" ry="2" />
<text  x="632.26" y="1167.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerUtility::mutateResponseHeaders(Envoy::Http::ResponseHeaderMap&amp;, Envoy::Http::RequestHeaderMap const*, Envoy::Http::ConnectionManagerConfig&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, bool) (2 samples, 0.01%)</title><rect x="720.9" y="949" width="0.1" height="15.0" fill="rgb(233,64,9)" rx="2" ry="2" />
<text  x="723.86" y="959.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_manip_pkt (2 samples, 0.01%)</title><rect x="916.3" y="741" width="0.1" height="15.0" fill="rgb(235,224,46)" rx="2" ry="2" />
<text  x="919.28" y="751.5" ></text>
</g>
<g >
<title>Envoy::Stats::NullCounterImpl::inc() (2 samples, 0.01%)</title><rect x="1112.3" y="1029" width="0.1" height="15.0" fill="rgb(223,220,48)" rx="2" ry="2" />
<text  x="1115.27" y="1039.5" ></text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode-fm (6 samples, 0.04%)</title><rect x="251.6" y="1093" width="0.4" height="15.0" fill="rgb(229,0,16)" rx="2" ry="2" />
<text  x="254.58" y="1103.5" ></text>
</g>
<g >
<title>__libc_cfree (2 samples, 0.01%)</title><rect x="706.4" y="1205" width="0.1" height="15.0" fill="rgb(218,105,5)" rx="2" ry="2" />
<text  x="709.35" y="1215.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.01%)</title><rect x="1145.8" y="741" width="0.2" height="15.0" fill="rgb(243,223,17)" rx="2" ry="2" />
<text  x="1148.84" y="751.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::shared_ptr&lt;Envoy::Tracing::CustomTag const&gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::shared_ptr&lt;Envoy::Tracing::CustomTag const&gt; &gt; &gt; &gt;::prepare_insert(unsigned long) (10 samples, 0.06%)</title><rect x="817.7" y="965" width="0.7" height="15.0" fill="rgb(211,224,14)" rx="2" ry="2" />
<text  x="820.72" y="975.5" ></text>
</g>
<g >
<title>Envoy::Server::ListenerFactoryContextBaseImpl::drainDecision() (2 samples, 0.01%)</title><rect x="979.6" y="949" width="0.2" height="15.0" fill="rgb(215,49,28)" rx="2" ry="2" />
<text  x="982.64" y="959.5" ></text>
</g>
<g >
<title>__check_object_size (4 samples, 0.02%)</title><rect x="513.9" y="933" width="0.3" height="15.0" fill="rgb(254,140,31)" rx="2" ry="2" />
<text  x="516.92" y="943.5" ></text>
</g>
<g >
<title>wake_up_q (170 samples, 1.02%)</title><rect x="63.1" y="1093" width="12.1" height="15.0" fill="rgb(241,81,6)" rx="2" ry="2" />
<text  x="66.12" y="1103.5" ></text>
</g>
<g >
<title>github.com/docker/docker/daemon/images.(*ImageService).GetImage (7 samples, 0.04%)</title><rect x="251.1" y="1109" width="0.5" height="15.0" fill="rgb(242,36,41)" rx="2" ry="2" />
<text  x="254.08" y="1119.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.01%)</title><rect x="657.9" y="1301" width="0.2" height="15.0" fill="rgb(219,113,44)" rx="2" ry="2" />
<text  x="660.92" y="1311.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::addStreamFilter(std::__1::shared_ptr&lt;Envoy::Http::StreamFilter&gt;) (3 samples, 0.02%)</title><rect x="1077.6" y="981" width="0.2" height="15.0" fill="rgb(252,218,53)" rx="2" ry="2" />
<text  x="1080.57" y="991.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::addStreamFilter(std::__1::shared_ptr&lt;Envoy::Http::StreamFilter&gt;) (3 samples, 0.02%)</title><rect x="828.7" y="981" width="0.3" height="15.0" fill="rgb(207,129,27)" rx="2" ry="2" />
<text  x="831.74" y="991.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Span::finish() (26 samples, 0.16%)</title><rect x="750.4" y="917" width="1.9" height="15.0" fill="rgb(214,33,44)" rx="2" ry="2" />
<text  x="753.44" y="927.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.01%)</title><rect x="1164.8" y="581" width="0.2" height="15.0" fill="rgb(236,221,9)" rx="2" ry="2" />
<text  x="1167.83" y="591.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="249.9" y="1269" width="0.3" height="15.0" fill="rgb(213,201,30)" rx="2" ry="2" />
<text  x="252.94" y="1279.5" ></text>
</g>
<g >
<title>nf_conntrack_in (5 samples, 0.03%)</title><rect x="1164.5" y="581" width="0.3" height="15.0" fill="rgb(224,98,11)" rx="2" ry="2" />
<text  x="1167.47" y="591.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::drainImpl(unsigned long) (5 samples, 0.03%)</title><rect x="1152.7" y="1173" width="0.3" height="15.0" fill="rgb(236,19,23)" rx="2" ry="2" />
<text  x="1155.66" y="1183.5" ></text>
</g>
<g >
<title>wake_up_q (36 samples, 0.22%)</title><rect x="126.8" y="1013" width="2.6" height="15.0" fill="rgb(218,133,24)" rx="2" ry="2" />
<text  x="129.84" y="1023.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (12 samples, 0.07%)</title><rect x="212.6" y="1141" width="0.9" height="15.0" fill="rgb(210,40,45)" rx="2" ry="2" />
<text  x="215.60" y="1151.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.01%)</title><rect x="498.8" y="1061" width="0.2" height="15.0" fill="rgb(249,144,2)" rx="2" ry="2" />
<text  x="501.84" y="1071.5" ></text>
</g>
<g >
<title>finish_task_switch (295 samples, 1.78%)</title><rect x="38.7" y="981" width="20.9" height="15.0" fill="rgb(219,89,53)" rx="2" ry="2" />
<text  x="41.66" y="991.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 0.02%)</title><rect x="239.4" y="1045" width="0.2" height="15.0" fill="rgb(221,186,37)" rx="2" ry="2" />
<text  x="242.41" y="1055.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.01%)</title><rect x="506.6" y="1061" width="0.1" height="15.0" fill="rgb(208,109,41)" rx="2" ry="2" />
<text  x="509.59" y="1071.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (13 samples, 0.08%)</title><rect x="1175.1" y="517" width="1.0" height="15.0" fill="rgb(233,154,32)" rx="2" ry="2" />
<text  x="1178.14" y="527.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (158 samples, 0.95%)</title><rect x="1174.1" y="741" width="11.3" height="15.0" fill="rgb(206,202,5)" rx="2" ry="2" />
<text  x="1177.14" y="751.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.01%)</title><rect x="642.0" y="1269" width="0.1" height="15.0" fill="rgb(241,195,29)" rx="2" ry="2" />
<text  x="644.99" y="1279.5" ></text>
</g>
<g >
<title>__lock_text_start (26 samples, 0.16%)</title><rect x="173.7" y="1045" width="1.9" height="15.0" fill="rgb(250,121,50)" rx="2" ry="2" />
<text  x="176.71" y="1055.5" ></text>
</g>
<g >
<title>ext4_io_submit (2 samples, 0.01%)</title><rect x="659.0" y="1205" width="0.1" height="15.0" fill="rgb(252,134,16)" rx="2" ry="2" />
<text  x="661.99" y="1215.5" ></text>
</g>
<g >
<title>do_nanosleep (2 samples, 0.01%)</title><rect x="629.6" y="1205" width="0.2" height="15.0" fill="rgb(205,24,52)" rx="2" ry="2" />
<text  x="632.62" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::serializeValue(google::api::expr::runtime::CelValue, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (38 samples, 0.23%)</title><rect x="1018.5" y="773" width="2.7" height="15.0" fill="rgb(251,148,48)" rx="2" ry="2" />
<text  x="1021.54" y="783.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::RequestEncoderImpl::encodeHeaders(Envoy::Http::RequestHeaderMap const&amp;, bool) (65 samples, 0.39%)</title><rect x="1088.0" y="853" width="4.6" height="15.0" fill="rgb(223,136,19)" rx="2" ry="2" />
<text  x="1091.02" y="863.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::get(Envoy::Http::LowerCaseString const&amp;) const (14 samples, 0.08%)</title><rect x="982.9" y="853" width="1.0" height="15.0" fill="rgb(215,22,10)" rx="2" ry="2" />
<text  x="985.92" y="863.5" ></text>
</g>
<g >
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="507.9" y="1013" width="0.3" height="15.0" fill="rgb(230,202,26)" rx="2" ry="2" />
<text  x="510.94" y="1023.5" ></text>
</g>
<g >
<title>__lock_text_start (110 samples, 0.66%)</title><rect x="75.7" y="1077" width="7.8" height="15.0" fill="rgb(247,101,6)" rx="2" ry="2" />
<text  x="78.71" y="1087.5" ></text>
</g>
<g >
<title>net_rx_action (118 samples, 0.71%)</title><rect x="907.1" y="725" width="8.4" height="15.0" fill="rgb(231,158,8)" rx="2" ry="2" />
<text  x="910.11" y="735.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderUtility::requestShouldHaveNoBody(Envoy::Http::RequestHeaderMap const&amp;) (2 samples, 0.01%)</title><rect x="1089.2" y="821" width="0.1" height="15.0" fill="rgb(238,66,23)" rx="2" ry="2" />
<text  x="1092.16" y="831.5" ></text>
</g>
<g >
<title>mark_mt (2 samples, 0.01%)</title><rect x="909.8" y="133" width="0.2" height="15.0" fill="rgb(206,225,31)" rx="2" ry="2" />
<text  x="912.81" y="143.5" ></text>
</g>
<g >
<title>pipe_poll (4 samples, 0.02%)</title><rect x="35.7" y="1013" width="0.3" height="15.0" fill="rgb(239,3,43)" rx="2" ry="2" />
<text  x="38.67" y="1023.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelExpressionFlatImpl::InitializeState(google::protobuf::Arena*) const (5 samples, 0.03%)</title><rect x="1040.8" y="789" width="0.4" height="15.0" fill="rgb(205,220,22)" rx="2" ry="2" />
<text  x="1043.80" y="799.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ResponseHeaderMapImpl::setEnvoyDecoratorOperation(absl::string_view) (4 samples, 0.02%)</title><rect x="726.1" y="949" width="0.2" height="15.0" fill="rgb(213,186,44)" rx="2" ry="2" />
<text  x="729.05" y="959.5" ></text>
</g>
<g >
<title>ip_route_input_noref (6 samples, 0.04%)</title><rect x="913.0" y="405" width="0.4" height="15.0" fill="rgb(241,96,40)" rx="2" ry="2" />
<text  x="916.01" y="415.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::DynamicMap::operator[](google::api::expr::runtime::CelValue) const (5 samples, 0.03%)</title><rect x="766.3" y="757" width="0.4" height="15.0" fill="rgb(208,49,10)" rx="2" ry="2" />
<text  x="769.30" y="767.5" ></text>
</g>
<g >
<title>local.runtime.startm (35 samples, 0.21%)</title><rect x="173.2" y="1205" width="2.5" height="15.0" fill="rgb(212,67,13)" rx="2" ry="2" />
<text  x="176.21" y="1215.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3 samples, 0.02%)</title><rect x="584.6" y="597" width="0.2" height="15.0" fill="rgb(232,140,22)" rx="2" ry="2" />
<text  x="587.60" y="607.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (2 samples, 0.01%)</title><rect x="1148.3" y="997" width="0.1" height="15.0" fill="rgb(234,177,51)" rx="2" ry="2" />
<text  x="1151.26" y="1007.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="937.3" y="1317" width="0.2" height="15.0" fill="rgb(229,64,5)" rx="2" ry="2" />
<text  x="940.33" y="1327.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::onData(Envoy::Buffer::Instance&amp;, bool) (1,055 samples, 6.36%)</title><rect x="1057.3" y="1205" width="75.0" height="15.0" fill="rgb(228,203,43)" rx="2" ry="2" />
<text  x="1060.30" y="1215.5" >Envoy::H..</text>
</g>
<g >
<title>memset_erms (2 samples, 0.01%)</title><rect x="557.5" y="933" width="0.2" height="15.0" fill="rgb(234,108,37)" rx="2" ry="2" />
<text  x="560.51" y="943.5" ></text>
</g>
<g >
<title>get_timespec64 (2 samples, 0.01%)</title><rect x="95.8" y="1205" width="0.2" height="15.0" fill="rgb(248,45,48)" rx="2" ry="2" />
<text  x="98.83" y="1215.5" ></text>
</g>
<g >
<title>try_to_wake_up (17 samples, 0.10%)</title><rect x="436.5" y="821" width="1.2" height="15.0" fill="rgb(208,213,25)" rx="2" ry="2" />
<text  x="439.47" y="831.5" ></text>
</g>
<g >
<title>__check_object_size (2 samples, 0.01%)</title><rect x="896.2" y="933" width="0.2" height="15.0" fill="rgb(206,118,30)" rx="2" ry="2" />
<text  x="899.23" y="943.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_in (2 samples, 0.01%)</title><rect x="585.2" y="629" width="0.1" height="15.0" fill="rgb(233,86,54)" rx="2" ry="2" />
<text  x="588.17" y="639.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="617.5" y="1141" width="0.1" height="15.0" fill="rgb(240,22,20)" rx="2" ry="2" />
<text  x="620.46" y="1151.5" ></text>
</g>
<g >
<title>wait_for_stable_page (3 samples, 0.02%)</title><rect x="241.5" y="1045" width="0.3" height="15.0" fill="rgb(217,50,6)" rx="2" ry="2" />
<text  x="244.55" y="1055.5" ></text>
</g>
<g >
<title>local.runtime.mput (2 samples, 0.01%)</title><rect x="225.6" y="1205" width="0.2" height="15.0" fill="rgb(243,138,6)" rx="2" ry="2" />
<text  x="228.62" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OverflowDetectingUInt64::operator+=(unsigned long) (2 samples, 0.01%)</title><rect x="723.4" y="821" width="0.2" height="15.0" fill="rgb(231,106,42)" rx="2" ry="2" />
<text  x="726.42" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="129.4" y="1061" width="0.3" height="15.0" fill="rgb(221,91,25)" rx="2" ry="2" />
<text  x="132.40" y="1071.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (3 samples, 0.02%)</title><rect x="822.4" y="965" width="0.2" height="15.0" fill="rgb(245,113,27)" rx="2" ry="2" />
<text  x="825.41" y="975.5" ></text>
</g>
<g >
<title>absl::hash_internal::MixingHashState::combine_contiguous(absl::hash_internal::MixingHashState, unsigned char const*, unsigned long) (2 samples, 0.01%)</title><rect x="1098.9" y="965" width="0.1" height="15.0" fill="rgb(212,115,6)" rx="2" ry="2" />
<text  x="1101.90" y="975.5" ></text>
</g>
<g >
<title>__x64_sys_futex (28 samples, 0.17%)</title><rect x="173.6" y="1125" width="2.0" height="15.0" fill="rgb(247,153,7)" rx="2" ry="2" />
<text  x="176.56" y="1135.5" ></text>
</g>
<g >
<title>__fget (12 samples, 0.07%)</title><rect x="236.1" y="1141" width="0.8" height="15.0" fill="rgb(225,174,33)" rx="2" ry="2" />
<text  x="239.07" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::onRequestComplete() (4 samples, 0.02%)</title><rect x="871.9" y="1013" width="0.3" height="15.0" fill="rgb(242,195,50)" rx="2" ry="2" />
<text  x="874.91" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Event::ScaledRangeTimerManagerImpl::RangeTimerImpl::enableTimer(std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000l&gt; &gt;, Envoy::ScopeTrackedObject const*) (8 samples, 0.05%)</title><rect x="748.0" y="949" width="0.5" height="15.0" fill="rgb(218,19,40)" rx="2" ry="2" />
<text  x="750.95" y="959.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.09%)</title><rect x="1124.6" y="933" width="1.0" height="15.0" fill="rgb(227,129,42)" rx="2" ry="2" />
<text  x="1127.57" y="943.5" ></text>
</g>
<g >
<title>proxy_wasm::NullVm::setWord(unsigned long, proxy_wasm::Word) (3 samples, 0.02%)</title><rect x="769.8" y="821" width="0.2" height="15.0" fill="rgb(227,102,52)" rx="2" ry="2" />
<text  x="772.79" y="831.5" ></text>
</g>
<g >
<title>security_file_permission (2 samples, 0.01%)</title><rect x="167.5" y="1109" width="0.2" height="15.0" fill="rgb(224,160,2)" rx="2" ry="2" />
<text  x="170.52" y="1119.5" ></text>
</g>
<g >
<title>absl::optional_internal::optional_data_dtor_base&lt;Envoy::Http::Http1::ServerConnectionImpl::ActiveRequest, false&gt;::destruct() (81 samples, 0.49%)</title><rect x="740.6" y="933" width="5.7" height="15.0" fill="rgb(237,174,6)" rx="2" ry="2" />
<text  x="743.56" y="943.5" ></text>
</g>
<g >
<title>Envoy::MessageUtil::getJsonStringFromMessageOrDie(google::protobuf::Message const&amp;, bool, bool) (8 samples, 0.05%)</title><rect x="1004.1" y="869" width="0.6" height="15.0" fill="rgb(247,7,35)" rx="2" ry="2" />
<text  x="1007.11" y="879.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (4 samples, 0.02%)</title><rect x="1175.7" y="501" width="0.3" height="15.0" fill="rgb(240,80,9)" rx="2" ry="2" />
<text  x="1178.71" y="511.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (8 samples, 0.05%)</title><rect x="591.1" y="997" width="0.6" height="15.0" fill="rgb(248,142,8)" rx="2" ry="2" />
<text  x="594.15" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Upstream::OriginalDstCluster::LoadBalancer::chooseHost(Envoy::Upstream::LoadBalancerContext*) (6 samples, 0.04%)</title><rect x="850.0" y="917" width="0.4" height="15.0" fill="rgb(211,47,28)" rx="2" ry="2" />
<text  x="853.00" y="927.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::staticLookup(absl::string_view) (4 samples, 0.02%)</title><rect x="779.3" y="773" width="0.3" height="15.0" fill="rgb(233,64,21)" rx="2" ry="2" />
<text  x="782.31" y="783.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.01%)</title><rect x="752.6" y="885" width="0.2" height="15.0" fill="rgb(226,117,13)" rx="2" ry="2" />
<text  x="755.65" y="895.5" ></text>
</g>
<g >
<title>rb_insert_color (2 samples, 0.01%)</title><rect x="745.5" y="741" width="0.2" height="15.0" fill="rgb(254,67,1)" rx="2" ry="2" />
<text  x="748.54" y="751.5" ></text>
</g>
<g >
<title>sock_read_iter (53 samples, 0.32%)</title><rect x="512.0" y="1061" width="3.8" height="15.0" fill="rgb(225,3,13)" rx="2" ry="2" />
<text  x="515.00" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::UpstreamRequest(Envoy::Router::RouterFilterInterface&amp;, std::__1::unique_ptr&lt;Envoy::Router::GenericConnPool, std::__1::default_delete&lt;Envoy::Router::GenericConnPool&gt; &gt;&amp;&amp;) (9 samples, 0.05%)</title><rect x="853.2" y="997" width="0.6" height="15.0" fill="rgb(244,18,38)" rx="2" ry="2" />
<text  x="856.20" y="1007.5" ></text>
</g>
<g >
<title>nf_conntrack_in (2 samples, 0.01%)</title><rect x="1145.7" y="821" width="0.1" height="15.0" fill="rgb(225,142,28)" rx="2" ry="2" />
<text  x="1148.70" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (245 samples, 1.48%)</title><rect x="624.3" y="1237" width="17.4" height="15.0" fill="rgb(232,186,6)" rx="2" ry="2" />
<text  x="627.29" y="1247.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::basic_string(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) (2 samples, 0.01%)</title><rect x="766.9" y="757" width="0.2" height="15.0" fill="rgb(254,62,40)" rx="2" ry="2" />
<text  x="769.94" y="767.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (5 samples, 0.03%)</title><rect x="905.4" y="965" width="0.4" height="15.0" fill="rgb(242,150,10)" rx="2" ry="2" />
<text  x="908.40" y="975.5" ></text>
</g>
<g >
<title>gro_normal_list.part.0 (2 samples, 0.01%)</title><rect x="1131.5" y="997" width="0.2" height="15.0" fill="rgb(247,205,28)" rx="2" ry="2" />
<text  x="1134.54" y="1007.5" ></text>
</g>
<g >
<title>do_futex (145 samples, 0.87%)</title><rect x="607.0" y="1189" width="10.3" height="15.0" fill="rgb(228,192,52)" rx="2" ry="2" />
<text  x="610.00" y="1199.5" ></text>
</g>
<g >
<title>ip_rcv_finish (87 samples, 0.52%)</title><rect x="1157.7" y="437" width="6.2" height="15.0" fill="rgb(205,19,51)" rx="2" ry="2" />
<text  x="1160.71" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::Descriptor::FindFieldByNumber(int) const (4 samples, 0.02%)</title><rect x="1026.4" y="773" width="0.3" height="15.0" fill="rgb(218,3,21)" rx="2" ry="2" />
<text  x="1029.44" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::LookupMapValue(google::protobuf::Message const&amp;, google::protobuf::FieldDescriptor const*, google::protobuf::MapKey const&amp;, google::protobuf::MapValueConstRef*) const (12 samples, 0.07%)</title><rect x="775.9" y="757" width="0.9" height="15.0" fill="rgb(247,161,48)" rx="2" ry="2" />
<text  x="778.90" y="767.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ThreadSafeArena::~ThreadSafeArena() (2 samples, 0.01%)</title><rect x="858.5" y="885" width="0.2" height="15.0" fill="rgb(206,131,18)" rx="2" ry="2" />
<text  x="861.54" y="895.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Http::Http1::StreamEncoderImpl::encodeHeadersBase(Envoy::Http::RequestOrResponseHeaderMap const&amp;, absl::optional&lt;unsigned long&gt;, bool, bool)::$_0, std::__1::allocator&lt;Envoy::Http::Http1::StreamEncoderImpl::encodeHeadersBase(Envoy::Http::RequestOrResponseHeaderMap const&amp;, absl::optional&lt;unsigned long&gt;, bool, bool)::$_0&gt;, Envoy::Http::HeaderMap::Iterate (Envoy::Http::HeaderEntry const&amp;)&gt;::operator()(Envoy::Http::HeaderEntry const&amp;) (21 samples, 0.13%)</title><rect x="839.3" y="773" width="1.5" height="15.0" fill="rgb(231,105,39)" rx="2" ry="2" />
<text  x="842.26" y="783.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Upstreams::Http::Http::HttpConnPool::onPoolReady(Envoy::Http::RequestEncoder&amp;, std::__1::shared_ptr&lt;Envoy::Upstream::HostDescription const&gt;, Envoy::StreamInfo::StreamInfo const&amp;, absl::optional&lt;Envoy::Http::Protocol&gt;) (106 samples, 0.64%)</title><rect x="1087.0" y="917" width="7.6" height="15.0" fill="rgb(227,69,40)" rx="2" ry="2" />
<text  x="1090.03" y="927.5" ></text>
</g>
<g >
<title>char* absl::inlined_vector_internal::Storage&lt;char, 128ul, std::__1::allocator&lt;char&gt; &gt;::Insert&lt;absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt; &gt;(char const*, absl::inlined_vector_internal::IteratorValueAdapter&lt;std::__1::allocator&lt;char&gt;, char const*&gt;, unsigned long) (3 samples, 0.02%)</title><rect x="804.2" y="1045" width="0.2" height="15.0" fill="rgb(248,79,50)" rx="2" ry="2" />
<text  x="807.20" y="1055.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ConnectionManagerImpl::ActiveStream::resetIdleTimer() (2 samples, 0.01%)</title><rect x="803.4" y="1013" width="0.1" height="15.0" fill="rgb(238,60,31)" rx="2" ry="2" />
<text  x="806.35" y="1023.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (2 samples, 0.01%)</title><rect x="243.1" y="997" width="0.2" height="15.0" fill="rgb(210,199,6)" rx="2" ry="2" />
<text  x="246.11" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::getExisting(absl::string_view) (20 samples, 0.12%)</title><rect x="728.4" y="837" width="1.4" height="15.0" fill="rgb(223,98,35)" rx="2" ry="2" />
<text  x="731.40" y="847.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 0.57%)</title><rect x="672.0" y="1189" width="6.7" height="15.0" fill="rgb(243,80,12)" rx="2" ry="2" />
<text  x="675.00" y="1199.5" ></text>
</g>
<g >
<title>nf_hook_slow (6 samples, 0.04%)</title><rect x="916.1" y="837" width="0.5" height="15.0" fill="rgb(240,13,49)" rx="2" ry="2" />
<text  x="919.14" y="847.5" ></text>
</g>
<g >
<title>do_anonymous_page (2 samples, 0.01%)</title><rect x="489.7" y="933" width="0.2" height="15.0" fill="rgb(240,216,47)" rx="2" ry="2" />
<text  x="492.74" y="943.5" ></text>
</g>
<g >
<title>sk_reset_timer (2 samples, 0.01%)</title><rect x="1174.7" y="501" width="0.2" height="15.0" fill="rgb(249,2,17)" rx="2" ry="2" />
<text  x="1177.71" y="511.5" ></text>
</g>
<g >
<title>kthread (3 samples, 0.02%)</title><rect x="659.5" y="1349" width="0.2" height="15.0" fill="rgb(254,135,12)" rx="2" ry="2" />
<text  x="662.49" y="1359.5" ></text>
</g>
<g >
<title>syscall.Syscall (493 samples, 2.97%)</title><rect x="135.8" y="1237" width="35.1" height="15.0" fill="rgb(226,9,41)" rx="2" ry="2" />
<text  x="138.80" y="1247.5" >sy..</text>
</g>
<g >
<title>__sched_text_start (40 samples, 0.24%)</title><rect x="619.4" y="1013" width="2.8" height="15.0" fill="rgb(230,65,54)" rx="2" ry="2" />
<text  x="622.38" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Tracer::startSpan(Envoy::Tracing::Config const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::chrono::time_point&lt;std::__1::chrono::system_clock, std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000000l&gt; &gt; &gt;) (3 samples, 0.02%)</title><rect x="1070.7" y="981" width="0.2" height="15.0" fill="rgb(254,94,31)" rx="2" ry="2" />
<text  x="1073.67" y="991.5" ></text>
</g>
<g >
<title>Wasm::Common::populateRequestProtocol(Wasm::Common::RequestInfo*) (6 samples, 0.04%)</title><rect x="1110.7" y="949" width="0.4" height="15.0" fill="rgb(237,126,44)" rx="2" ry="2" />
<text  x="1113.71" y="959.5" ></text>
</g>
<g >
<title>ip_vs_in (2 samples, 0.01%)</title><rect x="585.0" y="613" width="0.1" height="15.0" fill="rgb(241,165,12)" rx="2" ry="2" />
<text  x="587.96" y="623.5" ></text>
</g>
<g >
<title>__virt_addr_valid (3 samples, 0.02%)</title><rect x="514.2" y="933" width="0.2" height="15.0" fill="rgb(245,199,19)" rx="2" ry="2" />
<text  x="517.20" y="943.5" ></text>
</g>
<g >
<title>std::__1::pair&lt;unsigned long, bool&gt; absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::shared_ptr&lt;Envoy::Tracing::CustomTag const&gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::shared_ptr&lt;Envoy::Tracing::CustomTag const&gt; &gt; &gt; &gt;::find_or_prepare_insert&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) (2 samples, 0.01%)</title><rect x="1068.2" y="997" width="0.1" height="15.0" fill="rgb(241,137,8)" rx="2" ry="2" />
<text  x="1071.18" y="1007.5" ></text>
</g>
<g >
<title>finish_task_switch (295 samples, 1.78%)</title><rect x="38.7" y="997" width="20.9" height="15.0" fill="rgb(214,173,35)" rx="2" ry="2" />
<text  x="41.66" y="1007.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (2 samples, 0.01%)</title><rect x="1145.8" y="693" width="0.2" height="15.0" fill="rgb(243,94,10)" rx="2" ry="2" />
<text  x="1148.84" y="703.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.01%)</title><rect x="598.5" y="1109" width="0.1" height="15.0" fill="rgb(224,154,30)" rx="2" ry="2" />
<text  x="601.47" y="1119.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ConnectionManagerImpl::ActiveStream::resetIdleTimer() (2 samples, 0.01%)</title><rect x="870.2" y="1045" width="0.1" height="15.0" fill="rgb(220,79,7)" rx="2" ry="2" />
<text  x="873.20" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::onBody(Envoy::Buffer::Instance&amp;) (45 samples, 0.27%)</title><rect x="1116.9" y="1077" width="3.2" height="15.0" fill="rgb(208,62,49)" rx="2" ry="2" />
<text  x="1119.89" y="1087.5" ></text>
</g>
<g >
<title>ext4_do_update_inode (4 samples, 0.02%)</title><rect x="238.1" y="1013" width="0.3" height="15.0" fill="rgb(206,29,14)" rx="2" ry="2" />
<text  x="241.13" y="1023.5" ></text>
</g>
<g >
<title>try_to_wake_up (12 samples, 0.07%)</title><rect x="169.4" y="1045" width="0.8" height="15.0" fill="rgb(234,95,29)" rx="2" ry="2" />
<text  x="172.37" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Router::FilterUtility::finalTimeout(Envoy::Router::RouteEntry const&amp;, Envoy::Http::RequestHeaderMap&amp;, bool, bool, bool, bool) (2 samples, 0.01%)</title><rect x="851.6" y="997" width="0.2" height="15.0" fill="rgb(232,37,6)" rx="2" ry="2" />
<text  x="854.64" y="1007.5" ></text>
</g>
<g >
<title>select_estimate_accuracy (2 samples, 0.01%)</title><rect x="958.4" y="1205" width="0.1" height="15.0" fill="rgb(254,43,1)" rx="2" ry="2" />
<text  x="961.38" y="1215.5" ></text>
</g>
<g >
<title>fib_table_lookup (8 samples, 0.05%)</title><rect x="1162.9" y="341" width="0.6" height="15.0" fill="rgb(227,56,22)" rx="2" ry="2" />
<text  x="1165.91" y="351.5" ></text>
</g>
<g >
<title>proxy_wasm::ContextBase::onDone() (3 samples, 0.02%)</title><rect x="1046.6" y="933" width="0.2" height="15.0" fill="rgb(248,167,10)" rx="2" ry="2" />
<text  x="1049.56" y="943.5" ></text>
</g>
<g >
<title>do_user_addr_fault (6 samples, 0.04%)</title><rect x="539.7" y="1125" width="0.4" height="15.0" fill="rgb(239,92,16)" rx="2" ry="2" />
<text  x="542.66" y="1135.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (158 samples, 0.95%)</title><rect x="1174.1" y="757" width="11.3" height="15.0" fill="rgb(252,185,51)" rx="2" ry="2" />
<text  x="1177.14" y="767.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.01%)</title><rect x="201.4" y="1157" width="0.1" height="15.0" fill="rgb(230,114,13)" rx="2" ry="2" />
<text  x="204.37" y="1167.5" ></text>
</g>
<g >
<title>skb_free_head (4 samples, 0.02%)</title><rect x="565.5" y="485" width="0.3" height="15.0" fill="rgb(251,160,26)" rx="2" ry="2" />
<text  x="568.47" y="495.5" ></text>
</g>
<g >
<title>Envoy::Stats::ThreadLocalStoreImpl::ScopeImpl::histogramFromStatNameWithTags(Envoy::Stats::StatName const&amp;, absl::optional&lt;std::__1::reference_wrapper&lt;std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; const&gt; &gt;, Envoy::Stats::Histogram::Unit) (3 samples, 0.02%)</title><rect x="1051.1" y="965" width="0.2" height="15.0" fill="rgb(221,208,3)" rx="2" ry="2" />
<text  x="1054.11" y="975.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.03%)</title><rect x="1090.6" y="725" width="0.3" height="15.0" fill="rgb(220,174,45)" rx="2" ry="2" />
<text  x="1093.58" y="735.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (126 samples, 0.76%)</title><rect x="924.3" y="789" width="9.0" height="15.0" fill="rgb(235,8,47)" rx="2" ry="2" />
<text  x="927.32" y="799.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::encodeData(Envoy::Buffer::Instance&amp;, bool) (9 samples, 0.05%)</title><rect x="1118.0" y="981" width="0.6" height="15.0" fill="rgb(249,167,25)" rx="2" ry="2" />
<text  x="1120.96" y="991.5" ></text>
</g>
<g >
<title>ip_queue_xmit (3 samples, 0.02%)</title><rect x="896.6" y="917" width="0.2" height="15.0" fill="rgb(213,134,30)" rx="2" ry="2" />
<text  x="899.58" y="927.5" ></text>
</g>
<g >
<title>std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;proxy_wasm::null_plugin::Stats::SimpleStat, std::__1::allocator&lt;proxy_wasm::null_plugin::Stats::SimpleStat&gt; &gt; &gt;, void*&gt;*&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;proxy_wasm::null_plugin::Stats::SimpleStat, std::__1::allocator&lt;proxy_wasm::null_plugin::Stats::SimpleStat&gt; &gt; &gt;, std::__1::__unordered_map_hasher&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::__hash_value_type&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;proxy_wasm::null_plugin::Stats::SimpleStat, std::__1::allocator&lt;proxy_wasm::null_plugin::Stats::SimpleStat&gt; &gt; &gt;, proxy_wasm::null_plugin::Stats::HashIstioDimensions, std::__1::equal_to&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, true&gt;, std::__1::__unordered_map_equal&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::__hash_value_type&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;proxy_wasm::null_plugin::Stats::SimpleStat, std::__1::allocator&lt;proxy_wasm::null_plugin::Stats::SimpleStat&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, proxy_wasm::null_plugin::Stats::HashIstioDimensions, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;, std::__1::vector&lt;proxy_wasm::null_plugin::Stats::SimpleStat, std::__1::allocator&lt;proxy_wasm::null_plugin::Stats::SimpleStat&gt; &gt; &gt; &gt; &gt;::find&lt;std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;) (10 samples, 0.06%)</title><rect x="1043.3" y="853" width="0.7" height="15.0" fill="rgb(220,212,31)" rx="2" ry="2" />
<text  x="1046.29" y="863.5" ></text>
</g>
<g >
<title>ip_list_rcv (2 samples, 0.01%)</title><rect x="598.1" y="1045" width="0.2" height="15.0" fill="rgb(250,109,8)" rx="2" ry="2" />
<text  x="601.12" y="1055.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (10 samples, 0.06%)</title><rect x="1147.7" y="1013" width="0.7" height="15.0" fill="rgb(214,42,32)" rx="2" ry="2" />
<text  x="1150.69" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketError::getErrorCode() const (3 samples, 0.02%)</title><rect x="1132.7" y="1221" width="0.2" height="15.0" fill="rgb(230,155,23)" rx="2" ry="2" />
<text  x="1135.68" y="1231.5" ></text>
</g>
<g >
<title>tcp_send_mss (7 samples, 0.04%)</title><rect x="590.6" y="997" width="0.5" height="15.0" fill="rgb(218,45,36)" rx="2" ry="2" />
<text  x="593.65" y="1007.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.isra.0 (12 samples, 0.07%)</title><rect x="912.9" y="421" width="0.9" height="15.0" fill="rgb(213,134,30)" rx="2" ry="2" />
<text  x="915.94" y="431.5" ></text>
</g>
<g >
<title>[unknown] (1,451 samples, 8.74%)</title><rect x="10.1" y="1317" width="103.2" height="15.0" fill="rgb(214,49,35)" rx="2" ry="2" />
<text  x="13.07" y="1327.5" >[unknown]</text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.01%)</title><rect x="1047.8" y="981" width="0.2" height="15.0" fill="rgb(250,120,10)" rx="2" ry="2" />
<text  x="1050.84" y="991.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Extensions::Common::Wasm::PropertyToken&gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Extensions::Common::Wasm::PropertyToken&gt; &gt; &gt;::iterator absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Extensions::Common::Wasm::PropertyToken&gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Extensions::Common::Wasm::PropertyToken&gt; &gt; &gt;::find&lt;absl::string_view&gt;(absl::string_view const&amp;, unsigned long) (2 samples, 0.01%)</title><rect x="764.2" y="789" width="0.1" height="15.0" fill="rgb(253,73,39)" rx="2" ry="2" />
<text  x="767.17" y="799.5" ></text>
</g>
<g >
<title>Envoy::Network::FilterManagerImpl::onWrite(Envoy::Network::FilterManagerImpl::ActiveWriteFilter*, Envoy::Network::WriteBufferSource&amp;) (3 samples, 0.02%)</title><rect x="841.2" y="789" width="0.2" height="15.0" fill="rgb(213,206,54)" rx="2" ry="2" />
<text  x="844.18" y="799.5" ></text>
</g>
<g >
<title>event_add (32 samples, 0.19%)</title><rect x="743.8" y="885" width="2.3" height="15.0" fill="rgb(237,148,48)" rx="2" ry="2" />
<text  x="746.83" y="895.5" ></text>
</g>
<g >
<title>sk_reset_timer (3 samples, 0.02%)</title><rect x="589.9" y="917" width="0.2" height="15.0" fill="rgb(242,74,51)" rx="2" ry="2" />
<text  x="592.87" y="927.5" ></text>
</g>
<g >
<title>[unknown] (741 samples, 4.47%)</title><rect x="22.7" y="1205" width="52.7" height="15.0" fill="rgb(238,4,52)" rx="2" ry="2" />
<text  x="25.66" y="1215.5" >[unkn..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="437.7" y="933" width="0.5" height="15.0" fill="rgb(220,52,34)" rx="2" ry="2" />
<text  x="440.68" y="943.5" ></text>
</g>
<g >
<title>generic_update_time (2 samples, 0.01%)</title><rect x="97.9" y="1093" width="0.1" height="15.0" fill="rgb(236,10,37)" rx="2" ry="2" />
<text  x="100.90" y="1103.5" ></text>
</g>
<g >
<title>ip_finish_output (2 samples, 0.01%)</title><rect x="657.1" y="1029" width="0.2" height="15.0" fill="rgb(208,202,5)" rx="2" ry="2" />
<text  x="660.14" y="1039.5" ></text>
</g>
<g >
<title>tcp_release_cb (2 samples, 0.01%)</title><rect x="1147.5" y="981" width="0.1" height="15.0" fill="rgb(207,206,4)" rx="2" ry="2" />
<text  x="1150.47" y="991.5" ></text>
</g>
<g >
<title>Envoy::Stats::TagUtility::TagStatNameJoiner::TagStatNameJoiner(Envoy::Stats::StatName, Envoy::Stats::StatName, absl::optional&lt;std::__1::reference_wrapper&lt;std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; const&gt; &gt;, Envoy::Stats::SymbolTable&amp;) (6 samples, 0.04%)</title><rect x="986.8" y="917" width="0.4" height="15.0" fill="rgb(217,162,24)" rx="2" ry="2" />
<text  x="989.76" y="927.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (114 samples, 0.69%)</title><rect x="693.7" y="1189" width="8.1" height="15.0" fill="rgb(216,169,26)" rx="2" ry="2" />
<text  x="696.69" y="1199.5" ></text>
</g>
<g >
<title>epoll_ctl (22 samples, 0.13%)</title><rect x="998.8" y="821" width="1.5" height="15.0" fill="rgb(215,117,50)" rx="2" ry="2" />
<text  x="1001.77" y="831.5" ></text>
</g>
<g >
<title>Envoy::Server::DrainManagerImpl::drainClose() const (2 samples, 0.01%)</title><rect x="724.9" y="949" width="0.2" height="15.0" fill="rgb(240,70,47)" rx="2" ry="2" />
<text  x="727.91" y="959.5" ></text>
</g>
<g >
<title>wake_up_q (9 samples, 0.05%)</title><rect x="603.4" y="1141" width="0.7" height="15.0" fill="rgb(225,159,54)" rx="2" ry="2" />
<text  x="606.45" y="1151.5" ></text>
</g>
<g >
<title>mark_mt (2 samples, 0.01%)</title><rect x="909.8" y="149" width="0.2" height="15.0" fill="rgb(225,224,11)" rx="2" ry="2" />
<text  x="912.81" y="159.5" ></text>
</g>
<g >
<title>ip_idents_reserve (3 samples, 0.02%)</title><rect x="909.1" y="197" width="0.2" height="15.0" fill="rgb(213,14,26)" rx="2" ry="2" />
<text  x="912.10" y="207.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (3 samples, 0.02%)</title><rect x="511.0" y="1125" width="0.2" height="15.0" fill="rgb(237,45,20)" rx="2" ry="2" />
<text  x="514.00" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="1039.1" y="709" width="0.2" height="15.0" fill="rgb(249,119,54)" rx="2" ry="2" />
<text  x="1042.10" y="719.5" ></text>
</g>
<g >
<title>Envoy::Stats::Counter&amp; Envoy::Stats::ThreadLocalStoreImpl::ScopeImpl::safeMakeStat&lt;Envoy::Stats::Counter&gt;(Envoy::Stats::StatName, Envoy::Stats::StatName, absl::optional&lt;std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; &gt; const&amp;, absl::flat_hash_map&lt;Envoy::Stats::StatName, Envoy::Stats::RefcountPtr&lt;Envoy::Stats::Counter&gt;, absl::hash_internal::Hash&lt;Envoy::Stats::StatName&gt;, std::__1::equal_to&lt;Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName const, Envoy::Stats::RefcountPtr&lt;Envoy::Stats::Counter&gt; &gt; &gt; &gt;&amp;, Envoy::Stats::StatsMatcher::FastResult, Envoy::Stats::StatNameStorageSet&amp;, std::__1::function&lt;Envoy::Stats::RefcountPtr&lt;Envoy::Stats::Counter&gt; (Envoy::Stats::Allocator&amp;, Envoy::Stats::StatName, Envoy::Stats::StatName, std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; const&amp;)&gt;, absl::flat_hash_map&lt;Envoy::Stats::StatName, std::__1::reference_wrapper&lt;Envoy::Stats::Counter&gt;, absl::hash_internal::Hash&lt;Envoy::Stats::StatName&gt;, std::__1::equal_to&lt;Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName const, std::__1::reference_wrapper&lt;Envoy::Stats::Counter&gt; &gt; &gt; &gt;*, absl::flat_hash_set&lt;Envoy::Stats::StatName, absl::hash_internal::Hash&lt;Envoy::Stats::StatName&gt;, std::__1::equal_to&lt;Envoy::Stats::StatName&gt;, std::__1::allocator&lt;Envoy::Stats::StatName&gt; &gt;*, Envoy::Stats::Counter&amp;) (3 samples, 0.02%)</title><rect x="733.4" y="917" width="0.2" height="15.0" fill="rgb(245,97,25)" rx="2" ry="2" />
<text  x="736.37" y="927.5" ></text>
</g>
<g >
<title>futex_wait (2 samples, 0.01%)</title><rect x="33.7" y="1029" width="0.1" height="15.0" fill="rgb(238,46,41)" rx="2" ry="2" />
<text  x="36.68" y="1039.5" ></text>
</g>
<g >
<title>std::__1::__murmur2_or_cityhash&lt;unsigned long, 64ul&gt;::operator()(void const*, unsigned long) (2 samples, 0.01%)</title><rect x="758.2" y="869" width="0.1" height="15.0" fill="rgb(215,74,31)" rx="2" ry="2" />
<text  x="761.19" y="879.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_in (2 samples, 0.01%)</title><rect x="932.3" y="597" width="0.1" height="15.0" fill="rgb(250,9,41)" rx="2" ry="2" />
<text  x="935.28" y="607.5" ></text>
</g>
<g >
<title>Envoy::Http::CodecClient::CodecReadFilter::onData(Envoy::Buffer::Instance&amp;, bool) (1,347 samples, 8.12%)</title><rect x="712.2" y="1205" width="95.8" height="15.0" fill="rgb(226,144,40)" rx="2" ry="2" />
<text  x="715.18" y="1215.5" >Envoy::Http..</text>
</g>
<g >
<title>__fget (2 samples, 0.01%)</title><rect x="1143.0" y="1061" width="0.1" height="15.0" fill="rgb(250,98,1)" rx="2" ry="2" />
<text  x="1145.99" y="1071.5" ></text>
</g>
<g >
<title>do_page_fault (6 samples, 0.04%)</title><rect x="593.8" y="1173" width="0.4" height="15.0" fill="rgb(240,189,17)" rx="2" ry="2" />
<text  x="596.78" y="1183.5" ></text>
</g>
<g >
<title>epoll_nochangelist_add (22 samples, 0.13%)</title><rect x="998.8" y="837" width="1.5" height="15.0" fill="rgb(253,19,46)" rx="2" ry="2" />
<text  x="1001.77" y="847.5" ></text>
</g>
<g >
<title>absl::hash_internal::MixingHashState::combine_contiguous(absl::hash_internal::MixingHashState, unsigned char const*, unsigned long) (3 samples, 0.02%)</title><rect x="818.4" y="965" width="0.2" height="15.0" fill="rgb(216,111,17)" rx="2" ry="2" />
<text  x="821.43" y="975.5" ></text>
</g>
<g >
<title>futex_wait_setup (5 samples, 0.03%)</title><rect x="95.4" y="1173" width="0.4" height="15.0" fill="rgb(213,92,21)" rx="2" ry="2" />
<text  x="98.41" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Stats::SymbolTableImpl::join(absl::InlinedVector&lt;Envoy::Stats::StatName, 8ul, std::__1::allocator&lt;Envoy::Stats::StatName&gt; &gt; const&amp;) const (3 samples, 0.02%)</title><rect x="1048.7" y="949" width="0.2" height="15.0" fill="rgb(242,203,24)" rx="2" ry="2" />
<text  x="1051.70" y="959.5" ></text>
</g>
<g >
<title>netif_rx_internal (4 samples, 0.02%)</title><rect x="587.1" y="741" width="0.3" height="15.0" fill="rgb(243,152,7)" rx="2" ry="2" />
<text  x="590.09" y="751.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::getExisting(absl::string_view) (14 samples, 0.08%)</title><rect x="982.9" y="837" width="1.0" height="15.0" fill="rgb(248,213,13)" rx="2" ry="2" />
<text  x="985.92" y="847.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.0 (3 samples, 0.02%)</title><rect x="1125.2" y="885" width="0.2" height="15.0" fill="rgb(234,149,50)" rx="2" ry="2" />
<text  x="1128.21" y="895.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::checkHeaderNameForUnderscores() (2 samples, 0.01%)</title><rect x="881.4" y="1045" width="0.2" height="15.0" fill="rgb(212,187,54)" rx="2" ry="2" />
<text  x="884.43" y="1055.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::operator=(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) (3 samples, 0.02%)</title><rect x="753.3" y="901" width="0.2" height="15.0" fill="rgb(247,80,7)" rx="2" ry="2" />
<text  x="756.29" y="911.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::commit(unsigned long, absl::Span&lt;Envoy::Buffer::RawSlice&gt;, std::__1::unique_ptr&lt;Envoy::Buffer::ReservationSlicesOwner, std::__1::default_delete&lt;Envoy::Buffer::ReservationSlicesOwner&gt; &gt;) (18 samples, 0.11%)</title><rect x="1134.1" y="1173" width="1.3" height="15.0" fill="rgb(240,124,6)" rx="2" ry="2" />
<text  x="1137.10" y="1183.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.01%)</title><rect x="1106.8" y="917" width="0.1" height="15.0" fill="rgb(254,206,53)" rx="2" ry="2" />
<text  x="1109.80" y="927.5" ></text>
</g>
<g >
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="84.5" y="1109" width="0.2" height="15.0" fill="rgb(206,148,18)" rx="2" ry="2" />
<text  x="87.46" y="1119.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::ValueFromMessage(google::protobuf::Value const*, google::protobuf::Arena*) (5 samples, 0.03%)</title><rect x="773.1" y="773" width="0.3" height="15.0" fill="rgb(251,195,19)" rx="2" ry="2" />
<text  x="776.06" y="783.5" ></text>
</g>
<g >
<title>ip_finish_output2 (56 samples, 0.34%)</title><rect x="1158.1" y="341" width="4.0" height="15.0" fill="rgb(222,162,24)" rx="2" ry="2" />
<text  x="1161.07" y="351.5" ></text>
</g>
<g >
<title>futex_wait (108 samples, 0.65%)</title><rect x="217.2" y="1093" width="7.7" height="15.0" fill="rgb(227,17,40)" rx="2" ry="2" />
<text  x="220.23" y="1103.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (102 samples, 0.61%)</title><rect x="217.3" y="1077" width="7.3" height="15.0" fill="rgb(242,219,24)" rx="2" ry="2" />
<text  x="220.30" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="33.7" y="1077" width="0.2" height="15.0" fill="rgb(232,165,13)" rx="2" ry="2" />
<text  x="36.68" y="1087.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::ExecutionFrame::Next() (2 samples, 0.01%)</title><rect x="788.6" y="757" width="0.2" height="15.0" fill="rgb(249,182,5)" rx="2" ry="2" />
<text  x="791.63" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (19 samples, 0.11%)</title><rect x="1127.0" y="933" width="1.3" height="15.0" fill="rgb(249,200,14)" rx="2" ry="2" />
<text  x="1129.99" y="943.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (6 samples, 0.04%)</title><rect x="913.0" y="389" width="0.4" height="15.0" fill="rgb(218,194,19)" rx="2" ry="2" />
<text  x="916.01" y="399.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="509.6" y="1125" width="0.2" height="15.0" fill="rgb(230,36,35)" rx="2" ry="2" />
<text  x="512.58" y="1135.5" ></text>
</g>
<g >
<title>Envoy::Stats::Counter&amp; Envoy::Stats::ThreadLocalStoreImpl::ScopeImpl::safeMakeStat&lt;Envoy::Stats::Counter&gt;(Envoy::Stats::StatName, Envoy::Stats::StatName, absl::optional&lt;std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; &gt; const&amp;, absl::flat_hash_map&lt;Envoy::Stats::StatName, Envoy::Stats::RefcountPtr&lt;Envoy::Stats::Counter&gt;, absl::hash_internal::Hash&lt;Envoy::Stats::StatName&gt;, std::__1::equal_to&lt;Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName const, Envoy::Stats::RefcountPtr&lt;Envoy::Stats::Counter&gt; &gt; &gt; &gt;&amp;, Envoy::Stats::StatsMatcher::FastResult, Envoy::Stats::StatNameStorageSet&amp;, std::__1::function&lt;Envoy::Stats::RefcountPtr&lt;Envoy::Stats::Counter&gt; (Envoy::Stats::Allocator&amp;, Envoy::Stats::StatName, Envoy::Stats::StatName, std::__1::vector&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName, Envoy::Stats::StatName&gt; &gt; &gt; const&amp;)&gt;, absl::flat_hash_map&lt;Envoy::Stats::StatName, std::__1::reference_wrapper&lt;Envoy::Stats::Counter&gt;, absl::hash_internal::Hash&lt;Envoy::Stats::StatName&gt;, std::__1::equal_to&lt;Envoy::Stats::StatName&gt;, std::__1::allocator&lt;std::__1::pair&lt;Envoy::Stats::StatName const, std::__1::reference_wrapper&lt;Envoy::Stats::Counter&gt; &gt; &gt; &gt;*, absl::flat_hash_set&lt;Envoy::Stats::StatName, absl::hash_internal::Hash&lt;Envoy::Stats::StatName&gt;, std::__1::equal_to&lt;Envoy::Stats::StatName&gt;, std::__1::allocator&lt;Envoy::Stats::StatName&gt; &gt;*, Envoy::Stats::Counter&amp;) (3 samples, 0.02%)</title><rect x="986.5" y="917" width="0.3" height="15.0" fill="rgb(207,78,27)" rx="2" ry="2" />
<text  x="989.54" y="927.5" ></text>
</g>
<g >
<title>pipe_write (4 samples, 0.02%)</title><rect x="497.1" y="949" width="0.3" height="15.0" fill="rgb(241,29,23)" rx="2" ry="2" />
<text  x="500.13" y="959.5" ></text>
</g>
<g >
<title>ext4_do_update_inode (14 samples, 0.08%)</title><rect x="243.3" y="1029" width="1.0" height="15.0" fill="rgb(236,137,16)" rx="2" ry="2" />
<text  x="246.25" y="1039.5" ></text>
</g>
<g >
<title>ep_poll (116 samples, 0.70%)</title><rect x="950.3" y="1221" width="8.3" height="15.0" fill="rgb(232,190,19)" rx="2" ry="2" />
<text  x="953.34" y="1231.5" ></text>
</g>
<g >
<title>Wasm::Common::RequestInfo::~RequestInfo() (2 samples, 0.01%)</title><rect x="1045.9" y="885" width="0.2" height="15.0" fill="rgb(234,213,47)" rx="2" ry="2" />
<text  x="1048.92" y="895.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::completeLastHeader() (17 samples, 0.10%)</title><rect x="880.4" y="1077" width="1.2" height="15.0" fill="rgb(210,5,48)" rx="2" ry="2" />
<text  x="883.37" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::HeaderEntryImpl::value() (3 samples, 0.02%)</title><rect x="972.5" y="1029" width="0.2" height="15.0" fill="rgb(234,155,45)" rx="2" ry="2" />
<text  x="975.46" y="1039.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (6 samples, 0.04%)</title><rect x="938.4" y="1349" width="0.4" height="15.0" fill="rgb(234,105,11)" rx="2" ry="2" />
<text  x="941.40" y="1359.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (68 samples, 0.41%)</title><rect x="894.0" y="1061" width="4.9" height="15.0" fill="rgb(253,180,1)" rx="2" ry="2" />
<text  x="897.02" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*, char const*, unsigned long)#1}::__invoke(http_parser*, char const*, unsigned long) (6 samples, 0.04%)</title><rect x="1129.1" y="1109" width="0.4" height="15.0" fill="rgb(246,123,5)" rx="2" ry="2" />
<text  x="1132.06" y="1119.5" ></text>
</g>
<g >
<title>absl::hash_internal::Wyhash(void const*, unsigned long, unsigned long, unsigned long const*) (2 samples, 0.01%)</title><rect x="1085.2" y="869" width="0.1" height="15.0" fill="rgb(223,219,16)" rx="2" ry="2" />
<text  x="1088.18" y="879.5" ></text>
</g>
<g >
<title>__x64_sys_newuname (8 samples, 0.05%)</title><rect x="546.0" y="1157" width="0.6" height="15.0" fill="rgb(214,47,39)" rx="2" ry="2" />
<text  x="548.99" y="1167.5" ></text>
</g>
<g >
<title>ksys_read (38 samples, 0.23%)</title><rect x="96.0" y="1205" width="2.7" height="15.0" fill="rgb(220,86,22)" rx="2" ry="2" />
<text  x="98.98" y="1215.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelProtoWrapper::CreateMessage(google::protobuf::Message const*, google::protobuf::Arena*) (5 samples, 0.03%)</title><rect x="773.1" y="757" width="0.3" height="15.0" fill="rgb(217,170,35)" rx="2" ry="2" />
<text  x="776.06" y="767.5" ></text>
</g>
<g >
<title>absl::hash_internal::Wyhash(void const*, unsigned long, unsigned long, unsigned long const*) (2 samples, 0.01%)</title><rect x="1098.9" y="949" width="0.1" height="15.0" fill="rgb(209,85,39)" rx="2" ry="2" />
<text  x="1101.90" y="959.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::findValue(absl::string_view, google::protobuf::Arena*, bool) const (3 samples, 0.02%)</title><rect x="1039.6" y="725" width="0.2" height="15.0" fill="rgb(229,124,45)" rx="2" ry="2" />
<text  x="1042.59" y="735.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::add(void const*, unsigned long) (9 samples, 0.05%)</title><rect x="1090.3" y="741" width="0.6" height="15.0" fill="rgb(208,132,10)" rx="2" ry="2" />
<text  x="1093.30" y="751.5" ></text>
</g>
<g >
<title>proxy_wasm::ContextBase::onResponseHeaders(unsigned int, bool) (36 samples, 0.22%)</title><rect x="727.5" y="949" width="2.5" height="15.0" fill="rgb(250,57,9)" rx="2" ry="2" />
<text  x="730.47" y="959.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::Endpoint::Endpoint(Envoy::Extensions::Tracers::Zipkin::Endpoint const&amp;) (2 samples, 0.01%)</title><rect x="750.6" y="901" width="0.1" height="15.0" fill="rgb(239,199,24)" rx="2" ry="2" />
<text  x="753.58" y="911.5" ></text>
</g>
<g >
<title>nghttp2_check_authority (2 samples, 0.01%)</title><rect x="864.9" y="1029" width="0.1" height="15.0" fill="rgb(254,12,16)" rx="2" ry="2" />
<text  x="867.87" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (1,596 samples, 9.62%)</title><rect x="393.7" y="1125" width="113.5" height="15.0" fill="rgb(232,37,11)" rx="2" ry="2" />
<text  x="396.73" y="1135.5" >[unknown]</text>
</g>
<g >
<title>dev_queue_xmit (7 samples, 0.04%)</title><rect x="1185.4" y="789" width="0.5" height="15.0" fill="rgb(240,59,24)" rx="2" ry="2" />
<text  x="1188.38" y="799.5" ></text>
</g>
<g >
<title>proxy_wasm::ContextBase::ContextBase(proxy_wasm::WasmBase*, unsigned int, std::__1::shared_ptr&lt;proxy_wasm::PluginHandleBase&gt;) (7 samples, 0.04%)</title><rect x="1079.9" y="917" width="0.5" height="15.0" fill="rgb(246,221,30)" rx="2" ry="2" />
<text  x="1082.92" y="927.5" ></text>
</g>
<g >
<title>__ip_finish_output (2 samples, 0.01%)</title><rect x="1156.3" y="517" width="0.1" height="15.0" fill="rgb(211,221,3)" rx="2" ry="2" />
<text  x="1159.29" y="527.5" ></text>
</g>
<g >
<title>Envoy::ConnectionPool::ConnPoolImplBase::newStreamImpl(Envoy::ConnectionPool::AttachContext&amp;) (158 samples, 0.95%)</title><rect x="1086.4" y="965" width="11.2" height="15.0" fill="rgb(223,165,54)" rx="2" ry="2" />
<text  x="1089.39" y="975.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderString::append(char const*, unsigned int) (2 samples, 0.01%)</title><rect x="806.8" y="1061" width="0.1" height="15.0" fill="rgb(209,45,24)" rx="2" ry="2" />
<text  x="809.76" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::write(Envoy::Buffer::Instance&amp;, bool, bool) (22 samples, 0.13%)</title><rect x="977.7" y="917" width="1.6" height="15.0" fill="rgb(247,215,53)" rx="2" ry="2" />
<text  x="980.72" y="927.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::~StreamInfoImpl() (14 samples, 0.08%)</title><rect x="1049.8" y="933" width="1.0" height="15.0" fill="rgb(241,162,33)" rx="2" ry="2" />
<text  x="1052.76" y="943.5" ></text>
</g>
<g >
<title>time.now (5 samples, 0.03%)</title><rect x="249.9" y="1317" width="0.3" height="15.0" fill="rgb(216,95,14)" rx="2" ry="2" />
<text  x="252.87" y="1327.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::Context::getProperty(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (61 samples, 0.37%)</title><rect x="1018.1" y="789" width="4.4" height="15.0" fill="rgb(207,74,42)" rx="2" ry="2" />
<text  x="1021.12" y="799.5" ></text>
</g>
<g >
<title>__netif_receive_skb (91 samples, 0.55%)</title><rect x="1157.4" y="517" width="6.5" height="15.0" fill="rgb(238,68,6)" rx="2" ry="2" />
<text  x="1160.43" y="527.5" ></text>
</g>
<g >
<title>select_estimate_accuracy (2 samples, 0.01%)</title><rect x="958.4" y="1189" width="0.1" height="15.0" fill="rgb(212,226,15)" rx="2" ry="2" />
<text  x="961.38" y="1199.5" ></text>
</g>
<g >
<title>google::protobuf::util::converter::ProtoStreamObjectSource::RenderStruct(google::protobuf::util::converter::ProtoStreamObjectSource const*, google::protobuf::Type const&amp;, google::protobuf::stringpiece_internal::StringPiece, google::protobuf::util::converter::ObjectWriter*) (3 samples, 0.02%)</title><rect x="1004.4" y="693" width="0.2" height="15.0" fill="rgb(225,134,18)" rx="2" ry="2" />
<text  x="1007.39" y="703.5" ></text>
</g>
<g >
<title>ip_list_rcv (2 samples, 0.01%)</title><rect x="657.1" y="1125" width="0.2" height="15.0" fill="rgb(232,189,30)" rx="2" ry="2" />
<text  x="660.14" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 0.42%)</title><rect x="115.4" y="1349" width="5.0" height="15.0" fill="rgb(213,71,3)" rx="2" ry="2" />
<text  x="118.39" y="1359.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="201.4" y="1189" width="0.1" height="15.0" fill="rgb(219,64,44)" rx="2" ry="2" />
<text  x="204.37" y="1199.5" ></text>
</g>
<g >
<title>pipe_poll (2 samples, 0.01%)</title><rect x="197.8" y="1093" width="0.2" height="15.0" fill="rgb(253,105,22)" rx="2" ry="2" />
<text  x="200.81" y="1103.5" ></text>
</g>
<g >
<title>google::protobuf::util::MessageToJsonString(google::protobuf::Message const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, google::protobuf::util::JsonPrintOptions const&amp;) (14 samples, 0.08%)</title><rect x="750.7" y="837" width="1.0" height="15.0" fill="rgb(230,4,38)" rx="2" ry="2" />
<text  x="753.73" y="847.5" ></text>
</g>
<g >
<title>dev_queue_xmit (2 samples, 0.01%)</title><rect x="1131.5" y="805" width="0.2" height="15.0" fill="rgb(216,225,27)" rx="2" ry="2" />
<text  x="1134.54" y="815.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::get(Envoy::Http::LowerCaseString const&amp;) const (22 samples, 0.13%)</title><rect x="728.3" y="853" width="1.6" height="15.0" fill="rgb(237,108,21)" rx="2" ry="2" />
<text  x="731.33" y="863.5" ></text>
</g>
<g >
<title>__lock_text_start (357 samples, 2.15%)</title><rect x="459.5" y="901" width="25.4" height="15.0" fill="rgb(220,35,50)" rx="2" ry="2" />
<text  x="462.51" y="911.5" >_..</text>
</g>
<g >
<title>futex_wake (5 samples, 0.03%)</title><rect x="507.9" y="1077" width="0.3" height="15.0" fill="rgb(210,84,14)" rx="2" ry="2" />
<text  x="510.87" y="1087.5" ></text>
</g>
<g >
<title>mutex_lock (5 samples, 0.03%)</title><rect x="693.1" y="1189" width="0.4" height="15.0" fill="rgb(247,188,17)" rx="2" ry="2" />
<text  x="696.12" y="1199.5" ></text>
</g>
<g >
<title>schedule (62 samples, 0.37%)</title><rect x="491.7" y="949" width="4.4" height="15.0" fill="rgb(227,150,22)" rx="2" ry="2" />
<text  x="494.73" y="959.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (4 samples, 0.02%)</title><rect x="228.3" y="1221" width="0.3" height="15.0" fill="rgb(209,56,14)" rx="2" ry="2" />
<text  x="231.32" y="1231.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.01%)</title><rect x="506.6" y="1093" width="0.1" height="15.0" fill="rgb(205,150,27)" rx="2" ry="2" />
<text  x="509.59" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::HeaderMapImpl() (12 samples, 0.07%)</title><rect x="1060.4" y="1045" width="0.8" height="15.0" fill="rgb(234,14,42)" rx="2" ry="2" />
<text  x="1063.36" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="1020.3" y="741" width="0.1" height="15.0" fill="rgb(247,214,44)" rx="2" ry="2" />
<text  x="1023.25" y="751.5" ></text>
</g>
<g >
<title>skb_release_data (7 samples, 0.04%)</title><rect x="1175.1" y="469" width="0.5" height="15.0" fill="rgb(238,46,47)" rx="2" ry="2" />
<text  x="1178.14" y="479.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_fn (2 samples, 0.01%)</title><rect x="906.8" y="821" width="0.1" height="15.0" fill="rgb(205,69,12)" rx="2" ry="2" />
<text  x="909.75" y="831.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (3 samples, 0.02%)</title><rect x="1159.3" y="165" width="0.2" height="15.0" fill="rgb(215,202,8)" rx="2" ry="2" />
<text  x="1162.28" y="175.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::Http1::ServerConnectionImpl::onUrl(char const*, unsigned long) (5 samples, 0.03%)</title><rect x="879.6" y="1093" width="0.3" height="15.0" fill="rgb(239,223,43)" rx="2" ry="2" />
<text  x="882.59" y="1103.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (5 samples, 0.03%)</title><rect x="248.6" y="1237" width="0.3" height="15.0" fill="rgb(231,170,28)" rx="2" ry="2" />
<text  x="251.59" y="1247.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;absl::string_view, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;absl::string_view const, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt; &gt; &gt;::iterator absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;absl::string_view, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;absl::string_view const, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt; &gt; &gt;::find&lt;absl::string_view&gt;(absl::string_view const&amp;) (2 samples, 0.01%)</title><rect x="729.7" y="821" width="0.1" height="15.0" fill="rgb(243,93,45)" rx="2" ry="2" />
<text  x="732.68" y="831.5" ></text>
</g>
<g >
<title>__fget (4 samples, 0.02%)</title><rect x="741.8" y="693" width="0.3" height="15.0" fill="rgb(222,189,51)" rx="2" ry="2" />
<text  x="744.84" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (418 samples, 2.52%)</title><rect x="509.9" y="1157" width="29.8" height="15.0" fill="rgb(234,36,28)" rx="2" ry="2" />
<text  x="512.93" y="1167.5" >do..</text>
</g>
<g >
<title>mem_cgroup_node_nr_lru_pages (53 samples, 0.32%)</title><rect x="673.0" y="949" width="3.8" height="15.0" fill="rgb(242,2,6)" rx="2" ry="2" />
<text  x="676.00" y="959.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderUtility::isConnect(Envoy::Http::RequestHeaderMap const&amp;) (2 samples, 0.01%)</title><rect x="1111.5" y="1029" width="0.1" height="15.0" fill="rgb(251,2,27)" rx="2" ry="2" />
<text  x="1114.49" y="1039.5" ></text>
</g>
<g >
<title>local.runtime.ready (59 samples, 0.36%)</title><rect x="125.5" y="1173" width="4.2" height="15.0" fill="rgb(254,127,49)" rx="2" ry="2" />
<text  x="128.49" y="1183.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Extensions::Common::Wasm::PropertyToken&gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Extensions::Common::Wasm::PropertyToken&gt; &gt; &gt;::iterator absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Extensions::Common::Wasm::PropertyToken&gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Extensions::Common::Wasm::PropertyToken&gt; &gt; &gt;::find&lt;absl::string_view&gt;(absl::string_view const&amp;, unsigned long) (3 samples, 0.02%)</title><rect x="780.9" y="789" width="0.2" height="15.0" fill="rgb(205,145,45)" rx="2" ry="2" />
<text  x="783.88" y="799.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::EvaluatorStack::Clear() (2 samples, 0.01%)</title><rect x="1040.5" y="773" width="0.2" height="15.0" fill="rgb(223,105,37)" rx="2" ry="2" />
<text  x="1043.52" y="783.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedBufferFragmentImpl::done() (2 samples, 0.01%)</title><rect x="1152.7" y="1125" width="0.1" height="15.0" fill="rgb(219,90,25)" rx="2" ry="2" />
<text  x="1155.66" y="1135.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (2 samples, 0.01%)</title><rect x="894.0" y="1045" width="0.2" height="15.0" fill="rgb(226,129,23)" rx="2" ry="2" />
<text  x="897.02" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::getExisting(absl::string_view) (4 samples, 0.02%)</title><rect x="779.3" y="789" width="0.3" height="15.0" fill="rgb(251,86,46)" rx="2" ry="2" />
<text  x="782.31" y="799.5" ></text>
</g>
<g >
<title>ext4_writepage (2 samples, 0.01%)</title><rect x="659.0" y="1221" width="0.1" height="15.0" fill="rgb(237,128,27)" rx="2" ry="2" />
<text  x="661.99" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::OwnedImplReservationSlicesOwnerMultiple::~OwnedImplReservationSlicesOwnerMultiple() (13 samples, 0.08%)</title><rect x="1134.3" y="1157" width="0.9" height="15.0" fill="rgb(252,1,16)" rx="2" ry="2" />
<text  x="1137.32" y="1167.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.02%)</title><rect x="593.8" y="1109" width="0.3" height="15.0" fill="rgb(237,49,52)" rx="2" ry="2" />
<text  x="596.78" y="1119.5" ></text>
</g>
<g >
<title>runtime.scanobject (24 samples, 0.14%)</title><rect x="255.4" y="1301" width="1.7" height="15.0" fill="rgb(248,33,34)" rx="2" ry="2" />
<text  x="258.42" y="1311.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.01%)</title><rect x="624.0" y="1173" width="0.1" height="15.0" fill="rgb(231,84,38)" rx="2" ry="2" />
<text  x="627.00" y="1183.5" ></text>
</g>
<g >
<title>proxy_wasm::NullPlugin::ensureContext(unsigned long, unsigned long) (40 samples, 0.24%)</title><rect x="856.9" y="965" width="2.8" height="15.0" fill="rgb(234,68,22)" rx="2" ry="2" />
<text  x="859.90" y="975.5" ></text>
</g>
<g >
<title>__ksize (2 samples, 0.01%)</title><rect x="905.5" y="917" width="0.1" height="15.0" fill="rgb(244,72,14)" rx="2" ry="2" />
<text  x="908.47" y="927.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool) (3 samples, 0.02%)</title><rect x="991.3" y="1029" width="0.2" height="15.0" fill="rgb(252,58,37)" rx="2" ry="2" />
<text  x="994.31" y="1039.5" ></text>
</g>
<g >
<title>absl::hash_internal::Wyhash(void const*, unsigned long, unsigned long, unsigned long const*) (3 samples, 0.02%)</title><rect x="818.4" y="949" width="0.2" height="15.0" fill="rgb(243,216,30)" rx="2" ry="2" />
<text  x="821.43" y="959.5" ></text>
</g>
<g >
<title>local.syscall.read (2 samples, 0.01%)</title><rect x="135.5" y="1237" width="0.2" height="15.0" fill="rgb(213,68,49)" rx="2" ry="2" />
<text  x="138.52" y="1247.5" ></text>
</g>
<g >
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="507.9" y="1109" width="0.3" height="15.0" fill="rgb(239,178,43)" rx="2" ry="2" />
<text  x="510.87" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Extensions::RequestId::UUIDRequestIDExtension::toInteger(Envoy::Http::RequestHeaderMap const&amp;) const (8 samples, 0.05%)</title><rect x="1075.5" y="1013" width="0.6" height="15.0" fill="rgb(241,14,53)" rx="2" ry="2" />
<text  x="1078.51" y="1023.5" ></text>
</g>
<g >
<title>br_netif_receive_skb (81 samples, 0.49%)</title><rect x="908.4" y="549" width="5.7" height="15.0" fill="rgb(235,162,35)" rx="2" ry="2" />
<text  x="911.39" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (25 samples, 0.15%)</title><rect x="874.5" y="917" width="1.7" height="15.0" fill="rgb(226,73,20)" rx="2" ry="2" />
<text  x="877.47" y="927.5" ></text>
</g>
<g >
<title>Wasm::Common::populateRequestProtocol(Wasm::Common::RequestInfo*) (19 samples, 0.11%)</title><rect x="1029.7" y="837" width="1.4" height="15.0" fill="rgb(228,76,51)" rx="2" ry="2" />
<text  x="1032.71" y="847.5" ></text>
</g>
<g >
<title>Envoy::Runtime::runtimeFeatureEnabled(absl::string_view) (3 samples, 0.02%)</title><rect x="1118.9" y="1029" width="0.2" height="15.0" fill="rgb(239,189,40)" rx="2" ry="2" />
<text  x="1121.89" y="1039.5" ></text>
</g>
<g >
<title>__inet_lookup_established (5 samples, 0.03%)</title><rect x="913.4" y="373" width="0.4" height="15.0" fill="rgb(212,24,42)" rx="2" ry="2" />
<text  x="916.44" y="383.5" ></text>
</g>
<g >
<title>Envoy::Runtime::runtimeFeatureEnabled(absl::string_view) (3 samples, 0.02%)</title><rect x="970.6" y="1013" width="0.2" height="15.0" fill="rgb(222,93,18)" rx="2" ry="2" />
<text  x="973.61" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::onUpstreamComplete(Envoy::Router::UpstreamRequest&amp;) (52 samples, 0.31%)</title><rect x="796.8" y="981" width="3.7" height="15.0" fill="rgb(221,188,26)" rx="2" ry="2" />
<text  x="799.81" y="991.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; absl::StrReplaceAll&lt;absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;(absl::string_view, absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;) (5 samples, 0.03%)</title><rect x="988.4" y="949" width="0.3" height="15.0" fill="rgb(207,168,6)" rx="2" ry="2" />
<text  x="991.39" y="959.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (2 samples, 0.01%)</title><rect x="1158.1" y="293" width="0.1" height="15.0" fill="rgb(241,84,19)" rx="2" ry="2" />
<text  x="1161.07" y="303.5" ></text>
</g>
<g >
<title>do_futex (109 samples, 0.66%)</title><rect x="217.2" y="1109" width="7.7" height="15.0" fill="rgb(252,112,53)" rx="2" ry="2" />
<text  x="220.16" y="1119.5" ></text>
</g>
<g >
<title>mark_wake_futex (6 samples, 0.04%)</title><rect x="62.7" y="1093" width="0.4" height="15.0" fill="rgb(241,163,29)" rx="2" ry="2" />
<text  x="65.70" y="1103.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::OverridableRemoteConnectionInfoSetterStreamInfo::sslConnection() const (2 samples, 0.01%)</title><rect x="854.9" y="997" width="0.2" height="15.0" fill="rgb(231,221,12)" rx="2" ry="2" />
<text  x="857.91" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="682.0" y="1237" width="0.2" height="15.0" fill="rgb(238,195,28)" rx="2" ry="2" />
<text  x="685.03" y="1247.5" ></text>
</g>
<g >
<title>Envoy::Tcp::MetadataExchange::MetadataExchangeFilter::onData(Envoy::Buffer::Instance&amp;, bool) (2 samples, 0.01%)</title><rect x="883.7" y="1205" width="0.2" height="15.0" fill="rgb(218,130,1)" rx="2" ry="2" />
<text  x="886.71" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Runtime::runtimeFeatureEnabled(absl::string_view) (6 samples, 0.04%)</title><rect x="754.9" y="901" width="0.4" height="15.0" fill="rgb(217,217,51)" rx="2" ry="2" />
<text  x="757.85" y="911.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::FieldBackedMapImpl::operator[](google::api::expr::runtime::CelValue) const (2 samples, 0.01%)</title><rect x="778.4" y="805" width="0.1" height="15.0" fill="rgb(227,187,10)" rx="2" ry="2" />
<text  x="781.39" y="815.5" ></text>
</g>
<g >
<title>void std::__1::vector&lt;Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation, std::__1::allocator&lt;Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation&gt; &gt;::__emplace_back_slow_path&lt;Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation&gt;(Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation&amp;&amp;) (15 samples, 0.09%)</title><rect x="756.8" y="885" width="1.0" height="15.0" fill="rgb(215,148,18)" rx="2" ry="2" />
<text  x="759.77" y="895.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::~ActiveStream() (81 samples, 0.49%)</title><rect x="704.6" y="1269" width="5.7" height="15.0" fill="rgb(219,112,37)" rx="2" ry="2" />
<text  x="707.57" y="1279.5" ></text>
</g>
<g >
<title>ip_output (2 samples, 0.01%)</title><rect x="657.1" y="1045" width="0.2" height="15.0" fill="rgb(217,194,3)" rx="2" ry="2" />
<text  x="660.14" y="1055.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (5 samples, 0.03%)</title><rect x="97.0" y="1109" width="0.3" height="15.0" fill="rgb(228,215,31)" rx="2" ry="2" />
<text  x="99.97" y="1119.5" ></text>
</g>
<g >
<title>__libc_cfree (2 samples, 0.01%)</title><rect x="1006.4" y="901" width="0.1" height="15.0" fill="rgb(241,5,12)" rx="2" ry="2" />
<text  x="1009.38" y="911.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (4 samples, 0.02%)</title><rect x="1128.1" y="885" width="0.2" height="15.0" fill="rgb(238,48,27)" rx="2" ry="2" />
<text  x="1131.06" y="895.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashSetPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;::iterator absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashSetPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;::find&lt;absl::string_view&gt;(absl::string_view const&amp;, unsigned long) (2 samples, 0.01%)</title><rect x="1061.0" y="997" width="0.1" height="15.0" fill="rgb(242,146,43)" rx="2" ry="2" />
<text  x="1064.00" y="1007.5" ></text>
</g>
<g >
<title>epoll_wait (212 samples, 1.28%)</title><rect x="688.1" y="1301" width="15.1" height="15.0" fill="rgb(216,32,44)" rx="2" ry="2" />
<text  x="691.08" y="1311.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::onPoolReady(std::__1::unique_ptr&lt;Envoy::Router::GenericUpstream, std::__1::default_delete&lt;Envoy::Router::GenericUpstream&gt; &gt;&amp;&amp;, std::__1::shared_ptr&lt;Envoy::Upstream::HostDescription const&gt;, std::__1::shared_ptr&lt;Envoy::Network::Address::Instance const&gt; const&amp;, Envoy::StreamInfo::StreamInfo const&amp;, absl::optional&lt;Envoy::Http::Protocol&gt;) (92 samples, 0.55%)</title><rect x="837.4" y="901" width="6.6" height="15.0" fill="rgb(210,63,34)" rx="2" ry="2" />
<text  x="840.42" y="911.5" ></text>
</g>
<g >
<title>pilot-agent (2 samples, 0.01%)</title><rect x="679.5" y="1381" width="0.2" height="15.0" fill="rgb(222,62,12)" rx="2" ry="2" />
<text  x="682.54" y="1391.5" ></text>
</g>
<g >
<title>__cxxabiv1::__class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const (2 samples, 0.01%)</title><rect x="942.6" y="1317" width="0.1" height="15.0" fill="rgb(244,81,29)" rx="2" ry="2" />
<text  x="945.59" y="1327.5" ></text>
</g>
<g >
<title>futex_wake (27 samples, 0.16%)</title><rect x="173.6" y="1093" width="2.0" height="15.0" fill="rgb(243,92,1)" rx="2" ry="2" />
<text  x="176.63" y="1103.5" ></text>
</g>
<g >
<title>do_futex (17 samples, 0.10%)</title><rect x="436.5" y="869" width="1.2" height="15.0" fill="rgb(241,221,10)" rx="2" ry="2" />
<text  x="439.47" y="879.5" ></text>
</g>
<g >
<title>__ksize (2 samples, 0.01%)</title><rect x="557.9" y="933" width="0.2" height="15.0" fill="rgb(235,120,36)" rx="2" ry="2" />
<text  x="560.94" y="943.5" ></text>
</g>
<g >
<title>local.runtime.mPark (2 samples, 0.01%)</title><rect x="257.9" y="1285" width="0.1" height="15.0" fill="rgb(226,11,6)" rx="2" ry="2" />
<text  x="260.90" y="1295.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::decodeHeaders(Envoy::Http::ActiveStreamDecoderFilter*, Envoy::Http::RequestHeaderMap&amp;, bool) (424 samples, 2.56%)</title><rect x="1081.1" y="1029" width="30.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1084.05" y="1039.5" >En..</text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::doEndStream(Envoy::Http::ConnectionManagerImpl::ActiveStream&amp;) (695 samples, 4.19%)</title><rect x="746.7" y="981" width="49.5" height="15.0" fill="rgb(238,173,36)" rx="2" ry="2" />
<text  x="749.74" y="991.5" >Envo..</text>
</g>
<g >
<title>google::protobuf::util::converter::ObjectWriter::RenderDataPieceTo(google::protobuf::util::converter::DataPiece const&amp;, google::protobuf::stringpiece_internal::StringPiece, google::protobuf::util::converter::ObjectWriter*) (2 samples, 0.01%)</title><rect x="1004.2" y="709" width="0.1" height="15.0" fill="rgb(228,122,11)" rx="2" ry="2" />
<text  x="1007.18" y="719.5" ></text>
</g>
<g >
<title>Envoy::Network::FilterManagerImpl::onWrite(Envoy::Network::FilterManagerImpl::ActiveWriteFilter*, Envoy::Network::WriteBufferSource&amp;) (4 samples, 0.02%)</title><rect x="978.9" y="901" width="0.2" height="15.0" fill="rgb(242,212,40)" rx="2" ry="2" />
<text  x="981.86" y="911.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (14 samples, 0.08%)</title><rect x="878.1" y="933" width="1.0" height="15.0" fill="rgb(214,32,29)" rx="2" ry="2" />
<text  x="881.09" y="943.5" ></text>
</g>
<g >
<title>ip_forward (2 samples, 0.01%)</title><rect x="1156.3" y="581" width="0.1" height="15.0" fill="rgb(247,8,27)" rx="2" ry="2" />
<text  x="1159.29" y="591.5" ></text>
</g>
<g >
<title>[unknown] (3,753 samples, 22.62%)</title><rect x="338.0" y="1237" width="266.9" height="15.0" fill="rgb(237,38,15)" rx="2" ry="2" />
<text  x="340.98" y="1247.5" >[unknown]</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::unique_ptr&lt;Envoy::Extensions::Common::Wasm::StorageObject, std::__1::default_delete&lt;Envoy::Extensions::Common::Wasm::StorageObject&gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::unique_ptr&lt;Envoy::Extensions::Common::Wasm::StorageObject, std::__1::default_delete&lt;Envoy::Extensions::Common::Wasm::StorageObject&gt; &gt; &gt; &gt; &gt;::iterator absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::unique_ptr&lt;Envoy::Extensions::Common::Wasm::StorageObject, std::__1::default_delete&lt;Envoy::Extensions::Common::Wasm::StorageObject&gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::unique_ptr&lt;Envoy::Extensions::Common::Wasm::StorageObject, std::__1::default_delete&lt;Envoy::Extensions::Common::Wasm::StorageObject&gt; &gt; &gt; &gt; &gt;::find&lt;absl::string_view&gt;(absl::string_view const&amp;, unsigned long) (2 samples, 0.01%)</title><rect x="1037.1" y="789" width="0.1" height="15.0" fill="rgb(210,184,44)" rx="2" ry="2" />
<text  x="1040.10" y="799.5" ></text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode (6 samples, 0.04%)</title><rect x="251.6" y="1077" width="0.4" height="15.0" fill="rgb(242,80,2)" rx="2" ry="2" />
<text  x="254.58" y="1087.5" ></text>
</g>
<g >
<title>__lock_text_start (11 samples, 0.07%)</title><rect x="241.8" y="1013" width="0.8" height="15.0" fill="rgb(220,210,38)" rx="2" ry="2" />
<text  x="244.83" y="1023.5" ></text>
</g>
<g >
<title>futex_wait (161 samples, 0.97%)</title><rect x="84.3" y="1189" width="11.5" height="15.0" fill="rgb(228,188,5)" rx="2" ry="2" />
<text  x="87.31" y="1199.5" ></text>
</g>
<g >
<title>__slab_free (3 samples, 0.02%)</title><rect x="1175.1" y="421" width="0.3" height="15.0" fill="rgb(226,201,33)" rx="2" ry="2" />
<text  x="1178.14" y="431.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;std::__1::__bind&lt;void (Envoy::Event::DispatcherImpl::*)(), Envoy::Event::DispatcherImpl*&gt;, std::__1::allocator&lt;std::__1::__bind&lt;void (Envoy::Event::DispatcherImpl::*)(), Envoy::Event::DispatcherImpl*&gt; &gt;, void ()&gt;::operator()() (4 samples, 0.02%)</title><rect x="937.5" y="1317" width="0.3" height="15.0" fill="rgb(226,9,4)" rx="2" ry="2" />
<text  x="940.47" y="1327.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (2 samples, 0.01%)</title><rect x="641.8" y="1141" width="0.1" height="15.0" fill="rgb(247,1,50)" rx="2" ry="2" />
<text  x="644.78" y="1151.5" ></text>
</g>
<g >
<title>Envoy::Upstream::OriginalDstCluster::LoadBalancer::chooseHost(Envoy::Upstream::LoadBalancerContext*) (3 samples, 0.02%)</title><rect x="1099.8" y="917" width="0.2" height="15.0" fill="rgb(250,153,48)" rx="2" ry="2" />
<text  x="1102.83" y="927.5" ></text>
</g>
<g >
<title>try_to_wake_up (3 samples, 0.02%)</title><rect x="506.7" y="1013" width="0.2" height="15.0" fill="rgb(253,83,45)" rx="2" ry="2" />
<text  x="509.73" y="1023.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.01%)</title><rect x="644.4" y="1269" width="0.2" height="15.0" fill="rgb(209,55,8)" rx="2" ry="2" />
<text  x="647.41" y="1279.5" ></text>
</g>
<g >
<title>__vfs_write (137 samples, 0.83%)</title><rect x="237.0" y="1173" width="9.7" height="15.0" fill="rgb(252,218,19)" rx="2" ry="2" />
<text  x="240.00" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="682.0" y="1205" width="0.2" height="15.0" fill="rgb(207,147,51)" rx="2" ry="2" />
<text  x="685.03" y="1215.5" ></text>
</g>
<g >
<title>hist_internal_find (2 samples, 0.01%)</title><rect x="1042.7" y="773" width="0.1" height="15.0" fill="rgb(251,109,0)" rx="2" ry="2" />
<text  x="1045.65" y="783.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::RequestHeaderMap&gt;::get(Envoy::Http::LowerCaseString const&amp;) const (5 samples, 0.03%)</title><rect x="778.7" y="789" width="0.3" height="15.0" fill="rgb(242,184,51)" rx="2" ry="2" />
<text  x="781.67" y="799.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::iterate(std::__1::function&lt;Envoy::Http::HeaderMap::Iterate (Envoy::Http::HeaderEntry const&amp;)&gt;) const (24 samples, 0.14%)</title><rect x="1089.3" y="789" width="1.7" height="15.0" fill="rgb(213,227,36)" rx="2" ry="2" />
<text  x="1092.30" y="799.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="701.6" y="1093" width="0.1" height="15.0" fill="rgb(247,177,34)" rx="2" ry="2" />
<text  x="704.59" y="1103.5" ></text>
</g>
<g >
<title>google::protobuf::Descriptor::FindFieldByName(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) const (4 samples, 0.02%)</title><rect x="776.0" y="741" width="0.3" height="15.0" fill="rgb(249,131,16)" rx="2" ry="2" />
<text  x="778.97" y="751.5" ></text>
</g>
<g >
<title>runtime.gentraceback (6 samples, 0.04%)</title><rect x="115.0" y="1253" width="0.4" height="15.0" fill="rgb(242,37,7)" rx="2" ry="2" />
<text  x="117.96" y="1263.5" ></text>
</g>
<g >
<title>std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; Envoy::Http::HeaderMapImpl::HeaderList::insert&lt;Envoy::Http::HeaderString, Envoy::Http::HeaderString&gt;(Envoy::Http::HeaderString&amp;&amp;, Envoy::Http::HeaderString&amp;&amp;) (8 samples, 0.05%)</title><rect x="835.0" y="949" width="0.6" height="15.0" fill="rgb(243,156,44)" rx="2" ry="2" />
<text  x="838.00" y="959.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::StaticLookupTable&lt;Envoy::Http::RequestHeaderMap&gt;::lookup(Envoy::Http::HeaderMapImpl&amp;, absl::string_view) (5 samples, 0.03%)</title><rect x="1110.1" y="869" width="0.4" height="15.0" fill="rgb(206,59,11)" rx="2" ry="2" />
<text  x="1113.14" y="879.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CelExpressionFlatImpl::Evaluate(google::api::expr::runtime::BaseActivation const&amp;, google::protobuf::Arena*) const (65 samples, 0.39%)</title><rect x="784.9" y="805" width="4.7" height="15.0" fill="rgb(230,197,50)" rx="2" ry="2" />
<text  x="787.93" y="815.5" ></text>
</g>
<g >
<title>finish_task_switch (29 samples, 0.17%)</title><rect x="594.3" y="1061" width="2.1" height="15.0" fill="rgb(245,66,37)" rx="2" ry="2" />
<text  x="597.35" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Runtime::LoaderImpl::threadsafeSnapshot() (4 samples, 0.02%)</title><rect x="1060.5" y="1013" width="0.3" height="15.0" fill="rgb(252,104,37)" rx="2" ry="2" />
<text  x="1063.50" y="1023.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (199 samples, 1.20%)</title><rect x="1153.9" y="1061" width="14.2" height="15.0" fill="rgb(212,97,45)" rx="2" ry="2" />
<text  x="1156.95" y="1071.5" ></text>
</g>
<g >
<title>__x64_sys_writev (235 samples, 1.42%)</title><rect x="1171.3" y="1125" width="16.7" height="15.0" fill="rgb(254,220,35)" rx="2" ry="2" />
<text  x="1174.30" y="1135.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="598.8" y="1093" width="0.1" height="15.0" fill="rgb(216,16,32)" rx="2" ry="2" />
<text  x="601.76" y="1103.5" ></text>
</g>
<g >
<title>nf_hook_slow (3 samples, 0.02%)</title><rect x="588.9" y="869" width="0.2" height="15.0" fill="rgb(217,65,49)" rx="2" ry="2" />
<text  x="591.87" y="879.5" ></text>
</g>
<g >
<title>new_sync_read (49 samples, 0.30%)</title><rect x="618.7" y="1141" width="3.5" height="15.0" fill="rgb(246,43,32)" rx="2" ry="2" />
<text  x="621.74" y="1151.5" ></text>
</g>
<g >
<title>tcp_push (2 samples, 0.01%)</title><rect x="556.9" y="997" width="0.1" height="15.0" fill="rgb(249,19,25)" rx="2" ry="2" />
<text  x="559.87" y="1007.5" ></text>
</g>
<g >
<title>process_backlog (2 samples, 0.01%)</title><rect x="623.4" y="1157" width="0.2" height="15.0" fill="rgb(254,158,24)" rx="2" ry="2" />
<text  x="626.43" y="1167.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.01%)</title><rect x="498.8" y="997" width="0.2" height="15.0" fill="rgb(219,131,12)" rx="2" ry="2" />
<text  x="501.84" y="1007.5" ></text>
</g>
<g >
<title>generic_update_time (17 samples, 0.10%)</title><rect x="237.6" y="1093" width="1.2" height="15.0" fill="rgb(211,88,11)" rx="2" ry="2" />
<text  x="240.64" y="1103.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::ResponseHeaderMap&gt;::get(Envoy::Http::LowerCaseString const&amp;) const (14 samples, 0.08%)</title><rect x="982.9" y="869" width="1.0" height="15.0" fill="rgb(217,195,40)" rx="2" ry="2" />
<text  x="985.92" y="879.5" ></text>
</g>
<g >
<title>__fdget_pos (7 samples, 0.04%)</title><rect x="516.8" y="1109" width="0.5" height="15.0" fill="rgb(228,96,30)" rx="2" ry="2" />
<text  x="519.76" y="1119.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::CastingValueFromMessageFactory&lt;google::protobuf::ListValue&gt;::CreateValue(google::protobuf::Message const*, google::protobuf::Arena*) const (4 samples, 0.02%)</title><rect x="773.7" y="741" width="0.3" height="15.0" fill="rgb(225,46,35)" rx="2" ry="2" />
<text  x="776.70" y="751.5" ></text>
</g>
<g >
<title>google::protobuf::Descriptor::FindFieldByNumber(int) const (7 samples, 0.04%)</title><rect x="774.5" y="773" width="0.5" height="15.0" fill="rgb(206,87,18)" rx="2" ry="2" />
<text  x="777.48" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::Descriptor::FindFieldByName(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) const (4 samples, 0.02%)</title><rect x="768.6" y="773" width="0.3" height="15.0" fill="rgb(229,10,17)" rx="2" ry="2" />
<text  x="771.65" y="783.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::completeLastHeader() (6 samples, 0.04%)</title><rect x="814.8" y="1077" width="0.4" height="15.0" fill="rgb(213,25,21)" rx="2" ry="2" />
<text  x="817.80" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::getExisting(absl::string_view) (4 samples, 0.02%)</title><rect x="1110.7" y="885" width="0.3" height="15.0" fill="rgb(217,5,18)" rx="2" ry="2" />
<text  x="1113.71" y="895.5" ></text>
</g>
<g >
<title>mem_cgroup_iter (2 samples, 0.01%)</title><rect x="672.9" y="965" width="0.1" height="15.0" fill="rgb(218,99,7)" rx="2" ry="2" />
<text  x="675.86" y="975.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::(anonymous namespace)::DynamicMap::operator[](google::api::expr::runtime::CelValue) const (5 samples, 0.03%)</title><rect x="1021.5" y="773" width="0.3" height="15.0" fill="rgb(213,190,29)" rx="2" ry="2" />
<text  x="1024.46" y="783.5" ></text>
</g>
<g >
<title>ip_output (2 samples, 0.01%)</title><rect x="1162.1" y="373" width="0.1" height="15.0" fill="rgb(223,174,5)" rx="2" ry="2" />
<text  x="1165.05" y="383.5" ></text>
</g>
<g >
<title>run_ksoftirqd (4 samples, 0.02%)</title><rect x="659.9" y="1317" width="0.3" height="15.0" fill="rgb(212,23,51)" rx="2" ry="2" />
<text  x="662.91" y="1327.5" ></text>
</g>
<g >
<title>ip_output (2 samples, 0.01%)</title><rect x="1162.2" y="389" width="0.1" height="15.0" fill="rgb(223,25,5)" rx="2" ry="2" />
<text  x="1165.19" y="399.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (325 samples, 1.96%)</title><rect x="562.9" y="709" width="23.1" height="15.0" fill="rgb(244,42,27)" rx="2" ry="2" />
<text  x="565.91" y="719.5" >_..</text>
</g>
<g >
<title>Envoy::Extensions::Common::Wasm::serializeValue(google::api::expr::runtime::CelValue, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (2 samples, 0.01%)</title><rect x="772.1" y="789" width="0.2" height="15.0" fill="rgb(230,188,52)" rx="2" ry="2" />
<text  x="775.13" y="799.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="509.3" y="1077" width="0.1" height="15.0" fill="rgb(205,25,31)" rx="2" ry="2" />
<text  x="512.29" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::~Filter() (3 samples, 0.02%)</title><rect x="706.1" y="1205" width="0.3" height="15.0" fill="rgb(211,95,18)" rx="2" ry="2" />
<text  x="709.14" y="1215.5" ></text>
</g>
<g >
<title>__block_commit_write.isra.0 (3 samples, 0.02%)</title><rect x="242.6" y="1045" width="0.2" height="15.0" fill="rgb(211,177,26)" rx="2" ry="2" />
<text  x="245.61" y="1055.5" ></text>
</g>
<g >
<title>__lock_sock (43 samples, 0.26%)</title><rect x="619.2" y="1045" width="3.0" height="15.0" fill="rgb(219,78,48)" rx="2" ry="2" />
<text  x="622.17" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBufferFactory::createBuffer(std::__1::function&lt;void ()&gt;, std::__1::function&lt;void ()&gt;, std::__1::function&lt;void ()&gt;) (4 samples, 0.02%)</title><rect x="871.3" y="997" width="0.3" height="15.0" fill="rgb(238,111,11)" rx="2" ry="2" />
<text  x="874.34" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::write(Envoy::Buffer::Instance&amp;, bool, bool) (4 samples, 0.02%)</title><rect x="1053.0" y="965" width="0.3" height="15.0" fill="rgb(239,60,19)" rx="2" ry="2" />
<text  x="1056.03" y="975.5" ></text>
</g>
<g >
<title>[unknown] (101 samples, 0.61%)</title><rect x="671.6" y="1221" width="7.2" height="15.0" fill="rgb(227,109,25)" rx="2" ry="2" />
<text  x="674.58" y="1231.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (2 samples, 0.01%)</title><rect x="659.6" y="1333" width="0.1" height="15.0" fill="rgb(249,209,13)" rx="2" ry="2" />
<text  x="662.56" y="1343.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/image.(*fs).GetMetadata (2 samples, 0.01%)</title><rect x="251.1" y="1045" width="0.2" height="15.0" fill="rgb(227,164,30)" rx="2" ry="2" />
<text  x="254.15" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (740 samples, 4.46%)</title><rect x="22.7" y="1189" width="52.6" height="15.0" fill="rgb(214,187,35)" rx="2" ry="2" />
<text  x="25.66" y="1199.5" >[unkn..</text>
</g>
<g >
<title>virtual thunk to Envoy::Extensions::Common::Wasm::Context::encodeData(Envoy::Buffer::Instance&amp;, bool) (4 samples, 0.02%)</title><rect x="802.9" y="997" width="0.2" height="15.0" fill="rgb(212,206,29)" rx="2" ry="2" />
<text  x="805.85" y="1007.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (116 samples, 0.70%)</title><rect x="217.2" y="1157" width="8.2" height="15.0" fill="rgb(230,123,53)" rx="2" ry="2" />
<text  x="220.16" y="1167.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (5 samples, 0.03%)</title><rect x="729.0" y="757" width="0.4" height="15.0" fill="rgb(214,103,17)" rx="2" ry="2" />
<text  x="732.04" y="767.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (4 samples, 0.02%)</title><rect x="691.6" y="1189" width="0.2" height="15.0" fill="rgb(226,89,50)" rx="2" ry="2" />
<text  x="694.56" y="1199.5" ></text>
</g>
<g >
<title>runtime.entersyscall (2 samples, 0.01%)</title><rect x="135.7" y="1237" width="0.1" height="15.0" fill="rgb(211,191,8)" rx="2" ry="2" />
<text  x="138.66" y="1247.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="507.9" y="1141" width="0.3" height="15.0" fill="rgb(210,220,18)" rx="2" ry="2" />
<text  x="510.87" y="1151.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="623.4" y="1013" width="0.2" height="15.0" fill="rgb(225,79,48)" rx="2" ry="2" />
<text  x="626.43" y="1023.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Extensions::Common::Wasm::Context::encodeHeaders(Envoy::Http::ResponseHeaderMap&amp;, bool) (41 samples, 0.25%)</title><rect x="981.4" y="965" width="2.9" height="15.0" fill="rgb(251,115,39)" rx="2" ry="2" />
<text  x="984.35" y="975.5" ></text>
</g>
<g >
<title>Envoy::Config::Metadata::metadataValue(envoy::config::core::v3::Metadata const*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;) (3 samples, 0.02%)</title><rect x="1010.6" y="901" width="0.3" height="15.0" fill="rgb(238,46,5)" rx="2" ry="2" />
<text  x="1013.65" y="911.5" ></text>
</g>
<g >
<title>__ip_select_ident (3 samples, 0.02%)</title><rect x="909.1" y="213" width="0.2" height="15.0" fill="rgb(249,75,10)" rx="2" ry="2" />
<text  x="912.10" y="223.5" ></text>
</g>
<g >
<title>__fget_light (7 samples, 0.04%)</title><rect x="516.8" y="1093" width="0.5" height="15.0" fill="rgb(225,186,34)" rx="2" ry="2" />
<text  x="519.76" y="1103.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (2 samples, 0.01%)</title><rect x="227.6" y="1237" width="0.2" height="15.0" fill="rgb(211,71,12)" rx="2" ry="2" />
<text  x="230.61" y="1247.5" ></text>
</g>
<g >
<title>new_sync_write (24 samples, 0.14%)</title><rect x="642.5" y="1173" width="1.7" height="15.0" fill="rgb(210,40,43)" rx="2" ry="2" />
<text  x="645.49" y="1183.5" ></text>
</g>
<g >
<title>sock_poll (7 samples, 0.04%)</title><rect x="692.3" y="1141" width="0.5" height="15.0" fill="rgb(219,7,30)" rx="2" ry="2" />
<text  x="695.27" y="1151.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (3 samples, 0.02%)</title><rect x="1127.1" y="901" width="0.2" height="15.0" fill="rgb(225,39,21)" rx="2" ry="2" />
<text  x="1130.06" y="911.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Router::Filter::onUpstreamData(Envoy::Buffer::Instance&amp;, Envoy::Router::UpstreamRequest&amp;, bool) (59 samples, 0.36%)</title><rect x="796.7" y="997" width="4.2" height="15.0" fill="rgb(246,140,23)" rx="2" ry="2" />
<text  x="799.74" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::StaticLookupTable&lt;Envoy::Http::RequestHeaderMap&gt;::lookup(Envoy::Http::HeaderMapImpl&amp;, absl::string_view) (4 samples, 0.02%)</title><rect x="1110.7" y="853" width="0.3" height="15.0" fill="rgb(224,68,39)" rx="2" ry="2" />
<text  x="1113.71" y="863.5" ></text>
</g>
<g >
<title>ip_vs_in.part.0 (4 samples, 0.02%)</title><rect x="559.8" y="837" width="0.3" height="15.0" fill="rgb(225,145,31)" rx="2" ry="2" />
<text  x="562.78" y="847.5" ></text>
</g>
<g >
<title>select_estimate_accuracy (2 samples, 0.01%)</title><rect x="59.7" y="1061" width="0.2" height="15.0" fill="rgb(254,150,27)" rx="2" ry="2" />
<text  x="62.71" y="1071.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.01%)</title><rect x="875.7" y="853" width="0.2" height="15.0" fill="rgb(239,82,29)" rx="2" ry="2" />
<text  x="878.75" y="863.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::AppendPartialToString(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) const (4 samples, 0.02%)</title><rect x="750.7" y="805" width="0.3" height="15.0" fill="rgb(229,66,6)" rx="2" ry="2" />
<text  x="753.73" y="815.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (3 samples, 0.02%)</title><rect x="773.8" y="693" width="0.2" height="15.0" fill="rgb(205,71,3)" rx="2" ry="2" />
<text  x="776.77" y="703.5" ></text>
</g>
<g >
<title>sk_reset_timer (12 samples, 0.07%)</title><rect x="563.8" y="533" width="0.9" height="15.0" fill="rgb(217,127,30)" rx="2" ry="2" />
<text  x="566.84" y="543.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (455 samples, 2.74%)</title><rect x="558.2" y="981" width="32.4" height="15.0" fill="rgb(226,221,51)" rx="2" ry="2" />
<text  x="561.22" y="991.5" >__..</text>
</g>
<g >
<title>__unqueue_futex (2 samples, 0.01%)</title><rect x="62.7" y="1061" width="0.1" height="15.0" fill="rgb(224,46,30)" rx="2" ry="2" />
<text  x="65.70" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*, char const*, unsigned long)#2}::__invoke(http_parser*, char const*, unsigned long) (37 samples, 0.22%)</title><rect x="803.8" y="1093" width="2.7" height="15.0" fill="rgb(221,182,40)" rx="2" ry="2" />
<text  x="806.85" y="1103.5" ></text>
</g>
<g >
<title>std::__1::__shared_ptr_emplace&lt;Envoy::Network::TransportSocketOptionsImpl, std::__1::allocator&lt;Envoy::Network::TransportSocketOptionsImpl&gt; &gt;::__on_zero_shared() (2 samples, 0.01%)</title><rect x="962.2" y="1205" width="0.2" height="15.0" fill="rgb(233,9,39)" rx="2" ry="2" />
<text  x="965.22" y="1215.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::write(Envoy::Buffer::Instance&amp;) (219 samples, 1.32%)</title><rect x="903.3" y="1205" width="15.5" height="15.0" fill="rgb(229,117,25)" rx="2" ry="2" />
<text  x="906.27" y="1215.5" ></text>
</g>
<g >
<title>i40e_xmit_frame_ring (6 samples, 0.04%)</title><rect x="1160.0" y="37" width="0.4" height="15.0" fill="rgb(207,68,6)" rx="2" ry="2" />
<text  x="1162.99" y="47.5" ></text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.01%)</title><rect x="898.5" y="965" width="0.1" height="15.0" fill="rgb(218,139,11)" rx="2" ry="2" />
<text  x="901.50" y="975.5" ></text>
</g>
<g >
<title>do_epoll_wait (85 samples, 0.51%)</title><rect x="490.2" y="1013" width="6.1" height="15.0" fill="rgb(212,42,4)" rx="2" ry="2" />
<text  x="493.24" y="1023.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.02%)</title><rect x="657.4" y="1253" width="0.2" height="15.0" fill="rgb(226,131,34)" rx="2" ry="2" />
<text  x="660.35" y="1263.5" ></text>
</g>
<g >
<title>__x64_sys_futex (74 samples, 0.45%)</title><rect x="540.4" y="1157" width="5.2" height="15.0" fill="rgb(230,130,12)" rx="2" ry="2" />
<text  x="543.37" y="1167.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ResponseHeaderMapImpl::~ResponseHeaderMapImpl() (4 samples, 0.02%)</title><rect x="709.5" y="1237" width="0.3" height="15.0" fill="rgb(245,47,6)" rx="2" ry="2" />
<text  x="712.48" y="1247.5" ></text>
</g>
<g >
<title>ip_queue_xmit (423 samples, 2.55%)</title><rect x="559.1" y="933" width="30.1" height="15.0" fill="rgb(245,72,15)" rx="2" ry="2" />
<text  x="562.14" y="943.5" >ip..</text>
</g>
<g >
<title>nf_hook_slow (2 samples, 0.01%)</title><rect x="1185.2" y="661" width="0.1" height="15.0" fill="rgb(252,145,14)" rx="2" ry="2" />
<text  x="1188.16" y="671.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.01%)</title><rect x="201.4" y="1221" width="0.1" height="15.0" fill="rgb(229,215,9)" rx="2" ry="2" />
<text  x="204.37" y="1231.5" ></text>
</g>
<g >
<title>local.runtime.growslice (2 samples, 0.01%)</title><rect x="129.7" y="1269" width="0.1" height="15.0" fill="rgb(252,48,12)" rx="2" ry="2" />
<text  x="132.69" y="1279.5" ></text>
</g>
<g >
<title>runtime.injectglist (84 samples, 0.51%)</title><rect x="202.6" y="1221" width="6.0" height="15.0" fill="rgb(208,112,48)" rx="2" ry="2" />
<text  x="205.65" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#3}::__invoke(http_parser*) (882 samples, 5.32%)</title><rect x="992.0" y="1093" width="62.7" height="15.0" fill="rgb(242,198,29)" rx="2" ry="2" />
<text  x="995.02" y="1103.5" >Envoy:..</text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onFileEvent(unsigned int) (221 samples, 1.33%)</title><rect x="920.5" y="1253" width="15.7" height="15.0" fill="rgb(213,175,17)" rx="2" ry="2" />
<text  x="923.48" y="1263.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::~RequestHeaderMapImpl() (6 samples, 0.04%)</title><rect x="964.4" y="1253" width="0.5" height="15.0" fill="rgb(224,220,22)" rx="2" ry="2" />
<text  x="967.43" y="1263.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.02%)</title><rect x="511.4" y="1093" width="0.2" height="15.0" fill="rgb(248,36,29)" rx="2" ry="2" />
<text  x="514.36" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::StreamEncoderImpl::encodeData(Envoy::Buffer::Instance&amp;, bool) (8 samples, 0.05%)</title><rect x="802.2" y="981" width="0.6" height="15.0" fill="rgb(249,195,46)" rx="2" ry="2" />
<text  x="805.21" y="991.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.01%)</title><rect x="499.2" y="1029" width="0.1" height="15.0" fill="rgb(217,172,22)" rx="2" ry="2" />
<text  x="502.20" y="1039.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (92 samples, 0.55%)</title><rect x="951.8" y="1205" width="6.6" height="15.0" fill="rgb(253,137,24)" rx="2" ry="2" />
<text  x="954.84" y="1215.5" ></text>
</g>
<g >
<title>hrtimer_sleeper_start_expires (2 samples, 0.01%)</title><rect x="598.8" y="1125" width="0.1" height="15.0" fill="rgb(254,117,21)" rx="2" ry="2" />
<text  x="601.76" y="1135.5" ></text>
</g>
<g >
<title>proxy_wasm::null_plugin::MetadataExchange::Plugin::PluginContext::onRequestHeaders(unsigned int, bool) (14 samples, 0.08%)</title><rect x="1109.6" y="965" width="1.0" height="15.0" fill="rgb(214,224,39)" rx="2" ry="2" />
<text  x="1112.64" y="975.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/daemon/logger/jsonfilelog/jsonlog.ffjsonWriteJSONBytesAsString (5 samples, 0.03%)</title><rect x="231.0" y="1253" width="0.3" height="15.0" fill="rgb(214,186,49)" rx="2" ry="2" />
<text  x="233.95" y="1263.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::onBody(Envoy::Buffer::Instance&amp;) (29 samples, 0.17%)</title><rect x="868.5" y="1077" width="2.1" height="15.0" fill="rgb(227,0,8)" rx="2" ry="2" />
<text  x="871.49" y="1087.5" ></text>
</g>
<g >
<title>Envoy::ThreadLocal::InstanceImpl::SlotImpl::currentThreadRegistered() (3 samples, 0.02%)</title><rect x="715.7" y="997" width="0.2" height="15.0" fill="rgb(205,31,54)" rx="2" ry="2" />
<text  x="718.67" y="1007.5" ></text>
</g>
<g >
<title>__ip_local_out (10 samples, 0.06%)</title><rect x="923.5" y="853" width="0.7" height="15.0" fill="rgb(252,193,29)" rx="2" ry="2" />
<text  x="926.53" y="863.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderUtility::headerValueIsValid(absl::string_view) (2 samples, 0.01%)</title><rect x="881.8" y="1093" width="0.1" height="15.0" fill="rgb(229,66,11)" rx="2" ry="2" />
<text  x="884.79" y="1103.5" ></text>
</g>
<g >
<title>local.runtime.releaseSudog (5 samples, 0.03%)</title><rect x="172.9" y="1285" width="0.3" height="15.0" fill="rgb(244,200,24)" rx="2" ry="2" />
<text  x="175.85" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (27 samples, 0.16%)</title><rect x="436.3" y="965" width="2.0" height="15.0" fill="rgb(218,213,27)" rx="2" ry="2" />
<text  x="439.33" y="975.5" ></text>
</g>
<g >
<title>Envoy::Extensions::HttpFilters::Fault::FaultFilter::decodeHeaders(Envoy::Http::RequestHeaderMap&amp;, bool) (4 samples, 0.02%)</title><rect x="832.2" y="1013" width="0.3" height="15.0" fill="rgb(208,117,2)" rx="2" ry="2" />
<text  x="835.22" y="1023.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Extensions::Common::Wasm::PropertyToken&gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Extensions::Common::Wasm::PropertyToken&gt; &gt; &gt;::iterator absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Envoy::Extensions::Common::Wasm::PropertyToken&gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, Envoy::Extensions::Common::Wasm::PropertyToken&gt; &gt; &gt;::find&lt;absl::string_view&gt;(absl::string_view const&amp;, unsigned long) (2 samples, 0.01%)</title><rect x="858.2" y="869" width="0.1" height="15.0" fill="rgb(215,83,7)" rx="2" ry="2" />
<text  x="861.18" y="879.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (10 samples, 0.06%)</title><rect x="197.1" y="1093" width="0.7" height="15.0" fill="rgb(244,147,18)" rx="2" ry="2" />
<text  x="200.10" y="1103.5" ></text>
</g>
<g >
<title>finish_task_switch (39 samples, 0.24%)</title><rect x="485.6" y="901" width="2.8" height="15.0" fill="rgb(205,22,48)" rx="2" ry="2" />
<text  x="488.61" y="911.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const (3 samples, 0.02%)</title><rect x="945.0" y="1365" width="0.2" height="15.0" fill="rgb(231,48,19)" rx="2" ry="2" />
<text  x="948.01" y="1375.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Event::DispatcherImpl::pushTrackedObject(Envoy::ScopeTrackedObject const*) (2 samples, 0.01%)</title><rect x="1128.6" y="1061" width="0.2" height="15.0" fill="rgb(239,181,51)" rx="2" ry="2" />
<text  x="1131.63" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="658.1" y="1301" width="0.1" height="15.0" fill="rgb(228,62,35)" rx="2" ry="2" />
<text  x="661.06" y="1311.5" ></text>
</g>
<g >
<title>futex_wait_setup (5 samples, 0.03%)</title><rect x="458.9" y="933" width="0.3" height="15.0" fill="rgb(217,95,39)" rx="2" ry="2" />
<text  x="461.87" y="943.5" ></text>
</g>
<g >
<title>std::__1::pair&lt;unsigned long, bool&gt; absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;absl::string_view, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;absl::string_view const, absl::InlinedVector&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt;, 1ul, std::__1::allocator&lt;std::__1::__list_iterator&lt;Envoy::Http::HeaderMapImpl::HeaderEntryImpl, void*&gt; &gt; &gt; &gt; &gt; &gt;::find_or_prepare_insert&lt;absl::string_view&gt;(absl::string_view const&amp;) (4 samples, 0.02%)</title><rect x="1070.2" y="901" width="0.3" height="15.0" fill="rgb(205,56,41)" rx="2" ry="2" />
<text  x="1073.24" y="911.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (9 samples, 0.05%)</title><rect x="196.5" y="1109" width="0.6" height="15.0" fill="rgb(233,205,35)" rx="2" ry="2" />
<text  x="199.46" y="1119.5" ></text>
</g>
<g >
<title>Envoy::Network::TransportSocketOptionsUtility::fromFilterState(Envoy::StreamInfo::FilterState const&amp;) (11 samples, 0.07%)</title><rect x="1098.3" y="997" width="0.8" height="15.0" fill="rgb(237,198,48)" rx="2" ry="2" />
<text  x="1101.33" y="1007.5" ></text>
</g>
<g >
<title>do_readv (99 samples, 0.60%)</title><rect x="893.3" y="1109" width="7.1" height="15.0" fill="rgb(242,86,21)" rx="2" ry="2" />
<text  x="896.31" y="1119.5" ></text>
</g>
<g >
<title>aa_file_perm (2 samples, 0.01%)</title><rect x="918.2" y="981" width="0.1" height="15.0" fill="rgb(229,134,25)" rx="2" ry="2" />
<text  x="921.20" y="991.5" ></text>
</g>
<g >
<title>aa_file_perm (4 samples, 0.02%)</title><rect x="1148.5" y="981" width="0.3" height="15.0" fill="rgb(234,8,40)" rx="2" ry="2" />
<text  x="1151.54" y="991.5" ></text>
</g>
<g >
<title>runtime.systemstack (13 samples, 0.08%)</title><rect x="169.4" y="1205" width="0.9" height="15.0" fill="rgb(218,92,54)" rx="2" ry="2" />
<text  x="172.37" y="1215.5" ></text>
</g>
<g >
<title>[Missed User Stack] (10 samples, 0.06%)</title><rect x="258.1" y="1365" width="0.7" height="15.0" fill="rgb(228,202,35)" rx="2" ry="2" />
<text  x="261.12" y="1375.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Http::Http1::ConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (1,055 samples, 6.36%)</title><rect x="1057.3" y="1189" width="75.0" height="15.0" fill="rgb(234,52,8)" rx="2" ry="2" />
<text  x="1060.30" y="1199.5" >virtual ..</text>
</g>
<g >
<title>i40e_napi_poll (2 samples, 0.01%)</title><rect x="484.7" y="805" width="0.1" height="15.0" fill="rgb(217,39,31)" rx="2" ry="2" />
<text  x="487.69" y="815.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Server::PerFilterChainFactoryContextImpl::drainClose() const (2 samples, 0.01%)</title><rect x="726.6" y="949" width="0.2" height="15.0" fill="rgb(216,97,15)" rx="2" ry="2" />
<text  x="729.62" y="959.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (174 samples, 1.05%)</title><rect x="1154.9" y="885" width="12.3" height="15.0" fill="rgb(244,60,35)" rx="2" ry="2" />
<text  x="1157.87" y="895.5" ></text>
</g>
<g >
<title>nf_xfrm_me_harder (2 samples, 0.01%)</title><rect x="916.4" y="805" width="0.2" height="15.0" fill="rgb(206,58,47)" rx="2" ry="2" />
<text  x="919.42" y="815.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::addImpl(void const*, unsigned long) (2 samples, 0.01%)</title><rect x="722.8" y="821" width="0.2" height="15.0" fill="rgb(216,28,26)" rx="2" ry="2" />
<text  x="725.85" y="831.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::getDataReadOnlyGeneric(absl::string_view) const (2 samples, 0.01%)</title><rect x="1098.4" y="981" width="0.1" height="15.0" fill="rgb(253,114,18)" rx="2" ry="2" />
<text  x="1101.40" y="991.5" ></text>
</g>
<g >
<title>nf_nat_packet (3 samples, 0.02%)</title><rect x="1166.7" y="773" width="0.2" height="15.0" fill="rgb(250,139,37)" rx="2" ry="2" />
<text  x="1169.67" y="783.5" ></text>
</g>
<g >
<title>ip_route_input_slow (2 samples, 0.01%)</title><rect x="913.3" y="357" width="0.1" height="15.0" fill="rgb(244,100,6)" rx="2" ry="2" />
<text  x="916.29" y="367.5" ></text>
</g>
<g >
<title>security_file_permission (9 samples, 0.05%)</title><rect x="1148.5" y="1045" width="0.7" height="15.0" fill="rgb(207,32,47)" rx="2" ry="2" />
<text  x="1151.54" y="1055.5" ></text>
</g>
<g >
<title>google::protobuf::util::BinaryToJsonStream(google::protobuf::util::TypeResolver*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, google::protobuf::io::ZeroCopyInputStream*, google::protobuf::io::ZeroCopyOutputStream*, google::protobuf::util::JsonPrintOptions const&amp;) (10 samples, 0.06%)</title><rect x="751.0" y="821" width="0.7" height="15.0" fill="rgb(215,164,43)" rx="2" ry="2" />
<text  x="754.01" y="831.5" ></text>
</g>
<g >
<title>file_update_time (3 samples, 0.02%)</title><rect x="537.5" y="1045" width="0.2" height="15.0" fill="rgb(208,182,26)" rx="2" ry="2" />
<text  x="540.45" y="1055.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (59 samples, 0.36%)</title><rect x="625.4" y="1221" width="4.2" height="15.0" fill="rgb(254,35,40)" rx="2" ry="2" />
<text  x="628.42" y="1231.5" ></text>
</g>
<g >
<title>Envoy::Runtime::runtimeFeatureEnabled(absl::string_view) (3 samples, 0.02%)</title><rect x="1101.7" y="981" width="0.2" height="15.0" fill="rgb(240,97,10)" rx="2" ry="2" />
<text  x="1104.68" y="991.5" ></text>
</g>
<g >
<title>proxy_wasm::exports::get_header_map_value(proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word, proxy_wasm::Word) (3 samples, 0.02%)</title><rect x="861.2" y="933" width="0.3" height="15.0" fill="rgb(254,178,46)" rx="2" ry="2" />
<text  x="864.24" y="943.5" ></text>
</g>
<g >
<title>__mutex_lock_slowpath (2 samples, 0.01%)</title><rect x="198.0" y="1093" width="0.1" height="15.0" fill="rgb(251,159,32)" rx="2" ry="2" />
<text  x="200.96" y="1103.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Upstreams::Http::Http::HttpUpstream::encodeHeaders(Envoy::Http::RequestHeaderMap const&amp;, bool) (70 samples, 0.42%)</title><rect x="837.8" y="885" width="5.0" height="15.0" fill="rgb(225,155,8)" rx="2" ry="2" />
<text  x="840.84" y="895.5" ></text>
</g>
<g >
<title>[unknown] (95 samples, 0.57%)</title><rect x="671.9" y="1205" width="6.8" height="15.0" fill="rgb(240,219,47)" rx="2" ry="2" />
<text  x="674.93" y="1215.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.02%)</title><rect x="623.9" y="1221" width="0.2" height="15.0" fill="rgb(254,189,4)" rx="2" ry="2" />
<text  x="626.93" y="1231.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (4 samples, 0.02%)</title><rect x="656.4" y="1157" width="0.3" height="15.0" fill="rgb(230,57,29)" rx="2" ry="2" />
<text  x="659.43" y="1167.5" ></text>
</g>
<g >
<title>void std::__1::vector&lt;Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation, std::__1::allocator&lt;Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation&gt; &gt;::__emplace_back_slow_path&lt;Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation&gt;(Envoy::Extensions::Tracers::Zipkin::BinaryAnnotation&amp;&amp;) (20 samples, 0.12%)</title><rect x="1006.6" y="901" width="1.4" height="15.0" fill="rgb(224,0,37)" rx="2" ry="2" />
<text  x="1009.60" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="131.4" y="1045" width="0.1" height="15.0" fill="rgb(213,101,41)" rx="2" ry="2" />
<text  x="134.39" y="1055.5" ></text>
</g>
<g >
<title>__lock_text_start (36 samples, 0.22%)</title><rect x="126.8" y="965" width="2.6" height="15.0" fill="rgb(247,114,29)" rx="2" ry="2" />
<text  x="129.84" y="975.5" ></text>
</g>
<g >
<title>local.runtime.(*gcWork).balance (14 samples, 0.08%)</title><rect x="254.0" y="1301" width="1.0" height="15.0" fill="rgb(205,95,43)" rx="2" ry="2" />
<text  x="256.99" y="1311.5" ></text>
</g>
<g >
<title>Envoy::Extensions::HttpFilters::Fault::FaultFilter::~FaultFilter() (2 samples, 0.01%)</title><rect x="706.0" y="1205" width="0.1" height="15.0" fill="rgb(245,1,36)" rx="2" ry="2" />
<text  x="709.00" y="1215.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::FilterStateImpl::~FilterStateImpl() (2 samples, 0.01%)</title><rect x="1050.2" y="901" width="0.1" height="15.0" fill="rgb(207,60,11)" rx="2" ry="2" />
<text  x="1053.19" y="911.5" ></text>
</g>
<g >
<title>schedule (150 samples, 0.90%)</title><rect x="102.0" y="1205" width="10.7" height="15.0" fill="rgb(213,143,4)" rx="2" ry="2" />
<text  x="105.02" y="1215.5" ></text>
</g>
<g >
<title>__ip_local_out (40 samples, 0.24%)</title><rect x="559.1" y="885" width="2.9" height="15.0" fill="rgb(250,91,17)" rx="2" ry="2" />
<text  x="562.14" y="895.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (2 samples, 0.01%)</title><rect x="1187.9" y="1061" width="0.1" height="15.0" fill="rgb(208,229,35)" rx="2" ry="2" />
<text  x="1190.87" y="1071.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.01%)</title><rect x="604.9" y="1237" width="0.1" height="15.0" fill="rgb(207,104,27)" rx="2" ry="2" />
<text  x="607.87" y="1247.5" ></text>
</g>
<g >
<title>Envoy::Extensions::Tracers::Zipkin::ZipkinSpan::setTag(absl::string_view, absl::string_view) (4 samples, 0.02%)</title><rect x="748.5" y="933" width="0.3" height="15.0" fill="rgb(207,92,27)" rx="2" ry="2" />
<text  x="751.52" y="943.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="509.3" y="1093" width="0.1" height="15.0" fill="rgb(237,143,26)" rx="2" ry="2" />
<text  x="512.29" y="1103.5" ></text>
</g>
<g >
<title>bictcp_cwnd_event (2 samples, 0.01%)</title><rect x="934.1" y="917" width="0.1" height="15.0" fill="rgb(245,25,6)" rx="2" ry="2" />
<text  x="937.06" y="927.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Network::ConnectionImpl::ioHandle() (2 samples, 0.01%)</title><rect x="1151.3" y="1221" width="0.2" height="15.0" fill="rgb(251,222,21)" rx="2" ry="2" />
<text  x="1154.31" y="1231.5" ></text>
</g>
<g >
<title>google::api::expr::runtime::CreateValueFromSingleField(google::protobuf::Message const*, google::protobuf::FieldDescriptor const*, google::protobuf::Arena*, google::api::expr::runtime::CelValue*) (5 samples, 0.03%)</title><rect x="1021.8" y="773" width="0.4" height="15.0" fill="rgb(246,62,6)" rx="2" ry="2" />
<text  x="1024.81" y="783.5" ></text>
</g>
<g >
<title>tcp_rcv_established (4 samples, 0.02%)</title><rect x="584.3" y="565" width="0.3" height="15.0" fill="rgb(227,161,16)" rx="2" ry="2" />
<text  x="587.32" y="575.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderMapImpl::insertByKey(Envoy::Http::HeaderString&amp;&amp;, Envoy::Http::HeaderString&amp;&amp;) (2 samples, 0.01%)</title><rect x="880.0" y="1077" width="0.2" height="15.0" fill="rgb(231,46,10)" rx="2" ry="2" />
<text  x="883.01" y="1087.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::ResponseFlagUtils::toShortString(Envoy::StreamInfo::StreamInfo const&amp;) (3 samples, 0.02%)</title><rect x="1010.2" y="901" width="0.2" height="15.0" fill="rgb(229,102,54)" rx="2" ry="2" />
<text  x="1013.15" y="911.5" ></text>
</g>
<g >
<title>ipv4_confirm (2 samples, 0.01%)</title><rect x="588.3" y="853" width="0.1" height="15.0" fill="rgb(211,5,19)" rx="2" ry="2" />
<text  x="591.30" y="863.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/api/server.(*Server).makeHTTPHandler.func1 (19 samples, 0.11%)</title><rect x="250.8" y="1285" width="1.3" height="15.0" fill="rgb(243,96,44)" rx="2" ry="2" />
<text  x="253.79" y="1295.5" ></text>
</g>
<g >
<title>ip_idents_reserve (3 samples, 0.02%)</title><rect x="909.1" y="181" width="0.2" height="15.0" fill="rgb(207,61,9)" rx="2" ry="2" />
<text  x="912.10" y="191.5" ></text>
</g>
<g >
<title>__libc_cfree (2 samples, 0.01%)</title><rect x="1022.6" y="821" width="0.1" height="15.0" fill="rgb(248,90,41)" rx="2" ry="2" />
<text  x="1025.60" y="831.5" ></text>
</g>
<g >
<title>std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, std::__1::__unordered_map_hasher&lt;long, std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, std::__1::hash&lt;long&gt;, std::__1::equal_to&lt;long&gt;, true&gt;, std::__1::__unordered_map_equal&lt;long, std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, std::__1::equal_to&lt;long&gt;, std::__1::hash&lt;long&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt; &gt; &gt;::remove(std::__1::__hash_const_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;long, std::__1::unique_ptr&lt;proxy_wasm::null_plugin::ContextBase, std::__1::default_delete&lt;proxy_wasm::null_plugin::ContextBase&gt; &gt; &gt;, void*&gt;*&gt;) (2 samples, 0.01%)</title><rect x="1046.1" y="901" width="0.1" height="15.0" fill="rgb(225,3,45)" rx="2" ry="2" />
<text  x="1049.06" y="911.5" ></text>
</g>
<g >
<title>__lock_text_start (110 samples, 0.66%)</title><rect x="75.7" y="1061" width="7.8" height="15.0" fill="rgb(253,90,45)" rx="2" ry="2" />
<text  x="78.71" y="1071.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (15 samples, 0.09%)</title><rect x="237.6" y="1061" width="1.1" height="15.0" fill="rgb(254,7,52)" rx="2" ry="2" />
<text  x="240.64" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Http::HeaderString::setCopy(char const*, unsigned int) (4 samples, 0.02%)</title><rect x="721.0" y="949" width="0.3" height="15.0" fill="rgb(248,141,16)" rx="2" ry="2" />
<text  x="724.00" y="959.5" ></text>
</g>
<g >
<title>find_get_entry (9 samples, 0.05%)</title><rect x="240.6" y="1029" width="0.7" height="15.0" fill="rgb(227,98,48)" rx="2" ry="2" />
<text  x="243.62" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Http::CodeStatsImpl::chargeBasicResponseStat(Envoy::Stats::Scope&amp;, Envoy::Stats::StatName, Envoy::Http::Code, bool) const (29 samples, 0.17%)</title><rect x="730.9" y="949" width="2.0" height="15.0" fill="rgb(234,143,29)" rx="2" ry="2" />
<text  x="733.89" y="959.5" ></text>
</g>
<g >
<title>ip_finish_output2 (3 samples, 0.02%)</title><rect x="1160.6" y="133" width="0.2" height="15.0" fill="rgb(243,83,30)" rx="2" ry="2" />
<text  x="1163.63" y="143.5" ></text>
</g>
<g >
<title>__ip_local_out (16 samples, 0.10%)</title><rect x="909.3" y="197" width="1.1" height="15.0" fill="rgb(211,99,10)" rx="2" ry="2" />
<text  x="912.31" y="207.5" ></text>
</g>
<g >
<title>__ksize (2 samples, 0.01%)</title><rect x="557.9" y="949" width="0.2" height="15.0" fill="rgb(221,21,27)" rx="2" ry="2" />
<text  x="560.94" y="959.5" ></text>
</g>
<g >
<title>mutex_lock (5 samples, 0.03%)</title><rect x="693.1" y="1173" width="0.4" height="15.0" fill="rgb(209,70,43)" rx="2" ry="2" />
<text  x="696.12" y="1183.5" ></text>
</g>
<g >
<title>Envoy::Http::TypedHeaderMapImpl&lt;Envoy::Http::ResponseHeaderMap&gt;::staticLookup(absl::string_view) (5 samples, 0.03%)</title><rect x="983.6" y="821" width="0.3" height="15.0" fill="rgb(212,153,9)" rx="2" ry="2" />
<text  x="986.56" y="831.5" ></text>
</g>
<g >
<title>Envoy::Http::RequestHeaderMapImpl::getByKey(absl::string_view) const (8 samples, 0.05%)</title><rect x="821.3" y="949" width="0.6" height="15.0" fill="rgb(223,182,23)" rx="2" ry="2" />
<text  x="824.34" y="959.5" ></text>
</g>
<g >
<title>event_del (2 samples, 0.01%)</title><rect x="1095.2" y="885" width="0.1" height="15.0" fill="rgb(230,29,7)" rx="2" ry="2" />
<text  x="1098.20" y="895.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (121 samples, 0.73%)</title><rect x="907.0" y="789" width="8.6" height="15.0" fill="rgb(237,207,26)" rx="2" ry="2" />
<text  x="909.96" y="799.5" ></text>
</g>
<g >
<title>absl::hash_internal::MixingHashState::combine_contiguous(absl::hash_internal::MixingHashState, unsigned char const*, unsigned long) (2 samples, 0.01%)</title><rect x="1032.9" y="789" width="0.2" height="15.0" fill="rgb(215,127,46)" rx="2" ry="2" />
<text  x="1035.91" y="799.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (8 samples, 0.05%)</title><rect x="123.0" y="1237" width="0.6" height="15.0" fill="rgb(242,97,19)" rx="2" ry="2" />
<text  x="126.00" y="1247.5" ></text>
</g>
</g>
</svg>
