<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1142" onload="init(evt)" viewBox="0 0 1200 1142" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1142.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1125" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1125" > </text>
<g id="frames">
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#3}::__invoke(http_parser*) (2 samples, 0.27%)</title><rect x="1180.4" y="805" width="3.2" height="15.0" fill="rgb(229,171,31)" rx="2" ry="2" />
<text  x="1183.43" y="815.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.14%)</title><rect x="349.6" y="1061" width="1.6" height="15.0" fill="rgb(241,36,54)" rx="2" ry="2" />
<text  x="352.65" y="1071.5" ></text>
</g>
<g >
<title>filldir64 (1 samples, 0.14%)</title><rect x="979.5" y="789" width="1.6" height="15.0" fill="rgb(220,85,10)" rx="2" ry="2" />
<text  x="982.51" y="799.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (2 samples, 0.27%)</title><rect x="939.6" y="709" width="3.2" height="15.0" fill="rgb(246,24,26)" rx="2" ry="2" />
<text  x="942.65" y="719.5" ></text>
</g>
<g >
<title>smp_call_function_single (1 samples, 0.14%)</title><rect x="1009.8" y="885" width="1.6" height="15.0" fill="rgb(254,31,40)" rx="2" ry="2" />
<text  x="1012.81" y="895.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.14%)</title><rect x="1024.2" y="1013" width="1.6" height="15.0" fill="rgb(254,64,26)" rx="2" ry="2" />
<text  x="1027.16" y="1023.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).put (1 samples, 0.14%)</title><rect x="290.6" y="965" width="1.6" height="15.0" fill="rgb(251,80,47)" rx="2" ry="2" />
<text  x="293.65" y="975.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.14%)</title><rect x="1005.0" y="1061" width="1.6" height="15.0" fill="rgb(226,60,53)" rx="2" ry="2" />
<text  x="1008.03" y="1071.5" ></text>
</g>
<g >
<title>local.runtime.makeslice (1 samples, 0.14%)</title><rect x="86.5" y="661" width="1.6" height="15.0" fill="rgb(210,105,50)" rx="2" ry="2" />
<text  x="89.54" y="671.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#3}::__invoke(http_parser*) (1 samples, 0.14%)</title><rect x="1178.8" y="789" width="1.6" height="15.0" fill="rgb(241,175,16)" rx="2" ry="2" />
<text  x="1181.84" y="799.5" ></text>
</g>
<g >
<title>Envoy::Server::WorkerImpl::threadRoutine(Envoy::Server::GuardDog&amp;, std::__1::function&lt;void ()&gt; const&amp;) (12 samples, 1.62%)</title><rect x="1170.9" y="1029" width="19.1" height="15.0" fill="rgb(227,191,2)" rx="2" ry="2" />
<text  x="1173.86" y="1039.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.14%)</title><rect x="1185.2" y="309" width="1.6" height="15.0" fill="rgb(250,161,30)" rx="2" ry="2" />
<text  x="1188.22" y="319.5" ></text>
</g>
<g >
<title>runtime.retake (1 samples, 0.14%)</title><rect x="43.5" y="981" width="1.6" height="15.0" fill="rgb(237,135,12)" rx="2" ry="2" />
<text  x="46.49" y="991.5" ></text>
</g>
<g >
<title>queue_delayed_work_on (1 samples, 0.14%)</title><rect x="1036.9" y="965" width="1.6" height="15.0" fill="rgb(231,92,14)" rx="2" ry="2" />
<text  x="1039.92" y="975.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.14%)</title><rect x="1017.8" y="997" width="1.6" height="15.0" fill="rgb(231,77,50)" rx="2" ry="2" />
<text  x="1020.78" y="1007.5" ></text>
</g>
<g >
<title>user_path_at_empty (1 samples, 0.14%)</title><rect x="989.1" y="837" width="1.6" height="15.0" fill="rgb(206,206,37)" rx="2" ry="2" />
<text  x="992.08" y="847.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.14%)</title><rect x="1102.3" y="805" width="1.6" height="15.0" fill="rgb(252,108,19)" rx="2" ry="2" />
<text  x="1105.30" y="815.5" ></text>
</g>
<g >
<title>os.openFileNolog (1 samples, 0.14%)</title><rect x="120.0" y="693" width="1.6" height="15.0" fill="rgb(233,66,38)" rx="2" ry="2" />
<text  x="123.03" y="703.5" ></text>
</g>
<g >
<title>tcp_push (1 samples, 0.14%)</title><rect x="1161.3" y="661" width="1.6" height="15.0" fill="rgb(246,36,0)" rx="2" ry="2" />
<text  x="1164.30" y="671.5" ></text>
</g>
<g >
<title>rcu_sched (4 samples, 0.54%)</title><rect x="1124.6" y="1077" width="6.4" height="15.0" fill="rgb(229,180,26)" rx="2" ry="2" />
<text  x="1127.62" y="1087.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="202.9" y="773" width="1.6" height="15.0" fill="rgb(206,131,52)" rx="2" ry="2" />
<text  x="205.95" y="783.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::onData(Envoy::Buffer::Instance&amp;, bool) (2 samples, 0.27%)</title><rect x="1180.4" y="901" width="3.2" height="15.0" fill="rgb(246,82,17)" rx="2" ry="2" />
<text  x="1183.43" y="911.5" ></text>
</g>
<g >
<title>vfs_statx (1 samples, 0.14%)</title><rect x="981.1" y="805" width="1.6" height="15.0" fill="rgb(236,120,4)" rx="2" ry="2" />
<text  x="984.11" y="815.5" ></text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.14%)</title><rect x="32.3" y="949" width="1.6" height="15.0" fill="rgb(222,181,40)" rx="2" ry="2" />
<text  x="35.32" y="959.5" ></text>
</g>
<g >
<title>br_nf_pre_routing (1 samples, 0.14%)</title><rect x="944.4" y="341" width="1.6" height="15.0" fill="rgb(205,53,31)" rx="2" ry="2" />
<text  x="947.43" y="351.5" ></text>
</g>
<g >
<title>__fget_files (1 samples, 0.14%)</title><rect x="338.5" y="901" width="1.6" height="15.0" fill="rgb(233,137,34)" rx="2" ry="2" />
<text  x="341.49" y="911.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.14%)</title><rect x="131.2" y="613" width="1.6" height="15.0" fill="rgb(245,149,29)" rx="2" ry="2" />
<text  x="134.19" y="623.5" ></text>
</g>
<g >
<title>github.com/docker/docker/vendor/github.com/hashicorp/go-memdb.(*radixIterator).Next (2 samples, 0.27%)</title><rect x="105.7" y="821" width="3.2" height="15.0" fill="rgb(218,102,35)" rx="2" ry="2" />
<text  x="108.68" y="831.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.14%)</title><rect x="990.7" y="869" width="1.6" height="15.0" fill="rgb(215,139,7)" rx="2" ry="2" />
<text  x="993.68" y="879.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 0.14%)</title><rect x="938.1" y="709" width="1.5" height="15.0" fill="rgb(254,25,40)" rx="2" ry="2" />
<text  x="941.05" y="719.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.14%)</title><rect x="1028.9" y="1061" width="1.6" height="15.0" fill="rgb(224,81,6)" rx="2" ry="2" />
<text  x="1031.95" y="1071.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.14%)</title><rect x="202.9" y="853" width="1.6" height="15.0" fill="rgb(227,8,4)" rx="2" ry="2" />
<text  x="205.95" y="863.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1115.1" y="741" width="1.5" height="15.0" fill="rgb(213,24,18)" rx="2" ry="2" />
<text  x="1118.05" y="751.5" ></text>
</g>
<g >
<title>Envoy::DateFormatter::now(Envoy::TimeSource&amp;) (1 samples, 0.14%)</title><rect x="365.6" y="933" width="1.6" height="15.0" fill="rgb(205,107,28)" rx="2" ry="2" />
<text  x="368.59" y="943.5" ></text>
</g>
<g >
<title>do_dentry_open (1 samples, 0.14%)</title><rect x="416.6" y="917" width="1.6" height="15.0" fill="rgb(250,86,10)" rx="2" ry="2" />
<text  x="419.62" y="927.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (3 samples, 0.41%)</title><rect x="305.0" y="949" width="4.8" height="15.0" fill="rgb(213,11,21)" rx="2" ry="2" />
<text  x="308.00" y="959.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.14%)</title><rect x="1000.2" y="1045" width="1.6" height="15.0" fill="rgb(247,23,2)" rx="2" ry="2" />
<text  x="1003.24" y="1055.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.27%)</title><rect x="939.6" y="741" width="3.2" height="15.0" fill="rgb(235,179,49)" rx="2" ry="2" />
<text  x="942.65" y="751.5" ></text>
</g>
<g >
<title>dbs_update (1 samples, 0.14%)</title><rect x="1019.4" y="965" width="1.6" height="15.0" fill="rgb(220,188,14)" rx="2" ry="2" />
<text  x="1022.38" y="975.5" ></text>
</g>
<g >
<title>__get_user_nocheck_4 (1 samples, 0.14%)</title><rect x="1116.6" y="757" width="1.6" height="15.0" fill="rgb(242,71,50)" rx="2" ry="2" />
<text  x="1119.65" y="767.5" ></text>
</g>
<g >
<title>kthread_data (1 samples, 0.14%)</title><rect x="1006.6" y="965" width="1.6" height="15.0" fill="rgb(242,101,45)" rx="2" ry="2" />
<text  x="1009.62" y="975.5" ></text>
</g>
<g >
<title>runtime.(*mheap).nextSpanForSweep (1 samples, 0.14%)</title><rect x="207.7" y="1013" width="1.6" height="15.0" fill="rgb(219,2,10)" rx="2" ry="2" />
<text  x="210.73" y="1023.5" ></text>
</g>
<g >
<title>os/exec.(*Cmd).Run (1 samples, 0.14%)</title><rect x="198.2" y="837" width="1.6" height="15.0" fill="rgb(219,39,1)" rx="2" ry="2" />
<text  x="201.16" y="847.5" ></text>
</g>
<g >
<title>do_writev (2 samples, 0.27%)</title><rect x="1185.2" y="805" width="3.2" height="15.0" fill="rgb(226,50,42)" rx="2" ry="2" />
<text  x="1188.22" y="815.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 1.22%)</title><rect x="1131.0" y="1045" width="14.4" height="15.0" fill="rgb(214,65,26)" rx="2" ry="2" />
<text  x="1134.00" y="1055.5" ></text>
</g>
<g >
<title>local.encoding/json.(*Encoder).Encode (16 samples, 2.16%)</title><rect x="75.4" y="869" width="25.5" height="15.0" fill="rgb(215,108,38)" rx="2" ry="2" />
<text  x="78.38" y="879.5" >l..</text>
</g>
<g >
<title>ext4_file_read_iter (2 samples, 0.27%)</title><rect x="116.8" y="565" width="3.2" height="15.0" fill="rgb(219,76,28)" rx="2" ry="2" />
<text  x="119.84" y="575.5" ></text>
</g>
<g >
<title>mm_init (1 samples, 0.14%)</title><rect x="387.9" y="757" width="1.6" height="15.0" fill="rgb(217,206,31)" rx="2" ry="2" />
<text  x="390.92" y="767.5" ></text>
</g>
<g >
<title>ext4_getblk (1 samples, 0.14%)</title><rect x="950.8" y="693" width="1.6" height="15.0" fill="rgb(212,194,39)" rx="2" ry="2" />
<text  x="953.81" y="703.5" ></text>
</g>
<g >
<title>Envoy::MainCommon::main(int, char**, std::__1::function&lt;void (Envoy::Server::Instance&amp;)&gt;) (14 samples, 1.89%)</title><rect x="351.2" y="1029" width="22.4" height="15.0" fill="rgb(245,27,39)" rx="2" ry="2" />
<text  x="354.24" y="1039.5" >E..</text>
</g>
<g >
<title>__legitimize_mnt (1 samples, 0.14%)</title><rect x="989.1" y="709" width="1.6" height="15.0" fill="rgb(219,196,37)" rx="2" ry="2" />
<text  x="992.08" y="719.5" ></text>
</g>
<g >
<title>reflect.copyVal (1 samples, 0.14%)</title><rect x="92.9" y="645" width="1.6" height="15.0" fill="rgb(246,100,18)" rx="2" ry="2" />
<text  x="95.92" y="655.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (6 samples, 0.81%)</title><rect x="161.5" y="629" width="9.6" height="15.0" fill="rgb(220,212,16)" rx="2" ry="2" />
<text  x="164.49" y="639.5" ></text>
</g>
<g >
<title>setsockopt (1 samples, 0.14%)</title><rect x="1183.6" y="789" width="1.6" height="15.0" fill="rgb(218,45,48)" rx="2" ry="2" />
<text  x="1186.62" y="799.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="1139.0" y="901" width="3.2" height="15.0" fill="rgb(235,166,44)" rx="2" ry="2" />
<text  x="1141.97" y="911.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/go.etcd.io/bbolt.(*Cursor).searchPage (1 samples, 0.14%)</title><rect x="27.5" y="709" width="1.6" height="15.0" fill="rgb(248,32,14)" rx="2" ry="2" />
<text  x="30.54" y="719.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.14%)</title><rect x="985.9" y="757" width="1.6" height="15.0" fill="rgb(206,60,46)" rx="2" ry="2" />
<text  x="988.89" y="767.5" ></text>
</g>
<g >
<title>br_handle_frame (1 samples, 0.14%)</title><rect x="402.3" y="901" width="1.6" height="15.0" fill="rgb(247,154,53)" rx="2" ry="2" />
<text  x="405.27" y="911.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (1 samples, 0.14%)</title><rect x="1156.5" y="869" width="1.6" height="15.0" fill="rgb(254,208,21)" rx="2" ry="2" />
<text  x="1159.51" y="879.5" ></text>
</g>
<g >
<title>github.com/docker/docker/image.(*store).Get (45 samples, 6.08%)</title><rect x="115.2" y="773" width="71.8" height="15.0" fill="rgb(237,148,20)" rx="2" ry="2" />
<text  x="118.24" y="783.5" >github.c..</text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="1025.8" y="965" width="1.6" height="15.0" fill="rgb(248,86,50)" rx="2" ry="2" />
<text  x="1028.76" y="975.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.14%)</title><rect x="1024.2" y="997" width="1.6" height="15.0" fill="rgb(254,103,35)" rx="2" ry="2" />
<text  x="1027.16" y="1007.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.14%)</title><rect x="1102.3" y="581" width="1.6" height="15.0" fill="rgb(247,14,30)" rx="2" ry="2" />
<text  x="1105.30" y="591.5" ></text>
</g>
<g >
<title>os.openFileNolog (1 samples, 0.14%)</title><rect x="136.0" y="693" width="1.6" height="15.0" fill="rgb(220,54,2)" rx="2" ry="2" />
<text  x="138.97" y="703.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.14%)</title><rect x="22.8" y="821" width="1.6" height="15.0" fill="rgb(248,73,1)" rx="2" ry="2" />
<text  x="25.76" y="831.5" ></text>
</g>
<g >
<title>path_put (1 samples, 0.14%)</title><rect x="952.4" y="741" width="1.6" height="15.0" fill="rgb(229,77,2)" rx="2" ry="2" />
<text  x="955.41" y="751.5" ></text>
</g>
<g >
<title>do_dentry_open (1 samples, 0.14%)</title><rect x="955.6" y="725" width="1.6" height="15.0" fill="rgb(226,68,48)" rx="2" ry="2" />
<text  x="958.59" y="735.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1 samples, 0.14%)</title><rect x="1185.2" y="645" width="1.6" height="15.0" fill="rgb(240,127,38)" rx="2" ry="2" />
<text  x="1188.22" y="655.5" ></text>
</g>
<g >
<title>Envoy::Stats::ParentHistogramImpl::merge() (3 samples, 0.41%)</title><rect x="359.2" y="901" width="4.8" height="15.0" fill="rgb(227,199,40)" rx="2" ry="2" />
<text  x="362.22" y="911.5" ></text>
</g>
<g >
<title>reflect.unsafe_NewArray (1 samples, 0.14%)</title><rect x="155.1" y="629" width="1.6" height="15.0" fill="rgb(250,214,22)" rx="2" ry="2" />
<text  x="158.11" y="639.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.68%)</title><rect x="1111.9" y="901" width="7.9" height="15.0" fill="rgb(209,228,45)" rx="2" ry="2" />
<text  x="1114.86" y="911.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.14%)</title><rect x="1025.8" y="1045" width="1.6" height="15.0" fill="rgb(238,201,29)" rx="2" ry="2" />
<text  x="1028.76" y="1055.5" ></text>
</g>
<g >
<title>lookup_fast (1 samples, 0.14%)</title><rect x="989.1" y="757" width="1.6" height="15.0" fill="rgb(235,84,4)" rx="2" ry="2" />
<text  x="992.08" y="767.5" ></text>
</g>
<g >
<title>drm_gem_shmem_vmap (1 samples, 0.14%)</title><rect x="1032.1" y="949" width="1.6" height="15.0" fill="rgb(233,102,16)" rx="2" ry="2" />
<text  x="1035.14" y="959.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.14%)</title><rect x="987.5" y="853" width="1.6" height="15.0" fill="rgb(217,187,0)" rx="2" ry="2" />
<text  x="990.49" y="863.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="1167.7" y="1029" width="1.6" height="15.0" fill="rgb(234,65,12)" rx="2" ry="2" />
<text  x="1170.68" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1115.1" y="789" width="1.5" height="15.0" fill="rgb(245,191,21)" rx="2" ry="2" />
<text  x="1118.05" y="799.5" ></text>
</g>
<g >
<title>do_epoll_wait (2 samples, 0.27%)</title><rect x="993.9" y="917" width="3.2" height="15.0" fill="rgb(224,164,53)" rx="2" ry="2" />
<text  x="996.86" y="927.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.14%)</title><rect x="1102.3" y="485" width="1.6" height="15.0" fill="rgb(217,39,34)" rx="2" ry="2" />
<text  x="1105.30" y="495.5" ></text>
</g>
<g >
<title>reflect.Value.Type (1 samples, 0.14%)</title><rect x="156.7" y="629" width="1.6" height="15.0" fill="rgb(249,16,39)" rx="2" ry="2" />
<text  x="159.70" y="639.5" ></text>
</g>
<g >
<title>get_signal (1 samples, 0.14%)</title><rect x="1146.9" y="981" width="1.6" height="15.0" fill="rgb(229,218,2)" rx="2" ry="2" />
<text  x="1149.95" y="991.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="115.2" y="597" width="1.6" height="15.0" fill="rgb(207,205,25)" rx="2" ry="2" />
<text  x="118.24" y="607.5" ></text>
</g>
<g >
<title>github.com/docker/docker/image.(*fs).get (4 samples, 0.54%)</title><rect x="115.2" y="741" width="6.4" height="15.0" fill="rgb(235,184,49)" rx="2" ry="2" />
<text  x="118.24" y="751.5" ></text>
</g>
<g >
<title>Envoy::Server::InstanceImpl::flushStatsInternal() (1 samples, 0.14%)</title><rect x="357.6" y="901" width="1.6" height="15.0" fill="rgb(253,200,50)" rx="2" ry="2" />
<text  x="360.62" y="911.5" ></text>
</g>
<g >
<title>kworker/51:0 (1 samples, 0.14%)</title><rect x="1022.6" y="1077" width="1.6" height="15.0" fill="rgb(210,213,28)" rx="2" ry="2" />
<text  x="1025.57" y="1087.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (1 samples, 0.14%)</title><rect x="1154.9" y="853" width="1.6" height="15.0" fill="rgb(218,19,20)" rx="2" ry="2" />
<text  x="1157.92" y="863.5" ></text>
</g>
<g >
<title>local.runtime.(*pageAlloc).scavengeOne (1 samples, 0.14%)</title><rect x="218.9" y="997" width="1.6" height="15.0" fill="rgb(239,105,28)" rx="2" ry="2" />
<text  x="221.89" y="1007.5" ></text>
</g>
<g >
<title>legitimize_mnt (1 samples, 0.14%)</title><rect x="941.2" y="549" width="1.6" height="15.0" fill="rgb(213,134,7)" rx="2" ry="2" />
<text  x="944.24" y="559.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.14%)</title><rect x="1175.6" y="885" width="1.6" height="15.0" fill="rgb(208,191,32)" rx="2" ry="2" />
<text  x="1178.65" y="895.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (2 samples, 0.27%)</title><rect x="354.4" y="869" width="3.2" height="15.0" fill="rgb(233,154,23)" rx="2" ry="2" />
<text  x="357.43" y="879.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="1100.7" y="885" width="3.2" height="15.0" fill="rgb(221,196,20)" rx="2" ry="2" />
<text  x="1103.70" y="895.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (2 samples, 0.27%)</title><rect x="952.4" y="789" width="3.2" height="15.0" fill="rgb(207,200,38)" rx="2" ry="2" />
<text  x="955.41" y="799.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.14%)</title><rect x="402.3" y="773" width="1.6" height="15.0" fill="rgb(243,167,12)" rx="2" ry="2" />
<text  x="405.27" y="783.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.14%)</title><rect x="402.3" y="725" width="1.6" height="15.0" fill="rgb(226,102,2)" rx="2" ry="2" />
<text  x="405.27" y="735.5" ></text>
</g>
<g >
<title>github.com/docker/docker/vendor/github.com/pkg/errors.Wrap (5 samples, 0.68%)</title><rect x="128.0" y="725" width="8.0" height="15.0" fill="rgb(247,71,28)" rx="2" ry="2" />
<text  x="131.00" y="735.5" ></text>
</g>
<g >
<title>Envoy::Server::ActiveTcpListener::newActiveConnection(Envoy::Network::FilterChain const&amp;, std::__1::unique_ptr&lt;Envoy::Network::ServerConnection, std::__1::default_delete&lt;Envoy::Network::ServerConnection&gt; &gt;, std::__1::unique_ptr&lt;Envoy::StreamInfo::StreamInfo, std::__1::default_delete&lt;Envoy::StreamInfo::StreamInfo&gt; &gt;) (1 samples, 0.14%)</title><rect x="1183.6" y="853" width="1.6" height="15.0" fill="rgb(230,205,15)" rx="2" ry="2" />
<text  x="1186.62" y="863.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (1 samples, 0.14%)</title><rect x="386.3" y="917" width="1.6" height="15.0" fill="rgb(235,100,23)" rx="2" ry="2" />
<text  x="389.32" y="927.5" ></text>
</g>
<g >
<title>[Missed User Stack] (1 samples, 0.14%)</title><rect x="1040.1" y="1061" width="1.6" height="15.0" fill="rgb(251,97,15)" rx="2" ry="2" />
<text  x="1043.11" y="1071.5" ></text>
</g>
<g >
<title>seq_printf (1 samples, 0.14%)</title><rect x="960.4" y="693" width="1.6" height="15.0" fill="rgb(215,70,42)" rx="2" ry="2" />
<text  x="963.38" y="703.5" ></text>
</g>
<g >
<title>local.reflect.MakeSlice (1 samples, 0.14%)</title><rect x="155.1" y="645" width="1.6" height="15.0" fill="rgb(227,192,39)" rx="2" ry="2" />
<text  x="158.11" y="655.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).destroy (1 samples, 0.14%)</title><rect x="115.2" y="645" width="1.6" height="15.0" fill="rgb(254,68,18)" rx="2" ry="2" />
<text  x="118.24" y="655.5" ></text>
</g>
<g >
<title>github.com/docker/docker/container.(*memdbView).GetAllNames (2 samples, 0.27%)</title><rect x="105.7" y="837" width="3.2" height="15.0" fill="rgb(238,193,36)" rx="2" ry="2" />
<text  x="108.68" y="847.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.14%)</title><rect x="1017.8" y="1061" width="1.6" height="15.0" fill="rgb(225,152,15)" rx="2" ry="2" />
<text  x="1020.78" y="1071.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::closeSocket(Envoy::Network::ConnectionEvent) (1 samples, 0.14%)</title><rect x="1177.2" y="933" width="1.6" height="15.0" fill="rgb(206,135,29)" rx="2" ry="2" />
<text  x="1180.24" y="943.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.54%)</title><rect x="985.9" y="885" width="6.4" height="15.0" fill="rgb(207,92,54)" rx="2" ry="2" />
<text  x="988.89" y="895.5" ></text>
</g>
<g >
<title>__d_lookup (1 samples, 0.14%)</title><rect x="965.2" y="677" width="1.6" height="15.0" fill="rgb(240,46,17)" rx="2" ry="2" />
<text  x="968.16" y="687.5" ></text>
</g>
<g >
<title>github.com/docker/docker/vendor/github.com/gorilla/mux.(*Router).ServeHTTP (79 samples, 10.68%)</title><rect x="75.4" y="1013" width="126.0" height="15.0" fill="rgb(205,36,6)" rx="2" ry="2" />
<text  x="78.38" y="1023.5" >github.com/dock..</text>
</g>
<g >
<title>runtime.park_m (3 samples, 0.41%)</title><rect x="29.1" y="997" width="4.8" height="15.0" fill="rgb(234,185,41)" rx="2" ry="2" />
<text  x="32.14" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (364 samples, 49.19%)</title><rect x="418.2" y="1061" width="580.4" height="15.0" fill="rgb(240,170,17)" rx="2" ry="2" />
<text  x="421.22" y="1071.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (9 samples, 1.22%)</title><rect x="10.0" y="1061" width="14.4" height="15.0" fill="rgb(224,186,3)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" ></text>
</g>
<g >
<title>encoding/json.ptrEncoder.encode-fm (1 samples, 0.14%)</title><rect x="96.1" y="693" width="1.6" height="15.0" fill="rgb(237,142,30)" rx="2" ry="2" />
<text  x="99.11" y="703.5" ></text>
</g>
<g >
<title>do_epoll_ctl (1 samples, 0.14%)</title><rect x="934.9" y="597" width="1.6" height="15.0" fill="rgb(232,17,54)" rx="2" ry="2" />
<text  x="937.86" y="607.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (2 samples, 0.27%)</title><rect x="180.6" y="709" width="3.2" height="15.0" fill="rgb(231,27,15)" rx="2" ry="2" />
<text  x="183.62" y="719.5" ></text>
</g>
<g >
<title>Envoy::Stats::HistogramStatisticsImpl::refresh(histogram const*) (3 samples, 0.41%)</title><rect x="359.2" y="885" width="4.8" height="15.0" fill="rgb(251,122,16)" rx="2" ry="2" />
<text  x="362.22" y="895.5" ></text>
</g>
<g >
<title>run_ksoftirqd (1 samples, 0.14%)</title><rect x="405.5" y="1013" width="1.6" height="15.0" fill="rgb(233,43,18)" rx="2" ry="2" />
<text  x="408.46" y="1023.5" ></text>
</g>
<g >
<title>bprm_execve (1 samples, 0.14%)</title><rect x="394.3" y="981" width="1.6" height="15.0" fill="rgb(220,57,17)" rx="2" ry="2" />
<text  x="397.30" y="991.5" ></text>
</g>
<g >
<title>local.regexp.(*Regexp).doOnePass (1 samples, 0.14%)</title><rect x="196.6" y="741" width="1.6" height="15.0" fill="rgb(222,76,5)" rx="2" ry="2" />
<text  x="199.57" y="751.5" ></text>
</g>
<g >
<title>local.encoding/json.(*decodeState).value (21 samples, 2.84%)</title><rect x="140.8" y="677" width="33.4" height="15.0" fill="rgb(212,166,29)" rx="2" ry="2" />
<text  x="143.76" y="687.5" >lo..</text>
</g>
<g >
<title>github.com/docker/docker/vendor/github.com/docker/distribution/reference.Parse (5 samples, 0.68%)</title><rect x="187.0" y="757" width="8.0" height="15.0" fill="rgb(243,193,20)" rx="2" ry="2" />
<text  x="190.00" y="767.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 1.08%)</title><rect x="43.5" y="1045" width="12.7" height="15.0" fill="rgb(237,46,45)" rx="2" ry="2" />
<text  x="46.49" y="1055.5" ></text>
</g>
<g >
<title>local.runtime.funcspdelta (2 samples, 0.27%)</title><rect x="110.5" y="757" width="3.1" height="15.0" fill="rgb(243,96,49)" rx="2" ry="2" />
<text  x="113.46" y="767.5" ></text>
</g>
<g >
<title>nd_jump_root (1 samples, 0.14%)</title><rect x="981.1" y="725" width="1.6" height="15.0" fill="rgb(248,8,38)" rx="2" ry="2" />
<text  x="984.11" y="735.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/daemon.(*Daemon).reducePsContainer (56 samples, 7.57%)</title><rect x="108.9" y="853" width="89.3" height="15.0" fill="rgb(205,161,11)" rx="2" ry="2" />
<text  x="111.86" y="863.5" >local.gith..</text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.14%)</title><rect x="1102.3" y="821" width="1.6" height="15.0" fill="rgb(208,210,1)" rx="2" ry="2" />
<text  x="1105.30" y="831.5" ></text>
</g>
<g >
<title>sock_write_iter (1 samples, 0.14%)</title><rect x="1102.3" y="757" width="1.6" height="15.0" fill="rgb(249,72,28)" rx="2" ry="2" />
<text  x="1105.30" y="767.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.14%)</title><rect x="405.5" y="837" width="1.6" height="15.0" fill="rgb(234,50,48)" rx="2" ry="2" />
<text  x="408.46" y="847.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 1.08%)</title><rect x="1107.1" y="1029" width="12.7" height="15.0" fill="rgb(237,103,2)" rx="2" ry="2" />
<text  x="1110.08" y="1039.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.14%)</title><rect x="386.3" y="1029" width="1.6" height="15.0" fill="rgb(237,32,23)" rx="2" ry="2" />
<text  x="389.32" y="1039.5" ></text>
</g>
<g >
<title>lookup_fast (1 samples, 0.14%)</title><rect x="965.2" y="693" width="1.6" height="15.0" fill="rgb(223,27,30)" rx="2" ry="2" />
<text  x="968.16" y="703.5" ></text>
</g>
<g >
<title>time.parse (3 samples, 0.41%)</title><rect x="147.1" y="565" width="4.8" height="15.0" fill="rgb(205,171,46)" rx="2" ry="2" />
<text  x="150.14" y="575.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.14%)</title><rect x="1103.9" y="837" width="1.6" height="15.0" fill="rgb(217,123,53)" rx="2" ry="2" />
<text  x="1106.89" y="847.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.14%)</title><rect x="1001.8" y="1013" width="1.6" height="15.0" fill="rgb(224,229,23)" rx="2" ry="2" />
<text  x="1004.84" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Network::RawBufferSocket::doWrite(Envoy::Buffer::Instance&amp;, bool) (2 samples, 0.27%)</title><rect x="1185.2" y="917" width="3.2" height="15.0" fill="rgb(241,61,4)" rx="2" ry="2" />
<text  x="1188.22" y="927.5" ></text>
</g>
<g >
<title>default_send_IPI_mask_sequence_phys (1 samples, 0.14%)</title><rect x="1105.5" y="757" width="1.6" height="15.0" fill="rgb(209,183,51)" rx="2" ry="2" />
<text  x="1108.49" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="387.9" y="901" width="1.6" height="15.0" fill="rgb(238,7,16)" rx="2" ry="2" />
<text  x="390.92" y="911.5" ></text>
</g>
<g >
<title>os.OpenFile (1 samples, 0.14%)</title><rect x="124.8" y="693" width="1.6" height="15.0" fill="rgb(209,45,3)" rx="2" ry="2" />
<text  x="127.81" y="703.5" ></text>
</g>
<g >
<title>filename_lookup (4 samples, 0.54%)</title><rect x="963.6" y="757" width="6.3" height="15.0" fill="rgb(250,222,24)" rx="2" ry="2" />
<text  x="966.57" y="767.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.14%)</title><rect x="51.5" y="853" width="1.6" height="15.0" fill="rgb(247,166,43)" rx="2" ry="2" />
<text  x="54.46" y="863.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1 samples, 0.14%)</title><rect x="990.7" y="389" width="1.6" height="15.0" fill="rgb(237,124,44)" rx="2" ry="2" />
<text  x="993.68" y="399.5" ></text>
</g>
<g >
<title>github.com/docker/docker/api/server.(*Server).makeHTTPHandler.func1 (79 samples, 10.68%)</title><rect x="75.4" y="981" width="126.0" height="15.0" fill="rgb(237,178,23)" rx="2" ry="2" />
<text  x="78.38" y="991.5" >github.com/dock..</text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.27%)</title><rect x="333.7" y="997" width="3.2" height="15.0" fill="rgb(233,209,52)" rx="2" ry="2" />
<text  x="336.70" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (1 samples, 0.14%)</title><rect x="1105.5" y="917" width="1.6" height="15.0" fill="rgb(238,84,4)" rx="2" ry="2" />
<text  x="1108.49" y="927.5" ></text>
</g>
<g >
<title>crypto/sha256.block (12 samples, 1.62%)</title><rect x="56.2" y="1045" width="19.2" height="15.0" fill="rgb(218,198,14)" rx="2" ry="2" />
<text  x="59.24" y="1055.5" ></text>
</g>
<g >
<title>flanneld (1 samples, 0.14%)</title><rect x="387.9" y="1077" width="1.6" height="15.0" fill="rgb(242,153,40)" rx="2" ry="2" />
<text  x="390.92" y="1087.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.14%)</title><rect x="1123.0" y="981" width="1.6" height="15.0" fill="rgb(234,100,9)" rx="2" ry="2" />
<text  x="1126.03" y="991.5" ></text>
</g>
<g >
<title>get_signal (1 samples, 0.14%)</title><rect x="386.3" y="981" width="1.6" height="15.0" fill="rgb(209,152,45)" rx="2" ry="2" />
<text  x="389.32" y="991.5" ></text>
</g>
<g >
<title>__cpufreq_driver_target (1 samples, 0.14%)</title><rect x="1009.8" y="965" width="1.6" height="15.0" fill="rgb(250,166,43)" rx="2" ry="2" />
<text  x="1012.81" y="975.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Server::GuardDogImpl::start(Envoy::Api::Api&amp;)::$_4, std::__1::allocator&lt;Envoy::Server::GuardDogImpl::start(Envoy::Api::Api&amp;)::$_4&gt;, void ()&gt;::operator()() (1 samples, 0.14%)</title><rect x="336.9" y="1061" width="1.6" height="15.0" fill="rgb(219,128,20)" rx="2" ry="2" />
<text  x="339.89" y="1071.5" ></text>
</g>
<g >
<title>do_epoll_wait (2 samples, 0.27%)</title><rect x="338.5" y="965" width="3.2" height="15.0" fill="rgb(213,138,5)" rx="2" ry="2" />
<text  x="341.49" y="975.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.14%)</title><rect x="1013.0" y="1029" width="1.6" height="15.0" fill="rgb(213,45,37)" rx="2" ry="2" />
<text  x="1016.00" y="1039.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).doExecute (1 samples, 0.14%)</title><rect x="187.0" y="709" width="1.6" height="15.0" fill="rgb(220,87,28)" rx="2" ry="2" />
<text  x="190.00" y="719.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.14%)</title><rect x="946.0" y="325" width="1.6" height="15.0" fill="rgb(238,207,32)" rx="2" ry="2" />
<text  x="949.03" y="335.5" ></text>
</g>
<g >
<title>consume_skb (1 samples, 0.14%)</title><rect x="364.0" y="645" width="1.6" height="15.0" fill="rgb(226,14,21)" rx="2" ry="2" />
<text  x="367.00" y="655.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (1 samples, 0.14%)</title><rect x="100.9" y="709" width="1.6" height="15.0" fill="rgb(244,183,44)" rx="2" ry="2" />
<text  x="103.89" y="719.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.14%)</title><rect x="1140.6" y="693" width="1.6" height="15.0" fill="rgb(240,2,8)" rx="2" ry="2" />
<text  x="1143.57" y="703.5" ></text>
</g>
<g >
<title>xt_match_to_user (1 samples, 0.14%)</title><rect x="395.9" y="885" width="1.6" height="15.0" fill="rgb(207,15,4)" rx="2" ry="2" />
<text  x="398.89" y="895.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.27%)</title><rect x="947.6" y="805" width="3.2" height="15.0" fill="rgb(250,202,35)" rx="2" ry="2" />
<text  x="950.62" y="815.5" ></text>
</g>
<g >
<title>snmp_get_cpu_field (1 samples, 0.14%)</title><rect x="942.8" y="581" width="1.6" height="15.0" fill="rgb(219,135,47)" rx="2" ry="2" />
<text  x="945.84" y="591.5" ></text>
</g>
<g >
<title>do_group_exit (2 samples, 0.27%)</title><rect x="397.5" y="1013" width="3.2" height="15.0" fill="rgb(233,112,25)" rx="2" ry="2" />
<text  x="400.49" y="1023.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.14%)</title><rect x="1003.4" y="997" width="1.6" height="15.0" fill="rgb(250,201,15)" rx="2" ry="2" />
<text  x="1006.43" y="1007.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.14%)</title><rect x="402.3" y="981" width="1.6" height="15.0" fill="rgb(208,110,10)" rx="2" ry="2" />
<text  x="405.27" y="991.5" ></text>
</g>
<g >
<title>runtime.epollctl (1 samples, 0.14%)</title><rect x="124.8" y="613" width="1.6" height="15.0" fill="rgb(232,147,9)" rx="2" ry="2" />
<text  x="127.81" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.14%)</title><rect x="143.9" y="549" width="1.6" height="15.0" fill="rgb(253,75,41)" rx="2" ry="2" />
<text  x="146.95" y="559.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.14%)</title><rect x="24.4" y="949" width="1.5" height="15.0" fill="rgb(240,209,37)" rx="2" ry="2" />
<text  x="27.35" y="959.5" ></text>
</g>
<g >
<title>do_readlinkat (1 samples, 0.14%)</title><rect x="989.1" y="853" width="1.6" height="15.0" fill="rgb(249,115,43)" rx="2" ry="2" />
<text  x="992.08" y="863.5" ></text>
</g>
<g >
<title>default_send_IPI_mask_sequence_phys (1 samples, 0.14%)</title><rect x="218.9" y="741" width="1.6" height="15.0" fill="rgb(233,106,41)" rx="2" ry="2" />
<text  x="221.89" y="751.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1 samples, 0.14%)</title><rect x="990.7" y="709" width="1.6" height="15.0" fill="rgb(237,184,13)" rx="2" ry="2" />
<text  x="993.68" y="719.5" ></text>
</g>
<g >
<title>runtime.(*consistentHeapStats).acquire (1 samples, 0.14%)</title><rect x="77.0" y="517" width="1.6" height="15.0" fill="rgb(246,38,13)" rx="2" ry="2" />
<text  x="79.97" y="527.5" ></text>
</g>
<g >
<title>sched_move_task (2 samples, 0.27%)</title><rect x="383.1" y="965" width="3.2" height="15.0" fill="rgb(247,205,46)" rx="2" ry="2" />
<text  x="386.14" y="975.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.14%)</title><rect x="946.0" y="389" width="1.6" height="15.0" fill="rgb(215,221,40)" rx="2" ry="2" />
<text  x="949.03" y="399.5" ></text>
</g>
<g >
<title>ep_poll (2 samples, 0.27%)</title><rect x="993.9" y="885" width="3.2" height="15.0" fill="rgb(254,92,34)" rx="2" ry="2" />
<text  x="996.86" y="895.5" ></text>
</g>
<g >
<title>seq_vprintf (1 samples, 0.14%)</title><rect x="960.4" y="677" width="1.6" height="15.0" fill="rgb(249,169,34)" rx="2" ry="2" />
<text  x="963.38" y="687.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.14%)</title><rect x="1185.2" y="149" width="1.6" height="15.0" fill="rgb(225,214,36)" rx="2" ry="2" />
<text  x="1188.22" y="159.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.14%)</title><rect x="1145.4" y="981" width="1.5" height="15.0" fill="rgb(252,28,26)" rx="2" ry="2" />
<text  x="1148.35" y="991.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.14%)</title><rect x="338.5" y="933" width="1.6" height="15.0" fill="rgb(234,167,48)" rx="2" ry="2" />
<text  x="341.49" y="943.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.14%)</title><rect x="946.0" y="517" width="1.6" height="15.0" fill="rgb(207,72,14)" rx="2" ry="2" />
<text  x="949.03" y="527.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.14%)</title><rect x="1185.2" y="597" width="1.6" height="15.0" fill="rgb(246,146,40)" rx="2" ry="2" />
<text  x="1188.22" y="607.5" ></text>
</g>
<g >
<title>raw_getsockopt (1 samples, 0.14%)</title><rect x="395.9" y="965" width="1.6" height="15.0" fill="rgb(244,198,11)" rx="2" ry="2" />
<text  x="398.89" y="975.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.14%)</title><rect x="944.4" y="469" width="1.6" height="15.0" fill="rgb(232,121,36)" rx="2" ry="2" />
<text  x="947.43" y="479.5" ></text>
</g>
<g >
<title>local.runtime.gentraceback (4 samples, 0.54%)</title><rect x="128.0" y="661" width="6.4" height="15.0" fill="rgb(231,167,34)" rx="2" ry="2" />
<text  x="131.00" y="671.5" ></text>
</g>
<g >
<title>kworker/u129:0 (4 samples, 0.54%)</title><rect x="1033.7" y="1077" width="6.4" height="15.0" fill="rgb(222,132,33)" rx="2" ry="2" />
<text  x="1036.73" y="1087.5" ></text>
</g>
<g >
<title>check_pointer (1 samples, 0.14%)</title><rect x="974.7" y="645" width="1.6" height="15.0" fill="rgb(242,111,52)" rx="2" ry="2" />
<text  x="977.73" y="655.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool) (1 samples, 0.14%)</title><rect x="1178.8" y="709" width="1.6" height="15.0" fill="rgb(226,156,3)" rx="2" ry="2" />
<text  x="1181.84" y="719.5" ></text>
</g>
<g >
<title>local.runtime.handoff (18 samples, 2.43%)</title><rect x="305.0" y="981" width="28.7" height="15.0" fill="rgb(246,138,14)" rx="2" ry="2" />
<text  x="308.00" y="991.5" >lo..</text>
</g>
<g >
<title>process_one_work (1 samples, 0.14%)</title><rect x="1028.9" y="997" width="1.6" height="15.0" fill="rgb(244,116,27)" rx="2" ry="2" />
<text  x="1031.95" y="1007.5" ></text>
</g>
<g >
<title>vfs_read (2 samples, 0.27%)</title><rect x="973.1" y="789" width="3.2" height="15.0" fill="rgb(206,171,5)" rx="2" ry="2" />
<text  x="976.14" y="799.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.14%)</title><rect x="990.7" y="629" width="1.6" height="15.0" fill="rgb(215,224,21)" rx="2" ry="2" />
<text  x="993.68" y="639.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="376.8" y="981" width="3.1" height="15.0" fill="rgb(228,0,11)" rx="2" ry="2" />
<text  x="379.76" y="991.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 5.68%)</title><rect x="877.5" y="789" width="66.9" height="15.0" fill="rgb(236,55,47)" rx="2" ry="2" />
<text  x="880.46" y="799.5" >[unknown]</text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.14%)</title><rect x="341.7" y="1029" width="1.6" height="15.0" fill="rgb(248,64,22)" rx="2" ry="2" />
<text  x="344.68" y="1039.5" ></text>
</g>
<g >
<title>do_readv (1 samples, 0.14%)</title><rect x="364.0" y="773" width="1.6" height="15.0" fill="rgb(217,75,51)" rx="2" ry="2" />
<text  x="367.00" y="783.5" ></text>
</g>
<g >
<title>os.OpenFile (1 samples, 0.14%)</title><rect x="120.0" y="709" width="1.6" height="15.0" fill="rgb(232,26,44)" rx="2" ry="2" />
<text  x="123.03" y="719.5" ></text>
</g>
<g >
<title>__sys_recvfrom (1 samples, 0.14%)</title><rect x="942.8" y="725" width="1.6" height="15.0" fill="rgb(221,211,49)" rx="2" ry="2" />
<text  x="945.84" y="735.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.14%)</title><rect x="955.6" y="789" width="1.6" height="15.0" fill="rgb(254,157,4)" rx="2" ry="2" />
<text  x="958.59" y="799.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 6.89%)</title><rect x="866.3" y="805" width="81.3" height="15.0" fill="rgb(244,130,18)" rx="2" ry="2" />
<text  x="869.30" y="815.5" >[unknown]</text>
</g>
<g >
<title>arch_local_irq_enable (1 samples, 0.14%)</title><rect x="386.3" y="933" width="1.6" height="15.0" fill="rgb(218,224,52)" rx="2" ry="2" />
<text  x="389.32" y="943.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.14%)</title><rect x="405.5" y="853" width="1.6" height="15.0" fill="rgb(220,210,18)" rx="2" ry="2" />
<text  x="408.46" y="863.5" ></text>
</g>
<g >
<title>std::__1::vector&lt;absl::strings_internal::ViableSubstitution, std::__1::allocator&lt;absl::strings_internal::ViableSubstitution&gt; &gt; absl::strings_internal::FindSubstitutions&lt;absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;(absl::string_view, absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;) (1 samples, 0.14%)</title><rect x="1178.8" y="629" width="1.6" height="15.0" fill="rgb(225,30,46)" rx="2" ry="2" />
<text  x="1181.84" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.27%)</title><rect x="397.5" y="1061" width="3.2" height="15.0" fill="rgb(235,59,1)" rx="2" ry="2" />
<text  x="400.49" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.41%)</title><rect x="931.7" y="677" width="4.8" height="15.0" fill="rgb(223,190,10)" rx="2" ry="2" />
<text  x="934.68" y="687.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.14%)</title><rect x="946.0" y="629" width="1.6" height="15.0" fill="rgb(222,94,6)" rx="2" ry="2" />
<text  x="949.03" y="639.5" ></text>
</g>
<g >
<title>sock_write_iter (1 samples, 0.14%)</title><rect x="976.3" y="757" width="1.6" height="15.0" fill="rgb(249,198,49)" rx="2" ry="2" />
<text  x="979.32" y="767.5" ></text>
</g>
<g >
<title>github.com/docker/docker/daemon/images.(*ImageService).GetImage (52 samples, 7.03%)</title><rect x="115.2" y="805" width="83.0" height="15.0" fill="rgb(222,107,35)" rx="2" ry="2" />
<text  x="118.24" y="815.5" >github.co..</text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.14%)</title><rect x="976.3" y="821" width="1.6" height="15.0" fill="rgb(228,101,25)" rx="2" ry="2" />
<text  x="979.32" y="831.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.27%)</title><rect x="397.5" y="933" width="3.2" height="15.0" fill="rgb(252,144,37)" rx="2" ry="2" />
<text  x="400.49" y="943.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.14%)</title><rect x="1185.2" y="117" width="1.6" height="15.0" fill="rgb(209,132,25)" rx="2" ry="2" />
<text  x="1188.22" y="127.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.14%)</title><rect x="391.1" y="1013" width="1.6" height="15.0" fill="rgb(248,200,35)" rx="2" ry="2" />
<text  x="394.11" y="1023.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).decref (1 samples, 0.14%)</title><rect x="115.2" y="661" width="1.6" height="15.0" fill="rgb(236,163,16)" rx="2" ry="2" />
<text  x="118.24" y="671.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="1003.4" y="981" width="1.6" height="15.0" fill="rgb(231,173,19)" rx="2" ry="2" />
<text  x="1006.43" y="991.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::decodeHeaders(Envoy::Http::ActiveStreamDecoderFilter*, Envoy::Http::RequestHeaderMap&amp;, bool) (1 samples, 0.14%)</title><rect x="1182.0" y="741" width="1.6" height="15.0" fill="rgb(228,128,51)" rx="2" ry="2" />
<text  x="1185.03" y="751.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.14%)</title><rect x="1006.6" y="1029" width="1.6" height="15.0" fill="rgb(216,188,7)" rx="2" ry="2" />
<text  x="1009.62" y="1039.5" ></text>
</g>
<g >
<title>memcg_numa_stat_show (1 samples, 0.14%)</title><rect x="957.2" y="677" width="1.6" height="15.0" fill="rgb(241,83,31)" rx="2" ry="2" />
<text  x="960.19" y="687.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.14%)</title><rect x="1185.2" y="181" width="1.6" height="15.0" fill="rgb(209,66,21)" rx="2" ry="2" />
<text  x="1188.22" y="191.5" ></text>
</g>
<g >
<title>part_stat_read_all.isra.0 (1 samples, 0.14%)</title><rect x="958.8" y="693" width="1.6" height="15.0" fill="rgb(211,187,36)" rx="2" ry="2" />
<text  x="961.78" y="703.5" ></text>
</g>
<g >
<title>fmt.Sprintf (1 samples, 0.14%)</title><rect x="100.9" y="789" width="1.6" height="15.0" fill="rgb(205,189,6)" rx="2" ry="2" />
<text  x="103.89" y="799.5" ></text>
</g>
<g >
<title>do_group_exit (4 samples, 0.54%)</title><rect x="379.9" y="1013" width="6.4" height="15.0" fill="rgb(254,156,10)" rx="2" ry="2" />
<text  x="382.95" y="1023.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.14%)</title><rect x="1021.0" y="1013" width="1.6" height="15.0" fill="rgb(207,218,28)" rx="2" ry="2" />
<text  x="1023.97" y="1023.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.14%)</title><rect x="944.4" y="565" width="1.6" height="15.0" fill="rgb(209,129,34)" rx="2" ry="2" />
<text  x="947.43" y="575.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.27%)</title><rect x="383.1" y="949" width="3.2" height="15.0" fill="rgb(219,75,26)" rx="2" ry="2" />
<text  x="386.14" y="959.5" ></text>
</g>
<g >
<title>kworker/7:4 (1 samples, 0.14%)</title><rect x="1030.5" y="1077" width="1.6" height="15.0" fill="rgb(216,149,36)" rx="2" ry="2" />
<text  x="1033.54" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="376.8" y="1045" width="3.1" height="15.0" fill="rgb(207,80,36)" rx="2" ry="2" />
<text  x="379.76" y="1055.5" ></text>
</g>
<g >
<title>drm_fb_helper_dirty_work (1 samples, 0.14%)</title><rect x="998.6" y="997" width="1.6" height="15.0" fill="rgb(207,83,22)" rx="2" ry="2" />
<text  x="1001.65" y="1007.5" ></text>
</g>
<g >
<title>vma_merge (1 samples, 0.14%)</title><rect x="1145.4" y="917" width="1.5" height="15.0" fill="rgb(232,160,18)" rx="2" ry="2" />
<text  x="1148.35" y="927.5" ></text>
</g>
<g >
<title>sort.insertionSort_func (1 samples, 0.14%)</title><rect x="94.5" y="613" width="1.6" height="15.0" fill="rgb(253,10,7)" rx="2" ry="2" />
<text  x="97.51" y="623.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1 samples, 0.14%)</title><rect x="944.4" y="389" width="1.6" height="15.0" fill="rgb(226,104,19)" rx="2" ry="2" />
<text  x="947.43" y="399.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (1 samples, 0.14%)</title><rect x="303.4" y="997" width="1.6" height="15.0" fill="rgb(231,217,41)" rx="2" ry="2" />
<text  x="306.41" y="1007.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.14%)</title><rect x="405.5" y="885" width="1.6" height="15.0" fill="rgb(245,142,48)" rx="2" ry="2" />
<text  x="408.46" y="895.5" ></text>
</g>
<g >
<title>mm_release (1 samples, 0.14%)</title><rect x="376.8" y="773" width="1.6" height="15.0" fill="rgb(216,42,50)" rx="2" ry="2" />
<text  x="379.76" y="783.5" ></text>
</g>
<g >
<title>github.com/docker/docker/image.(*fs).get (3 samples, 0.41%)</title><rect x="121.6" y="725" width="4.8" height="15.0" fill="rgb(220,184,45)" rx="2" ry="2" />
<text  x="124.62" y="735.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.14%)</title><rect x="946.0" y="405" width="1.6" height="15.0" fill="rgb(205,128,37)" rx="2" ry="2" />
<text  x="949.03" y="415.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.14%)</title><rect x="364.0" y="565" width="1.6" height="15.0" fill="rgb(212,208,30)" rx="2" ry="2" />
<text  x="367.00" y="575.5" ></text>
</g>
<g >
<title>runtime.convTstring (1 samples, 0.14%)</title><rect x="102.5" y="805" width="1.6" height="15.0" fill="rgb(210,122,36)" rx="2" ry="2" />
<text  x="105.49" y="815.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.14%)</title><rect x="123.2" y="565" width="1.6" height="15.0" fill="rgb(245,119,18)" rx="2" ry="2" />
<text  x="126.22" y="575.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="391.1" y="965" width="1.6" height="15.0" fill="rgb(238,129,12)" rx="2" ry="2" />
<text  x="394.11" y="975.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/daemon.(*Daemon).reduceContainers (61 samples, 8.24%)</title><rect x="100.9" y="869" width="97.3" height="15.0" fill="rgb(230,82,21)" rx="2" ry="2" />
<text  x="103.89" y="879.5" >local.githu..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="400.7" y="1061" width="1.6" height="15.0" fill="rgb(238,67,39)" rx="2" ry="2" />
<text  x="403.68" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.41%)</title><rect x="1119.8" y="1045" width="4.8" height="15.0" fill="rgb(205,107,37)" rx="2" ry="2" />
<text  x="1122.84" y="1055.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (1 samples, 0.14%)</title><rect x="397.5" y="901" width="1.6" height="15.0" fill="rgb(230,126,54)" rx="2" ry="2" />
<text  x="400.49" y="911.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.14%)</title><rect x="947.6" y="677" width="1.6" height="15.0" fill="rgb(241,67,51)" rx="2" ry="2" />
<text  x="950.62" y="687.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.14%)</title><rect x="982.7" y="757" width="1.6" height="15.0" fill="rgb(252,153,14)" rx="2" ry="2" />
<text  x="985.70" y="767.5" ></text>
</g>
<g >
<title>__legitimize_path.isra.0 (1 samples, 0.14%)</title><rect x="936.5" y="565" width="1.6" height="15.0" fill="rgb(236,227,45)" rx="2" ry="2" />
<text  x="939.46" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1115.1" y="805" width="1.5" height="15.0" fill="rgb(209,6,45)" rx="2" ry="2" />
<text  x="1118.05" y="815.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.14%)</title><rect x="944.4" y="405" width="1.6" height="15.0" fill="rgb(205,213,30)" rx="2" ry="2" />
<text  x="947.43" y="415.5" ></text>
</g>
<g >
<title>kworker/2:5 (1 samples, 0.14%)</title><rect x="1013.0" y="1077" width="1.6" height="15.0" fill="rgb(247,128,26)" rx="2" ry="2" />
<text  x="1016.00" y="1087.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (7 samples, 0.95%)</title><rect x="174.2" y="725" width="11.2" height="15.0" fill="rgb(245,109,10)" rx="2" ry="2" />
<text  x="177.24" y="735.5" ></text>
</g>
<g >
<title>diskstats_show (2 samples, 0.27%)</title><rect x="958.8" y="709" width="3.2" height="15.0" fill="rgb(222,80,5)" rx="2" ry="2" />
<text  x="961.78" y="719.5" ></text>
</g>
<g >
<title>[Missed User Stack] (5 samples, 0.68%)</title><rect x="35.5" y="1061" width="8.0" height="15.0" fill="rgb(254,18,5)" rx="2" ry="2" />
<text  x="38.51" y="1071.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.14%)</title><rect x="1027.4" y="1045" width="1.5" height="15.0" fill="rgb(247,57,38)" rx="2" ry="2" />
<text  x="1030.35" y="1055.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/containers.(*local).withStore.func1 (1 samples, 0.14%)</title><rect x="27.5" y="901" width="1.6" height="15.0" fill="rgb(252,204,12)" rx="2" ry="2" />
<text  x="30.54" y="911.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode-fm (1 samples, 0.14%)</title><rect x="96.1" y="661" width="1.6" height="15.0" fill="rgb(223,113,26)" rx="2" ry="2" />
<text  x="99.11" y="671.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.14%)</title><rect x="990.7" y="613" width="1.6" height="15.0" fill="rgb(223,123,23)" rx="2" ry="2" />
<text  x="993.68" y="623.5" ></text>
</g>
<g >
<title>br_netif_receive_skb (1 samples, 0.14%)</title><rect x="402.3" y="805" width="1.6" height="15.0" fill="rgb(249,117,21)" rx="2" ry="2" />
<text  x="405.27" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.27%)</title><rect x="1150.1" y="965" width="3.2" height="15.0" fill="rgb(213,196,14)" rx="2" ry="2" />
<text  x="1153.14" y="975.5" ></text>
</g>
<g >
<title>sock_recvmsg (1 samples, 0.14%)</title><rect x="364.0" y="693" width="1.6" height="15.0" fill="rgb(226,79,15)" rx="2" ry="2" />
<text  x="367.00" y="703.5" ></text>
</g>
<g >
<title>[unknown] (361 samples, 48.78%)</title><rect x="423.0" y="1013" width="575.6" height="15.0" fill="rgb(227,42,37)" rx="2" ry="2" />
<text  x="426.00" y="1023.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (9 samples, 1.22%)</title><rect x="10.0" y="1013" width="14.4" height="15.0" fill="rgb(227,40,51)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (1 samples, 0.14%)</title><rect x="981.1" y="837" width="1.6" height="15.0" fill="rgb(212,4,25)" rx="2" ry="2" />
<text  x="984.11" y="847.5" ></text>
</g>
<g >
<title>do_ipt_get_ctl (1 samples, 0.14%)</title><rect x="395.9" y="917" width="1.6" height="15.0" fill="rgb(238,27,26)" rx="2" ry="2" />
<text  x="398.89" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="400.7" y="1045" width="1.6" height="15.0" fill="rgb(250,77,32)" rx="2" ry="2" />
<text  x="403.68" y="1055.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.14%)</title><rect x="1185.2" y="501" width="1.6" height="15.0" fill="rgb(206,16,22)" rx="2" ry="2" />
<text  x="1188.22" y="511.5" ></text>
</g>
<g >
<title>kworker/28:2 (2 samples, 0.27%)</title><rect x="1009.8" y="1077" width="3.2" height="15.0" fill="rgb(219,116,20)" rx="2" ry="2" />
<text  x="1012.81" y="1087.5" ></text>
</g>
<g >
<title>dog:workers_gua (2 samples, 0.27%)</title><rect x="338.5" y="1077" width="3.2" height="15.0" fill="rgb(253,193,25)" rx="2" ry="2" />
<text  x="341.49" y="1087.5" ></text>
</g>
<g >
<title>eventfd_write (1 samples, 0.14%)</title><rect x="368.8" y="789" width="1.6" height="15.0" fill="rgb(245,21,20)" rx="2" ry="2" />
<text  x="371.78" y="799.5" ></text>
</g>
<g >
<title>filename_lookup (1 samples, 0.14%)</title><rect x="981.1" y="773" width="1.6" height="15.0" fill="rgb(209,88,12)" rx="2" ry="2" />
<text  x="984.11" y="783.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.27%)</title><rect x="394.3" y="1029" width="3.2" height="15.0" fill="rgb(220,52,26)" rx="2" ry="2" />
<text  x="397.30" y="1039.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.14%)</title><rect x="1024.2" y="1061" width="1.6" height="15.0" fill="rgb(242,200,52)" rx="2" ry="2" />
<text  x="1027.16" y="1071.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.14%)</title><rect x="1175.6" y="853" width="1.6" height="15.0" fill="rgb(250,37,15)" rx="2" ry="2" />
<text  x="1178.65" y="863.5" ></text>
</g>
<g >
<title>local.runtime.funcspdelta (2 samples, 0.27%)</title><rect x="129.6" y="645" width="3.2" height="15.0" fill="rgb(219,220,19)" rx="2" ry="2" />
<text  x="132.59" y="655.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.14%)</title><rect x="376.8" y="805" width="1.6" height="15.0" fill="rgb(234,49,52)" rx="2" ry="2" />
<text  x="379.76" y="815.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.27%)</title><rect x="1116.6" y="853" width="3.2" height="15.0" fill="rgb(211,51,45)" rx="2" ry="2" />
<text  x="1119.65" y="863.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::onUpstreamHeaders(unsigned long, std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, Envoy::Router::UpstreamRequest&amp;, bool) (1 samples, 0.14%)</title><rect x="1154.9" y="693" width="1.6" height="15.0" fill="rgb(236,184,39)" rx="2" ry="2" />
<text  x="1157.92" y="703.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.14%)</title><rect x="405.5" y="949" width="1.6" height="15.0" fill="rgb(207,220,41)" rx="2" ry="2" />
<text  x="408.46" y="959.5" ></text>
</g>
<g >
<title>vfs_statx (2 samples, 0.27%)</title><rect x="939.6" y="693" width="3.2" height="15.0" fill="rgb(238,79,38)" rx="2" ry="2" />
<text  x="942.65" y="703.5" ></text>
</g>
<g >
<title>local.encoding/json.ptrEncoder.encode (1 samples, 0.14%)</title><rect x="96.1" y="677" width="1.6" height="15.0" fill="rgb(213,13,22)" rx="2" ry="2" />
<text  x="99.11" y="687.5" ></text>
</g>
<g >
<title>runtime.sysmon (2 samples, 0.27%)</title><rect x="24.4" y="997" width="3.1" height="15.0" fill="rgb(210,41,27)" rx="2" ry="2" />
<text  x="27.35" y="1007.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (1 samples, 0.14%)</title><rect x="96.1" y="549" width="1.6" height="15.0" fill="rgb(250,77,21)" rx="2" ry="2" />
<text  x="99.11" y="559.5" ></text>
</g>
<g >
<title>gc_worker (2 samples, 0.27%)</title><rect x="1033.7" y="997" width="3.2" height="15.0" fill="rgb(221,54,12)" rx="2" ry="2" />
<text  x="1036.73" y="1007.5" ></text>
</g>
<g >
<title>path/filepath.Clean (1 samples, 0.14%)</title><rect x="126.4" y="693" width="1.6" height="15.0" fill="rgb(254,151,19)" rx="2" ry="2" />
<text  x="129.41" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.41%)</title><rect x="51.5" y="949" width="4.7" height="15.0" fill="rgb(226,84,54)" rx="2" ry="2" />
<text  x="54.46" y="959.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.14%)</title><rect x="987.5" y="869" width="1.6" height="15.0" fill="rgb(227,157,34)" rx="2" ry="2" />
<text  x="990.49" y="879.5" ></text>
</g>
<g >
<title>kworker/48:1 (1 samples, 0.14%)</title><rect x="1021.0" y="1077" width="1.6" height="15.0" fill="rgb(210,142,4)" rx="2" ry="2" />
<text  x="1023.97" y="1087.5" ></text>
</g>
<g >
<title>hrtimer_init_sleeper (1 samples, 0.14%)</title><rect x="354.4" y="837" width="1.6" height="15.0" fill="rgb(233,2,33)" rx="2" ry="2" />
<text  x="357.43" y="847.5" ></text>
</g>
<g >
<title>step_into (1 samples, 0.14%)</title><rect x="941.2" y="597" width="1.6" height="15.0" fill="rgb(223,147,42)" rx="2" ry="2" />
<text  x="944.24" y="607.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.14%)</title><rect x="946.0" y="181" width="1.6" height="15.0" fill="rgb(236,226,43)" rx="2" ry="2" />
<text  x="949.03" y="191.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="1100.7" y="917" width="3.2" height="15.0" fill="rgb(211,177,1)" rx="2" ry="2" />
<text  x="1103.70" y="927.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (2 samples, 0.27%)</title><rect x="939.6" y="645" width="3.2" height="15.0" fill="rgb(210,109,52)" rx="2" ry="2" />
<text  x="942.65" y="655.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::execute(char const*, int) (2 samples, 0.27%)</title><rect x="1180.4" y="837" width="3.2" height="15.0" fill="rgb(206,218,3)" rx="2" ry="2" />
<text  x="1183.43" y="847.5" ></text>
</g>
<g >
<title>__x64_sys_read (2 samples, 0.27%)</title><rect x="116.8" y="629" width="3.2" height="15.0" fill="rgb(217,47,45)" rx="2" ry="2" />
<text  x="119.84" y="639.5" ></text>
</g>
<g >
<title>local.sync.runtime_procPin (1 samples, 0.14%)</title><rect x="196.6" y="709" width="1.6" height="15.0" fill="rgb(243,62,34)" rx="2" ry="2" />
<text  x="199.57" y="719.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.14%)</title><rect x="1032.1" y="1061" width="1.6" height="15.0" fill="rgb(234,14,38)" rx="2" ry="2" />
<text  x="1035.14" y="1071.5" ></text>
</g>
<g >
<title>runtime.schedule (2 samples, 0.27%)</title><rect x="201.4" y="981" width="3.1" height="15.0" fill="rgb(213,144,7)" rx="2" ry="2" />
<text  x="204.35" y="991.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (73 samples, 9.86%)</title><rect x="220.5" y="1029" width="116.4" height="15.0" fill="rgb(236,229,14)" rx="2" ry="2" />
<text  x="223.49" y="1039.5" >runtime.gcBgMa..</text>
</g>
<g >
<title>[Missed User Stack] (1 samples, 0.14%)</title><rect x="344.9" y="1061" width="1.6" height="15.0" fill="rgb(225,228,35)" rx="2" ry="2" />
<text  x="347.86" y="1071.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.14%)</title><rect x="171.1" y="549" width="1.5" height="15.0" fill="rgb(246,202,35)" rx="2" ry="2" />
<text  x="174.05" y="559.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.14%)</title><rect x="1027.4" y="1029" width="1.5" height="15.0" fill="rgb(233,39,44)" rx="2" ry="2" />
<text  x="1030.35" y="1039.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="340.1" y="869" width="1.6" height="15.0" fill="rgb(205,222,5)" rx="2" ry="2" />
<text  x="343.08" y="879.5" ></text>
</g>
<g >
<title>portmap (3 samples, 0.41%)</title><rect x="1119.8" y="1077" width="4.8" height="15.0" fill="rgb(234,31,38)" rx="2" ry="2" />
<text  x="1122.84" y="1087.5" ></text>
</g>
<g >
<title>main (14 samples, 1.89%)</title><rect x="351.2" y="1045" width="22.4" height="15.0" fill="rgb(218,112,48)" rx="2" ry="2" />
<text  x="354.24" y="1055.5" >m..</text>
</g>
<g >
<title>__x64_sys_epoll_wait (2 samples, 0.27%)</title><rect x="338.5" y="981" width="3.2" height="15.0" fill="rgb(253,107,42)" rx="2" ry="2" />
<text  x="341.49" y="991.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="1139.0" y="757" width="3.2" height="15.0" fill="rgb(206,167,31)" rx="2" ry="2" />
<text  x="1141.97" y="767.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.14%)</title><rect x="1185.2" y="533" width="1.6" height="15.0" fill="rgb(253,99,2)" rx="2" ry="2" />
<text  x="1188.22" y="543.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (1 samples, 0.14%)</title><rect x="1146.9" y="917" width="1.6" height="15.0" fill="rgb(209,17,15)" rx="2" ry="2" />
<text  x="1149.95" y="927.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/daemon.(*Daemon).refreshImage-fm (52 samples, 7.03%)</title><rect x="115.2" y="837" width="83.0" height="15.0" fill="rgb(236,187,3)" rx="2" ry="2" />
<text  x="118.24" y="847.5" >local.git..</text>
</g>
<g >
<title>iptables (7 samples, 0.95%)</title><rect x="389.5" y="1077" width="11.2" height="15.0" fill="rgb(245,129,36)" rx="2" ry="2" />
<text  x="392.51" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 1.22%)</title><rect x="10.0" y="997" width="14.4" height="15.0" fill="rgb(248,108,48)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (296 samples, 40.00%)</title><rect x="526.6" y="997" width="472.0" height="15.0" fill="rgb(241,165,27)" rx="2" ry="2" />
<text  x="529.65" y="1007.5" >[unknown]</text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 0.14%)</title><rect x="977.9" y="805" width="1.6" height="15.0" fill="rgb(235,15,0)" rx="2" ry="2" />
<text  x="980.92" y="815.5" ></text>
</g>
<g >
<title>wrk:worker_0 (11 samples, 1.49%)</title><rect x="1148.5" y="1077" width="17.6" height="15.0" fill="rgb(215,35,41)" rx="2" ry="2" />
<text  x="1151.54" y="1087.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.14%)</title><rect x="1019.4" y="1013" width="1.6" height="15.0" fill="rgb(211,92,13)" rx="2" ry="2" />
<text  x="1022.38" y="1023.5" ></text>
</g>
<g >
<title>ip_sabotage_in (1 samples, 0.14%)</title><rect x="402.3" y="709" width="1.6" height="15.0" fill="rgb(210,117,33)" rx="2" ry="2" />
<text  x="405.27" y="719.5" ></text>
</g>
<g >
<title>kworker/16:1 (1 samples, 0.14%)</title><rect x="1001.8" y="1077" width="1.6" height="15.0" fill="rgb(205,220,48)" rx="2" ry="2" />
<text  x="1004.84" y="1087.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.14%)</title><rect x="22.8" y="789" width="1.6" height="15.0" fill="rgb(210,218,24)" rx="2" ry="2" />
<text  x="25.76" y="799.5" ></text>
</g>
<g >
<title>od_dbs_update (1 samples, 0.14%)</title><rect x="1005.0" y="981" width="1.6" height="15.0" fill="rgb(224,183,1)" rx="2" ry="2" />
<text  x="1008.03" y="991.5" ></text>
</g>
<g >
<title>od_dbs_update (1 samples, 0.14%)</title><rect x="1009.8" y="981" width="1.6" height="15.0" fill="rgb(208,221,24)" rx="2" ry="2" />
<text  x="1012.81" y="991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 1.08%)</title><rect x="950.8" y="837" width="12.8" height="15.0" fill="rgb(220,76,12)" rx="2" ry="2" />
<text  x="953.81" y="847.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.14%)</title><rect x="120.0" y="613" width="1.6" height="15.0" fill="rgb(221,29,10)" rx="2" ry="2" />
<text  x="123.03" y="623.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::onMessageCompleteBase() (1 samples, 0.14%)</title><rect x="1156.5" y="773" width="1.6" height="15.0" fill="rgb(209,150,35)" rx="2" ry="2" />
<text  x="1159.51" y="783.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.14%)</title><rect x="196.6" y="725" width="1.6" height="15.0" fill="rgb(206,167,13)" rx="2" ry="2" />
<text  x="199.57" y="735.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.14%)</title><rect x="1105.5" y="869" width="1.6" height="15.0" fill="rgb(213,131,5)" rx="2" ry="2" />
<text  x="1108.49" y="879.5" ></text>
</g>
<g >
<title>dbs_update (1 samples, 0.14%)</title><rect x="1019.4" y="949" width="1.6" height="15.0" fill="rgb(230,5,8)" rx="2" ry="2" />
<text  x="1022.38" y="959.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1 samples, 0.14%)</title><rect x="405.5" y="933" width="1.6" height="15.0" fill="rgb(252,88,38)" rx="2" ry="2" />
<text  x="408.46" y="943.5" ></text>
</g>
<g >
<title>ext4_bread (1 samples, 0.14%)</title><rect x="950.8" y="709" width="1.6" height="15.0" fill="rgb(235,44,46)" rx="2" ry="2" />
<text  x="953.81" y="719.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge (1 samples, 0.14%)</title><rect x="218.9" y="1013" width="1.6" height="15.0" fill="rgb(246,34,6)" rx="2" ry="2" />
<text  x="221.89" y="1023.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.14%)</title><rect x="143.9" y="565" width="1.6" height="15.0" fill="rgb(250,61,35)" rx="2" ry="2" />
<text  x="146.95" y="575.5" ></text>
</g>
<g >
<title>local.runtime.mstart1 (8 samples, 1.08%)</title><rect x="43.5" y="1013" width="12.7" height="15.0" fill="rgb(210,193,49)" rx="2" ry="2" />
<text  x="46.49" y="1023.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.14%)</title><rect x="112.1" y="741" width="1.5" height="15.0" fill="rgb(231,208,44)" rx="2" ry="2" />
<text  x="115.05" y="751.5" ></text>
</g>
<g >
<title>local.runtime.pcvalue (1 samples, 0.14%)</title><rect x="110.5" y="741" width="1.6" height="15.0" fill="rgb(207,153,25)" rx="2" ry="2" />
<text  x="113.46" y="751.5" ></text>
</g>
<g >
<title>Envoy::Network::TcpListenerImpl::onSocketEvent(short) (1 samples, 0.14%)</title><rect x="1183.6" y="949" width="1.6" height="15.0" fill="rgb(227,144,25)" rx="2" ry="2" />
<text  x="1186.62" y="959.5" ></text>
</g>
<g >
<title>event_base_loop (12 samples, 1.62%)</title><rect x="1170.9" y="1013" width="19.1" height="15.0" fill="rgb(230,209,42)" rx="2" ry="2" />
<text  x="1173.86" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Router::VirtualHostImpl::getRouteFromEntries(std::__1::function&lt;Envoy::Router::RouteMatchStatus (std::__1::shared_ptr&lt;Envoy::Router::Route const&gt;, Envoy::Router::RouteEvalStatus)&gt; const&amp;, Envoy::Http::RequestHeaderMap const&amp;, Envoy::StreamInfo::StreamInfo const&amp;, unsigned long) const (1 samples, 0.14%)</title><rect x="1180.4" y="709" width="1.6" height="15.0" fill="rgb(252,115,20)" rx="2" ry="2" />
<text  x="1183.43" y="719.5" ></text>
</g>
<g >
<title>proc_reg_read_iter (1 samples, 0.14%)</title><rect x="400.7" y="949" width="1.6" height="15.0" fill="rgb(249,77,53)" rx="2" ry="2" />
<text  x="403.68" y="959.5" ></text>
</g>
<g >
<title>runtime.checkTimers (1 samples, 0.14%)</title><rect x="212.5" y="965" width="1.6" height="15.0" fill="rgb(211,22,14)" rx="2" ry="2" />
<text  x="215.51" y="975.5" ></text>
</g>
<g >
<title>Envoy::Event::DispatcherImpl::updateApproximateMonotonicTime() (1 samples, 0.14%)</title><rect x="1170.9" y="997" width="1.6" height="15.0" fill="rgb(227,56,2)" rx="2" ry="2" />
<text  x="1173.86" y="1007.5" ></text>
</g>
<g >
<title>runtime.removespecial (1 samples, 0.14%)</title><rect x="121.6" y="613" width="1.6" height="15.0" fill="rgb(244,67,6)" rx="2" ry="2" />
<text  x="124.62" y="623.5" ></text>
</g>
<g >
<title>get_user_pages_fast (1 samples, 0.14%)</title><rect x="376.8" y="709" width="1.6" height="15.0" fill="rgb(223,27,9)" rx="2" ry="2" />
<text  x="379.76" y="719.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.27%)</title><rect x="1150.1" y="869" width="3.2" height="15.0" fill="rgb(246,183,34)" rx="2" ry="2" />
<text  x="1153.14" y="879.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.14%)</title><rect x="1103.9" y="917" width="1.6" height="15.0" fill="rgb(229,59,28)" rx="2" ry="2" />
<text  x="1106.89" y="927.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (1 samples, 0.14%)</title><rect x="397.5" y="917" width="1.6" height="15.0" fill="rgb(250,174,11)" rx="2" ry="2" />
<text  x="400.49" y="927.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (1 samples, 0.14%)</title><rect x="1146.9" y="933" width="1.6" height="15.0" fill="rgb(232,66,32)" rx="2" ry="2" />
<text  x="1149.95" y="943.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="21.2" y="949" width="3.2" height="15.0" fill="rgb(214,3,7)" rx="2" ry="2" />
<text  x="24.16" y="959.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.14%)</title><rect x="166.3" y="597" width="1.6" height="15.0" fill="rgb(249,11,45)" rx="2" ry="2" />
<text  x="169.27" y="607.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.14%)</title><rect x="400.7" y="997" width="1.6" height="15.0" fill="rgb(247,121,21)" rx="2" ry="2" />
<text  x="403.68" y="1007.5" ></text>
</g>
<g >
<title>process_backlog (1 samples, 0.14%)</title><rect x="405.5" y="965" width="1.6" height="15.0" fill="rgb(211,1,32)" rx="2" ry="2" />
<text  x="408.46" y="975.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1 samples, 0.14%)</title><rect x="1102.3" y="661" width="1.6" height="15.0" fill="rgb(221,49,33)" rx="2" ry="2" />
<text  x="1105.30" y="671.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.14%)</title><rect x="120.0" y="645" width="1.6" height="15.0" fill="rgb(233,154,50)" rx="2" ry="2" />
<text  x="123.03" y="655.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.14%)</title><rect x="1013.0" y="1045" width="1.6" height="15.0" fill="rgb(244,174,5)" rx="2" ry="2" />
<text  x="1016.00" y="1055.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="202.9" y="789" width="1.6" height="15.0" fill="rgb(212,170,27)" rx="2" ry="2" />
<text  x="205.95" y="799.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.14%)</title><rect x="1017.8" y="1045" width="1.6" height="15.0" fill="rgb(219,95,1)" rx="2" ry="2" />
<text  x="1020.78" y="1055.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.14%)</title><rect x="1032.1" y="885" width="1.6" height="15.0" fill="rgb(237,195,49)" rx="2" ry="2" />
<text  x="1035.14" y="895.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.14%)</title><rect x="394.3" y="1013" width="1.6" height="15.0" fill="rgb(208,229,1)" rx="2" ry="2" />
<text  x="397.30" y="1023.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.14%)</title><rect x="1175.6" y="901" width="1.6" height="15.0" fill="rgb(216,116,45)" rx="2" ry="2" />
<text  x="1178.65" y="911.5" ></text>
</g>
<g >
<title>Envoy::Buffer::Reservation::commit(unsigned long) (2 samples, 0.27%)</title><rect x="1158.1" y="885" width="3.2" height="15.0" fill="rgb(227,84,49)" rx="2" ry="2" />
<text  x="1161.11" y="895.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Stats::ThreadLocalStoreImpl::mergeHistograms(std::__1::function&lt;void ()&gt;)::$_11, std::__1::allocator&lt;Envoy::Stats::ThreadLocalStoreImpl::mergeHistograms(std::__1::function&lt;void ()&gt;)::$_11&gt;, void ()&gt;::operator()() (4 samples, 0.54%)</title><rect x="357.6" y="933" width="6.4" height="15.0" fill="rgb(241,71,14)" rx="2" ry="2" />
<text  x="360.62" y="943.5" ></text>
</g>
<g >
<title>[unknown] (151 samples, 20.41%)</title><rect x="753.1" y="933" width="240.8" height="15.0" fill="rgb(239,60,27)" rx="2" ry="2" />
<text  x="756.08" y="943.5" >[unknown]</text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onReadReady() (3 samples, 0.41%)</title><rect x="1178.8" y="933" width="4.8" height="15.0" fill="rgb(223,123,49)" rx="2" ry="2" />
<text  x="1181.84" y="943.5" ></text>
</g>
<g >
<title>os.(*File).Read (2 samples, 0.27%)</title><rect x="116.8" y="709" width="3.2" height="15.0" fill="rgb(228,145,6)" rx="2" ry="2" />
<text  x="119.84" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="387.9" y="853" width="1.6" height="15.0" fill="rgb(246,42,48)" rx="2" ry="2" />
<text  x="390.92" y="863.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.14%)</title><rect x="1185.2" y="133" width="1.6" height="15.0" fill="rgb(235,126,14)" rx="2" ry="2" />
<text  x="1188.22" y="143.5" ></text>
</g>
<g >
<title>copy_page (1 samples, 0.14%)</title><rect x="1143.8" y="949" width="1.6" height="15.0" fill="rgb(236,227,2)" rx="2" ry="2" />
<text  x="1146.76" y="959.5" ></text>
</g>
<g >
<title>arch_do_signal (1 samples, 0.14%)</title><rect x="376.8" y="853" width="1.6" height="15.0" fill="rgb(244,184,27)" rx="2" ry="2" />
<text  x="379.76" y="863.5" ></text>
</g>
<g >
<title>local.runtime.bgscavenge (2 samples, 0.27%)</title><rect x="201.4" y="1045" width="3.1" height="15.0" fill="rgb(246,17,5)" rx="2" ry="2" />
<text  x="204.35" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::write(Envoy::Buffer::Instance&amp;) (2 samples, 0.27%)</title><rect x="1185.2" y="901" width="3.2" height="15.0" fill="rgb(224,139,28)" rx="2" ry="2" />
<text  x="1188.22" y="911.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.14%)</title><rect x="1005.0" y="1045" width="1.6" height="15.0" fill="rgb(225,177,48)" rx="2" ry="2" />
<text  x="1008.03" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 1.22%)</title><rect x="922.1" y="709" width="14.4" height="15.0" fill="rgb(250,11,7)" rx="2" ry="2" />
<text  x="925.11" y="719.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (1 samples, 0.14%)</title><rect x="171.1" y="581" width="1.5" height="15.0" fill="rgb(205,211,16)" rx="2" ry="2" />
<text  x="174.05" y="591.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="1001.8" y="965" width="1.6" height="15.0" fill="rgb(249,23,45)" rx="2" ry="2" />
<text  x="1004.84" y="975.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.14%)</title><rect x="946.0" y="197" width="1.6" height="15.0" fill="rgb(212,223,20)" rx="2" ry="2" />
<text  x="949.03" y="207.5" ></text>
</g>
<g >
<title>encoding/json.ptrEncoder.encode-fm (16 samples, 2.16%)</title><rect x="75.4" y="757" width="25.5" height="15.0" fill="rgb(225,203,1)" rx="2" ry="2" />
<text  x="78.38" y="767.5" >e..</text>
</g>
<g >
<title>dput (1 samples, 0.14%)</title><rect x="966.8" y="645" width="1.6" height="15.0" fill="rgb(230,156,45)" rx="2" ry="2" />
<text  x="969.76" y="655.5" ></text>
</g>
<g >
<title>drm_client_buffer_vmap (1 samples, 0.14%)</title><rect x="998.6" y="981" width="1.6" height="15.0" fill="rgb(225,31,3)" rx="2" ry="2" />
<text  x="1001.65" y="991.5" ></text>
</g>
<g >
<title>local.fmt.newPrinter (1 samples, 0.14%)</title><rect x="100.9" y="773" width="1.6" height="15.0" fill="rgb(248,17,19)" rx="2" ry="2" />
<text  x="103.89" y="783.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="1024.2" y="965" width="1.6" height="15.0" fill="rgb(234,163,40)" rx="2" ry="2" />
<text  x="1027.16" y="975.5" ></text>
</g>
<g >
<title>runtime.removefinalizer (1 samples, 0.14%)</title><rect x="121.6" y="629" width="1.6" height="15.0" fill="rgb(211,165,18)" rx="2" ry="2" />
<text  x="124.62" y="639.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.14%)</title><rect x="1142.2" y="949" width="1.6" height="15.0" fill="rgb(221,16,20)" rx="2" ry="2" />
<text  x="1145.16" y="959.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="346.5" y="1061" width="3.1" height="15.0" fill="rgb(232,66,20)" rx="2" ry="2" />
<text  x="349.46" y="1071.5" ></text>
</g>
<g >
<title>runtime.findObject (7 samples, 0.95%)</title><rect x="292.2" y="981" width="11.2" height="15.0" fill="rgb(206,53,11)" rx="2" ry="2" />
<text  x="295.24" y="991.5" ></text>
</g>
<g >
<title>runtime.putempty (1 samples, 0.14%)</title><rect x="260.4" y="981" width="1.5" height="15.0" fill="rgb(250,84,24)" rx="2" ry="2" />
<text  x="263.35" y="991.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.27%)</title><rect x="53.1" y="885" width="3.1" height="15.0" fill="rgb(244,10,16)" rx="2" ry="2" />
<text  x="56.05" y="895.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="21.2" y="885" width="1.6" height="15.0" fill="rgb(223,91,24)" rx="2" ry="2" />
<text  x="24.16" y="895.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.14%)</title><rect x="399.1" y="917" width="1.6" height="15.0" fill="rgb(250,220,46)" rx="2" ry="2" />
<text  x="402.08" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="933.3" y="613" width="1.6" height="15.0" fill="rgb(252,66,31)" rx="2" ry="2" />
<text  x="936.27" y="623.5" ></text>
</g>
<g >
<title>process_backlog (1 samples, 0.14%)</title><rect x="402.3" y="965" width="1.6" height="15.0" fill="rgb(212,219,42)" rx="2" ry="2" />
<text  x="405.27" y="975.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.14%)</title><rect x="376.8" y="757" width="1.6" height="15.0" fill="rgb(244,174,14)" rx="2" ry="2" />
<text  x="379.76" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_getsockopt (1 samples, 0.14%)</title><rect x="395.9" y="1013" width="1.6" height="15.0" fill="rgb(229,152,43)" rx="2" ry="2" />
<text  x="398.89" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.81%)</title><rect x="14.8" y="965" width="9.6" height="15.0" fill="rgb(226,16,28)" rx="2" ry="2" />
<text  x="17.78" y="975.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.14%)</title><rect x="123.2" y="485" width="1.6" height="15.0" fill="rgb(253,4,18)" rx="2" ry="2" />
<text  x="126.22" y="495.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).scanWhile (1 samples, 0.14%)</title><rect x="159.9" y="645" width="1.6" height="15.0" fill="rgb(212,173,23)" rx="2" ry="2" />
<text  x="162.89" y="655.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.14%)</title><rect x="1102.3" y="517" width="1.6" height="15.0" fill="rgb(228,133,17)" rx="2" ry="2" />
<text  x="1105.30" y="527.5" ></text>
</g>
<g >
<title>__sys_setsockopt (1 samples, 0.14%)</title><rect x="1183.6" y="725" width="1.6" height="15.0" fill="rgb(219,13,11)" rx="2" ry="2" />
<text  x="1186.62" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2 samples, 0.27%)</title><rect x="1116.6" y="821" width="3.2" height="15.0" fill="rgb(214,4,48)" rx="2" ry="2" />
<text  x="1119.65" y="831.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#3}::__invoke(http_parser*) (1 samples, 0.14%)</title><rect x="1156.5" y="805" width="1.6" height="15.0" fill="rgb(218,29,34)" rx="2" ry="2" />
<text  x="1159.51" y="815.5" ></text>
</g>
<g >
<title>local.runtime.greyobject (10 samples, 1.35%)</title><rect x="276.3" y="981" width="15.9" height="15.0" fill="rgb(219,194,42)" rx="2" ry="2" />
<text  x="279.30" y="991.5" ></text>
</g>
<g >
<title>br_forward_finish (1 samples, 0.14%)</title><rect x="990.7" y="453" width="1.6" height="15.0" fill="rgb(229,166,46)" rx="2" ry="2" />
<text  x="993.68" y="463.5" ></text>
</g>
<g >
<title>local.runtime.growslice (1 samples, 0.14%)</title><rect x="104.1" y="821" width="1.6" height="15.0" fill="rgb(228,136,49)" rx="2" ry="2" />
<text  x="107.08" y="831.5" ></text>
</g>
<g >
<title>local.encoding/json.(*decodeState).value (1 samples, 0.14%)</title><rect x="171.1" y="565" width="1.5" height="15.0" fill="rgb(209,20,1)" rx="2" ry="2" />
<text  x="174.05" y="575.5" ></text>
</g>
<g >
<title>github.com/docker/docker/api/server/router/container.(*containerRouter).getContainersJSON-fm (77 samples, 10.41%)</title><rect x="75.4" y="917" width="122.8" height="15.0" fill="rgb(246,138,12)" rx="2" ry="2" />
<text  x="78.38" y="927.5" >github.com/dock..</text>
</g>
<g >
<title>local.runtime.greyobject (2 samples, 0.27%)</title><rect x="261.9" y="997" width="3.2" height="15.0" fill="rgb(245,175,41)" rx="2" ry="2" />
<text  x="264.95" y="1007.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.14%)</title><rect x="990.7" y="821" width="1.6" height="15.0" fill="rgb(233,128,20)" rx="2" ry="2" />
<text  x="993.68" y="831.5" ></text>
</g>
<g >
<title>kworker/54:1 (1 samples, 0.14%)</title><rect x="1024.2" y="1077" width="1.6" height="15.0" fill="rgb(214,27,31)" rx="2" ry="2" />
<text  x="1027.16" y="1087.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.14%)</title><rect x="1027.4" y="997" width="1.5" height="15.0" fill="rgb(207,95,19)" rx="2" ry="2" />
<text  x="1030.35" y="1007.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.14%)</title><rect x="100.9" y="693" width="1.6" height="15.0" fill="rgb(236,81,29)" rx="2" ry="2" />
<text  x="103.89" y="703.5" ></text>
</g>
<g >
<title>vsnprintf (1 samples, 0.14%)</title><rect x="960.4" y="661" width="1.6" height="15.0" fill="rgb(247,42,37)" rx="2" ry="2" />
<text  x="963.38" y="671.5" ></text>
</g>
<g >
<title>__legitimize_mnt (1 samples, 0.14%)</title><rect x="989.1" y="693" width="1.6" height="15.0" fill="rgb(241,96,44)" rx="2" ry="2" />
<text  x="992.08" y="703.5" ></text>
</g>
<g >
<title>process_one_work (2 samples, 0.27%)</title><rect x="1009.8" y="1013" width="3.2" height="15.0" fill="rgb(223,136,46)" rx="2" ry="2" />
<text  x="1012.81" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="1183.6" y="773" width="1.6" height="15.0" fill="rgb(221,176,0)" rx="2" ry="2" />
<text  x="1186.62" y="783.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (1 samples, 0.14%)</title><rect x="946.0" y="613" width="1.6" height="15.0" fill="rgb(219,7,6)" rx="2" ry="2" />
<text  x="949.03" y="623.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (1 samples, 0.14%)</title><rect x="969.9" y="693" width="1.6" height="15.0" fill="rgb(234,177,43)" rx="2" ry="2" />
<text  x="972.95" y="703.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ClientConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (1 samples, 0.14%)</title><rect x="1154.9" y="869" width="1.6" height="15.0" fill="rgb(251,11,52)" rx="2" ry="2" />
<text  x="1157.92" y="879.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.14%)</title><rect x="403.9" y="901" width="1.6" height="15.0" fill="rgb(211,191,47)" rx="2" ry="2" />
<text  x="406.86" y="911.5" ></text>
</g>
<g >
<title>set_root (1 samples, 0.14%)</title><rect x="981.1" y="709" width="1.6" height="15.0" fill="rgb(225,84,0)" rx="2" ry="2" />
<text  x="984.11" y="719.5" ></text>
</g>
<g >
<title>github.com/docker/docker/daemon.includeContainerInList (4 samples, 0.54%)</title><rect x="108.9" y="837" width="6.3" height="15.0" fill="rgb(244,219,32)" rx="2" ry="2" />
<text  x="111.86" y="847.5" ></text>
</g>
<g >
<title>__x64_sys_readlinkat (1 samples, 0.14%)</title><rect x="989.1" y="869" width="1.6" height="15.0" fill="rgb(225,163,9)" rx="2" ry="2" />
<text  x="992.08" y="879.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Http::Http1::ConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (2 samples, 0.27%)</title><rect x="1180.4" y="885" width="3.2" height="15.0" fill="rgb(208,73,46)" rx="2" ry="2" />
<text  x="1183.43" y="895.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ConnectionManagerImpl::ActiveStream::route(std::__1::function&lt;Envoy::Router::RouteMatchStatus (std::__1::shared_ptr&lt;Envoy::Router::Route const&gt;, Envoy::Router::RouteEvalStatus)&gt; const&amp;) (1 samples, 0.14%)</title><rect x="1182.0" y="693" width="1.6" height="15.0" fill="rgb(214,30,2)" rx="2" ry="2" />
<text  x="1185.03" y="703.5" ></text>
</g>
<g >
<title>netif_receive_skb (1 samples, 0.14%)</title><rect x="944.4" y="245" width="1.6" height="15.0" fill="rgb(212,29,10)" rx="2" ry="2" />
<text  x="947.43" y="255.5" ></text>
</g>
<g >
<title>drm_gem_vmap (1 samples, 0.14%)</title><rect x="1032.1" y="965" width="1.6" height="15.0" fill="rgb(229,112,33)" rx="2" ry="2" />
<text  x="1035.14" y="975.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.14%)</title><rect x="402.3" y="949" width="1.6" height="15.0" fill="rgb(247,109,30)" rx="2" ry="2" />
<text  x="405.27" y="959.5" ></text>
</g>
<g >
<title>tomoyo_socket_sendmsg_permission (1 samples, 0.14%)</title><rect x="976.3" y="693" width="1.6" height="15.0" fill="rgb(219,57,20)" rx="2" ry="2" />
<text  x="979.32" y="703.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 0.14%)</title><rect x="949.2" y="773" width="1.6" height="15.0" fill="rgb(218,229,24)" rx="2" ry="2" />
<text  x="952.22" y="783.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.14%)</title><rect x="218.9" y="869" width="1.6" height="15.0" fill="rgb(252,10,12)" rx="2" ry="2" />
<text  x="221.89" y="879.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.14%)</title><rect x="1008.2" y="1013" width="1.6" height="15.0" fill="rgb(213,156,29)" rx="2" ry="2" />
<text  x="1011.22" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatchSlice(char const*, unsigned long) (1 samples, 0.14%)</title><rect x="1178.8" y="837" width="1.6" height="15.0" fill="rgb(229,188,32)" rx="2" ry="2" />
<text  x="1181.84" y="847.5" ></text>
</g>
<g >
<title>iterate_dir (1 samples, 0.14%)</title><rect x="950.8" y="789" width="1.6" height="15.0" fill="rgb(208,207,17)" rx="2" ry="2" />
<text  x="953.81" y="799.5" ></text>
</g>
<g >
<title>skb_tunnel_check_pmtu (1 samples, 0.14%)</title><rect x="402.3" y="485" width="1.6" height="15.0" fill="rgb(250,216,29)" rx="2" ry="2" />
<text  x="405.27" y="495.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.14%)</title><rect x="1030.5" y="1029" width="1.6" height="15.0" fill="rgb(213,126,33)" rx="2" ry="2" />
<text  x="1033.54" y="1039.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (22 samples, 2.97%)</title><rect x="139.2" y="725" width="35.0" height="15.0" fill="rgb(237,138,33)" rx="2" ry="2" />
<text  x="142.16" y="735.5" >en..</text>
</g>
<g >
<title>drm_gem_shmem_get_pages (1 samples, 0.14%)</title><rect x="998.6" y="933" width="1.6" height="15.0" fill="rgb(231,185,0)" rx="2" ry="2" />
<text  x="1001.65" y="943.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.14%)</title><rect x="416.6" y="1013" width="1.6" height="15.0" fill="rgb(215,7,5)" rx="2" ry="2" />
<text  x="419.62" y="1023.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.14%)</title><rect x="1038.5" y="1013" width="1.6" height="15.0" fill="rgb(232,180,37)" rx="2" ry="2" />
<text  x="1041.51" y="1023.5" ></text>
</g>
<g >
<title>__sys_connect (2 samples, 0.27%)</title><rect x="944.4" y="741" width="3.2" height="15.0" fill="rgb(232,61,13)" rx="2" ry="2" />
<text  x="947.43" y="751.5" ></text>
</g>
<g >
<title>local.runtime.trygetfull (2 samples, 0.27%)</title><rect x="257.2" y="981" width="3.2" height="15.0" fill="rgb(215,51,46)" rx="2" ry="2" />
<text  x="260.16" y="991.5" ></text>
</g>
<g >
<title>sched_autogroup_exit_task (2 samples, 0.27%)</title><rect x="383.1" y="981" width="3.2" height="15.0" fill="rgb(254,53,8)" rx="2" ry="2" />
<text  x="386.14" y="991.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (8 samples, 1.08%)</title><rect x="140.8" y="597" width="12.7" height="15.0" fill="rgb(222,85,13)" rx="2" ry="2" />
<text  x="143.76" y="607.5" ></text>
</g>
<g >
<title>process_backlog (1 samples, 0.14%)</title><rect x="403.9" y="965" width="1.6" height="15.0" fill="rgb(233,208,28)" rx="2" ry="2" />
<text  x="406.86" y="975.5" ></text>
</g>
<g >
<title>os.ReadFile (4 samples, 0.54%)</title><rect x="115.2" y="725" width="6.4" height="15.0" fill="rgb(235,126,49)" rx="2" ry="2" />
<text  x="118.24" y="735.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.14%)</title><rect x="416.6" y="965" width="1.6" height="15.0" fill="rgb(246,120,7)" rx="2" ry="2" />
<text  x="419.62" y="975.5" ></text>
</g>
<g >
<title>seq_read_iter (1 samples, 0.14%)</title><rect x="974.7" y="757" width="1.6" height="15.0" fill="rgb(243,102,40)" rx="2" ry="2" />
<text  x="977.73" y="767.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.14%)</title><rect x="123.2" y="501" width="1.6" height="15.0" fill="rgb(246,202,16)" rx="2" ry="2" />
<text  x="126.22" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="984.3" y="869" width="1.6" height="15.0" fill="rgb(247,87,43)" rx="2" ry="2" />
<text  x="987.30" y="879.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="1185.2" y="485" width="1.6" height="15.0" fill="rgb(214,98,32)" rx="2" ry="2" />
<text  x="1188.22" y="495.5" ></text>
</g>
<g >
<title>cpufreq_notify_transition (1 samples, 0.14%)</title><rect x="1000.2" y="917" width="1.6" height="15.0" fill="rgb(220,200,4)" rx="2" ry="2" />
<text  x="1003.24" y="927.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.14%)</title><rect x="1003.4" y="1061" width="1.6" height="15.0" fill="rgb(220,83,36)" rx="2" ry="2" />
<text  x="1006.43" y="1071.5" ></text>
</g>
<g >
<title>local.encoding/json.indirect (1 samples, 0.14%)</title><rect x="156.7" y="645" width="1.6" height="15.0" fill="rgb(209,12,52)" rx="2" ry="2" />
<text  x="159.70" y="655.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.14%)</title><rect x="143.9" y="581" width="1.6" height="15.0" fill="rgb(210,27,48)" rx="2" ry="2" />
<text  x="146.95" y="591.5" ></text>
</g>
<g >
<title>github.com/docker/docker/image.NewFromJSON (30 samples, 4.05%)</title><rect x="139.2" y="757" width="47.8" height="15.0" fill="rgb(223,28,31)" rx="2" ry="2" />
<text  x="142.16" y="767.5" >gith..</text>
</g>
<g >
<title>kthread (1 samples, 0.14%)</title><rect x="1006.6" y="1045" width="1.6" height="15.0" fill="rgb(238,151,11)" rx="2" ry="2" />
<text  x="1009.62" y="1055.5" ></text>
</g>
<g >
<title>worker_thread (2 samples, 0.27%)</title><rect x="1014.6" y="1029" width="3.2" height="15.0" fill="rgb(244,149,42)" rx="2" ry="2" />
<text  x="1017.59" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="21.2" y="917" width="3.2" height="15.0" fill="rgb(207,56,44)" rx="2" ry="2" />
<text  x="24.16" y="927.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.14%)</title><rect x="115.2" y="581" width="1.6" height="15.0" fill="rgb(205,204,7)" rx="2" ry="2" />
<text  x="118.24" y="591.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="1143.8" y="965" width="1.6" height="15.0" fill="rgb(249,156,53)" rx="2" ry="2" />
<text  x="1146.76" y="975.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.27%)</title><rect x="947.6" y="789" width="3.2" height="15.0" fill="rgb(250,163,38)" rx="2" ry="2" />
<text  x="950.62" y="799.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="987.5" y="773" width="1.6" height="15.0" fill="rgb(218,209,12)" rx="2" ry="2" />
<text  x="990.49" y="783.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.14%)</title><rect x="405.5" y="1029" width="1.6" height="15.0" fill="rgb(227,34,14)" rx="2" ry="2" />
<text  x="408.46" y="1039.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.14%)</title><rect x="368.8" y="901" width="1.6" height="15.0" fill="rgb(222,120,14)" rx="2" ry="2" />
<text  x="371.78" y="911.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/container.(*memdbView).All (3 samples, 0.41%)</title><rect x="100.9" y="837" width="4.8" height="15.0" fill="rgb(251,45,7)" rx="2" ry="2" />
<text  x="103.89" y="847.5" ></text>
</g>
<g >
<title>kworker/25:35 (1 samples, 0.14%)</title><rect x="1008.2" y="1077" width="1.6" height="15.0" fill="rgb(219,114,14)" rx="2" ry="2" />
<text  x="1011.22" y="1087.5" ></text>
</g>
<g >
<title>path/filepath.Clean (1 samples, 0.14%)</title><rect x="137.6" y="709" width="1.6" height="15.0" fill="rgb(223,178,14)" rx="2" ry="2" />
<text  x="140.57" y="719.5" ></text>
</g>
<g >
<title>drain_zone_pages (1 samples, 0.14%)</title><rect x="1030.5" y="965" width="1.6" height="15.0" fill="rgb(253,139,53)" rx="2" ry="2" />
<text  x="1033.54" y="975.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="387.9" y="933" width="1.6" height="15.0" fill="rgb(210,99,11)" rx="2" ry="2" />
<text  x="390.92" y="943.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.14%)</title><rect x="946.0" y="293" width="1.6" height="15.0" fill="rgb(232,82,13)" rx="2" ry="2" />
<text  x="949.03" y="303.5" ></text>
</g>
<g >
<title>tcp_sendmsg (2 samples, 0.27%)</title><rect x="1185.2" y="693" width="3.2" height="15.0" fill="rgb(230,160,9)" rx="2" ry="2" />
<text  x="1188.22" y="703.5" ></text>
</g>
<g >
<title>ksys_read (2 samples, 0.27%)</title><rect x="116.8" y="613" width="3.2" height="15.0" fill="rgb(241,123,40)" rx="2" ry="2" />
<text  x="119.84" y="623.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1 samples, 0.14%)</title><rect x="118.4" y="533" width="1.6" height="15.0" fill="rgb(249,34,24)" rx="2" ry="2" />
<text  x="121.43" y="543.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.14%)</title><rect x="1142.2" y="901" width="1.6" height="15.0" fill="rgb(225,49,13)" rx="2" ry="2" />
<text  x="1145.16" y="911.5" ></text>
</g>
<g >
<title>local.syscall.Syscall (2 samples, 0.27%)</title><rect x="116.8" y="677" width="3.2" height="15.0" fill="rgb(231,186,8)" rx="2" ry="2" />
<text  x="119.84" y="687.5" ></text>
</g>
<g >
<title>kworker/62:4 (1 samples, 0.14%)</title><rect x="1027.4" y="1077" width="1.5" height="15.0" fill="rgb(238,203,0)" rx="2" ry="2" />
<text  x="1030.35" y="1087.5" ></text>
</g>
<g >
<title>os.ReadFile (3 samples, 0.41%)</title><rect x="121.6" y="709" width="4.8" height="15.0" fill="rgb(251,73,39)" rx="2" ry="2" />
<text  x="124.62" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.27%)</title><rect x="338.5" y="1013" width="3.2" height="15.0" fill="rgb(233,81,54)" rx="2" ry="2" />
<text  x="341.49" y="1023.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (1 samples, 0.14%)</title><rect x="206.1" y="997" width="1.6" height="15.0" fill="rgb(215,27,50)" rx="2" ry="2" />
<text  x="209.14" y="1007.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.14%)</title><rect x="120.0" y="597" width="1.6" height="15.0" fill="rgb(253,127,0)" rx="2" ry="2" />
<text  x="123.03" y="607.5" ></text>
</g>
<g >
<title>get_signal (1 samples, 0.14%)</title><rect x="376.8" y="837" width="1.6" height="15.0" fill="rgb(231,139,36)" rx="2" ry="2" />
<text  x="379.76" y="847.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1115.1" y="821" width="1.5" height="15.0" fill="rgb(254,148,26)" rx="2" ry="2" />
<text  x="1118.05" y="831.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.14%)</title><rect x="1019.4" y="1029" width="1.6" height="15.0" fill="rgb(214,185,28)" rx="2" ry="2" />
<text  x="1022.38" y="1039.5" ></text>
</g>
<g >
<title>flannel (7 samples, 0.95%)</title><rect x="376.8" y="1077" width="11.1" height="15.0" fill="rgb(248,215,6)" rx="2" ry="2" />
<text  x="379.76" y="1087.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/metadata.(*containerStore).List.func1 (1 samples, 0.14%)</title><rect x="27.5" y="837" width="1.6" height="15.0" fill="rgb(238,221,4)" rx="2" ry="2" />
<text  x="30.54" y="847.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.14%)</title><rect x="22.8" y="853" width="1.6" height="15.0" fill="rgb(251,182,36)" rx="2" ry="2" />
<text  x="25.76" y="863.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.14%)</title><rect x="1000.2" y="1061" width="1.6" height="15.0" fill="rgb(213,32,19)" rx="2" ry="2" />
<text  x="1003.24" y="1071.5" ></text>
</g>
<g >
<title>local.runtime.findrunnable (2 samples, 0.27%)</title><rect x="201.4" y="965" width="3.1" height="15.0" fill="rgb(223,51,8)" rx="2" ry="2" />
<text  x="204.35" y="975.5" ></text>
</g>
<g >
<title>local.encoding/json.stateEndValue (1 samples, 0.14%)</title><rect x="183.8" y="709" width="1.6" height="15.0" fill="rgb(247,147,17)" rx="2" ry="2" />
<text  x="186.81" y="719.5" ></text>
</g>
<g >
<title>local.runtime.gcDrain (73 samples, 9.86%)</title><rect x="220.5" y="1013" width="116.4" height="15.0" fill="rgb(249,103,6)" rx="2" ry="2" />
<text  x="223.49" y="1023.5" >local.runtime...</text>
</g>
<g >
<title>find_lock_entry (1 samples, 0.14%)</title><rect x="1032.1" y="869" width="1.6" height="15.0" fill="rgb(228,104,47)" rx="2" ry="2" />
<text  x="1035.14" y="879.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.14%)</title><rect x="402.3" y="741" width="1.6" height="15.0" fill="rgb(252,69,16)" rx="2" ry="2" />
<text  x="405.27" y="751.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.14%)</title><rect x="340.1" y="885" width="1.6" height="15.0" fill="rgb(251,30,30)" rx="2" ry="2" />
<text  x="343.08" y="895.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.14%)</title><rect x="400.7" y="1013" width="1.6" height="15.0" fill="rgb(247,202,33)" rx="2" ry="2" />
<text  x="403.68" y="1023.5" ></text>
</g>
<g >
<title>local.encoding/json.sliceEncoder.encode-fm (16 samples, 2.16%)</title><rect x="75.4" y="821" width="25.5" height="15.0" fill="rgb(243,18,5)" rx="2" ry="2" />
<text  x="78.38" y="831.5" >l..</text>
</g>
<g >
<title>event_base_loop (2 samples, 0.27%)</title><rect x="373.6" y="1061" width="3.2" height="15.0" fill="rgb(216,32,13)" rx="2" ry="2" />
<text  x="376.57" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 1.22%)</title><rect x="1131.0" y="1013" width="14.4" height="15.0" fill="rgb(235,175,32)" rx="2" ry="2" />
<text  x="1134.00" y="1023.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavengeRangeLocked (1 samples, 0.14%)</title><rect x="218.9" y="981" width="1.6" height="15.0" fill="rgb(226,142,4)" rx="2" ry="2" />
<text  x="221.89" y="991.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (1 samples, 0.14%)</title><rect x="981.1" y="821" width="1.6" height="15.0" fill="rgb(243,90,19)" rx="2" ry="2" />
<text  x="984.11" y="831.5" ></text>
</g>
<g >
<title>runtime.bgsweep (3 samples, 0.41%)</title><rect x="204.5" y="1045" width="4.8" height="15.0" fill="rgb(222,151,15)" rx="2" ry="2" />
<text  x="207.54" y="1055.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1 samples, 0.14%)</title><rect x="990.7" y="645" width="1.6" height="15.0" fill="rgb(243,172,22)" rx="2" ry="2" />
<text  x="993.68" y="655.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd.(*remoteContainers).stream (1 samples, 0.14%)</title><rect x="27.5" y="965" width="1.6" height="15.0" fill="rgb(229,117,27)" rx="2" ry="2" />
<text  x="30.54" y="975.5" ></text>
</g>
<g >
<title>github.com/docker/docker/vendor/github.com/pkg/errors.callers (2 samples, 0.27%)</title><rect x="110.5" y="821" width="3.1" height="15.0" fill="rgb(238,157,51)" rx="2" ry="2" />
<text  x="113.46" y="831.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.14%)</title><rect x="405.5" y="1045" width="1.6" height="15.0" fill="rgb(224,115,50)" rx="2" ry="2" />
<text  x="408.46" y="1055.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.14%)</title><rect x="120.0" y="581" width="1.6" height="15.0" fill="rgb(248,154,42)" rx="2" ry="2" />
<text  x="123.03" y="591.5" ></text>
</g>
<g >
<title>local.runtime.pcvalue (2 samples, 0.27%)</title><rect x="129.6" y="629" width="3.2" height="15.0" fill="rgb(234,109,35)" rx="2" ry="2" />
<text  x="132.59" y="639.5" ></text>
</g>
<g >
<title>start_thread (11 samples, 1.49%)</title><rect x="1148.5" y="1061" width="17.6" height="15.0" fill="rgb(206,128,54)" rx="2" ry="2" />
<text  x="1151.54" y="1071.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.14%)</title><rect x="378.4" y="837" width="1.5" height="15.0" fill="rgb(227,75,0)" rx="2" ry="2" />
<text  x="381.35" y="847.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.14%)</title><rect x="352.8" y="869" width="1.6" height="15.0" fill="rgb(225,198,25)" rx="2" ry="2" />
<text  x="355.84" y="879.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.27%)</title><rect x="110.5" y="805" width="3.1" height="15.0" fill="rgb(236,124,23)" rx="2" ry="2" />
<text  x="113.46" y="815.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (2 samples, 0.27%)</title><rect x="110.5" y="789" width="3.1" height="15.0" fill="rgb(213,42,6)" rx="2" ry="2" />
<text  x="113.46" y="799.5" ></text>
</g>
<g >
<title>epoll_wait (3 samples, 0.41%)</title><rect x="1172.5" y="997" width="4.7" height="15.0" fill="rgb(230,150,19)" rx="2" ry="2" />
<text  x="1175.46" y="1007.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.14%)</title><rect x="990.7" y="517" width="1.6" height="15.0" fill="rgb(215,79,26)" rx="2" ry="2" />
<text  x="993.68" y="527.5" ></text>
</g>
<g >
<title>kworker/20:4 (1 samples, 0.14%)</title><rect x="1005.0" y="1077" width="1.6" height="15.0" fill="rgb(242,225,41)" rx="2" ry="2" />
<text  x="1008.03" y="1087.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="376.8" y="917" width="1.6" height="15.0" fill="rgb(216,55,24)" rx="2" ry="2" />
<text  x="379.76" y="927.5" ></text>
</g>
<g >
<title>local.runtime.pcvalue (1 samples, 0.14%)</title><rect x="132.8" y="629" width="1.6" height="15.0" fill="rgb(231,221,16)" rx="2" ry="2" />
<text  x="135.78" y="639.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.14%)</title><rect x="1142.2" y="885" width="1.6" height="15.0" fill="rgb(214,84,35)" rx="2" ry="2" />
<text  x="1145.16" y="895.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.14%)</title><rect x="1003.4" y="1045" width="1.6" height="15.0" fill="rgb(227,133,0)" rx="2" ry="2" />
<text  x="1006.43" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.41%)</title><rect x="1119.8" y="1061" width="4.8" height="15.0" fill="rgb(211,19,27)" rx="2" ry="2" />
<text  x="1122.84" y="1071.5" ></text>
</g>
<g >
<title>os.(*File).Close (1 samples, 0.14%)</title><rect x="115.2" y="709" width="1.6" height="15.0" fill="rgb(239,161,13)" rx="2" ry="2" />
<text  x="118.24" y="719.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/daemon.(*Daemon).fillPlatformVersion (1 samples, 0.14%)</title><rect x="198.2" y="869" width="1.6" height="15.0" fill="rgb(226,212,0)" rx="2" ry="2" />
<text  x="201.16" y="879.5" ></text>
</g>
<g >
<title>local.runtime.gentraceback (2 samples, 0.27%)</title><rect x="110.5" y="773" width="3.1" height="15.0" fill="rgb(215,43,37)" rx="2" ry="2" />
<text  x="113.46" y="783.5" ></text>
</g>
<g >
<title>ep_poll (1 samples, 0.14%)</title><rect x="1175.6" y="917" width="1.6" height="15.0" fill="rgb(213,71,3)" rx="2" ry="2" />
<text  x="1178.65" y="927.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="1146.9" y="1045" width="1.6" height="15.0" fill="rgb(221,116,21)" rx="2" ry="2" />
<text  x="1149.95" y="1055.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.14%)</title><rect x="946.0" y="437" width="1.6" height="15.0" fill="rgb(252,228,31)" rx="2" ry="2" />
<text  x="949.03" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="942.8" y="773" width="1.6" height="15.0" fill="rgb(211,44,50)" rx="2" ry="2" />
<text  x="945.84" y="783.5" ></text>
</g>
<g >
<title>Envoy::Http::TlsCachingDateProviderImpl::onRefreshDate() (3 samples, 0.41%)</title><rect x="365.6" y="949" width="4.8" height="15.0" fill="rgb(244,154,53)" rx="2" ry="2" />
<text  x="368.59" y="959.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.14%)</title><rect x="998.6" y="885" width="1.6" height="15.0" fill="rgb(206,123,3)" rx="2" ry="2" />
<text  x="1001.65" y="895.5" ></text>
</g>
<g >
<title>process_backlog (1 samples, 0.14%)</title><rect x="944.4" y="421" width="1.6" height="15.0" fill="rgb(248,226,10)" rx="2" ry="2" />
<text  x="947.43" y="431.5" ></text>
</g>
<g >
<title>__br_forward (1 samples, 0.14%)</title><rect x="990.7" y="469" width="1.6" height="15.0" fill="rgb(233,21,27)" rx="2" ry="2" />
<text  x="993.68" y="479.5" ></text>
</g>
<g >
<title>Envoy::Matchers::StringMatcherImpl&lt;envoy::type::matcher::v3::StringMatcher&gt;::match(absl::string_view) const (1 samples, 0.14%)</title><rect x="1180.4" y="693" width="1.6" height="15.0" fill="rgb(205,77,32)" rx="2" ry="2" />
<text  x="1183.43" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.27%)</title><rect x="116.8" y="645" width="3.2" height="15.0" fill="rgb(219,94,23)" rx="2" ry="2" />
<text  x="119.84" y="655.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.27%)</title><rect x="1150.1" y="837" width="3.2" height="15.0" fill="rgb(211,11,39)" rx="2" ry="2" />
<text  x="1153.14" y="847.5" ></text>
</g>
<g >
<title>local.runtime.newobject (1 samples, 0.14%)</title><rect x="113.6" y="821" width="1.6" height="15.0" fill="rgb(224,178,22)" rx="2" ry="2" />
<text  x="116.65" y="831.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.14%)</title><rect x="402.3" y="581" width="1.6" height="15.0" fill="rgb(224,115,44)" rx="2" ry="2" />
<text  x="405.27" y="591.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="376.8" y="1061" width="3.1" height="15.0" fill="rgb(246,151,32)" rx="2" ry="2" />
<text  x="379.76" y="1071.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="400.7" y="1029" width="1.6" height="15.0" fill="rgb(233,15,50)" rx="2" ry="2" />
<text  x="403.68" y="1039.5" ></text>
</g>
<g >
<title>runtime.sysmon (8 samples, 1.08%)</title><rect x="43.5" y="997" width="12.7" height="15.0" fill="rgb(240,109,35)" rx="2" ry="2" />
<text  x="46.49" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1102.3" y="869" width="1.6" height="15.0" fill="rgb(248,186,6)" rx="2" ry="2" />
<text  x="1105.30" y="879.5" ></text>
</g>
<g >
<title>__d_lookup (1 samples, 0.14%)</title><rect x="939.6" y="581" width="1.6" height="15.0" fill="rgb(246,173,32)" rx="2" ry="2" />
<text  x="942.65" y="591.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.14%)</title><rect x="946.0" y="597" width="1.6" height="15.0" fill="rgb(244,28,0)" rx="2" ry="2" />
<text  x="949.03" y="607.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.27%)</title><rect x="397.5" y="949" width="3.2" height="15.0" fill="rgb(226,81,20)" rx="2" ry="2" />
<text  x="400.49" y="959.5" ></text>
</g>
<g >
<title>__d_lookup (1 samples, 0.14%)</title><rect x="965.2" y="661" width="1.6" height="15.0" fill="rgb(246,30,42)" rx="2" ry="2" />
<text  x="968.16" y="671.5" ></text>
</g>
<g >
<title>user_path_at_empty (1 samples, 0.14%)</title><rect x="954.0" y="757" width="1.6" height="15.0" fill="rgb(223,108,18)" rx="2" ry="2" />
<text  x="957.00" y="767.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.14%)</title><rect x="997.1" y="869" width="1.5" height="15.0" fill="rgb(221,114,19)" rx="2" ry="2" />
<text  x="1000.05" y="879.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.14%)</title><rect x="392.7" y="1045" width="1.6" height="15.0" fill="rgb(208,133,27)" rx="2" ry="2" />
<text  x="395.70" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Extensions::TransportSockets::Tls::ContextManagerImpl::daysUntilFirstCertExpires() const (1 samples, 0.14%)</title><rect x="357.6" y="869" width="1.6" height="15.0" fill="rgb(219,99,0)" rx="2" ry="2" />
<text  x="360.62" y="879.5" ></text>
</g>
<g >
<title>vfs_writev (1 samples, 0.14%)</title><rect x="1161.3" y="789" width="1.6" height="15.0" fill="rgb(232,224,27)" rx="2" ry="2" />
<text  x="1164.30" y="799.5" ></text>
</g>
<g >
<title>Envoy::Http::CodecClient::onData(Envoy::Buffer::Instance&amp;) (1 samples, 0.14%)</title><rect x="1178.8" y="885" width="1.6" height="15.0" fill="rgb(215,206,0)" rx="2" ry="2" />
<text  x="1181.84" y="895.5" ></text>
</g>
<g >
<title>runtime.epollctl (1 samples, 0.14%)</title><rect x="198.2" y="693" width="1.6" height="15.0" fill="rgb(212,158,5)" rx="2" ry="2" />
<text  x="201.16" y="703.5" ></text>
</g>
<g >
<title>kworker/3:2 (1 samples, 0.14%)</title><rect x="1017.8" y="1077" width="1.6" height="15.0" fill="rgb(207,224,25)" rx="2" ry="2" />
<text  x="1020.78" y="1087.5" ></text>
</g>
<g >
<title>__x64_sys_writev (2 samples, 0.27%)</title><rect x="1185.2" y="821" width="3.2" height="15.0" fill="rgb(207,228,13)" rx="2" ry="2" />
<text  x="1188.22" y="831.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (1 samples, 0.14%)</title><rect x="950.8" y="725" width="1.6" height="15.0" fill="rgb(247,156,31)" rx="2" ry="2" />
<text  x="953.81" y="735.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 0.14%)</title><rect x="977.9" y="821" width="1.6" height="15.0" fill="rgb(220,64,54)" rx="2" ry="2" />
<text  x="980.92" y="831.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (1 samples, 0.14%)</title><rect x="218.9" y="917" width="1.6" height="15.0" fill="rgb(237,67,39)" rx="2" ry="2" />
<text  x="221.89" y="927.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/metadata.(*containerStore).List (1 samples, 0.14%)</title><rect x="27.5" y="869" width="1.6" height="15.0" fill="rgb(213,155,32)" rx="2" ry="2" />
<text  x="30.54" y="879.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (1 samples, 0.14%)</title><rect x="954.0" y="725" width="1.6" height="15.0" fill="rgb(238,170,27)" rx="2" ry="2" />
<text  x="957.00" y="735.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.14%)</title><rect x="1030.5" y="1045" width="1.6" height="15.0" fill="rgb(246,159,43)" rx="2" ry="2" />
<text  x="1033.54" y="1055.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (2 samples, 0.27%)</title><rect x="1185.2" y="677" width="3.2" height="15.0" fill="rgb(230,152,1)" rx="2" ry="2" />
<text  x="1188.22" y="687.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1154.9" y="629" width="1.6" height="15.0" fill="rgb(235,96,54)" rx="2" ry="2" />
<text  x="1157.92" y="639.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.14%)</title><rect x="33.9" y="997" width="1.6" height="15.0" fill="rgb(221,46,43)" rx="2" ry="2" />
<text  x="36.92" y="1007.5" ></text>
</g>
<g >
<title>local.encoding/json.cachedTypeFields (1 samples, 0.14%)</title><rect x="153.5" y="613" width="1.6" height="15.0" fill="rgb(239,94,50)" rx="2" ry="2" />
<text  x="156.51" y="623.5" ></text>
</g>
<g >
<title>runc (11 samples, 1.49%)</title><rect x="1131.0" y="1077" width="17.5" height="15.0" fill="rgb(251,221,52)" rx="2" ry="2" />
<text  x="1134.00" y="1087.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.14%)</title><rect x="1174.1" y="933" width="1.5" height="15.0" fill="rgb(205,82,31)" rx="2" ry="2" />
<text  x="1177.05" y="943.5" ></text>
</g>
<g >
<title>seq_read_iter (2 samples, 0.27%)</title><rect x="958.8" y="725" width="3.2" height="15.0" fill="rgb(243,185,13)" rx="2" ry="2" />
<text  x="961.78" y="735.5" ></text>
</g>
<g >
<title>inode_permission (1 samples, 0.14%)</title><rect x="963.6" y="709" width="1.6" height="15.0" fill="rgb(235,206,35)" rx="2" ry="2" />
<text  x="966.57" y="719.5" ></text>
</g>
<g >
<title>local.runtime.scanobject (24 samples, 3.24%)</title><rect x="265.1" y="997" width="38.3" height="15.0" fill="rgb(213,80,35)" rx="2" ry="2" />
<text  x="268.14" y="1007.5" >loc..</text>
</g>
<g >
<title>[unknown] (10 samples, 1.35%)</title><rect x="1131.0" y="1061" width="15.9" height="15.0" fill="rgb(207,81,51)" rx="2" ry="2" />
<text  x="1134.00" y="1071.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/go.etcd.io/bbolt.(*Cursor).search (1 samples, 0.14%)</title><rect x="27.5" y="693" width="1.6" height="15.0" fill="rgb(229,26,12)" rx="2" ry="2" />
<text  x="30.54" y="703.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::OwnedImplReservationSlicesOwnerMultiple::~OwnedImplReservationSlicesOwnerMultiple() (1 samples, 0.14%)</title><rect x="1158.1" y="869" width="1.6" height="15.0" fill="rgb(239,124,39)" rx="2" ry="2" />
<text  x="1161.11" y="879.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (1 samples, 0.14%)</title><rect x="115.2" y="549" width="1.6" height="15.0" fill="rgb(222,197,47)" rx="2" ry="2" />
<text  x="118.24" y="559.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.14%)</title><rect x="402.3" y="629" width="1.6" height="15.0" fill="rgb(231,182,1)" rx="2" ry="2" />
<text  x="405.27" y="639.5" ></text>
</g>
<g >
<title>writev (1 samples, 0.14%)</title><rect x="1161.3" y="869" width="1.6" height="15.0" fill="rgb(230,162,34)" rx="2" ry="2" />
<text  x="1164.30" y="879.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (1 samples, 0.14%)</title><rect x="981.1" y="757" width="1.6" height="15.0" fill="rgb(251,37,16)" rx="2" ry="2" />
<text  x="984.11" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.27%)</title><rect x="1185.2" y="853" width="3.2" height="15.0" fill="rgb(249,74,32)" rx="2" ry="2" />
<text  x="1188.22" y="863.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.14%)</title><rect x="946.0" y="485" width="1.6" height="15.0" fill="rgb(224,69,48)" rx="2" ry="2" />
<text  x="949.03" y="495.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (2 samples, 0.27%)</title><rect x="1150.1" y="901" width="3.2" height="15.0" fill="rgb(209,200,2)" rx="2" ry="2" />
<text  x="1153.14" y="911.5" ></text>
</g>
<g >
<title>proc_pid_limits (1 samples, 0.14%)</title><rect x="974.7" y="725" width="1.6" height="15.0" fill="rgb(216,7,30)" rx="2" ry="2" />
<text  x="977.73" y="735.5" ></text>
</g>
<g >
<title>event_process_active_single_queue (1 samples, 0.14%)</title><rect x="343.3" y="1029" width="1.6" height="15.0" fill="rgb(205,186,45)" rx="2" ry="2" />
<text  x="346.27" y="1039.5" ></text>
</g>
<g >
<title>local.net/http.serverHandler.ServeHTTP (79 samples, 10.68%)</title><rect x="75.4" y="1029" width="126.0" height="15.0" fill="rgb(235,79,16)" rx="2" ry="2" />
<text  x="78.38" y="1039.5" >local.net/http...</text>
</g>
<g >
<title>step_into (2 samples, 0.27%)</title><rect x="966.8" y="693" width="3.1" height="15.0" fill="rgb(247,196,26)" rx="2" ry="2" />
<text  x="969.76" y="703.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::decodeHeaders(Envoy::Http::RequestHeaderMap&amp;, bool) (1 samples, 0.14%)</title><rect x="1182.0" y="725" width="1.6" height="15.0" fill="rgb(216,53,20)" rx="2" ry="2" />
<text  x="1185.03" y="735.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.14%)</title><rect x="1030.5" y="1013" width="1.6" height="15.0" fill="rgb(232,172,25)" rx="2" ry="2" />
<text  x="1033.54" y="1023.5" ></text>
</g>
<g >
<title>Envoy::StreamInfo::StreamInfoImpl::setResponseCodeDetails(absl::string_view) (1 samples, 0.14%)</title><rect x="1178.8" y="661" width="1.6" height="15.0" fill="rgb(247,125,30)" rx="2" ry="2" />
<text  x="1181.84" y="671.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.41%)</title><rect x="1137.4" y="965" width="4.8" height="15.0" fill="rgb(248,102,54)" rx="2" ry="2" />
<text  x="1140.38" y="975.5" ></text>
</g>
<g >
<title>ep_poll (2 samples, 0.27%)</title><rect x="993.9" y="901" width="3.2" height="15.0" fill="rgb(205,118,28)" rx="2" ry="2" />
<text  x="996.86" y="911.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (1 samples, 0.14%)</title><rect x="123.2" y="517" width="1.6" height="15.0" fill="rgb(208,146,22)" rx="2" ry="2" />
<text  x="126.22" y="527.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (10 samples, 1.35%)</title><rect x="140.8" y="661" width="15.9" height="15.0" fill="rgb(246,135,49)" rx="2" ry="2" />
<text  x="143.76" y="671.5" ></text>
</g>
<g >
<title>number (1 samples, 0.14%)</title><rect x="957.2" y="613" width="1.6" height="15.0" fill="rgb(236,199,14)" rx="2" ry="2" />
<text  x="960.19" y="623.5" ></text>
</g>
<g >
<title>reflect.Value.MapIndex (2 samples, 0.27%)</title><rect x="88.1" y="661" width="3.2" height="15.0" fill="rgb(226,170,27)" rx="2" ry="2" />
<text  x="91.14" y="671.5" ></text>
</g>
<g >
<title>do_writev (1 samples, 0.14%)</title><rect x="1161.3" y="805" width="1.6" height="15.0" fill="rgb(230,175,42)" rx="2" ry="2" />
<text  x="1164.30" y="815.5" ></text>
</g>
<g >
<title>local.encoding/json.ptrEncoder.encode (16 samples, 2.16%)</title><rect x="75.4" y="741" width="25.5" height="15.0" fill="rgb(213,89,46)" rx="2" ry="2" />
<text  x="78.38" y="751.5" >l..</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.14%)</title><rect x="1167.7" y="949" width="1.6" height="15.0" fill="rgb(211,11,0)" rx="2" ry="2" />
<text  x="1170.68" y="959.5" ></text>
</g>
<g >
<title>seq_printf (1 samples, 0.14%)</title><rect x="400.7" y="901" width="1.6" height="15.0" fill="rgb(222,76,36)" rx="2" ry="2" />
<text  x="403.68" y="911.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onMessageComplete() (1 samples, 0.14%)</title><rect x="1156.5" y="789" width="1.6" height="15.0" fill="rgb(211,96,51)" rx="2" ry="2" />
<text  x="1159.51" y="799.5" ></text>
</g>
<g >
<title>start_thread (12 samples, 1.62%)</title><rect x="1170.9" y="1061" width="19.1" height="15.0" fill="rgb(209,82,25)" rx="2" ry="2" />
<text  x="1173.86" y="1071.5" ></text>
</g>
<g >
<title>__ip_finish_output (1 samples, 0.14%)</title><rect x="1102.3" y="533" width="1.6" height="15.0" fill="rgb(250,74,12)" rx="2" ry="2" />
<text  x="1105.30" y="543.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="1013.0" y="981" width="1.6" height="15.0" fill="rgb(216,104,27)" rx="2" ry="2" />
<text  x="1016.00" y="991.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.41%)</title><rect x="1137.4" y="933" width="4.8" height="15.0" fill="rgb(208,13,49)" rx="2" ry="2" />
<text  x="1140.38" y="943.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 1.08%)</title><rect x="950.8" y="821" width="12.8" height="15.0" fill="rgb(224,165,12)" rx="2" ry="2" />
<text  x="953.81" y="831.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.14%)</title><rect x="1123.0" y="997" width="1.6" height="15.0" fill="rgb(228,221,17)" rx="2" ry="2" />
<text  x="1126.03" y="1007.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.14%)</title><rect x="405.5" y="917" width="1.6" height="15.0" fill="rgb(237,67,24)" rx="2" ry="2" />
<text  x="408.46" y="927.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/image.(*fs).GetMetadata (11 samples, 1.49%)</title><rect x="121.6" y="741" width="17.6" height="15.0" fill="rgb(240,128,12)" rx="2" ry="2" />
<text  x="124.62" y="751.5" ></text>
</g>
<g >
<title>__ip_finish_output (1 samples, 0.14%)</title><rect x="944.4" y="549" width="1.6" height="15.0" fill="rgb(254,143,7)" rx="2" ry="2" />
<text  x="947.43" y="559.5" ></text>
</g>
<g >
<title>ret_from_fork (2 samples, 0.27%)</title><rect x="1009.8" y="1061" width="3.2" height="15.0" fill="rgb(237,123,31)" rx="2" ry="2" />
<text  x="1012.81" y="1071.5" ></text>
</g>
<g >
<title>local.runtime.park_m (6 samples, 0.81%)</title><rect x="209.3" y="1013" width="9.6" height="15.0" fill="rgb(233,81,16)" rx="2" ry="2" />
<text  x="212.32" y="1023.5" ></text>
</g>
<g >
<title>memchr (1 samples, 0.14%)</title><rect x="979.5" y="757" width="1.6" height="15.0" fill="rgb(249,207,3)" rx="2" ry="2" />
<text  x="982.51" y="767.5" ></text>
</g>
<g >
<title>__cpufreq_driver_target (1 samples, 0.14%)</title><rect x="1000.2" y="965" width="1.6" height="15.0" fill="rgb(243,144,7)" rx="2" ry="2" />
<text  x="1003.24" y="975.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1115.1" y="773" width="1.5" height="15.0" fill="rgb(252,191,27)" rx="2" ry="2" />
<text  x="1118.05" y="783.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.41%)</title><rect x="1137.4" y="949" width="4.8" height="15.0" fill="rgb(233,61,21)" rx="2" ry="2" />
<text  x="1140.38" y="959.5" ></text>
</g>
<g >
<title>vmstat_update (1 samples, 0.14%)</title><rect x="1030.5" y="997" width="1.6" height="15.0" fill="rgb(238,14,7)" rx="2" ry="2" />
<text  x="1033.54" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 9.73%)</title><rect x="848.8" y="853" width="114.8" height="15.0" fill="rgb(252,118,16)" rx="2" ry="2" />
<text  x="851.76" y="863.5" >[unknown]</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="368.8" y="853" width="1.6" height="15.0" fill="rgb(228,147,30)" rx="2" ry="2" />
<text  x="371.78" y="863.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.14%)</title><rect x="998.6" y="1029" width="1.6" height="15.0" fill="rgb(238,174,0)" rx="2" ry="2" />
<text  x="1001.65" y="1039.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.14%)</title><rect x="1116.6" y="789" width="1.6" height="15.0" fill="rgb(254,205,29)" rx="2" ry="2" />
<text  x="1119.65" y="799.5" ></text>
</g>
<g >
<title>net/http.HandlerFunc.ServeHTTP (79 samples, 10.68%)</title><rect x="75.4" y="997" width="126.0" height="15.0" fill="rgb(236,12,16)" rx="2" ry="2" />
<text  x="78.38" y="1007.5" >net/http.Handle..</text>
</g>
<g >
<title>__x64_sys_openat2 (1 samples, 0.14%)</title><rect x="955.6" y="805" width="1.6" height="15.0" fill="rgb(245,174,16)" rx="2" ry="2" />
<text  x="958.59" y="815.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.14%)</title><rect x="378.4" y="853" width="1.5" height="15.0" fill="rgb(226,148,1)" rx="2" ry="2" />
<text  x="381.35" y="863.5" ></text>
</g>
<g >
<title>github.com/docker/docker/vendor/github.com/opencontainers/go-digest.Digest.Validate (2 samples, 0.27%)</title><rect x="195.0" y="773" width="3.2" height="15.0" fill="rgb(225,36,10)" rx="2" ry="2" />
<text  x="197.97" y="783.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.14%)</title><rect x="375.2" y="1045" width="1.6" height="15.0" fill="rgb(226,55,22)" rx="2" ry="2" />
<text  x="378.16" y="1055.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.14%)</title><rect x="394.3" y="869" width="1.6" height="15.0" fill="rgb(219,186,14)" rx="2" ry="2" />
<text  x="397.30" y="879.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.14%)</title><rect x="400.7" y="965" width="1.6" height="15.0" fill="rgb(249,106,13)" rx="2" ry="2" />
<text  x="403.68" y="975.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.14%)</title><rect x="987.5" y="821" width="1.6" height="15.0" fill="rgb(213,224,21)" rx="2" ry="2" />
<text  x="990.49" y="831.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.14%)</title><rect x="399.1" y="901" width="1.6" height="15.0" fill="rgb(205,129,23)" rx="2" ry="2" />
<text  x="402.08" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="376.8" y="901" width="1.6" height="15.0" fill="rgb(219,68,7)" rx="2" ry="2" />
<text  x="379.76" y="911.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.14%)</title><rect x="1008.2" y="997" width="1.6" height="15.0" fill="rgb(208,110,31)" rx="2" ry="2" />
<text  x="1011.22" y="1007.5" ></text>
</g>
<g >
<title>vfs_read (4 samples, 0.54%)</title><rect x="957.2" y="773" width="6.4" height="15.0" fill="rgb(252,83,14)" rx="2" ry="2" />
<text  x="960.19" y="783.5" ></text>
</g>
<g >
<title>__legitimize_mnt (1 samples, 0.14%)</title><rect x="968.4" y="613" width="1.5" height="15.0" fill="rgb(218,203,3)" rx="2" ry="2" />
<text  x="971.35" y="623.5" ></text>
</g>
<g >
<title>vsnprintf (1 samples, 0.14%)</title><rect x="960.4" y="645" width="1.6" height="15.0" fill="rgb(207,194,43)" rx="2" ry="2" />
<text  x="963.38" y="655.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).WriteString (1 samples, 0.14%)</title><rect x="77.0" y="629" width="1.6" height="15.0" fill="rgb(243,218,11)" rx="2" ry="2" />
<text  x="79.97" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="387.9" y="1029" width="1.6" height="15.0" fill="rgb(205,20,32)" rx="2" ry="2" />
<text  x="390.92" y="1039.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.14%)</title><rect x="987.5" y="805" width="1.6" height="15.0" fill="rgb(227,125,9)" rx="2" ry="2" />
<text  x="990.49" y="815.5" ></text>
</g>
<g >
<title>run_ksoftirqd (1 samples, 0.14%)</title><rect x="403.9" y="1013" width="1.6" height="15.0" fill="rgb(217,97,5)" rx="2" ry="2" />
<text  x="406.86" y="1023.5" ></text>
</g>
<g >
<title>alloc_bprm (1 samples, 0.14%)</title><rect x="387.9" y="789" width="1.6" height="15.0" fill="rgb(217,109,18)" rx="2" ry="2" />
<text  x="390.92" y="799.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.14%)</title><rect x="386.3" y="965" width="1.6" height="15.0" fill="rgb(248,23,29)" rx="2" ry="2" />
<text  x="389.32" y="975.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.14%)</title><rect x="1008.2" y="1029" width="1.6" height="15.0" fill="rgb(212,121,48)" rx="2" ry="2" />
<text  x="1011.22" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.27%)</title><rect x="116.8" y="661" width="3.2" height="15.0" fill="rgb(245,204,41)" rx="2" ry="2" />
<text  x="119.84" y="671.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.14%)</title><rect x="402.3" y="549" width="1.6" height="15.0" fill="rgb(226,70,28)" rx="2" ry="2" />
<text  x="405.27" y="559.5" ></text>
</g>
<g >
<title>vfs_open (1 samples, 0.14%)</title><rect x="416.6" y="933" width="1.6" height="15.0" fill="rgb(227,98,45)" rx="2" ry="2" />
<text  x="419.62" y="943.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (3 samples, 0.41%)</title><rect x="51.5" y="917" width="4.7" height="15.0" fill="rgb(238,124,4)" rx="2" ry="2" />
<text  x="54.46" y="927.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.14%)</title><rect x="1011.4" y="997" width="1.6" height="15.0" fill="rgb(236,49,42)" rx="2" ry="2" />
<text  x="1014.41" y="1007.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="1038.5" y="965" width="1.6" height="15.0" fill="rgb(222,55,34)" rx="2" ry="2" />
<text  x="1041.51" y="975.5" ></text>
</g>
<g >
<title>event_process_active_single_queue (7 samples, 0.95%)</title><rect x="1177.2" y="997" width="11.2" height="15.0" fill="rgb(253,80,33)" rx="2" ry="2" />
<text  x="1180.24" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.68%)</title><rect x="1111.9" y="933" width="7.9" height="15.0" fill="rgb(221,154,22)" rx="2" ry="2" />
<text  x="1114.86" y="943.5" ></text>
</g>
<g >
<title>inet6_fill_link_af (1 samples, 0.14%)</title><rect x="942.8" y="629" width="1.6" height="15.0" fill="rgb(212,96,41)" rx="2" ry="2" />
<text  x="945.84" y="639.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="1022.6" y="965" width="1.6" height="15.0" fill="rgb(239,60,53)" rx="2" ry="2" />
<text  x="1025.57" y="975.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.14%)</title><rect x="378.4" y="901" width="1.5" height="15.0" fill="rgb(217,152,38)" rx="2" ry="2" />
<text  x="381.35" y="911.5" ></text>
</g>
<g >
<title>__clear_user (1 samples, 0.14%)</title><rect x="394.3" y="933" width="1.6" height="15.0" fill="rgb(239,203,44)" rx="2" ry="2" />
<text  x="397.30" y="943.5" ></text>
</g>
<g >
<title>legitimize_mnt (1 samples, 0.14%)</title><rect x="941.2" y="565" width="1.6" height="15.0" fill="rgb(230,213,10)" rx="2" ry="2" />
<text  x="944.24" y="575.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.14%)</title><rect x="402.3" y="997" width="1.6" height="15.0" fill="rgb(231,105,29)" rx="2" ry="2" />
<text  x="405.27" y="1007.5" ></text>
</g>
<g >
<title>do_epoll_wait (1 samples, 0.14%)</title><rect x="985.9" y="853" width="1.6" height="15.0" fill="rgb(229,94,22)" rx="2" ry="2" />
<text  x="988.89" y="863.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="348.1" y="1045" width="1.5" height="15.0" fill="rgb(248,125,40)" rx="2" ry="2" />
<text  x="351.05" y="1055.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (1 samples, 0.14%)</title><rect x="946.0" y="453" width="1.6" height="15.0" fill="rgb(235,220,46)" rx="2" ry="2" />
<text  x="949.03" y="463.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="987.5" y="757" width="1.6" height="15.0" fill="rgb(240,200,43)" rx="2" ry="2" />
<text  x="990.49" y="767.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.14%)</title><rect x="982.7" y="789" width="1.6" height="15.0" fill="rgb(244,84,17)" rx="2" ry="2" />
<text  x="985.70" y="799.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.14%)</title><rect x="364.0" y="725" width="1.6" height="15.0" fill="rgb(227,61,10)" rx="2" ry="2" />
<text  x="367.00" y="735.5" ></text>
</g>
<g >
<title>sock_read_iter (1 samples, 0.14%)</title><rect x="364.0" y="709" width="1.6" height="15.0" fill="rgb(214,165,23)" rx="2" ry="2" />
<text  x="367.00" y="719.5" ></text>
</g>
<g >
<title>kworker/21:0 (1 samples, 0.14%)</title><rect x="1006.6" y="1077" width="1.6" height="15.0" fill="rgb(205,111,9)" rx="2" ry="2" />
<text  x="1009.62" y="1087.5" ></text>
</g>
<g >
<title>local.runtime.putfull (3 samples, 0.41%)</title><rect x="305.0" y="965" width="4.8" height="15.0" fill="rgb(250,131,45)" rx="2" ry="2" />
<text  x="308.00" y="975.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.14%)</title><rect x="955.6" y="773" width="1.6" height="15.0" fill="rgb(254,129,39)" rx="2" ry="2" />
<text  x="958.59" y="783.5" ></text>
</g>
<g >
<title>__inet_stream_connect (1 samples, 0.14%)</title><rect x="944.4" y="693" width="1.6" height="15.0" fill="rgb(213,136,11)" rx="2" ry="2" />
<text  x="947.43" y="703.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::setOption(int, int, void const*, unsigned int) (1 samples, 0.14%)</title><rect x="1183.6" y="805" width="1.6" height="15.0" fill="rgb(253,20,35)" rx="2" ry="2" />
<text  x="1186.62" y="815.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 2.70%)</title><rect x="43.5" y="1061" width="31.9" height="15.0" fill="rgb(250,185,51)" rx="2" ry="2" />
<text  x="46.49" y="1071.5" >[u..</text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.14%)</title><rect x="120.0" y="629" width="1.6" height="15.0" fill="rgb(252,132,25)" rx="2" ry="2" />
<text  x="123.03" y="639.5" ></text>
</g>
<g >
<title>path/filepath.join (1 samples, 0.14%)</title><rect x="126.4" y="709" width="1.6" height="15.0" fill="rgb(211,29,15)" rx="2" ry="2" />
<text  x="129.41" y="719.5" ></text>
</g>
<g >
<title>copy_page (1 samples, 0.14%)</title><rect x="1143.8" y="933" width="1.6" height="15.0" fill="rgb(249,165,40)" rx="2" ry="2" />
<text  x="1146.76" y="943.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createTimerInternal(std::__1::function&lt;void ()&gt;)::$_7, std::__1::allocator&lt;Envoy::Event::DispatcherImpl::createTimerInternal(std::__1::function&lt;void ()&gt;)::$_7&gt;, void ()&gt;::operator()() (1 samples, 0.14%)</title><rect x="370.4" y="949" width="1.6" height="15.0" fill="rgb(234,108,32)" rx="2" ry="2" />
<text  x="373.38" y="959.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.14%)</title><rect x="1188.4" y="997" width="1.6" height="15.0" fill="rgb(249,20,26)" rx="2" ry="2" />
<text  x="1191.41" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (261 samples, 35.27%)</title><rect x="582.5" y="981" width="416.1" height="15.0" fill="rgb(221,53,53)" rx="2" ry="2" />
<text  x="585.46" y="991.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (8 samples, 1.08%)</title><rect x="11.6" y="981" width="12.8" height="15.0" fill="rgb(215,1,52)" rx="2" ry="2" />
<text  x="14.59" y="991.5" ></text>
</g>
<g >
<title>ip_forward_finish (1 samples, 0.14%)</title><rect x="402.3" y="661" width="1.6" height="15.0" fill="rgb(249,148,46)" rx="2" ry="2" />
<text  x="405.27" y="671.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1 samples, 0.14%)</title><rect x="946.0" y="261" width="1.6" height="15.0" fill="rgb(235,14,14)" rx="2" ry="2" />
<text  x="949.03" y="271.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ActiveClient::StreamWrapper::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool) (1 samples, 0.14%)</title><rect x="1154.9" y="725" width="1.6" height="15.0" fill="rgb(246,8,38)" rx="2" ry="2" />
<text  x="1157.92" y="735.5" ></text>
</g>
<g >
<title>[unknown] (23 samples, 3.11%)</title><rect x="901.4" y="741" width="36.7" height="15.0" fill="rgb(235,202,25)" rx="2" ry="2" />
<text  x="904.38" y="751.5" >[un..</text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.14%)</title><rect x="1143.8" y="997" width="1.6" height="15.0" fill="rgb(209,39,40)" rx="2" ry="2" />
<text  x="1146.76" y="1007.5" ></text>
</g>
<g >
<title>process_one_work (3 samples, 0.41%)</title><rect x="1033.7" y="1013" width="4.8" height="15.0" fill="rgb(221,109,41)" rx="2" ry="2" />
<text  x="1036.73" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="938.1" y="741" width="1.5" height="15.0" fill="rgb(226,98,29)" rx="2" ry="2" />
<text  x="941.05" y="751.5" ></text>
</g>
<g >
<title>evthread_posix_unlock (1 samples, 0.14%)</title><rect x="1164.5" y="997" width="1.6" height="15.0" fill="rgb(236,34,1)" rx="2" ry="2" />
<text  x="1167.49" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="376.8" y="1013" width="3.1" height="15.0" fill="rgb(249,74,29)" rx="2" ry="2" />
<text  x="379.76" y="1023.5" ></text>
</g>
<g >
<title>arch_do_signal (1 samples, 0.14%)</title><rect x="378.4" y="885" width="1.5" height="15.0" fill="rgb(252,151,53)" rx="2" ry="2" />
<text  x="381.35" y="895.5" ></text>
</g>
<g >
<title>find_lock_entry (1 samples, 0.14%)</title><rect x="998.6" y="869" width="1.6" height="15.0" fill="rgb(226,116,48)" rx="2" ry="2" />
<text  x="1001.65" y="879.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.14%)</title><rect x="91.3" y="581" width="1.6" height="15.0" fill="rgb(206,131,11)" rx="2" ry="2" />
<text  x="94.32" y="591.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Init (1 samples, 0.14%)</title><rect x="124.8" y="645" width="1.6" height="15.0" fill="rgb(218,86,33)" rx="2" ry="2" />
<text  x="127.81" y="655.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.14%)</title><rect x="402.3" y="597" width="1.6" height="15.0" fill="rgb(230,87,36)" rx="2" ry="2" />
<text  x="405.27" y="607.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.14%)</title><rect x="368.8" y="821" width="1.6" height="15.0" fill="rgb(237,51,51)" rx="2" ry="2" />
<text  x="371.78" y="831.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.14%)</title><rect x="947.6" y="725" width="1.6" height="15.0" fill="rgb(210,73,9)" rx="2" ry="2" />
<text  x="950.62" y="735.5" ></text>
</g>
<g >
<title>event_base_loop (2 samples, 0.27%)</title><rect x="341.7" y="1045" width="3.2" height="15.0" fill="rgb(244,169,42)" rx="2" ry="2" />
<text  x="344.68" y="1055.5" ></text>
</g>
<g >
<title>do_iter_read (1 samples, 0.14%)</title><rect x="364.0" y="741" width="1.6" height="15.0" fill="rgb(212,63,49)" rx="2" ry="2" />
<text  x="367.00" y="751.5" ></text>
</g>
<g >
<title>dockerd (189 samples, 25.54%)</title><rect x="35.5" y="1077" width="301.4" height="15.0" fill="rgb(221,115,39)" rx="2" ry="2" />
<text  x="38.51" y="1087.5" >dockerd</text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.27%)</title><rect x="1014.6" y="965" width="3.2" height="15.0" fill="rgb(217,27,28)" rx="2" ry="2" />
<text  x="1017.59" y="975.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Init (1 samples, 0.14%)</title><rect x="198.2" y="741" width="1.6" height="15.0" fill="rgb(224,201,10)" rx="2" ry="2" />
<text  x="201.16" y="751.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.14%)</title><rect x="1103.9" y="853" width="1.6" height="15.0" fill="rgb(253,97,35)" rx="2" ry="2" />
<text  x="1106.89" y="863.5" ></text>
</g>
<g >
<title>Envoy::Http::CodecClient::CodecReadFilter::onData(Envoy::Buffer::Instance&amp;, bool) (1 samples, 0.14%)</title><rect x="1154.9" y="901" width="1.6" height="15.0" fill="rgb(248,67,49)" rx="2" ry="2" />
<text  x="1157.92" y="911.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.14%)</title><rect x="352.8" y="885" width="1.6" height="15.0" fill="rgb(246,189,33)" rx="2" ry="2" />
<text  x="355.84" y="895.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (2 samples, 0.27%)</title><rect x="952.4" y="805" width="3.2" height="15.0" fill="rgb(243,133,24)" rx="2" ry="2" />
<text  x="955.41" y="815.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (1 samples, 0.14%)</title><rect x="218.9" y="805" width="1.6" height="15.0" fill="rgb(244,182,38)" rx="2" ry="2" />
<text  x="221.89" y="815.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="1121.4" y="1013" width="3.2" height="15.0" fill="rgb(249,26,1)" rx="2" ry="2" />
<text  x="1124.43" y="1023.5" ></text>
</g>
<g >
<title>github.com/docker/docker/api/server/httputils.WriteJSON (16 samples, 2.16%)</title><rect x="75.4" y="885" width="25.5" height="15.0" fill="rgb(240,160,25)" rx="2" ry="2" />
<text  x="78.38" y="895.5" >g..</text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.14%)</title><rect x="1102.3" y="501" width="1.6" height="15.0" fill="rgb(241,40,44)" rx="2" ry="2" />
<text  x="1105.30" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1115.1" y="837" width="1.5" height="15.0" fill="rgb(224,118,22)" rx="2" ry="2" />
<text  x="1118.05" y="847.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.14%)</title><rect x="1022.6" y="1061" width="1.6" height="15.0" fill="rgb(218,89,36)" rx="2" ry="2" />
<text  x="1025.57" y="1071.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.14%)</title><rect x="1017.8" y="1013" width="1.6" height="15.0" fill="rgb(223,166,46)" rx="2" ry="2" />
<text  x="1020.78" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Buffer::WatermarkBuffer::commit(unsigned long, absl::Span&lt;Envoy::Buffer::RawSlice&gt;, std::__1::unique_ptr&lt;Envoy::Buffer::ReservationSlicesOwner, std::__1::default_delete&lt;Envoy::Buffer::ReservationSlicesOwner&gt; &gt;) (1 samples, 0.14%)</title><rect x="1159.7" y="869" width="1.6" height="15.0" fill="rgb(208,219,34)" rx="2" ry="2" />
<text  x="1162.70" y="879.5" ></text>
</g>
<g >
<title>skb_network_protocol (1 samples, 0.14%)</title><rect x="990.7" y="357" width="1.6" height="15.0" fill="rgb(211,165,47)" rx="2" ry="2" />
<text  x="993.68" y="367.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Server::GuardDogImpl::start(Envoy::Api::Api&amp;)::$_4, std::__1::allocator&lt;Envoy::Server::GuardDogImpl::start(Envoy::Api::Api&amp;)::$_4&gt;, void ()&gt;::operator()() (2 samples, 0.27%)</title><rect x="338.5" y="1061" width="3.2" height="15.0" fill="rgb(214,102,12)" rx="2" ry="2" />
<text  x="341.49" y="1071.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/containers.(*local).ListStream.func1 (1 samples, 0.14%)</title><rect x="27.5" y="885" width="1.6" height="15.0" fill="rgb(219,195,50)" rx="2" ry="2" />
<text  x="30.54" y="895.5" ></text>
</g>
<g >
<title>github.com/docker/docker/api/types/strslice.(*StrSlice).UnmarshalJSON (1 samples, 0.14%)</title><rect x="171.1" y="613" width="1.5" height="15.0" fill="rgb(246,65,42)" rx="2" ry="2" />
<text  x="174.05" y="623.5" ></text>
</g>
<g >
<title>runtime.getempty (1 samples, 0.14%)</title><rect x="290.6" y="949" width="1.6" height="15.0" fill="rgb(245,60,32)" rx="2" ry="2" />
<text  x="293.65" y="959.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.14%)</title><rect x="77.0" y="565" width="1.6" height="15.0" fill="rgb(244,130,37)" rx="2" ry="2" />
<text  x="79.97" y="575.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (1 samples, 0.14%)</title><rect x="976.3" y="725" width="1.6" height="15.0" fill="rgb(216,162,18)" rx="2" ry="2" />
<text  x="979.32" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (1 samples, 0.14%)</title><rect x="202.9" y="901" width="1.6" height="15.0" fill="rgb(207,217,51)" rx="2" ry="2" />
<text  x="205.95" y="911.5" ></text>
</g>
<g >
<title>Envoy::Router::Filter::onUpstreamHeaders(unsigned long, std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, Envoy::Router::UpstreamRequest&amp;, bool) (1 samples, 0.14%)</title><rect x="1178.8" y="693" width="1.6" height="15.0" fill="rgb(220,124,47)" rx="2" ry="2" />
<text  x="1181.84" y="703.5" ></text>
</g>
<g >
<title>intel_cpufreq_update_pstate (1 samples, 0.14%)</title><rect x="1009.8" y="933" width="1.6" height="15.0" fill="rgb(228,189,39)" rx="2" ry="2" />
<text  x="1012.81" y="943.5" ></text>
</g>
<g >
<title>legitimize_mnt (1 samples, 0.14%)</title><rect x="989.1" y="725" width="1.6" height="15.0" fill="rgb(210,75,32)" rx="2" ry="2" />
<text  x="992.08" y="735.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 1.22%)</title><rect x="10.0" y="1045" width="14.4" height="15.0" fill="rgb(250,17,9)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (364 samples, 49.19%)</title><rect x="418.2" y="1045" width="580.4" height="15.0" fill="rgb(215,127,32)" rx="2" ry="2" />
<text  x="421.22" y="1055.5" >[unknown]</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.27%)</title><rect x="939.6" y="757" width="3.2" height="15.0" fill="rgb(206,152,45)" rx="2" ry="2" />
<text  x="942.65" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="936.5" y="709" width="1.6" height="15.0" fill="rgb(233,181,32)" rx="2" ry="2" />
<text  x="939.46" y="719.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.14%)</title><rect x="947.6" y="693" width="1.6" height="15.0" fill="rgb(240,169,35)" rx="2" ry="2" />
<text  x="950.62" y="703.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1115.1" y="693" width="1.5" height="15.0" fill="rgb(219,31,6)" rx="2" ry="2" />
<text  x="1118.05" y="703.5" ></text>
</g>
<g >
<title>ep_send_events_proc (1 samples, 0.14%)</title><rect x="985.9" y="805" width="1.6" height="15.0" fill="rgb(229,146,27)" rx="2" ry="2" />
<text  x="988.89" y="815.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (1 samples, 0.14%)</title><rect x="143.9" y="533" width="1.6" height="15.0" fill="rgb(221,7,24)" rx="2" ry="2" />
<text  x="146.95" y="543.5" ></text>
</g>
<g >
<title>time.parse (1 samples, 0.14%)</title><rect x="151.9" y="581" width="1.6" height="15.0" fill="rgb(246,225,9)" rx="2" ry="2" />
<text  x="154.92" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.41%)</title><rect x="993.9" y="949" width="4.7" height="15.0" fill="rgb(235,105,47)" rx="2" ry="2" />
<text  x="996.86" y="959.5" ></text>
</g>
<g >
<title>intel_cpufreq_target (1 samples, 0.14%)</title><rect x="1005.0" y="933" width="1.6" height="15.0" fill="rgb(206,150,34)" rx="2" ry="2" />
<text  x="1008.03" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="933.3" y="581" width="1.6" height="15.0" fill="rgb(243,137,24)" rx="2" ry="2" />
<text  x="936.27" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.41%)</title><rect x="352.8" y="949" width="4.8" height="15.0" fill="rgb(219,37,31)" rx="2" ry="2" />
<text  x="355.84" y="959.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.14%)</title><rect x="378.4" y="917" width="1.5" height="15.0" fill="rgb(217,18,40)" rx="2" ry="2" />
<text  x="381.35" y="927.5" ></text>
</g>
<g >
<title>local.runtime.mapaccess2 (1 samples, 0.14%)</title><rect x="153.5" y="581" width="1.6" height="15.0" fill="rgb(241,63,48)" rx="2" ry="2" />
<text  x="156.51" y="591.5" ></text>
</g>
<g >
<title>reflect.Value.MapKeys (2 samples, 0.27%)</title><rect x="91.3" y="661" width="3.2" height="15.0" fill="rgb(220,45,40)" rx="2" ry="2" />
<text  x="94.32" y="671.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="1139.0" y="853" width="3.2" height="15.0" fill="rgb(253,155,44)" rx="2" ry="2" />
<text  x="1141.97" y="863.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.27%)</title><rect x="383.1" y="933" width="3.2" height="15.0" fill="rgb(218,133,7)" rx="2" ry="2" />
<text  x="386.14" y="943.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.14%)</title><rect x="944.4" y="373" width="1.6" height="15.0" fill="rgb(205,126,53)" rx="2" ry="2" />
<text  x="947.43" y="383.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatchSlice(char const*, unsigned long) (1 samples, 0.14%)</title><rect x="1156.5" y="853" width="1.6" height="15.0" fill="rgb(210,67,5)" rx="2" ry="2" />
<text  x="1159.51" y="863.5" ></text>
</g>
<g >
<title>os.newFile (1 samples, 0.14%)</title><rect x="198.2" y="757" width="1.6" height="15.0" fill="rgb(221,6,18)" rx="2" ry="2" />
<text  x="201.16" y="767.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.14%)</title><rect x="1185.2" y="165" width="1.6" height="15.0" fill="rgb(254,223,49)" rx="2" ry="2" />
<text  x="1188.22" y="175.5" ></text>
</g>
<g >
<title>do_sys_open (1 samples, 0.14%)</title><rect x="416.6" y="997" width="1.6" height="15.0" fill="rgb(213,103,13)" rx="2" ry="2" />
<text  x="419.62" y="1007.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.14%)</title><rect x="402.3" y="1061" width="1.6" height="15.0" fill="rgb(228,130,0)" rx="2" ry="2" />
<text  x="405.27" y="1071.5" ></text>
</g>
<g >
<title>rcu_gp_kthread (4 samples, 0.54%)</title><rect x="1124.6" y="1029" width="6.4" height="15.0" fill="rgb(252,63,19)" rx="2" ry="2" />
<text  x="1127.62" y="1039.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="1123.0" y="949" width="1.6" height="15.0" fill="rgb(226,61,21)" rx="2" ry="2" />
<text  x="1126.03" y="959.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.14%)</title><rect x="987.5" y="789" width="1.6" height="15.0" fill="rgb(218,149,52)" rx="2" ry="2" />
<text  x="990.49" y="799.5" ></text>
</g>
<g >
<title>__snmp6_fill_stats64.isra.0 (1 samples, 0.14%)</title><rect x="942.8" y="597" width="1.6" height="15.0" fill="rgb(214,115,2)" rx="2" ry="2" />
<text  x="945.84" y="607.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.14%)</title><rect x="944.4" y="117" width="1.6" height="15.0" fill="rgb(242,62,17)" rx="2" ry="2" />
<text  x="947.43" y="127.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (3 samples, 0.41%)</title><rect x="51.5" y="933" width="4.7" height="15.0" fill="rgb(212,163,20)" rx="2" ry="2" />
<text  x="54.46" y="943.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.14%)</title><rect x="1185.2" y="437" width="1.6" height="15.0" fill="rgb(240,55,2)" rx="2" ry="2" />
<text  x="1188.22" y="447.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.14%)</title><rect x="1145.4" y="997" width="1.5" height="15.0" fill="rgb(224,96,53)" rx="2" ry="2" />
<text  x="1148.35" y="1007.5" ></text>
</g>
<g >
<title>encoding/json.sliceEncoder.encode (16 samples, 2.16%)</title><rect x="75.4" y="805" width="25.5" height="15.0" fill="rgb(205,169,19)" rx="2" ry="2" />
<text  x="78.38" y="815.5" >e..</text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.14%)</title><rect x="164.7" y="581" width="1.6" height="15.0" fill="rgb(210,28,15)" rx="2" ry="2" />
<text  x="167.68" y="591.5" ></text>
</g>
<g >
<title>local.encoding/json.(*decodeState).scanNext (1 samples, 0.14%)</title><rect x="172.6" y="661" width="1.6" height="15.0" fill="rgb(219,175,20)" rx="2" ry="2" />
<text  x="175.65" y="671.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.14%)</title><rect x="1103.9" y="885" width="1.6" height="15.0" fill="rgb(235,128,22)" rx="2" ry="2" />
<text  x="1106.89" y="895.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (1 samples, 0.14%)</title><rect x="997.1" y="933" width="1.5" height="15.0" fill="rgb(223,210,23)" rx="2" ry="2" />
<text  x="1000.05" y="943.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1 samples, 0.14%)</title><rect x="990.7" y="741" width="1.6" height="15.0" fill="rgb(222,14,45)" rx="2" ry="2" />
<text  x="993.68" y="751.5" ></text>
</g>
<g >
<title>check_pointer (1 samples, 0.14%)</title><rect x="974.7" y="629" width="1.6" height="15.0" fill="rgb(212,197,17)" rx="2" ry="2" />
<text  x="977.73" y="639.5" ></text>
</g>
<g >
<title>do_epoll_wait (1 samples, 0.14%)</title><rect x="984.3" y="837" width="1.6" height="15.0" fill="rgb(228,109,34)" rx="2" ry="2" />
<text  x="987.30" y="847.5" ></text>
</g>
<g >
<title>__ip_finish_output (1 samples, 0.14%)</title><rect x="402.3" y="613" width="1.6" height="15.0" fill="rgb(222,150,53)" rx="2" ry="2" />
<text  x="405.27" y="623.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.14%)</title><rect x="1140.6" y="725" width="1.6" height="15.0" fill="rgb(227,199,31)" rx="2" ry="2" />
<text  x="1143.57" y="735.5" ></text>
</g>
<g >
<title>intel_cpufreq_target (1 samples, 0.14%)</title><rect x="1009.8" y="949" width="1.6" height="15.0" fill="rgb(225,63,41)" rx="2" ry="2" />
<text  x="1012.81" y="959.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.14%)</title><rect x="990.7" y="565" width="1.6" height="15.0" fill="rgb(243,73,32)" rx="2" ry="2" />
<text  x="993.68" y="575.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.14%)</title><rect x="403.9" y="1045" width="1.6" height="15.0" fill="rgb(238,205,44)" rx="2" ry="2" />
<text  x="406.86" y="1055.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.14%)</title><rect x="982.7" y="837" width="1.6" height="15.0" fill="rgb(206,201,21)" rx="2" ry="2" />
<text  x="985.70" y="847.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::noDelay(bool) (1 samples, 0.14%)</title><rect x="1183.6" y="821" width="1.6" height="15.0" fill="rgb(238,50,50)" rx="2" ry="2" />
<text  x="1186.62" y="831.5" ></text>
</g>
<g >
<title>proc_single_show (1 samples, 0.14%)</title><rect x="974.7" y="741" width="1.6" height="15.0" fill="rgb(229,134,37)" rx="2" ry="2" />
<text  x="977.73" y="751.5" ></text>
</g>
<g >
<title>kworker/40:0 (1 samples, 0.14%)</title><rect x="1019.4" y="1077" width="1.6" height="15.0" fill="rgb(237,27,0)" rx="2" ry="2" />
<text  x="1022.38" y="1087.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (1 samples, 0.14%)</title><rect x="950.8" y="805" width="1.6" height="15.0" fill="rgb(218,165,48)" rx="2" ry="2" />
<text  x="953.81" y="815.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/pkg/authorization.(*Middleware).WrapHandler.func1 (79 samples, 10.68%)</title><rect x="75.4" y="965" width="126.0" height="15.0" fill="rgb(225,144,16)" rx="2" ry="2" />
<text  x="78.38" y="975.5" >local.github.co..</text>
</g>
<g >
<title>vsnprintf (1 samples, 0.14%)</title><rect x="400.7" y="869" width="1.6" height="15.0" fill="rgb(234,122,25)" rx="2" ry="2" />
<text  x="403.68" y="879.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (1 samples, 0.14%)</title><rect x="942.8" y="741" width="1.6" height="15.0" fill="rgb(240,34,36)" rx="2" ry="2" />
<text  x="945.84" y="751.5" ></text>
</g>
<g >
<title>local.runtime.mapassign_faststr (1 samples, 0.14%)</title><rect x="199.8" y="917" width="1.6" height="15.0" fill="rgb(247,215,45)" rx="2" ry="2" />
<text  x="202.76" y="927.5" ></text>
</g>
<g >
<title>ksoftirqd/25 (1 samples, 0.14%)</title><rect x="405.5" y="1077" width="1.6" height="15.0" fill="rgb(216,216,10)" rx="2" ry="2" />
<text  x="408.46" y="1087.5" ></text>
</g>
<g >
<title>iterate_dir (1 samples, 0.14%)</title><rect x="979.5" y="821" width="1.6" height="15.0" fill="rgb(207,6,25)" rx="2" ry="2" />
<text  x="982.51" y="831.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.14%)</title><rect x="22.8" y="805" width="1.6" height="15.0" fill="rgb(230,53,33)" rx="2" ry="2" />
<text  x="25.76" y="815.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.14%)</title><rect x="1142.2" y="965" width="1.6" height="15.0" fill="rgb(226,77,2)" rx="2" ry="2" />
<text  x="1145.16" y="975.5" ></text>
</g>
<g >
<title>smp_call_function_many_cond (1 samples, 0.14%)</title><rect x="218.9" y="789" width="1.6" height="15.0" fill="rgb(207,198,5)" rx="2" ry="2" />
<text  x="221.89" y="799.5" ></text>
</g>
<g >
<title>local.encoding/json.(*decodeState).value (9 samples, 1.22%)</title><rect x="140.8" y="645" width="14.3" height="15.0" fill="rgb(213,70,23)" rx="2" ry="2" />
<text  x="143.76" y="655.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="376.8" y="997" width="3.1" height="15.0" fill="rgb(207,24,46)" rx="2" ry="2" />
<text  x="379.76" y="1007.5" ></text>
</g>
<g >
<title>br_nf_pre_routing (1 samples, 0.14%)</title><rect x="402.3" y="885" width="1.6" height="15.0" fill="rgb(223,127,6)" rx="2" ry="2" />
<text  x="405.27" y="895.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrierSI (1 samples, 0.14%)</title><rect x="100.9" y="757" width="1.6" height="15.0" fill="rgb(224,113,43)" rx="2" ry="2" />
<text  x="103.89" y="767.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="356.0" y="805" width="1.6" height="15.0" fill="rgb(246,139,5)" rx="2" ry="2" />
<text  x="359.03" y="815.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1 samples, 0.14%)</title><rect x="1102.3" y="597" width="1.6" height="15.0" fill="rgb(246,205,40)" rx="2" ry="2" />
<text  x="1105.30" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="934.9" y="661" width="1.6" height="15.0" fill="rgb(238,138,22)" rx="2" ry="2" />
<text  x="937.86" y="671.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.14%)</title><rect x="403.9" y="949" width="1.6" height="15.0" fill="rgb(250,163,54)" rx="2" ry="2" />
<text  x="406.86" y="959.5" ></text>
</g>
<g >
<title>runtime.runqgrab (2 samples, 0.27%)</title><rect x="214.1" y="965" width="3.2" height="15.0" fill="rgb(243,158,19)" rx="2" ry="2" />
<text  x="217.11" y="975.5" ></text>
</g>
<g >
<title>dbs_work_handler (1 samples, 0.14%)</title><rect x="1005.0" y="997" width="1.6" height="15.0" fill="rgb(240,37,20)" rx="2" ry="2" />
<text  x="1008.03" y="1007.5" ></text>
</g>
<g >
<title>od_dbs_update (1 samples, 0.14%)</title><rect x="1000.2" y="981" width="1.6" height="15.0" fill="rgb(250,202,1)" rx="2" ry="2" />
<text  x="1003.24" y="991.5" ></text>
</g>
<g >
<title>show_interrupts (1 samples, 0.14%)</title><rect x="400.7" y="917" width="1.6" height="15.0" fill="rgb(210,134,29)" rx="2" ry="2" />
<text  x="403.68" y="927.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.14%)</title><rect x="403.9" y="997" width="1.6" height="15.0" fill="rgb(252,129,53)" rx="2" ry="2" />
<text  x="406.86" y="1007.5" ></text>
</g>
<g >
<title>local.sync.(*Map).Load (1 samples, 0.14%)</title><rect x="153.5" y="597" width="1.6" height="15.0" fill="rgb(235,175,33)" rx="2" ry="2" />
<text  x="156.51" y="607.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.14%)</title><rect x="990.7" y="677" width="1.6" height="15.0" fill="rgb(217,139,3)" rx="2" ry="2" />
<text  x="993.68" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="1183.6" y="757" width="1.6" height="15.0" fill="rgb(246,126,35)" rx="2" ry="2" />
<text  x="1186.62" y="767.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1 samples, 0.14%)</title><rect x="123.2" y="549" width="1.6" height="15.0" fill="rgb(248,126,5)" rx="2" ry="2" />
<text  x="126.22" y="559.5" ></text>
</g>
<g >
<title>skb_network_protocol (1 samples, 0.14%)</title><rect x="1102.3" y="437" width="1.6" height="15.0" fill="rgb(253,38,32)" rx="2" ry="2" />
<text  x="1105.30" y="447.5" ></text>
</g>
<g >
<title>pid_revalidate (1 samples, 0.14%)</title><rect x="954.0" y="677" width="1.6" height="15.0" fill="rgb(245,59,19)" rx="2" ry="2" />
<text  x="957.00" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="1145.4" y="1045" width="1.5" height="15.0" fill="rgb(240,1,11)" rx="2" ry="2" />
<text  x="1148.35" y="1055.5" ></text>
</g>
<g >
<title>runtime.mstart1 (2 samples, 0.27%)</title><rect x="24.4" y="1013" width="3.1" height="15.0" fill="rgb(231,50,5)" rx="2" ry="2" />
<text  x="27.35" y="1023.5" ></text>
</g>
<g >
<title>local.internal/poll.(*FD).Read (1 samples, 0.14%)</title><rect x="123.2" y="677" width="1.6" height="15.0" fill="rgb(251,166,36)" rx="2" ry="2" />
<text  x="126.22" y="687.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.14%)</title><rect x="946.0" y="357" width="1.6" height="15.0" fill="rgb(213,163,43)" rx="2" ry="2" />
<text  x="949.03" y="367.5" ></text>
</g>
<g >
<title>do_epoll_wait (3 samples, 0.41%)</title><rect x="352.8" y="901" width="4.8" height="15.0" fill="rgb(231,91,23)" rx="2" ry="2" />
<text  x="355.84" y="911.5" ></text>
</g>
<g >
<title>br_dev_queue_push_xmit (1 samples, 0.14%)</title><rect x="990.7" y="437" width="1.6" height="15.0" fill="rgb(244,43,48)" rx="2" ry="2" />
<text  x="993.68" y="447.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="944.4" y="517" width="1.6" height="15.0" fill="rgb(226,157,46)" rx="2" ry="2" />
<text  x="947.43" y="527.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.14%)</title><rect x="1006.6" y="1013" width="1.6" height="15.0" fill="rgb(225,216,8)" rx="2" ry="2" />
<text  x="1009.62" y="1023.5" ></text>
</g>
<g >
<title>encoding/json.stringEncoder (2 samples, 0.27%)</title><rect x="75.4" y="661" width="3.2" height="15.0" fill="rgb(233,100,10)" rx="2" ry="2" />
<text  x="78.38" y="671.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.14%)</title><rect x="1001.8" y="1029" width="1.6" height="15.0" fill="rgb(212,206,40)" rx="2" ry="2" />
<text  x="1004.84" y="1039.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (1 samples, 0.14%)</title><rect x="394.3" y="997" width="1.6" height="15.0" fill="rgb(235,7,1)" rx="2" ry="2" />
<text  x="397.30" y="1007.5" ></text>
</g>
<g >
<title>drm_gem_shmem_vmap (1 samples, 0.14%)</title><rect x="998.6" y="949" width="1.6" height="15.0" fill="rgb(231,152,26)" rx="2" ry="2" />
<text  x="1001.65" y="959.5" ></text>
</g>
<g >
<title>path_init (1 samples, 0.14%)</title><rect x="981.1" y="741" width="1.6" height="15.0" fill="rgb(254,220,0)" rx="2" ry="2" />
<text  x="984.11" y="751.5" ></text>
</g>
<g >
<title>internal_get_user_pages_fast (1 samples, 0.14%)</title><rect x="376.8" y="693" width="1.6" height="15.0" fill="rgb(214,215,51)" rx="2" ry="2" />
<text  x="379.76" y="703.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.14%)</title><rect x="340.1" y="917" width="1.6" height="15.0" fill="rgb(228,178,16)" rx="2" ry="2" />
<text  x="343.08" y="927.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="376.8" y="965" width="3.1" height="15.0" fill="rgb(239,0,10)" rx="2" ry="2" />
<text  x="379.76" y="975.5" ></text>
</g>
<g >
<title>apparmor_file_open (1 samples, 0.14%)</title><rect x="416.6" y="885" width="1.6" height="15.0" fill="rgb(219,164,20)" rx="2" ry="2" />
<text  x="419.62" y="895.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (1 samples, 0.14%)</title><rect x="997.1" y="917" width="1.5" height="15.0" fill="rgb(245,31,44)" rx="2" ry="2" />
<text  x="1000.05" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1139.0" y="693" width="1.6" height="15.0" fill="rgb(233,4,9)" rx="2" ry="2" />
<text  x="1141.97" y="703.5" ></text>
</g>
<g >
<title>local.encoding/json.(*decodeState).value (1 samples, 0.14%)</title><rect x="185.4" y="725" width="1.6" height="15.0" fill="rgb(234,125,24)" rx="2" ry="2" />
<text  x="188.41" y="735.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.14%)</title><rect x="966.8" y="661" width="1.6" height="15.0" fill="rgb(233,76,13)" rx="2" ry="2" />
<text  x="969.76" y="671.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.14%)</title><rect x="944.4" y="629" width="1.6" height="15.0" fill="rgb(248,201,38)" rx="2" ry="2" />
<text  x="947.43" y="639.5" ></text>
</g>
<g >
<title>ep_poll (1 samples, 0.14%)</title><rect x="1167.7" y="981" width="1.6" height="15.0" fill="rgb(248,28,41)" rx="2" ry="2" />
<text  x="1170.68" y="991.5" ></text>
</g>
<g >
<title>epoll_wait (3 samples, 0.41%)</title><rect x="352.8" y="965" width="4.8" height="15.0" fill="rgb(241,124,8)" rx="2" ry="2" />
<text  x="355.84" y="975.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerUtility::cleanInternalHeaders(Envoy::Http::RequestHeaderMap&amp;, bool, std::__1::list&lt;Envoy::Http::LowerCaseString, std::__1::allocator&lt;Envoy::Http::LowerCaseString&gt; &gt; const&amp;) (1 samples, 0.14%)</title><rect x="1156.5" y="725" width="1.6" height="15.0" fill="rgb(238,91,28)" rx="2" ry="2" />
<text  x="1159.51" y="735.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="391.1" y="1029" width="1.6" height="15.0" fill="rgb(216,135,45)" rx="2" ry="2" />
<text  x="394.11" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="218.9" y="949" width="1.6" height="15.0" fill="rgb(215,155,32)" rx="2" ry="2" />
<text  x="221.89" y="959.5" ></text>
</g>
<g >
<title>__lock_text_start (4 samples, 0.54%)</title><rect x="1124.6" y="981" width="6.4" height="15.0" fill="rgb(220,160,43)" rx="2" ry="2" />
<text  x="1127.62" y="991.5" ></text>
</g>
<g >
<title>Envoy::DateFormatter::fromTime(std::__1::chrono::time_point&lt;std::__1::chrono::system_clock, std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000000l&gt; &gt; &gt; const&amp;) const (1 samples, 0.14%)</title><rect x="365.6" y="917" width="1.6" height="15.0" fill="rgb(215,229,47)" rx="2" ry="2" />
<text  x="368.59" y="927.5" ></text>
</g>
<g >
<title>mmput (2 samples, 0.27%)</title><rect x="379.9" y="981" width="3.2" height="15.0" fill="rgb(231,98,10)" rx="2" ry="2" />
<text  x="382.95" y="991.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.14%)</title><rect x="1000.2" y="1013" width="1.6" height="15.0" fill="rgb(232,171,17)" rx="2" ry="2" />
<text  x="1003.24" y="1023.5" ></text>
</g>
<g >
<title>worker_thread (4 samples, 0.54%)</title><rect x="1033.7" y="1029" width="6.4" height="15.0" fill="rgb(226,217,44)" rx="2" ry="2" />
<text  x="1036.73" y="1039.5" ></text>
</g>
<g >
<title>__x64_sys_connect (2 samples, 0.27%)</title><rect x="944.4" y="757" width="3.2" height="15.0" fill="rgb(238,76,24)" rx="2" ry="2" />
<text  x="947.43" y="767.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.14%)</title><rect x="990.7" y="853" width="1.6" height="15.0" fill="rgb(236,53,54)" rx="2" ry="2" />
<text  x="993.68" y="863.5" ></text>
</g>
<g >
<title>Envoy::DateFormatter::fromTimeAndPrepareSpecifierOffsets(long, std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt;&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 0.14%)</title><rect x="365.6" y="901" width="1.6" height="15.0" fill="rgb(218,112,45)" rx="2" ry="2" />
<text  x="368.59" y="911.5" ></text>
</g>
<g >
<title>runtime.scavengeSleep (2 samples, 0.27%)</title><rect x="201.4" y="1029" width="3.1" height="15.0" fill="rgb(254,124,17)" rx="2" ry="2" />
<text  x="204.35" y="1039.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.14%)</title><rect x="134.4" y="677" width="1.6" height="15.0" fill="rgb(211,8,42)" rx="2" ry="2" />
<text  x="137.38" y="687.5" ></text>
</g>
<g >
<title>github.com/docker/docker/vendor/github.com/docker/distribution/reference.ParseNormalizedNamed (5 samples, 0.68%)</title><rect x="187.0" y="773" width="8.0" height="15.0" fill="rgb(246,11,21)" rx="2" ry="2" />
<text  x="190.00" y="783.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (4 samples, 0.54%)</title><rect x="963.6" y="741" width="6.3" height="15.0" fill="rgb(222,58,20)" rx="2" ry="2" />
<text  x="966.57" y="751.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.14%)</title><rect x="387.9" y="645" width="1.6" height="15.0" fill="rgb(206,87,32)" rx="2" ry="2" />
<text  x="390.92" y="655.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (2 samples, 0.27%)</title><rect x="1180.4" y="869" width="3.2" height="15.0" fill="rgb(233,34,44)" rx="2" ry="2" />
<text  x="1183.43" y="879.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.14%)</title><rect x="1140.6" y="677" width="1.6" height="15.0" fill="rgb(217,95,17)" rx="2" ry="2" />
<text  x="1143.57" y="687.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.14%)</title><rect x="33.9" y="981" width="1.6" height="15.0" fill="rgb(253,170,38)" rx="2" ry="2" />
<text  x="36.92" y="991.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="1123.0" y="965" width="1.6" height="15.0" fill="rgb(253,229,7)" rx="2" ry="2" />
<text  x="1126.03" y="975.5" ></text>
</g>
<g >
<title>github.com/docker/docker/vendor/github.com/hashicorp/go-immutable-radix.(*Iterator).Next (2 samples, 0.27%)</title><rect x="105.7" y="805" width="3.2" height="15.0" fill="rgb(209,142,29)" rx="2" ry="2" />
<text  x="108.68" y="815.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5, std::__1::allocator&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5&gt;, void (unsigned int)&gt;::operator()(unsigned int&amp;&amp;) (2 samples, 0.27%)</title><rect x="1185.2" y="965" width="3.2" height="15.0" fill="rgb(224,139,49)" rx="2" ry="2" />
<text  x="1188.22" y="975.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.14%)</title><rect x="1028.9" y="1045" width="1.6" height="15.0" fill="rgb(215,32,44)" rx="2" ry="2" />
<text  x="1031.95" y="1055.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.14%)</title><rect x="356.0" y="821" width="1.6" height="15.0" fill="rgb(217,136,18)" rx="2" ry="2" />
<text  x="359.03" y="831.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.14%)</title><rect x="392.7" y="1029" width="1.6" height="15.0" fill="rgb(233,137,19)" rx="2" ry="2" />
<text  x="395.70" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.54%)</title><rect x="985.9" y="901" width="6.4" height="15.0" fill="rgb(214,70,13)" rx="2" ry="2" />
<text  x="988.89" y="911.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.14%)</title><rect x="376.8" y="741" width="1.6" height="15.0" fill="rgb(231,24,16)" rx="2" ry="2" />
<text  x="379.76" y="751.5" ></text>
</g>
<g >
<title>local.sort.quickSort_func (1 samples, 0.14%)</title><rect x="94.5" y="629" width="1.6" height="15.0" fill="rgb(253,3,18)" rx="2" ry="2" />
<text  x="97.51" y="639.5" ></text>
</g>
<g >
<title>local.encoding/json.unquoteBytes (1 samples, 0.14%)</title><rect x="142.4" y="581" width="1.5" height="15.0" fill="rgb(243,11,19)" rx="2" ry="2" />
<text  x="145.35" y="591.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1 samples, 0.14%)</title><rect x="1186.8" y="661" width="1.6" height="15.0" fill="rgb(232,31,50)" rx="2" ry="2" />
<text  x="1189.81" y="671.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onWriteReady() (2 samples, 0.27%)</title><rect x="1185.2" y="933" width="3.2" height="15.0" fill="rgb(207,224,17)" rx="2" ry="2" />
<text  x="1188.22" y="943.5" ></text>
</g>
<g >
<title>vfs_read (2 samples, 0.27%)</title><rect x="116.8" y="597" width="3.2" height="15.0" fill="rgb(253,166,42)" rx="2" ry="2" />
<text  x="119.84" y="607.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.14%)</title><rect x="1028.9" y="1013" width="1.6" height="15.0" fill="rgb(240,122,11)" rx="2" ry="2" />
<text  x="1031.95" y="1023.5" ></text>
</g>
<g >
<title>time.getnum (1 samples, 0.14%)</title><rect x="145.5" y="565" width="1.6" height="15.0" fill="rgb(214,200,31)" rx="2" ry="2" />
<text  x="148.54" y="575.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::read(Envoy::Buffer::Instance&amp;, absl::optional&lt;unsigned long&gt;) (2 samples, 0.27%)</title><rect x="1158.1" y="901" width="3.2" height="15.0" fill="rgb(228,125,4)" rx="2" ry="2" />
<text  x="1161.11" y="911.5" ></text>
</g>
<g >
<title>Envoy::Event::DispatcherImpl::runPostCallbacks() (4 samples, 0.54%)</title><rect x="357.6" y="949" width="6.4" height="15.0" fill="rgb(226,167,8)" rx="2" ry="2" />
<text  x="360.62" y="959.5" ></text>
</g>
<g >
<title>[unknown] (41 samples, 5.54%)</title><rect x="877.5" y="773" width="65.3" height="15.0" fill="rgb(216,131,46)" rx="2" ry="2" />
<text  x="880.46" y="783.5" >[unknown]</text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::RequestHeaderMapImpl::removeEnvoyRetryOn() (1 samples, 0.14%)</title><rect x="1156.5" y="709" width="1.6" height="15.0" fill="rgb(223,184,52)" rx="2" ry="2" />
<text  x="1159.51" y="719.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.14%)</title><rect x="944.4" y="533" width="1.6" height="15.0" fill="rgb(205,80,18)" rx="2" ry="2" />
<text  x="947.43" y="543.5" ></text>
</g>
<g >
<title>local.runtime.(*mcentral).grow (1 samples, 0.14%)</title><rect x="91.3" y="565" width="1.6" height="15.0" fill="rgb(236,177,52)" rx="2" ry="2" />
<text  x="94.32" y="575.5" ></text>
</g>
<g >
<title>Envoy::ThreadLocal::InstanceImpl::SlotImpl::set(std::__1::function&lt;std::__1::shared_ptr&lt;Envoy::ThreadLocal::ThreadLocalObject&gt; (Envoy::Event::Dispatcher&amp;)&gt;) (2 samples, 0.27%)</title><rect x="367.2" y="933" width="3.2" height="15.0" fill="rgb(237,119,0)" rx="2" ry="2" />
<text  x="370.19" y="943.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).init (1 samples, 0.14%)</title><rect x="198.2" y="725" width="1.6" height="15.0" fill="rgb(242,57,13)" rx="2" ry="2" />
<text  x="201.16" y="735.5" ></text>
</g>
<g >
<title>Envoy::Thread::ThreadImplPosix::ThreadImplPosix(std::__1::function&lt;void ()&gt;, absl::optional&lt;Envoy::Thread::Options&gt; const&amp;)::{lambda(void*)#1}::__invoke(void*) (12 samples, 1.62%)</title><rect x="1170.9" y="1045" width="19.1" height="15.0" fill="rgb(209,131,50)" rx="2" ry="2" />
<text  x="1173.86" y="1055.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.14%)</title><rect x="91.3" y="613" width="1.6" height="15.0" fill="rgb(227,195,4)" rx="2" ry="2" />
<text  x="94.32" y="623.5" ></text>
</g>
<g >
<title>[unknown] (41 samples, 5.54%)</title><rect x="1041.7" y="1029" width="65.4" height="15.0" fill="rgb(238,98,26)" rx="2" ry="2" />
<text  x="1044.70" y="1039.5" >[unknown]</text>
</g>
<g >
<title>string (1 samples, 0.14%)</title><rect x="974.7" y="661" width="1.6" height="15.0" fill="rgb(247,140,8)" rx="2" ry="2" />
<text  x="977.73" y="671.5" ></text>
</g>
<g >
<title>epoll_wait (3 samples, 0.41%)</title><rect x="1148.5" y="997" width="4.8" height="15.0" fill="rgb(254,14,44)" rx="2" ry="2" />
<text  x="1151.54" y="1007.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="1175.6" y="837" width="1.6" height="15.0" fill="rgb(246,92,3)" rx="2" ry="2" />
<text  x="1178.65" y="847.5" ></text>
</g>
<g >
<title>rcu_report_qs_rnp (4 samples, 0.54%)</title><rect x="1124.6" y="997" width="6.4" height="15.0" fill="rgb(238,178,31)" rx="2" ry="2" />
<text  x="1127.62" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onMessageComplete() (2 samples, 0.27%)</title><rect x="1180.4" y="789" width="3.2" height="15.0" fill="rgb(208,126,20)" rx="2" ry="2" />
<text  x="1183.43" y="799.5" ></text>
</g>
<g >
<title>os/exec.(*Cmd).writerDescriptor (1 samples, 0.14%)</title><rect x="198.2" y="789" width="1.6" height="15.0" fill="rgb(205,145,25)" rx="2" ry="2" />
<text  x="201.16" y="799.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.14%)</title><rect x="1185.2" y="565" width="1.6" height="15.0" fill="rgb(244,207,48)" rx="2" ry="2" />
<text  x="1188.22" y="575.5" ></text>
</g>
<g >
<title>Envoy::Event::FileEventImpl::assignEvents(unsigned int, event_base*)::$_1::__invoke(int, short, void*) (5 samples, 0.68%)</title><rect x="1177.2" y="981" width="8.0" height="15.0" fill="rgb(214,130,10)" rx="2" ry="2" />
<text  x="1180.24" y="991.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.14%)</title><rect x="22.8" y="773" width="1.6" height="15.0" fill="rgb(210,56,12)" rx="2" ry="2" />
<text  x="25.76" y="783.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.14%)</title><rect x="976.3" y="773" width="1.6" height="15.0" fill="rgb(248,145,18)" rx="2" ry="2" />
<text  x="979.32" y="783.5" ></text>
</g>
<g >
<title>__x64_sys_writev (1 samples, 0.14%)</title><rect x="1161.3" y="821" width="1.6" height="15.0" fill="rgb(238,167,52)" rx="2" ry="2" />
<text  x="1164.30" y="831.5" ></text>
</g>
<g >
<title>Envoy::Event::FileEventImpl::assignEvents(unsigned int, event_base*)::$_1::__invoke(int, short, void*) (5 samples, 0.68%)</title><rect x="1154.9" y="981" width="8.0" height="15.0" fill="rgb(211,39,10)" rx="2" ry="2" />
<text  x="1157.92" y="991.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.14%)</title><rect x="1025.8" y="1029" width="1.6" height="15.0" fill="rgb(230,160,50)" rx="2" ry="2" />
<text  x="1028.76" y="1039.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.14%)</title><rect x="1021.0" y="1029" width="1.6" height="15.0" fill="rgb(227,179,22)" rx="2" ry="2" />
<text  x="1023.97" y="1039.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/containers.(*local).withStoreView (1 samples, 0.14%)</title><rect x="27.5" y="933" width="1.6" height="15.0" fill="rgb(213,96,20)" rx="2" ry="2" />
<text  x="30.54" y="943.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.14%)</title><rect x="944.4" y="485" width="1.6" height="15.0" fill="rgb(248,104,5)" rx="2" ry="2" />
<text  x="947.43" y="495.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.14%)</title><rect x="982.7" y="805" width="1.6" height="15.0" fill="rgb(210,198,4)" rx="2" ry="2" />
<text  x="985.70" y="815.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.14%)</title><rect x="1008.2" y="1045" width="1.6" height="15.0" fill="rgb(225,50,49)" rx="2" ry="2" />
<text  x="1011.22" y="1055.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.14%)</title><rect x="102.5" y="789" width="1.6" height="15.0" fill="rgb(246,222,53)" rx="2" ry="2" />
<text  x="105.49" y="799.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.14%)</title><rect x="379.9" y="901" width="1.6" height="15.0" fill="rgb(232,199,0)" rx="2" ry="2" />
<text  x="382.95" y="911.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.14%)</title><rect x="368.8" y="805" width="1.6" height="15.0" fill="rgb(212,145,54)" rx="2" ry="2" />
<text  x="371.78" y="815.5" ></text>
</g>
<g >
<title>filename_lookup (1 samples, 0.14%)</title><rect x="989.1" y="821" width="1.6" height="15.0" fill="rgb(230,213,22)" rx="2" ry="2" />
<text  x="992.08" y="831.5" ></text>
</g>
<g >
<title>__cpufreq_driver_target (1 samples, 0.14%)</title><rect x="1005.0" y="965" width="1.6" height="15.0" fill="rgb(208,45,24)" rx="2" ry="2" />
<text  x="1008.03" y="975.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (1 samples, 0.14%)</title><rect x="944.4" y="293" width="1.6" height="15.0" fill="rgb(246,91,11)" rx="2" ry="2" />
<text  x="947.43" y="303.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.14%)</title><rect x="946.0" y="213" width="1.6" height="15.0" fill="rgb(250,22,44)" rx="2" ry="2" />
<text  x="949.03" y="223.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (1 samples, 0.14%)</title><rect x="950.8" y="741" width="1.6" height="15.0" fill="rgb(221,9,6)" rx="2" ry="2" />
<text  x="953.81" y="751.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.14%)</title><rect x="123.2" y="597" width="1.6" height="15.0" fill="rgb(227,20,20)" rx="2" ry="2" />
<text  x="126.22" y="607.5" ></text>
</g>
<g >
<title>[unknown] (138 samples, 18.65%)</title><rect x="772.2" y="917" width="220.1" height="15.0" fill="rgb(216,228,0)" rx="2" ry="2" />
<text  x="775.22" y="927.5" >[unknown]</text>
</g>
<g >
<title>http_parser_execute (1 samples, 0.14%)</title><rect x="1178.8" y="805" width="1.6" height="15.0" fill="rgb(240,116,53)" rx="2" ry="2" />
<text  x="1181.84" y="815.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="22.8" y="901" width="1.6" height="15.0" fill="rgb(241,218,8)" rx="2" ry="2" />
<text  x="25.76" y="911.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.14%)</title><rect x="946.0" y="533" width="1.6" height="15.0" fill="rgb(241,120,45)" rx="2" ry="2" />
<text  x="949.03" y="543.5" ></text>
</g>
<g >
<title>kernfs_fop_read_iter (1 samples, 0.14%)</title><rect x="957.2" y="741" width="1.6" height="15.0" fill="rgb(248,195,31)" rx="2" ry="2" />
<text  x="960.19" y="751.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.27%)</title><rect x="944.4" y="773" width="3.2" height="15.0" fill="rgb(219,194,16)" rx="2" ry="2" />
<text  x="947.43" y="783.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.14%)</title><rect x="990.7" y="421" width="1.6" height="15.0" fill="rgb(225,211,14)" rx="2" ry="2" />
<text  x="993.68" y="431.5" ></text>
</g>
<g >
<title>__traverse_mounts (2 samples, 0.27%)</title><rect x="966.8" y="677" width="3.1" height="15.0" fill="rgb(215,209,18)" rx="2" ry="2" />
<text  x="969.76" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="378.4" y="933" width="1.5" height="15.0" fill="rgb(241,134,50)" rx="2" ry="2" />
<text  x="381.35" y="943.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (1 samples, 0.14%)</title><rect x="364.0" y="677" width="1.6" height="15.0" fill="rgb(253,223,44)" rx="2" ry="2" />
<text  x="367.00" y="687.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.14%)</title><rect x="1185.2" y="261" width="1.6" height="15.0" fill="rgb(235,71,13)" rx="2" ry="2" />
<text  x="1188.22" y="271.5" ></text>
</g>
<g >
<title>dog:main_thread (1 samples, 0.14%)</title><rect x="336.9" y="1077" width="1.6" height="15.0" fill="rgb(208,107,49)" rx="2" ry="2" />
<text  x="339.89" y="1087.5" ></text>
</g>
<g >
<title>do_epoll_wait (1 samples, 0.14%)</title><rect x="1167.7" y="997" width="1.6" height="15.0" fill="rgb(220,195,30)" rx="2" ry="2" />
<text  x="1170.68" y="1007.5" ></text>
</g>
<g >
<title>kworker/33:1 (2 samples, 0.27%)</title><rect x="1014.6" y="1077" width="3.2" height="15.0" fill="rgb(231,63,27)" rx="2" ry="2" />
<text  x="1017.59" y="1087.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.14%)</title><rect x="936.5" y="645" width="1.6" height="15.0" fill="rgb(247,200,52)" rx="2" ry="2" />
<text  x="939.46" y="655.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.14%)</title><rect x="402.3" y="565" width="1.6" height="15.0" fill="rgb(226,132,26)" rx="2" ry="2" />
<text  x="405.27" y="575.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.14%)</title><rect x="171.1" y="629" width="1.5" height="15.0" fill="rgb(214,176,2)" rx="2" ry="2" />
<text  x="174.05" y="639.5" ></text>
</g>
<g >
<title>Envoy::Server::WorkerImpl::threadRoutine(Envoy::Server::GuardDog&amp;, std::__1::function&lt;void ()&gt; const&amp;) (11 samples, 1.49%)</title><rect x="1148.5" y="1029" width="17.6" height="15.0" fill="rgb(212,130,15)" rx="2" ry="2" />
<text  x="1151.54" y="1039.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="1161.3" y="837" width="1.6" height="15.0" fill="rgb(244,81,45)" rx="2" ry="2" />
<text  x="1164.30" y="847.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.14%)</title><rect x="1185.2" y="405" width="1.6" height="15.0" fill="rgb(208,53,3)" rx="2" ry="2" />
<text  x="1188.22" y="415.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (1 samples, 0.14%)</title><rect x="92.9" y="629" width="1.6" height="15.0" fill="rgb(228,217,35)" rx="2" ry="2" />
<text  x="95.92" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (4 samples, 0.54%)</title><rect x="379.9" y="1029" width="6.4" height="15.0" fill="rgb(222,157,40)" rx="2" ry="2" />
<text  x="382.95" y="1039.5" ></text>
</g>
<g >
<title>ep_poll (2 samples, 0.27%)</title><rect x="1150.1" y="917" width="3.2" height="15.0" fill="rgb(243,180,11)" rx="2" ry="2" />
<text  x="1153.14" y="927.5" ></text>
</g>
<g >
<title>[unknown] (123 samples, 16.62%)</title><rect x="789.8" y="901" width="196.1" height="15.0" fill="rgb(213,206,1)" rx="2" ry="2" />
<text  x="792.76" y="911.5" >[unknown]</text>
</g>
<g >
<title>ep_poll (1 samples, 0.14%)</title><rect x="340.1" y="949" width="1.6" height="15.0" fill="rgb(240,223,5)" rx="2" ry="2" />
<text  x="343.08" y="959.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.14%)</title><rect x="1145.4" y="965" width="1.5" height="15.0" fill="rgb(206,91,54)" rx="2" ry="2" />
<text  x="1148.35" y="975.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1 samples, 0.14%)</title><rect x="1185.2" y="629" width="1.6" height="15.0" fill="rgb(245,66,37)" rx="2" ry="2" />
<text  x="1188.22" y="639.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).doExecute (1 samples, 0.14%)</title><rect x="196.6" y="757" width="1.6" height="15.0" fill="rgb(206,5,31)" rx="2" ry="2" />
<text  x="199.57" y="767.5" ></text>
</g>
<g >
<title>__hrtimer_init (1 samples, 0.14%)</title><rect x="354.4" y="821" width="1.6" height="15.0" fill="rgb(224,118,28)" rx="2" ry="2" />
<text  x="357.43" y="831.5" ></text>
</g>
<g >
<title>github.com/docker/docker/daemon/images.(*imageStoreWithLease).Get (45 samples, 6.08%)</title><rect x="115.2" y="789" width="71.8" height="15.0" fill="rgb(226,92,15)" rx="2" ry="2" />
<text  x="118.24" y="799.5" >github.c..</text>
</g>
<g >
<title>flush_tlb_mm_range (1 samples, 0.14%)</title><rect x="218.9" y="837" width="1.6" height="15.0" fill="rgb(232,212,12)" rx="2" ry="2" />
<text  x="221.89" y="847.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.14%)</title><rect x="976.3" y="805" width="1.6" height="15.0" fill="rgb(212,138,16)" rx="2" ry="2" />
<text  x="979.32" y="815.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.14%)</title><rect x="990.7" y="533" width="1.6" height="15.0" fill="rgb(222,135,44)" rx="2" ry="2" />
<text  x="993.68" y="543.5" ></text>
</g>
<g >
<title>ksoftirqd/12 (1 samples, 0.14%)</title><rect x="402.3" y="1077" width="1.6" height="15.0" fill="rgb(240,203,8)" rx="2" ry="2" />
<text  x="405.27" y="1087.5" ></text>
</g>
<g >
<title>process_backlog (1 samples, 0.14%)</title><rect x="1185.2" y="389" width="1.6" height="15.0" fill="rgb(244,184,23)" rx="2" ry="2" />
<text  x="1188.22" y="399.5" ></text>
</g>
<g >
<title>event_process_active_single_queue (6 samples, 0.81%)</title><rect x="1154.9" y="997" width="9.6" height="15.0" fill="rgb(231,216,44)" rx="2" ry="2" />
<text  x="1157.92" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (1 samples, 0.14%)</title><rect x="934.9" y="629" width="1.6" height="15.0" fill="rgb(254,106,47)" rx="2" ry="2" />
<text  x="937.86" y="639.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.68%)</title><rect x="1111.9" y="917" width="7.9" height="15.0" fill="rgb(244,136,38)" rx="2" ry="2" />
<text  x="1114.86" y="927.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.14%)</title><rect x="1174.1" y="917" width="1.5" height="15.0" fill="rgb(233,100,7)" rx="2" ry="2" />
<text  x="1177.05" y="927.5" ></text>
</g>
<g >
<title>runtime.scavengeSleep (3 samples, 0.41%)</title><rect x="29.1" y="1029" width="4.8" height="15.0" fill="rgb(251,84,33)" rx="2" ry="2" />
<text  x="32.14" y="1039.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.14%)</title><rect x="1161.3" y="757" width="1.6" height="15.0" fill="rgb(215,62,53)" rx="2" ry="2" />
<text  x="1164.30" y="767.5" ></text>
</g>
<g >
<title>github.com/docker/docker/api/server/router/system.(*systemRouter).getVersion (1 samples, 0.14%)</title><rect x="198.2" y="901" width="1.6" height="15.0" fill="rgb(219,63,26)" rx="2" ry="2" />
<text  x="201.16" y="911.5" ></text>
</g>
<g >
<title>ext4_readdir (1 samples, 0.14%)</title><rect x="950.8" y="773" width="1.6" height="15.0" fill="rgb(230,103,23)" rx="2" ry="2" />
<text  x="953.81" y="783.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.14%)</title><rect x="1017.8" y="1029" width="1.6" height="15.0" fill="rgb(239,14,52)" rx="2" ry="2" />
<text  x="1020.78" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Stats::ThreadLocalStoreImpl::mergeInternal(std::__1::function&lt;void ()&gt;) (4 samples, 0.54%)</title><rect x="357.6" y="917" width="6.4" height="15.0" fill="rgb(220,194,37)" rx="2" ry="2" />
<text  x="360.62" y="927.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.14%)</title><rect x="1103.9" y="869" width="1.6" height="15.0" fill="rgb(222,85,14)" rx="2" ry="2" />
<text  x="1106.89" y="879.5" ></text>
</g>
<g >
<title>local.syscall.Syscall (1 samples, 0.14%)</title><rect x="115.2" y="629" width="1.6" height="15.0" fill="rgb(209,74,47)" rx="2" ry="2" />
<text  x="118.24" y="639.5" ></text>
</g>
<g >
<title>github.com/docker/docker/image.(*fs).Get (4 samples, 0.54%)</title><rect x="115.2" y="757" width="6.4" height="15.0" fill="rgb(227,54,34)" rx="2" ry="2" />
<text  x="118.24" y="767.5" ></text>
</g>
<g >
<title>br_nf_hook_thresh (1 samples, 0.14%)</title><rect x="402.3" y="853" width="1.6" height="15.0" fill="rgb(231,137,28)" rx="2" ry="2" />
<text  x="405.27" y="863.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.81%)</title><rect x="1110.3" y="997" width="9.5" height="15.0" fill="rgb(239,202,14)" rx="2" ry="2" />
<text  x="1113.27" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1169.3" y="1045" width="1.6" height="15.0" fill="rgb(207,92,43)" rx="2" ry="2" />
<text  x="1172.27" y="1055.5" ></text>
</g>
<g >
<title>close (1 samples, 0.14%)</title><rect x="1177.2" y="885" width="1.6" height="15.0" fill="rgb(210,22,6)" rx="2" ry="2" />
<text  x="1180.24" y="895.5" ></text>
</g>
<g >
<title>br_pass_frame_up (1 samples, 0.14%)</title><rect x="944.4" y="277" width="1.6" height="15.0" fill="rgb(209,223,50)" rx="2" ry="2" />
<text  x="947.43" y="287.5" ></text>
</g>
<g >
<title>os.ReadFile (1 samples, 0.14%)</title><rect x="136.0" y="725" width="1.6" height="15.0" fill="rgb(209,171,37)" rx="2" ry="2" />
<text  x="138.97" y="735.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.14%)</title><rect x="1185.2" y="421" width="1.6" height="15.0" fill="rgb(236,40,39)" rx="2" ry="2" />
<text  x="1188.22" y="431.5" ></text>
</g>
<g >
<title>pilot-agent (42 samples, 5.68%)</title><rect x="1040.1" y="1077" width="67.0" height="15.0" fill="rgb(230,3,36)" rx="2" ry="2" />
<text  x="1043.11" y="1087.5" >pilot-a..</text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/go.etcd.io/bbolt.(*DB).View (1 samples, 0.14%)</title><rect x="27.5" y="917" width="1.6" height="15.0" fill="rgb(213,145,9)" rx="2" ry="2" />
<text  x="30.54" y="927.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::FileEventImpl::FileEventImpl(Envoy::Event::DispatcherImpl&amp;, int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_0, std::__1::allocator&lt;Envoy::Event::FileEventImpl::FileEventImpl(Envoy::Event::DispatcherImpl&amp;, int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_0&gt;, void ()&gt;::operator()() (2 samples, 0.27%)</title><rect x="1185.2" y="981" width="3.2" height="15.0" fill="rgb(211,103,8)" rx="2" ry="2" />
<text  x="1188.22" y="991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="984.3" y="885" width="1.6" height="15.0" fill="rgb(210,197,8)" rx="2" ry="2" />
<text  x="987.30" y="895.5" ></text>
</g>
<g >
<title>Envoy::Server::ActiveStreamListenerBase::onSocketAccepted(std::__1::unique_ptr&lt;Envoy::Server::ActiveTcpSocket, std::__1::default_delete&lt;Envoy::Server::ActiveTcpSocket&gt; &gt;) (1 samples, 0.14%)</title><rect x="1183.6" y="917" width="1.6" height="15.0" fill="rgb(226,199,40)" rx="2" ry="2" />
<text  x="1186.62" y="927.5" ></text>
</g>
<g >
<title>mmput (2 samples, 0.27%)</title><rect x="397.5" y="981" width="3.2" height="15.0" fill="rgb(240,4,42)" rx="2" ry="2" />
<text  x="400.49" y="991.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="387.9" y="1045" width="1.6" height="15.0" fill="rgb(254,61,29)" rx="2" ry="2" />
<text  x="390.92" y="1055.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.14%)</title><rect x="1167.7" y="917" width="1.6" height="15.0" fill="rgb(231,146,32)" rx="2" ry="2" />
<text  x="1170.68" y="927.5" ></text>
</g>
<g >
<title>do_exit (2 samples, 0.27%)</title><rect x="397.5" y="997" width="3.2" height="15.0" fill="rgb(247,37,37)" rx="2" ry="2" />
<text  x="400.49" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="376.8" y="949" width="1.6" height="15.0" fill="rgb(241,63,39)" rx="2" ry="2" />
<text  x="379.76" y="959.5" ></text>
</g>
<g >
<title>ext4_inode_block_valid (1 samples, 0.14%)</title><rect x="950.8" y="645" width="1.6" height="15.0" fill="rgb(254,78,53)" rx="2" ry="2" />
<text  x="953.81" y="655.5" ></text>
</g>
<g >
<title>seq_vprintf (1 samples, 0.14%)</title><rect x="957.2" y="645" width="1.6" height="15.0" fill="rgb(229,29,18)" rx="2" ry="2" />
<text  x="960.19" y="655.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.14%)</title><rect x="1013.0" y="997" width="1.6" height="15.0" fill="rgb(226,69,22)" rx="2" ry="2" />
<text  x="1016.00" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="1139.0" y="805" width="3.2" height="15.0" fill="rgb(243,33,4)" rx="2" ry="2" />
<text  x="1141.97" y="815.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.27%)</title><rect x="53.1" y="869" width="3.1" height="15.0" fill="rgb(226,6,30)" rx="2" ry="2" />
<text  x="56.05" y="879.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.27%)</title><rect x="944.4" y="789" width="3.2" height="15.0" fill="rgb(238,203,19)" rx="2" ry="2" />
<text  x="947.43" y="799.5" ></text>
</g>
<g >
<title>github.com/docker/docker/container.(*memdbView).transform (2 samples, 0.27%)</title><rect x="100.9" y="821" width="3.2" height="15.0" fill="rgb(234,214,28)" rx="2" ry="2" />
<text  x="103.89" y="831.5" ></text>
</g>
<g >
<title>lookup_mnt (1 samples, 0.14%)</title><rect x="968.4" y="661" width="1.5" height="15.0" fill="rgb(230,14,42)" rx="2" ry="2" />
<text  x="971.35" y="671.5" ></text>
</g>
<g >
<title>runtime.bgscavenge.func2 (1 samples, 0.14%)</title><rect x="218.9" y="1029" width="1.6" height="15.0" fill="rgb(206,8,0)" rx="2" ry="2" />
<text  x="221.89" y="1039.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1 samples, 0.14%)</title><rect x="1185.2" y="581" width="1.6" height="15.0" fill="rgb(230,147,24)" rx="2" ry="2" />
<text  x="1188.22" y="591.5" ></text>
</g>
<g >
<title>os/exec.(*Cmd).stdout (1 samples, 0.14%)</title><rect x="198.2" y="805" width="1.6" height="15.0" fill="rgb(246,132,32)" rx="2" ry="2" />
<text  x="201.16" y="815.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1 samples, 0.14%)</title><rect x="403.9" y="933" width="1.6" height="15.0" fill="rgb(215,110,9)" rx="2" ry="2" />
<text  x="406.86" y="943.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (1 samples, 0.14%)</title><rect x="936.5" y="597" width="1.6" height="15.0" fill="rgb(219,160,39)" rx="2" ry="2" />
<text  x="939.46" y="607.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.14%)</title><rect x="946.0" y="661" width="1.6" height="15.0" fill="rgb(240,118,20)" rx="2" ry="2" />
<text  x="949.03" y="671.5" ></text>
</g>
<g >
<title>local.runtime.mapaccess2 (1 samples, 0.14%)</title><rect x="89.7" y="629" width="1.6" height="15.0" fill="rgb(217,123,54)" rx="2" ry="2" />
<text  x="92.73" y="639.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.14%)</title><rect x="1185.2" y="245" width="1.6" height="15.0" fill="rgb(250,114,20)" rx="2" ry="2" />
<text  x="1188.22" y="255.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.14%)</title><rect x="386.3" y="949" width="1.6" height="15.0" fill="rgb(217,120,12)" rx="2" ry="2" />
<text  x="389.32" y="959.5" ></text>
</g>
<g >
<title>vm_normal_page (1 samples, 0.14%)</title><rect x="381.5" y="901" width="1.6" height="15.0" fill="rgb(210,73,41)" rx="2" ry="2" />
<text  x="384.54" y="911.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="364.0" y="821" width="1.6" height="15.0" fill="rgb(229,185,18)" rx="2" ry="2" />
<text  x="367.00" y="831.5" ></text>
</g>
<g >
<title>Envoy::Server::InstanceImpl::run() (2 samples, 0.27%)</title><rect x="341.7" y="1061" width="3.2" height="15.0" fill="rgb(223,76,42)" rx="2" ry="2" />
<text  x="344.68" y="1071.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.14%)</title><rect x="1185.2" y="613" width="1.6" height="15.0" fill="rgb(231,172,6)" rx="2" ry="2" />
<text  x="1188.22" y="623.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.14%)</title><rect x="1102.3" y="773" width="1.6" height="15.0" fill="rgb(237,220,43)" rx="2" ry="2" />
<text  x="1105.30" y="783.5" ></text>
</g>
<g >
<title>Envoy::Http::CodecClient::CodecReadFilter::onData(Envoy::Buffer::Instance&amp;, bool) (1 samples, 0.14%)</title><rect x="1178.8" y="901" width="1.6" height="15.0" fill="rgb(215,122,46)" rx="2" ry="2" />
<text  x="1181.84" y="911.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.14%)</title><rect x="400.7" y="981" width="1.6" height="15.0" fill="rgb(247,102,20)" rx="2" ry="2" />
<text  x="403.68" y="991.5" ></text>
</g>
<g >
<title>do_nanosleep (1 samples, 0.14%)</title><rect x="997.1" y="901" width="1.5" height="15.0" fill="rgb(220,187,35)" rx="2" ry="2" />
<text  x="1000.05" y="911.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (1 samples, 0.14%)</title><rect x="364.0" y="661" width="1.6" height="15.0" fill="rgb(245,80,30)" rx="2" ry="2" />
<text  x="367.00" y="671.5" ></text>
</g>
<g >
<title>inet_lookup_ifaddr_rcu (1 samples, 0.14%)</title><rect x="944.4" y="53" width="1.6" height="15.0" fill="rgb(222,160,54)" rx="2" ry="2" />
<text  x="947.43" y="63.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.14%)</title><rect x="946.0" y="245" width="1.6" height="15.0" fill="rgb(234,49,13)" rx="2" ry="2" />
<text  x="949.03" y="255.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.14%)</title><rect x="402.3" y="645" width="1.6" height="15.0" fill="rgb(235,171,10)" rx="2" ry="2" />
<text  x="405.27" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (2 samples, 0.27%)</title><rect x="939.6" y="725" width="3.2" height="15.0" fill="rgb(215,34,30)" rx="2" ry="2" />
<text  x="942.65" y="735.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/metadata.readContainer (1 samples, 0.14%)</title><rect x="27.5" y="789" width="1.6" height="15.0" fill="rgb(233,226,13)" rx="2" ry="2" />
<text  x="30.54" y="799.5" ></text>
</g>
<g >
<title>kthread (2 samples, 0.27%)</title><rect x="1009.8" y="1045" width="3.2" height="15.0" fill="rgb(216,179,54)" rx="2" ry="2" />
<text  x="1012.81" y="1055.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1 samples, 0.14%)</title><rect x="1161.3" y="645" width="1.6" height="15.0" fill="rgb(205,63,14)" rx="2" ry="2" />
<text  x="1164.30" y="655.5" ></text>
</g>
<g >
<title>path/filepath.join (1 samples, 0.14%)</title><rect x="137.6" y="725" width="1.6" height="15.0" fill="rgb(234,25,24)" rx="2" ry="2" />
<text  x="140.57" y="735.5" ></text>
</g>
<g >
<title>local.internal/poll.(*FD).Read (2 samples, 0.27%)</title><rect x="116.8" y="693" width="3.2" height="15.0" fill="rgb(225,140,9)" rx="2" ry="2" />
<text  x="119.84" y="703.5" ></text>
</g>
<g >
<title>do_epoll_wait (2 samples, 0.27%)</title><rect x="1150.1" y="933" width="3.2" height="15.0" fill="rgb(241,36,31)" rx="2" ry="2" />
<text  x="1153.14" y="943.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/go.etcd.io/bbolt.(*Bucket).ForEach (1 samples, 0.14%)</title><rect x="27.5" y="821" width="1.6" height="15.0" fill="rgb(243,167,0)" rx="2" ry="2" />
<text  x="30.54" y="831.5" ></text>
</g>
<g >
<title>number (1 samples, 0.14%)</title><rect x="957.2" y="597" width="1.6" height="15.0" fill="rgb(248,55,49)" rx="2" ry="2" />
<text  x="960.19" y="607.5" ></text>
</g>
<g >
<title>cgroup_seqfile_show (1 samples, 0.14%)</title><rect x="957.2" y="693" width="1.6" height="15.0" fill="rgb(238,92,14)" rx="2" ry="2" />
<text  x="960.19" y="703.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.14%)</title><rect x="1167.7" y="965" width="1.6" height="15.0" fill="rgb(221,145,16)" rx="2" ry="2" />
<text  x="1170.68" y="975.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.14%)</title><rect x="1185.2" y="549" width="1.6" height="15.0" fill="rgb(240,21,31)" rx="2" ry="2" />
<text  x="1188.22" y="559.5" ></text>
</g>
<g >
<title>tcp_connect (1 samples, 0.14%)</title><rect x="944.4" y="661" width="1.6" height="15.0" fill="rgb(253,203,15)" rx="2" ry="2" />
<text  x="947.43" y="671.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::Impl::Impl(http_parser_type, void*)::{lambda(http_parser*)#3}::__invoke(http_parser*) (1 samples, 0.14%)</title><rect x="1154.9" y="789" width="1.6" height="15.0" fill="rgb(253,152,45)" rx="2" ry="2" />
<text  x="1157.92" y="799.5" ></text>
</g>
<g >
<title>shmem_read_mapping_page_gfp (1 samples, 0.14%)</title><rect x="1032.1" y="901" width="1.6" height="15.0" fill="rgb(247,32,4)" rx="2" ry="2" />
<text  x="1035.14" y="911.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="378.4" y="949" width="1.5" height="15.0" fill="rgb(232,24,25)" rx="2" ry="2" />
<text  x="381.35" y="959.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="1167.7" y="901" width="1.6" height="15.0" fill="rgb(253,60,17)" rx="2" ry="2" />
<text  x="1170.68" y="911.5" ></text>
</g>
<g >
<title>http_parser_execute (1 samples, 0.14%)</title><rect x="1156.5" y="821" width="1.6" height="15.0" fill="rgb(220,9,25)" rx="2" ry="2" />
<text  x="1159.51" y="831.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.14%)</title><rect x="998.6" y="1013" width="1.6" height="15.0" fill="rgb(214,66,22)" rx="2" ry="2" />
<text  x="1001.65" y="1023.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1 samples, 0.14%)</title><rect x="990.7" y="693" width="1.6" height="15.0" fill="rgb(251,45,48)" rx="2" ry="2" />
<text  x="993.68" y="703.5" ></text>
</g>
<g >
<title>Envoy::Http::FilterManager::encodeHeaders(Envoy::Http::ActiveStreamEncoderFilter*, Envoy::Http::ResponseHeaderMap&amp;, bool) (1 samples, 0.14%)</title><rect x="1154.9" y="677" width="1.6" height="15.0" fill="rgb(233,83,12)" rx="2" ry="2" />
<text  x="1157.92" y="687.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.41%)</title><rect x="1137.4" y="917" width="4.8" height="15.0" fill="rgb(223,150,41)" rx="2" ry="2" />
<text  x="1140.38" y="927.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.14%)</title><rect x="1005.0" y="1029" width="1.6" height="15.0" fill="rgb(227,16,39)" rx="2" ry="2" />
<text  x="1008.03" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="115.2" y="613" width="1.6" height="15.0" fill="rgb(211,92,36)" rx="2" ry="2" />
<text  x="118.24" y="623.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.95%)</title><rect x="1108.7" y="1013" width="11.1" height="15.0" fill="rgb(231,48,49)" rx="2" ry="2" />
<text  x="1111.68" y="1023.5" ></text>
</g>
<g >
<title>shmem_read_mapping_page_gfp (1 samples, 0.14%)</title><rect x="998.6" y="901" width="1.6" height="15.0" fill="rgb(251,185,54)" rx="2" ry="2" />
<text  x="1001.65" y="911.5" ></text>
</g>
<g >
<title>bpf_prog_array_is_empty (1 samples, 0.14%)</title><rect x="1183.6" y="709" width="1.6" height="15.0" fill="rgb(231,203,50)" rx="2" ry="2" />
<text  x="1186.62" y="719.5" ></text>
</g>
<g >
<title>__ip_finish_output (1 samples, 0.14%)</title><rect x="990.7" y="581" width="1.6" height="15.0" fill="rgb(236,64,49)" rx="2" ry="2" />
<text  x="993.68" y="591.5" ></text>
</g>
<g >
<title>local.net/http.(*conn).serve (79 samples, 10.68%)</title><rect x="75.4" y="1045" width="126.0" height="15.0" fill="rgb(234,14,4)" rx="2" ry="2" />
<text  x="78.38" y="1055.5" >local.net/http...</text>
</g>
<g >
<title>worker_thread (1 samples, 0.14%)</title><rect x="1028.9" y="1029" width="1.6" height="15.0" fill="rgb(231,19,50)" rx="2" ry="2" />
<text  x="1031.95" y="1039.5" ></text>
</g>
<g >
<title>drm_gem_get_pages (1 samples, 0.14%)</title><rect x="998.6" y="917" width="1.6" height="15.0" fill="rgb(224,39,11)" rx="2" ry="2" />
<text  x="1001.65" y="927.5" ></text>
</g>
<g >
<title>vfs_open (1 samples, 0.14%)</title><rect x="955.6" y="741" width="1.6" height="15.0" fill="rgb(230,31,48)" rx="2" ry="2" />
<text  x="958.59" y="751.5" ></text>
</g>
<g >
<title>run_ksoftirqd (1 samples, 0.14%)</title><rect x="402.3" y="1013" width="1.6" height="15.0" fill="rgb(213,83,13)" rx="2" ry="2" />
<text  x="405.27" y="1023.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.14%)</title><rect x="1102.3" y="565" width="1.6" height="15.0" fill="rgb(210,189,11)" rx="2" ry="2" />
<text  x="1105.30" y="575.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="931.7" y="645" width="3.2" height="15.0" fill="rgb(232,137,50)" rx="2" ry="2" />
<text  x="934.68" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1115.1" y="757" width="1.5" height="15.0" fill="rgb(244,62,43)" rx="2" ry="2" />
<text  x="1118.05" y="767.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.14%)</title><rect x="402.3" y="693" width="1.6" height="15.0" fill="rgb(222,163,38)" rx="2" ry="2" />
<text  x="405.27" y="703.5" ></text>
</g>
<g >
<title>local.encoding/json.(*reflectWithString).resolve (1 samples, 0.14%)</title><rect x="84.9" y="661" width="1.6" height="15.0" fill="rgb(251,185,49)" rx="2" ry="2" />
<text  x="87.95" y="671.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1 samples, 0.14%)</title><rect x="1161.3" y="677" width="1.6" height="15.0" fill="rgb(225,31,20)" rx="2" ry="2" />
<text  x="1164.30" y="687.5" ></text>
</g>
<g >
<title>Envoy::Server::ActiveTcpListener::onAcceptWorker(std::__1::unique_ptr&lt;Envoy::Network::ConnectionSocket, std::__1::default_delete&lt;Envoy::Network::ConnectionSocket&gt; &gt;&amp;&amp;, bool, bool) (1 samples, 0.14%)</title><rect x="1183.6" y="933" width="1.6" height="15.0" fill="rgb(205,191,27)" rx="2" ry="2" />
<text  x="1186.62" y="943.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (18 samples, 2.43%)</title><rect x="305.0" y="997" width="28.7" height="15.0" fill="rgb(210,208,50)" rx="2" ry="2" />
<text  x="308.00" y="1007.5" >ru..</text>
</g>
<g >
<title>github.com/containerd/containerd/metadata.(*containerStore).List.func1.1 (1 samples, 0.14%)</title><rect x="27.5" y="805" width="1.6" height="15.0" fill="rgb(245,109,2)" rx="2" ry="2" />
<text  x="30.54" y="815.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::readv(unsigned long, Envoy::Buffer::RawSlice*, unsigned long) (1 samples, 0.14%)</title><rect x="364.0" y="853" width="1.6" height="15.0" fill="rgb(206,50,50)" rx="2" ry="2" />
<text  x="367.00" y="863.5" ></text>
</g>
<g >
<title>memchr (1 samples, 0.14%)</title><rect x="979.5" y="773" width="1.6" height="15.0" fill="rgb(222,151,25)" rx="2" ry="2" />
<text  x="982.51" y="783.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (1 samples, 0.14%)</title><rect x="171.1" y="597" width="1.5" height="15.0" fill="rgb(222,32,17)" rx="2" ry="2" />
<text  x="174.05" y="607.5" ></text>
</g>
<g >
<title>skb_network_protocol (1 samples, 0.14%)</title><rect x="990.7" y="341" width="1.6" height="15.0" fill="rgb(244,115,33)" rx="2" ry="2" />
<text  x="993.68" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="1102.3" y="853" width="1.6" height="15.0" fill="rgb(216,183,40)" rx="2" ry="2" />
<text  x="1105.30" y="863.5" ></text>
</g>
<g >
<title>dbs_update (1 samples, 0.14%)</title><rect x="1021.0" y="965" width="1.6" height="15.0" fill="rgb(205,188,43)" rx="2" ry="2" />
<text  x="1023.97" y="975.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="1013.0" y="965" width="1.6" height="15.0" fill="rgb(206,121,37)" rx="2" ry="2" />
<text  x="1016.00" y="975.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (16 samples, 2.16%)</title><rect x="75.4" y="853" width="25.5" height="15.0" fill="rgb(244,175,8)" rx="2" ry="2" />
<text  x="78.38" y="863.5" >e..</text>
</g>
<g >
<title>local.internal/poll.runtime_pollOpen (1 samples, 0.14%)</title><rect x="198.2" y="709" width="1.6" height="15.0" fill="rgb(236,71,5)" rx="2" ry="2" />
<text  x="201.16" y="719.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.14%)</title><rect x="1025.8" y="1013" width="1.6" height="15.0" fill="rgb(215,93,38)" rx="2" ry="2" />
<text  x="1028.76" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Server::ActiveTcpSocket::continueFilterChain(bool) (1 samples, 0.14%)</title><rect x="1183.6" y="901" width="1.6" height="15.0" fill="rgb(209,153,2)" rx="2" ry="2" />
<text  x="1186.62" y="911.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.14%)</title><rect x="1022.6" y="1045" width="1.6" height="15.0" fill="rgb(210,157,37)" rx="2" ry="2" />
<text  x="1025.57" y="1055.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.14%)</title><rect x="1118.2" y="757" width="1.6" height="15.0" fill="rgb(244,102,32)" rx="2" ry="2" />
<text  x="1121.24" y="767.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.14%)</title><rect x="944.4" y="597" width="1.6" height="15.0" fill="rgb(234,163,46)" rx="2" ry="2" />
<text  x="947.43" y="607.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::RequestHeaderMap, std::__1::default_delete&lt;Envoy::Http::RequestHeaderMap&gt; &gt;&amp;&amp;, bool) (1 samples, 0.14%)</title><rect x="1156.5" y="757" width="1.6" height="15.0" fill="rgb(233,88,5)" rx="2" ry="2" />
<text  x="1159.51" y="767.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.14%)</title><rect x="1102.3" y="629" width="1.6" height="15.0" fill="rgb(211,188,33)" rx="2" ry="2" />
<text  x="1105.30" y="639.5" ></text>
</g>
<g >
<title>eventfd_write (1 samples, 0.14%)</title><rect x="368.8" y="773" width="1.6" height="15.0" fill="rgb(246,91,39)" rx="2" ry="2" />
<text  x="371.78" y="783.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (1 samples, 0.14%)</title><rect x="1161.3" y="613" width="1.6" height="15.0" fill="rgb(221,217,38)" rx="2" ry="2" />
<text  x="1164.30" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.27%)</title><rect x="397.5" y="1045" width="3.2" height="15.0" fill="rgb(234,186,22)" rx="2" ry="2" />
<text  x="400.49" y="1055.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="992.3" y="917" width="1.6" height="15.0" fill="rgb(244,180,48)" rx="2" ry="2" />
<text  x="995.27" y="927.5" ></text>
</g>
<g >
<title>try_to_unlazy (1 samples, 0.14%)</title><rect x="936.5" y="581" width="1.6" height="15.0" fill="rgb(254,67,44)" rx="2" ry="2" />
<text  x="939.46" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="1161.3" y="853" width="1.6" height="15.0" fill="rgb(232,222,1)" rx="2" ry="2" />
<text  x="1164.30" y="863.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.14%)</title><rect x="1006.6" y="1061" width="1.6" height="15.0" fill="rgb(230,229,35)" rx="2" ry="2" />
<text  x="1009.62" y="1071.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd.(*remoteContainers).List (1 samples, 0.14%)</title><rect x="27.5" y="981" width="1.6" height="15.0" fill="rgb(219,136,4)" rx="2" ry="2" />
<text  x="30.54" y="991.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (2 samples, 0.27%)</title><rect x="397.5" y="1029" width="3.2" height="15.0" fill="rgb(252,209,23)" rx="2" ry="2" />
<text  x="400.49" y="1039.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1 samples, 0.14%)</title><rect x="1102.3" y="469" width="1.6" height="15.0" fill="rgb(238,182,37)" rx="2" ry="2" />
<text  x="1105.30" y="479.5" ></text>
</g>
<g >
<title>[unknown] (110 samples, 14.86%)</title><rect x="808.9" y="885" width="175.4" height="15.0" fill="rgb(249,2,12)" rx="2" ry="2" />
<text  x="811.89" y="895.5" >[unknown]</text>
</g>
<g >
<title>acct_collect (1 samples, 0.14%)</title><rect x="378.4" y="805" width="1.5" height="15.0" fill="rgb(251,109,22)" rx="2" ry="2" />
<text  x="381.35" y="815.5" ></text>
</g>
<g >
<title>tcp_push (1 samples, 0.14%)</title><rect x="1102.3" y="677" width="1.6" height="15.0" fill="rgb(252,213,41)" rx="2" ry="2" />
<text  x="1105.30" y="687.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.14%)</title><rect x="86.5" y="645" width="1.6" height="15.0" fill="rgb(253,191,9)" rx="2" ry="2" />
<text  x="89.54" y="655.5" ></text>
</g>
<g >
<title>containerd (7 samples, 0.95%)</title><rect x="24.4" y="1077" width="11.1" height="15.0" fill="rgb(219,139,3)" rx="2" ry="2" />
<text  x="27.35" y="1087.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (22 samples, 2.97%)</title><rect x="139.2" y="693" width="35.0" height="15.0" fill="rgb(254,192,34)" rx="2" ry="2" />
<text  x="142.16" y="703.5" >en..</text>
</g>
<g >
<title>local.github.com/docker/docker/vendor/github.com/docker/distribution/reference.ParseAnyReference (7 samples, 0.95%)</title><rect x="187.0" y="789" width="11.2" height="15.0" fill="rgb(209,137,40)" rx="2" ry="2" />
<text  x="190.00" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.54%)</title><rect x="49.9" y="965" width="6.3" height="15.0" fill="rgb(239,164,28)" rx="2" ry="2" />
<text  x="52.86" y="975.5" ></text>
</g>
<g >
<title>kthread_data (1 samples, 0.14%)</title><rect x="1006.6" y="981" width="1.6" height="15.0" fill="rgb(208,123,53)" rx="2" ry="2" />
<text  x="1009.62" y="991.5" ></text>
</g>
<g >
<title>runtime.goexit (164 samples, 22.16%)</title><rect x="75.4" y="1061" width="261.5" height="15.0" fill="rgb(229,123,48)" rx="2" ry="2" />
<text  x="78.38" y="1071.5" >runtime.goexit</text>
</g>
<g >
<title>vsnprintf (1 samples, 0.14%)</title><rect x="974.7" y="677" width="1.6" height="15.0" fill="rgb(207,195,14)" rx="2" ry="2" />
<text  x="977.73" y="687.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.27%)</title><rect x="1033.7" y="981" width="3.2" height="15.0" fill="rgb(226,17,50)" rx="2" ry="2" />
<text  x="1036.73" y="991.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.14%)</title><rect x="944.4" y="101" width="1.6" height="15.0" fill="rgb(206,53,36)" rx="2" ry="2" />
<text  x="947.43" y="111.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (2 samples, 0.27%)</title><rect x="993.9" y="933" width="3.2" height="15.0" fill="rgb(237,11,54)" rx="2" ry="2" />
<text  x="996.86" y="943.5" ></text>
</g>
<g >
<title>arch_do_signal (1 samples, 0.14%)</title><rect x="386.3" y="997" width="1.6" height="15.0" fill="rgb(243,135,27)" rx="2" ry="2" />
<text  x="389.32" y="1007.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="416.6" y="1029" width="1.6" height="15.0" fill="rgb(240,38,15)" rx="2" ry="2" />
<text  x="419.62" y="1039.5" ></text>
</g>
<g >
<title>__traverse_mounts (1 samples, 0.14%)</title><rect x="941.2" y="581" width="1.6" height="15.0" fill="rgb(249,182,2)" rx="2" ry="2" />
<text  x="944.24" y="591.5" ></text>
</g>
<g >
<title>xas_start (1 samples, 0.14%)</title><rect x="998.6" y="821" width="1.6" height="15.0" fill="rgb(228,67,45)" rx="2" ry="2" />
<text  x="1001.65" y="831.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.14%)</title><rect x="405.5" y="981" width="1.6" height="15.0" fill="rgb(225,113,30)" rx="2" ry="2" />
<text  x="408.46" y="991.5" ></text>
</g>
<g >
<title>local.encoding/json.ptrEncoder.encode (1 samples, 0.14%)</title><rect x="96.1" y="581" width="1.6" height="15.0" fill="rgb(216,134,22)" rx="2" ry="2" />
<text  x="99.11" y="591.5" ></text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode (16 samples, 2.16%)</title><rect x="75.4" y="773" width="25.5" height="15.0" fill="rgb(221,27,24)" rx="2" ry="2" />
<text  x="78.38" y="783.5" >e..</text>
</g>
<g >
<title>local.os.(*file).close (1 samples, 0.14%)</title><rect x="115.2" y="693" width="1.6" height="15.0" fill="rgb(206,50,34)" rx="2" ry="2" />
<text  x="118.24" y="703.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.14%)</title><rect x="1001.8" y="997" width="1.6" height="15.0" fill="rgb(241,14,42)" rx="2" ry="2" />
<text  x="1004.84" y="1007.5" ></text>
</g>
<g >
<title>local.runtime.exitsyscall (1 samples, 0.14%)</title><rect x="136.0" y="677" width="1.6" height="15.0" fill="rgb(226,184,2)" rx="2" ry="2" />
<text  x="138.97" y="687.5" ></text>
</g>
<g >
<title>__fget_files (1 samples, 0.14%)</title><rect x="352.8" y="853" width="1.6" height="15.0" fill="rgb(249,56,23)" rx="2" ry="2" />
<text  x="355.84" y="863.5" ></text>
</g>
<g >
<title>reflect.Value.Field (1 samples, 0.14%)</title><rect x="97.7" y="661" width="1.6" height="15.0" fill="rgb(236,10,35)" rx="2" ry="2" />
<text  x="100.70" y="671.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.14%)</title><rect x="364.0" y="581" width="1.6" height="15.0" fill="rgb(250,68,49)" rx="2" ry="2" />
<text  x="367.00" y="591.5" ></text>
</g>
<g >
<title>skb_network_protocol (1 samples, 0.14%)</title><rect x="1102.3" y="453" width="1.6" height="15.0" fill="rgb(240,158,29)" rx="2" ry="2" />
<text  x="1105.30" y="463.5" ></text>
</g>
<g >
<title>__legitimize_mnt (1 samples, 0.14%)</title><rect x="968.4" y="629" width="1.5" height="15.0" fill="rgb(252,68,0)" rx="2" ry="2" />
<text  x="971.35" y="639.5" ></text>
</g>
<g >
<title>event_base_loop (14 samples, 1.89%)</title><rect x="351.2" y="981" width="22.4" height="15.0" fill="rgb(205,203,6)" rx="2" ry="2" />
<text  x="354.24" y="991.5" >e..</text>
</g>
<g >
<title>Envoy::Server::WatchDogImpl::touch() (1 samples, 0.14%)</title><rect x="370.4" y="933" width="1.6" height="15.0" fill="rgb(220,197,36)" rx="2" ry="2" />
<text  x="373.38" y="943.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.14%)</title><rect x="164.7" y="565" width="1.6" height="15.0" fill="rgb(218,54,27)" rx="2" ry="2" />
<text  x="167.68" y="575.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.14%)</title><rect x="1013.0" y="1061" width="1.6" height="15.0" fill="rgb(242,181,9)" rx="2" ry="2" />
<text  x="1016.00" y="1071.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.14%)</title><rect x="364.0" y="597" width="1.6" height="15.0" fill="rgb(226,170,7)" rx="2" ry="2" />
<text  x="367.00" y="607.5" ></text>
</g>
<g >
<title>find_lock_entry (1 samples, 0.14%)</title><rect x="1032.1" y="853" width="1.6" height="15.0" fill="rgb(230,169,9)" rx="2" ry="2" />
<text  x="1035.14" y="863.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.14%)</title><rect x="982.7" y="773" width="1.6" height="15.0" fill="rgb(223,93,53)" rx="2" ry="2" />
<text  x="985.70" y="783.5" ></text>
</g>
<g >
<title>Envoy::MainCommonBase::run() (14 samples, 1.89%)</title><rect x="351.2" y="1013" width="22.4" height="15.0" fill="rgb(222,217,24)" rx="2" ry="2" />
<text  x="354.24" y="1023.5" >E..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="387.9" y="917" width="1.6" height="15.0" fill="rgb(240,123,21)" rx="2" ry="2" />
<text  x="390.92" y="927.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.68%)</title><rect x="1111.9" y="949" width="7.9" height="15.0" fill="rgb(240,56,14)" rx="2" ry="2" />
<text  x="1114.86" y="959.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.14%)</title><rect x="963.6" y="693" width="1.6" height="15.0" fill="rgb(238,37,12)" rx="2" ry="2" />
<text  x="966.57" y="703.5" ></text>
</g>
<g >
<title>local.encoding/json.mapEncoder.encode (1 samples, 0.14%)</title><rect x="96.1" y="613" width="1.6" height="15.0" fill="rgb(218,156,39)" rx="2" ry="2" />
<text  x="99.11" y="623.5" ></text>
</g>
<g >
<title>legitimize_mnt (1 samples, 0.14%)</title><rect x="968.4" y="645" width="1.5" height="15.0" fill="rgb(206,172,27)" rx="2" ry="2" />
<text  x="971.35" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="21.2" y="901" width="1.6" height="15.0" fill="rgb(209,34,51)" rx="2" ry="2" />
<text  x="24.16" y="911.5" ></text>
</g>
<g >
<title>sock_sendmsg (1 samples, 0.14%)</title><rect x="1161.3" y="725" width="1.6" height="15.0" fill="rgb(228,55,46)" rx="2" ry="2" />
<text  x="1164.30" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (1 samples, 0.14%)</title><rect x="1167.7" y="1013" width="1.6" height="15.0" fill="rgb(207,160,41)" rx="2" ry="2" />
<text  x="1170.68" y="1023.5" ></text>
</g>
<g >
<title>__get_free_pages (1 samples, 0.14%)</title><rect x="387.9" y="725" width="1.6" height="15.0" fill="rgb(209,38,46)" rx="2" ry="2" />
<text  x="390.92" y="735.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (16 samples, 2.16%)</title><rect x="75.4" y="837" width="25.5" height="15.0" fill="rgb(236,34,51)" rx="2" ry="2" />
<text  x="78.38" y="847.5" >e..</text>
</g>
<g >
<title>path_openat (1 samples, 0.14%)</title><rect x="416.6" y="949" width="1.6" height="15.0" fill="rgb(232,201,7)" rx="2" ry="2" />
<text  x="419.62" y="959.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.14%)</title><rect x="944.4" y="453" width="1.6" height="15.0" fill="rgb(205,44,23)" rx="2" ry="2" />
<text  x="947.43" y="463.5" ></text>
</g>
<g >
<title>ip_sabotage_in (1 samples, 0.14%)</title><rect x="944.4" y="165" width="1.6" height="15.0" fill="rgb(205,168,28)" rx="2" ry="2" />
<text  x="947.43" y="175.5" ></text>
</g>
<g >
<title>local.runtime.(*mspan).sweep (1 samples, 0.14%)</title><rect x="206.1" y="1013" width="1.6" height="15.0" fill="rgb(228,150,6)" rx="2" ry="2" />
<text  x="209.14" y="1023.5" ></text>
</g>
<g >
<title>tcp_v4_connect (1 samples, 0.14%)</title><rect x="944.4" y="677" width="1.6" height="15.0" fill="rgb(228,73,3)" rx="2" ry="2" />
<text  x="947.43" y="687.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.14%)</title><rect x="962.0" y="757" width="1.6" height="15.0" fill="rgb(212,102,53)" rx="2" ry="2" />
<text  x="964.97" y="767.5" ></text>
</g>
<g >
<title>reflect.Value.Field (1 samples, 0.14%)</title><rect x="99.3" y="693" width="1.6" height="15.0" fill="rgb(234,101,54)" rx="2" ry="2" />
<text  x="102.30" y="703.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.14%)</title><rect x="402.3" y="1029" width="1.6" height="15.0" fill="rgb(217,46,32)" rx="2" ry="2" />
<text  x="405.27" y="1039.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.14%)</title><rect x="1003.4" y="1013" width="1.6" height="15.0" fill="rgb(231,201,19)" rx="2" ry="2" />
<text  x="1006.43" y="1023.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.14%)</title><rect x="1021.0" y="1045" width="1.6" height="15.0" fill="rgb(226,7,51)" rx="2" ry="2" />
<text  x="1023.97" y="1055.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/api/server/router/system.(*systemRouter).getVersion-fm (1 samples, 0.14%)</title><rect x="198.2" y="917" width="1.6" height="15.0" fill="rgb(225,43,25)" rx="2" ry="2" />
<text  x="201.16" y="927.5" ></text>
</g>
<g >
<title>arch_do_signal (1 samples, 0.14%)</title><rect x="1146.9" y="997" width="1.6" height="15.0" fill="rgb(239,41,11)" rx="2" ry="2" />
<text  x="1149.95" y="1007.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5, std::__1::allocator&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5&gt;, void (unsigned int)&gt;::operator()(unsigned int&amp;&amp;) (5 samples, 0.68%)</title><rect x="1177.2" y="965" width="8.0" height="15.0" fill="rgb(247,138,36)" rx="2" ry="2" />
<text  x="1180.24" y="975.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.14%)</title><rect x="1022.6" y="997" width="1.6" height="15.0" fill="rgb(232,8,4)" rx="2" ry="2" />
<text  x="1025.57" y="1007.5" ></text>
</g>
<g >
<title>do_madvise (1 samples, 0.14%)</title><rect x="1105.5" y="901" width="1.6" height="15.0" fill="rgb(239,229,50)" rx="2" ry="2" />
<text  x="1108.49" y="911.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.14%)</title><rect x="1001.8" y="1045" width="1.6" height="15.0" fill="rgb(216,179,5)" rx="2" ry="2" />
<text  x="1004.84" y="1055.5" ></text>
</g>
<g >
<title>__libc_start_main (14 samples, 1.89%)</title><rect x="351.2" y="1061" width="22.4" height="15.0" fill="rgb(249,217,36)" rx="2" ry="2" />
<text  x="354.24" y="1071.5" >_..</text>
</g>
<g >
<title>Envoy::Network::RawBufferSocket::doRead(Envoy::Buffer::Instance&amp;) (2 samples, 0.27%)</title><rect x="1158.1" y="917" width="3.2" height="15.0" fill="rgb(247,190,49)" rx="2" ry="2" />
<text  x="1161.11" y="927.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.27%)</title><rect x="1185.2" y="837" width="3.2" height="15.0" fill="rgb(217,169,31)" rx="2" ry="2" />
<text  x="1188.22" y="847.5" ></text>
</g>
<g >
<title>seq_read_iter (1 samples, 0.14%)</title><rect x="973.1" y="741" width="1.6" height="15.0" fill="rgb(208,27,41)" rx="2" ry="2" />
<text  x="976.14" y="751.5" ></text>
</g>
<g >
<title>github.com/docker/docker/api/server/router/container.(*containerRouter).getContainersJSON (77 samples, 10.41%)</title><rect x="75.4" y="901" width="122.8" height="15.0" fill="rgb(245,207,51)" rx="2" ry="2" />
<text  x="78.38" y="911.5" >github.com/dock..</text>
</g>
<g >
<title>do_syscall_64 (10 samples, 1.35%)</title><rect x="963.6" y="837" width="15.9" height="15.0" fill="rgb(251,39,39)" rx="2" ry="2" />
<text  x="966.57" y="847.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.14%)</title><rect x="387.9" y="693" width="1.6" height="15.0" fill="rgb(253,54,15)" rx="2" ry="2" />
<text  x="390.92" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (1 samples, 0.14%)</title><rect x="979.5" y="837" width="1.6" height="15.0" fill="rgb(215,72,2)" rx="2" ry="2" />
<text  x="982.51" y="847.5" ></text>
</g>
<g >
<title>tcp_push (1 samples, 0.14%)</title><rect x="990.7" y="725" width="1.6" height="15.0" fill="rgb(249,64,2)" rx="2" ry="2" />
<text  x="993.68" y="735.5" ></text>
</g>
<g >
<title>http_parser_execute (2 samples, 0.27%)</title><rect x="1180.4" y="821" width="3.2" height="15.0" fill="rgb(252,129,0)" rx="2" ry="2" />
<text  x="1183.43" y="831.5" ></text>
</g>
<g >
<title>seq_read_iter (1 samples, 0.14%)</title><rect x="400.7" y="933" width="1.6" height="15.0" fill="rgb(240,212,27)" rx="2" ry="2" />
<text  x="403.68" y="943.5" ></text>
</g>
<g >
<title>vxlan_xmit (1 samples, 0.14%)</title><rect x="402.3" y="533" width="1.6" height="15.0" fill="rgb(239,174,27)" rx="2" ry="2" />
<text  x="405.27" y="543.5" ></text>
</g>
<g >
<title>__alloc_file (1 samples, 0.14%)</title><rect x="969.9" y="741" width="1.6" height="15.0" fill="rgb(237,213,8)" rx="2" ry="2" />
<text  x="972.95" y="751.5" ></text>
</g>
<g >
<title>sock_write_iter (1 samples, 0.14%)</title><rect x="1161.3" y="741" width="1.6" height="15.0" fill="rgb(223,22,23)" rx="2" ry="2" />
<text  x="1164.30" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.14%)</title><rect x="936.5" y="677" width="1.6" height="15.0" fill="rgb(217,19,22)" rx="2" ry="2" />
<text  x="939.46" y="687.5" ></text>
</g>
<g >
<title>Envoy::Http::ResponseDecoderWrapper::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool) (1 samples, 0.14%)</title><rect x="1154.9" y="741" width="1.6" height="15.0" fill="rgb(227,221,47)" rx="2" ry="2" />
<text  x="1157.92" y="751.5" ></text>
</g>
<g >
<title>lookup_fast (1 samples, 0.14%)</title><rect x="947.6" y="709" width="1.6" height="15.0" fill="rgb(220,178,21)" rx="2" ry="2" />
<text  x="950.62" y="719.5" ></text>
</g>
<g >
<title>[unknown] (33 samples, 4.46%)</title><rect x="1054.5" y="981" width="52.6" height="15.0" fill="rgb(248,58,17)" rx="2" ry="2" />
<text  x="1057.46" y="991.5" >[unkn..</text>
</g>
<g >
<title>find_get_entry (1 samples, 0.14%)</title><rect x="998.6" y="853" width="1.6" height="15.0" fill="rgb(225,224,50)" rx="2" ry="2" />
<text  x="1001.65" y="863.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (1 samples, 0.14%)</title><rect x="1105.5" y="837" width="1.6" height="15.0" fill="rgb(207,3,35)" rx="2" ry="2" />
<text  x="1108.49" y="847.5" ></text>
</g>
<g >
<title>github.com/docker/docker/vendor/github.com/opencontainers/go-digest.Digest.Validate (1 samples, 0.14%)</title><rect x="187.0" y="741" width="1.6" height="15.0" fill="rgb(239,96,3)" rx="2" ry="2" />
<text  x="190.00" y="751.5" ></text>
</g>
<g >
<title>vxlan_xmit_one (1 samples, 0.14%)</title><rect x="402.3" y="517" width="1.6" height="15.0" fill="rgb(240,214,15)" rx="2" ry="2" />
<text  x="405.27" y="527.5" ></text>
</g>
<g >
<title>br_nf_hook_thresh (1 samples, 0.14%)</title><rect x="944.4" y="309" width="1.6" height="15.0" fill="rgb(252,90,49)" rx="2" ry="2" />
<text  x="947.43" y="319.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (3 samples, 0.41%)</title><rect x="29.1" y="1045" width="4.8" height="15.0" fill="rgb(229,128,12)" rx="2" ry="2" />
<text  x="32.14" y="1055.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (1 samples, 0.14%)</title><rect x="402.3" y="837" width="1.6" height="15.0" fill="rgb(223,85,30)" rx="2" ry="2" />
<text  x="405.27" y="847.5" ></text>
</g>
<g >
<title>local.runtime.newobject (1 samples, 0.14%)</title><rect x="120.0" y="661" width="1.6" height="15.0" fill="rgb(218,88,2)" rx="2" ry="2" />
<text  x="123.03" y="671.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="1038.5" y="981" width="1.6" height="15.0" fill="rgb(248,214,28)" rx="2" ry="2" />
<text  x="1041.51" y="991.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.14%)</title><rect x="387.9" y="821" width="1.6" height="15.0" fill="rgb(228,144,6)" rx="2" ry="2" />
<text  x="390.92" y="831.5" ></text>
</g>
<g >
<title>seq_read_iter (1 samples, 0.14%)</title><rect x="957.2" y="725" width="1.6" height="15.0" fill="rgb(223,112,33)" rx="2" ry="2" />
<text  x="960.19" y="735.5" ></text>
</g>
<g >
<title>runtime.getempty (15 samples, 2.03%)</title><rect x="309.8" y="965" width="23.9" height="15.0" fill="rgb(226,67,31)" rx="2" ry="2" />
<text  x="312.78" y="975.5" >r..</text>
</g>
<g >
<title>pgd_alloc (1 samples, 0.14%)</title><rect x="387.9" y="741" width="1.6" height="15.0" fill="rgb(230,194,25)" rx="2" ry="2" />
<text  x="390.92" y="751.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="992.3" y="901" width="1.6" height="15.0" fill="rgb(225,173,35)" rx="2" ry="2" />
<text  x="995.27" y="911.5" ></text>
</g>
<g >
<title>br_dev_xmit (1 samples, 0.14%)</title><rect x="990.7" y="501" width="1.6" height="15.0" fill="rgb(212,139,24)" rx="2" ry="2" />
<text  x="993.68" y="511.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/runtime/restart/monitor.(*monitor).reconcile (1 samples, 0.14%)</title><rect x="27.5" y="1029" width="1.6" height="15.0" fill="rgb(226,110,16)" rx="2" ry="2" />
<text  x="30.54" y="1039.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="218.9" y="933" width="1.6" height="15.0" fill="rgb(208,60,24)" rx="2" ry="2" />
<text  x="221.89" y="943.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.14%)</title><rect x="1145.4" y="1013" width="1.5" height="15.0" fill="rgb(208,74,4)" rx="2" ry="2" />
<text  x="1148.35" y="1023.5" ></text>
</g>
<g >
<title>github.com/docker/docker/api/server/middleware.VersionMiddleware.WrapHandler.func1 (79 samples, 10.68%)</title><rect x="75.4" y="949" width="126.0" height="15.0" fill="rgb(205,202,3)" rx="2" ry="2" />
<text  x="78.38" y="959.5" >github.com/dock..</text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 0.14%)</title><rect x="938.1" y="693" width="1.5" height="15.0" fill="rgb(254,133,50)" rx="2" ry="2" />
<text  x="941.05" y="703.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.68%)</title><rect x="1111.9" y="965" width="7.9" height="15.0" fill="rgb(232,160,16)" rx="2" ry="2" />
<text  x="1114.86" y="975.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/metadata.view (1 samples, 0.14%)</title><rect x="27.5" y="853" width="1.6" height="15.0" fill="rgb(246,203,31)" rx="2" ry="2" />
<text  x="30.54" y="863.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="1022.6" y="981" width="1.6" height="15.0" fill="rgb(230,224,2)" rx="2" ry="2" />
<text  x="1025.57" y="991.5" ></text>
</g>
<g >
<title>local.encoding/json.(*decodeState).value (8 samples, 1.08%)</title><rect x="140.8" y="613" width="12.7" height="15.0" fill="rgb(210,139,26)" rx="2" ry="2" />
<text  x="143.76" y="623.5" ></text>
</g>
<g >
<title>github.com/docker/docker/api/types/filters.Args.MatchKVList (1 samples, 0.14%)</title><rect x="108.9" y="821" width="1.6" height="15.0" fill="rgb(240,92,25)" rx="2" ry="2" />
<text  x="111.86" y="831.5" ></text>
</g>
<g >
<title>local.runtime.SetFinalizer.func1 (1 samples, 0.14%)</title><rect x="121.6" y="645" width="1.6" height="15.0" fill="rgb(213,207,3)" rx="2" ry="2" />
<text  x="124.62" y="655.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.14%)</title><rect x="1185.2" y="325" width="1.6" height="15.0" fill="rgb(206,125,18)" rx="2" ry="2" />
<text  x="1188.22" y="335.5" ></text>
</g>
<g >
<title>ip_getsockopt (1 samples, 0.14%)</title><rect x="395.9" y="949" width="1.6" height="15.0" fill="rgb(233,107,41)" rx="2" ry="2" />
<text  x="398.89" y="959.5" ></text>
</g>
<g >
<title>default_send_IPI_mask_sequence_phys (1 samples, 0.14%)</title><rect x="1105.5" y="741" width="1.6" height="15.0" fill="rgb(231,213,27)" rx="2" ry="2" />
<text  x="1108.49" y="751.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode-fm (1 samples, 0.14%)</title><rect x="96.1" y="565" width="1.6" height="15.0" fill="rgb(242,12,29)" rx="2" ry="2" />
<text  x="99.11" y="575.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.14%)</title><rect x="387.9" y="661" width="1.6" height="15.0" fill="rgb(234,151,5)" rx="2" ry="2" />
<text  x="390.92" y="671.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.14%)</title><rect x="944.4" y="229" width="1.6" height="15.0" fill="rgb(238,54,1)" rx="2" ry="2" />
<text  x="947.43" y="239.5" ></text>
</g>
<g >
<title>seq_read (1 samples, 0.14%)</title><rect x="974.7" y="773" width="1.6" height="15.0" fill="rgb(244,112,17)" rx="2" ry="2" />
<text  x="977.73" y="783.5" ></text>
</g>
<g >
<title>terminate_walk (1 samples, 0.14%)</title><rect x="971.5" y="757" width="1.6" height="15.0" fill="rgb(235,134,37)" rx="2" ry="2" />
<text  x="974.54" y="767.5" ></text>
</g>
<g >
<title>inet_sendmsg (1 samples, 0.14%)</title><rect x="990.7" y="773" width="1.6" height="15.0" fill="rgb(215,62,16)" rx="2" ry="2" />
<text  x="993.68" y="783.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.27%)</title><rect x="1174.1" y="965" width="3.1" height="15.0" fill="rgb(228,61,48)" rx="2" ry="2" />
<text  x="1177.05" y="975.5" ></text>
</g>
<g >
<title>local.regexp.(*Regexp).doOnePass (1 samples, 0.14%)</title><rect x="187.0" y="693" width="1.6" height="15.0" fill="rgb(242,45,22)" rx="2" ry="2" />
<text  x="190.00" y="703.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.14%)</title><rect x="1118.2" y="773" width="1.6" height="15.0" fill="rgb(249,111,33)" rx="2" ry="2" />
<text  x="1121.24" y="783.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="1139.0" y="741" width="3.2" height="15.0" fill="rgb(229,84,21)" rx="2" ry="2" />
<text  x="1141.97" y="751.5" ></text>
</g>
<g >
<title>cpufreq_stats_record_transition (1 samples, 0.14%)</title><rect x="1000.2" y="901" width="1.6" height="15.0" fill="rgb(221,110,34)" rx="2" ry="2" />
<text  x="1003.24" y="911.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.14%)</title><rect x="1175.6" y="869" width="1.6" height="15.0" fill="rgb(205,225,50)" rx="2" ry="2" />
<text  x="1178.65" y="879.5" ></text>
</g>
<g >
<title>local.os.(*file).close (1 samples, 0.14%)</title><rect x="121.6" y="677" width="1.6" height="15.0" fill="rgb(252,88,2)" rx="2" ry="2" />
<text  x="124.62" y="687.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="1100.7" y="901" width="3.2" height="15.0" fill="rgb(217,112,26)" rx="2" ry="2" />
<text  x="1103.70" y="911.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.14%)</title><rect x="1102.3" y="549" width="1.6" height="15.0" fill="rgb(208,133,19)" rx="2" ry="2" />
<text  x="1105.30" y="559.5" ></text>
</g>
<g >
<title>security_file_open (1 samples, 0.14%)</title><rect x="955.6" y="709" width="1.6" height="15.0" fill="rgb(208,80,30)" rx="2" ry="2" />
<text  x="958.59" y="719.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (1 samples, 0.14%)</title><rect x="1105.5" y="821" width="1.6" height="15.0" fill="rgb(208,28,10)" rx="2" ry="2" />
<text  x="1108.49" y="831.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::read(Envoy::Buffer::Instance&amp;, absl::optional&lt;unsigned long&gt;) (1 samples, 0.14%)</title><rect x="364.0" y="869" width="1.6" height="15.0" fill="rgb(206,126,15)" rx="2" ry="2" />
<text  x="367.00" y="879.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.14%)</title><rect x="394.3" y="853" width="1.6" height="15.0" fill="rgb(237,213,27)" rx="2" ry="2" />
<text  x="397.30" y="863.5" ></text>
</g>
<g >
<title>__lock_text_start (4 samples, 0.54%)</title><rect x="1124.6" y="965" width="6.4" height="15.0" fill="rgb(239,1,37)" rx="2" ry="2" />
<text  x="1127.62" y="975.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (1 samples, 0.14%)</title><rect x="985.9" y="869" width="1.6" height="15.0" fill="rgb(228,97,33)" rx="2" ry="2" />
<text  x="988.89" y="879.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="340.1" y="853" width="1.6" height="15.0" fill="rgb(245,63,14)" rx="2" ry="2" />
<text  x="343.08" y="863.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5, std::__1::allocator&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5&gt;, void (unsigned int)&gt;::operator()(unsigned int&amp;&amp;) (1 samples, 0.14%)</title><rect x="364.0" y="933" width="1.6" height="15.0" fill="rgb(240,30,19)" rx="2" ry="2" />
<text  x="367.00" y="943.5" ></text>
</g>
<g >
<title>pilot-discovery (8 samples, 1.08%)</title><rect x="1107.1" y="1077" width="12.7" height="15.0" fill="rgb(251,33,0)" rx="2" ry="2" />
<text  x="1110.08" y="1087.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.14%)</title><rect x="1032.1" y="1029" width="1.6" height="15.0" fill="rgb(212,218,6)" rx="2" ry="2" />
<text  x="1035.14" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::write(Envoy::Buffer::Instance&amp;) (1 samples, 0.14%)</title><rect x="1161.3" y="901" width="1.6" height="15.0" fill="rgb(215,65,42)" rx="2" ry="2" />
<text  x="1164.30" y="911.5" ></text>
</g>
<g >
<title>local.runtime.(*gcWork).tryGet (3 samples, 0.41%)</title><rect x="257.2" y="997" width="4.7" height="15.0" fill="rgb(208,71,54)" rx="2" ry="2" />
<text  x="260.16" y="1007.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.14%)</title><rect x="376.8" y="869" width="1.6" height="15.0" fill="rgb(208,198,3)" rx="2" ry="2" />
<text  x="379.76" y="879.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.27%)</title><rect x="1174.1" y="981" width="3.1" height="15.0" fill="rgb(216,140,54)" rx="2" ry="2" />
<text  x="1177.05" y="991.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.14%)</title><rect x="1013.0" y="1013" width="1.6" height="15.0" fill="rgb(208,190,11)" rx="2" ry="2" />
<text  x="1016.00" y="1023.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.14%)</title><rect x="944.4" y="581" width="1.6" height="15.0" fill="rgb(205,177,38)" rx="2" ry="2" />
<text  x="947.43" y="591.5" ></text>
</g>
<g >
<title>user_path_at_empty (2 samples, 0.27%)</title><rect x="939.6" y="677" width="3.2" height="15.0" fill="rgb(245,148,8)" rx="2" ry="2" />
<text  x="942.65" y="687.5" ></text>
</g>
<g >
<title>local.runtime.epollwait (2 samples, 0.27%)</title><rect x="201.4" y="949" width="3.1" height="15.0" fill="rgb(249,55,51)" rx="2" ry="2" />
<text  x="204.35" y="959.5" ></text>
</g>
<g >
<title>[unknown] (41 samples, 5.54%)</title><rect x="1041.7" y="1045" width="65.4" height="15.0" fill="rgb(251,44,20)" rx="2" ry="2" />
<text  x="1044.70" y="1055.5" >[unknown]</text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.27%)</title><rect x="1014.6" y="981" width="3.2" height="15.0" fill="rgb(248,178,32)" rx="2" ry="2" />
<text  x="1017.59" y="991.5" ></text>
</g>
<g >
<title>os.OpenFile (1 samples, 0.14%)</title><rect x="136.0" y="709" width="1.6" height="15.0" fill="rgb(213,75,29)" rx="2" ry="2" />
<text  x="138.97" y="719.5" ></text>
</g>
<g >
<title>set_root (1 samples, 0.14%)</title><rect x="981.1" y="693" width="1.6" height="15.0" fill="rgb(228,44,48)" rx="2" ry="2" />
<text  x="984.11" y="703.5" ></text>
</g>
<g >
<title>Envoy::Server::WatchDogImpl::touch() (1 samples, 0.14%)</title><rect x="1162.9" y="965" width="1.6" height="15.0" fill="rgb(242,35,8)" rx="2" ry="2" />
<text  x="1165.89" y="975.5" ></text>
</g>
<g >
<title>local.encoding/json.mapEncoder.encode (13 samples, 1.76%)</title><rect x="75.4" y="677" width="20.7" height="15.0" fill="rgb(215,171,9)" rx="2" ry="2" />
<text  x="78.38" y="687.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1 samples, 0.14%)</title><rect x="123.2" y="533" width="1.6" height="15.0" fill="rgb(207,120,39)" rx="2" ry="2" />
<text  x="126.22" y="543.5" ></text>
</g>
<g >
<title>dbs_work_handler (1 samples, 0.14%)</title><rect x="1000.2" y="997" width="1.6" height="15.0" fill="rgb(252,145,13)" rx="2" ry="2" />
<text  x="1003.24" y="1007.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.14%)</title><rect x="998.6" y="1045" width="1.6" height="15.0" fill="rgb(236,125,39)" rx="2" ry="2" />
<text  x="1001.65" y="1055.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.14%)</title><rect x="1027.4" y="1061" width="1.5" height="15.0" fill="rgb(224,47,20)" rx="2" ry="2" />
<text  x="1030.35" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="933.3" y="629" width="1.6" height="15.0" fill="rgb(227,78,48)" rx="2" ry="2" />
<text  x="936.27" y="639.5" ></text>
</g>
<g >
<title>br_forward (1 samples, 0.14%)</title><rect x="990.7" y="485" width="1.6" height="15.0" fill="rgb(222,17,25)" rx="2" ry="2" />
<text  x="993.68" y="495.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.54%)</title><rect x="1113.5" y="885" width="6.3" height="15.0" fill="rgb(205,157,50)" rx="2" ry="2" />
<text  x="1116.46" y="895.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 1.08%)</title><rect x="1107.1" y="1061" width="12.7" height="15.0" fill="rgb(245,169,6)" rx="2" ry="2" />
<text  x="1110.08" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="376.8" y="933" width="1.6" height="15.0" fill="rgb(246,169,29)" rx="2" ry="2" />
<text  x="379.76" y="943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 1.35%)</title><rect x="963.6" y="853" width="15.9" height="15.0" fill="rgb(240,83,15)" rx="2" ry="2" />
<text  x="966.57" y="863.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="942.8" y="757" width="1.6" height="15.0" fill="rgb(208,112,36)" rx="2" ry="2" />
<text  x="945.84" y="767.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (1 samples, 0.14%)</title><rect x="97.7" y="677" width="1.6" height="15.0" fill="rgb(211,173,25)" rx="2" ry="2" />
<text  x="100.70" y="687.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).FindStringSubmatch (4 samples, 0.54%)</title><rect x="188.6" y="741" width="6.4" height="15.0" fill="rgb(244,218,18)" rx="2" ry="2" />
<text  x="191.59" y="751.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.14%)</title><rect x="1185.2" y="229" width="1.6" height="15.0" fill="rgb(235,188,10)" rx="2" ry="2" />
<text  x="1188.22" y="239.5" ></text>
</g>
<g >
<title>runtime.madvise (1 samples, 0.14%)</title><rect x="218.9" y="965" width="1.6" height="15.0" fill="rgb(226,151,9)" rx="2" ry="2" />
<text  x="221.89" y="975.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.27%)</title><rect x="53.1" y="837" width="3.1" height="15.0" fill="rgb(232,162,13)" rx="2" ry="2" />
<text  x="56.05" y="847.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onReadReady() (4 samples, 0.54%)</title><rect x="1154.9" y="933" width="6.4" height="15.0" fill="rgb(226,216,24)" rx="2" ry="2" />
<text  x="1157.92" y="943.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.14%)</title><rect x="1161.3" y="773" width="1.6" height="15.0" fill="rgb(207,161,2)" rx="2" ry="2" />
<text  x="1164.30" y="783.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.27%)</title><rect x="1116.6" y="837" width="3.2" height="15.0" fill="rgb(223,161,43)" rx="2" ry="2" />
<text  x="1119.65" y="847.5" ></text>
</g>
<g >
<title>[Missed User Stack] (2 samples, 0.27%)</title><rect x="1166.1" y="1061" width="3.2" height="15.0" fill="rgb(249,229,1)" rx="2" ry="2" />
<text  x="1169.08" y="1071.5" ></text>
</g>
<g >
<title>os/exec.(*Cmd).Start (1 samples, 0.14%)</title><rect x="198.2" y="821" width="1.6" height="15.0" fill="rgb(232,136,47)" rx="2" ry="2" />
<text  x="201.16" y="831.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="1139.0" y="885" width="3.2" height="15.0" fill="rgb(221,143,30)" rx="2" ry="2" />
<text  x="1141.97" y="895.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="123.2" y="629" width="1.6" height="15.0" fill="rgb(252,203,41)" rx="2" ry="2" />
<text  x="126.22" y="639.5" ></text>
</g>
<g >
<title>ksys_read (4 samples, 0.54%)</title><rect x="957.2" y="789" width="6.4" height="15.0" fill="rgb(254,119,18)" rx="2" ry="2" />
<text  x="960.19" y="799.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.14%)</title><rect x="376.8" y="725" width="1.6" height="15.0" fill="rgb(233,81,11)" rx="2" ry="2" />
<text  x="379.76" y="735.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.14%)</title><rect x="1032.1" y="1013" width="1.6" height="15.0" fill="rgb(206,8,27)" rx="2" ry="2" />
<text  x="1035.14" y="1023.5" ></text>
</g>
<g >
<title>inet_lookup_ifaddr_rcu (1 samples, 0.14%)</title><rect x="944.4" y="37" width="1.6" height="15.0" fill="rgb(238,89,53)" rx="2" ry="2" />
<text  x="947.43" y="47.5" ></text>
</g>
<g >
<title>Envoy::Event::TimerImpl::TimerImpl(Envoy::CSmartPtr&lt;event_base, &amp;event_base_free&gt;&amp;, std::__1::function&lt;void ()&gt;, Envoy::Event::Dispatcher&amp;)::$_0::__invoke(int, short, void*) (1 samples, 0.14%)</title><rect x="351.2" y="965" width="1.6" height="15.0" fill="rgb(237,77,0)" rx="2" ry="2" />
<text  x="354.24" y="975.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (2 samples, 0.27%)</title><rect x="1150.1" y="949" width="3.2" height="15.0" fill="rgb(251,44,12)" rx="2" ry="2" />
<text  x="1153.14" y="959.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="367.2" y="917" width="1.6" height="15.0" fill="rgb(252,106,35)" rx="2" ry="2" />
<text  x="370.19" y="927.5" ></text>
</g>
<g >
<title>kthread (2 samples, 0.27%)</title><rect x="1014.6" y="1045" width="3.2" height="15.0" fill="rgb(245,26,46)" rx="2" ry="2" />
<text  x="1017.59" y="1055.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.14%)</title><rect x="944.4" y="133" width="1.6" height="15.0" fill="rgb(217,47,54)" rx="2" ry="2" />
<text  x="947.43" y="143.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.14%)</title><rect x="92.9" y="613" width="1.6" height="15.0" fill="rgb(211,217,33)" rx="2" ry="2" />
<text  x="95.92" y="623.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; absl::StrReplaceAll&lt;absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;(absl::string_view, absl::flat_hash_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;) (1 samples, 0.14%)</title><rect x="1178.8" y="645" width="1.6" height="15.0" fill="rgb(209,158,17)" rx="2" ry="2" />
<text  x="1181.84" y="655.5" ></text>
</g>
<g >
<title>xt_match_to_user (1 samples, 0.14%)</title><rect x="395.9" y="901" width="1.6" height="15.0" fill="rgb(218,105,53)" rx="2" ry="2" />
<text  x="398.89" y="911.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1115.1" y="725" width="1.5" height="15.0" fill="rgb(241,185,50)" rx="2" ry="2" />
<text  x="1118.05" y="735.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.14%)</title><rect x="402.3" y="917" width="1.6" height="15.0" fill="rgb(218,215,41)" rx="2" ry="2" />
<text  x="405.27" y="927.5" ></text>
</g>
<g >
<title>local.encoding/json.(*decodeState).value (4 samples, 0.54%)</title><rect x="161.5" y="613" width="6.4" height="15.0" fill="rgb(246,229,10)" rx="2" ry="2" />
<text  x="164.49" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="123.2" y="645" width="1.6" height="15.0" fill="rgb(252,208,8)" rx="2" ry="2" />
<text  x="126.22" y="655.5" ></text>
</g>
<g >
<title>sock_sendmsg (1 samples, 0.14%)</title><rect x="990.7" y="789" width="1.6" height="15.0" fill="rgb(239,25,34)" rx="2" ry="2" />
<text  x="993.68" y="799.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onFileEvent(unsigned int) (4 samples, 0.54%)</title><rect x="1177.2" y="949" width="6.4" height="15.0" fill="rgb(252,71,22)" rx="2" ry="2" />
<text  x="1180.24" y="959.5" ></text>
</g>
<g >
<title>sock_common_getsockopt (1 samples, 0.14%)</title><rect x="395.9" y="981" width="1.6" height="15.0" fill="rgb(252,195,11)" rx="2" ry="2" />
<text  x="398.89" y="991.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (1 samples, 0.14%)</title><rect x="985.9" y="789" width="1.6" height="15.0" fill="rgb(206,31,21)" rx="2" ry="2" />
<text  x="988.89" y="799.5" ></text>
</g>
<g >
<title>user_path_at_empty (4 samples, 0.54%)</title><rect x="963.6" y="773" width="6.3" height="15.0" fill="rgb(250,39,17)" rx="2" ry="2" />
<text  x="966.57" y="783.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.27%)</title><rect x="1150.1" y="853" width="3.2" height="15.0" fill="rgb(238,87,2)" rx="2" ry="2" />
<text  x="1153.14" y="863.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.14%)</title><rect x="1024.2" y="1029" width="1.6" height="15.0" fill="rgb(230,128,30)" rx="2" ry="2" />
<text  x="1027.16" y="1039.5" ></text>
</g>
<g >
<title>vfs_statx (2 samples, 0.27%)</title><rect x="952.4" y="773" width="3.2" height="15.0" fill="rgb(225,17,47)" rx="2" ry="2" />
<text  x="955.41" y="783.5" ></text>
</g>
<g >
<title>local.runtime.memclrNoHeapPointers (1 samples, 0.14%)</title><rect x="91.3" y="549" width="1.6" height="15.0" fill="rgb(238,127,25)" rx="2" ry="2" />
<text  x="94.32" y="559.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1 samples, 0.14%)</title><rect x="1161.3" y="693" width="1.6" height="15.0" fill="rgb(210,8,9)" rx="2" ry="2" />
<text  x="1164.30" y="703.5" ></text>
</g>
<g >
<title>github.com/docker/docker/image.(*store).GetParent (11 samples, 1.49%)</title><rect x="121.6" y="757" width="17.6" height="15.0" fill="rgb(218,131,40)" rx="2" ry="2" />
<text  x="124.62" y="767.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerUtility::mutateRequestHeaders(Envoy::Http::RequestHeaderMap&amp;, Envoy::Network::Connection&amp;, Envoy::Http::ConnectionManagerConfig&amp;, Envoy::Router::Config const&amp;, Envoy::LocalInfo::LocalInfo const&amp;) (1 samples, 0.14%)</title><rect x="1156.5" y="741" width="1.6" height="15.0" fill="rgb(220,177,7)" rx="2" ry="2" />
<text  x="1159.51" y="751.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.14%)</title><rect x="1185.2" y="293" width="1.6" height="15.0" fill="rgb(213,46,3)" rx="2" ry="2" />
<text  x="1188.22" y="303.5" ></text>
</g>
<g >
<title>wrmsrl_on_cpu (1 samples, 0.14%)</title><rect x="1009.8" y="917" width="1.6" height="15.0" fill="rgb(249,178,9)" rx="2" ry="2" />
<text  x="1012.81" y="927.5" ></text>
</g>
<g >
<title>vfs_writev (2 samples, 0.27%)</title><rect x="1185.2" y="789" width="3.2" height="15.0" fill="rgb(211,213,22)" rx="2" ry="2" />
<text  x="1188.22" y="799.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.14%)</title><rect x="134.4" y="693" width="1.6" height="15.0" fill="rgb(215,32,0)" rx="2" ry="2" />
<text  x="137.38" y="703.5" ></text>
</g>
<g >
<title>inet_sendmsg (2 samples, 0.27%)</title><rect x="1185.2" y="709" width="3.2" height="15.0" fill="rgb(228,97,33)" rx="2" ry="2" />
<text  x="1188.22" y="719.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.14%)</title><rect x="946.0" y="645" width="1.6" height="15.0" fill="rgb(243,204,35)" rx="2" ry="2" />
<text  x="949.03" y="655.5" ></text>
</g>
<g >
<title>intel_cpufreq_target (1 samples, 0.14%)</title><rect x="1005.0" y="949" width="1.6" height="15.0" fill="rgb(228,39,52)" rx="2" ry="2" />
<text  x="1008.03" y="959.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="1175.6" y="821" width="1.6" height="15.0" fill="rgb(253,178,0)" rx="2" ry="2" />
<text  x="1178.65" y="831.5" ></text>
</g>
<g >
<title>do_sys_openat2 (2 samples, 0.27%)</title><rect x="969.9" y="805" width="3.2" height="15.0" fill="rgb(227,35,38)" rx="2" ry="2" />
<text  x="972.95" y="815.5" ></text>
</g>
<g >
<title>runtime.goexit (5 samples, 0.68%)</title><rect x="27.5" y="1061" width="8.0" height="15.0" fill="rgb(214,177,21)" rx="2" ry="2" />
<text  x="30.54" y="1071.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (1 samples, 0.14%)</title><rect x="985.9" y="821" width="1.6" height="15.0" fill="rgb(234,78,26)" rx="2" ry="2" />
<text  x="988.89" y="831.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.41%)</title><rect x="993.9" y="965" width="4.7" height="15.0" fill="rgb(238,37,33)" rx="2" ry="2" />
<text  x="996.86" y="975.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.27%)</title><rect x="338.5" y="997" width="3.2" height="15.0" fill="rgb(205,198,52)" rx="2" ry="2" />
<text  x="341.49" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onWriteReady() (1 samples, 0.14%)</title><rect x="1161.3" y="933" width="1.6" height="15.0" fill="rgb(247,209,45)" rx="2" ry="2" />
<text  x="1164.30" y="943.5" ></text>
</g>
<g >
<title>smp_call_function_many_cond (1 samples, 0.14%)</title><rect x="1105.5" y="789" width="1.6" height="15.0" fill="rgb(249,141,9)" rx="2" ry="2" />
<text  x="1108.49" y="799.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.14%)</title><rect x="936.5" y="613" width="1.6" height="15.0" fill="rgb(252,191,31)" rx="2" ry="2" />
<text  x="939.46" y="623.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="1139.0" y="789" width="3.2" height="15.0" fill="rgb(243,198,33)" rx="2" ry="2" />
<text  x="1141.97" y="799.5" ></text>
</g>
<g >
<title>cpumask_next (1 samples, 0.14%)</title><rect x="973.1" y="693" width="1.6" height="15.0" fill="rgb(254,217,48)" rx="2" ry="2" />
<text  x="976.14" y="703.5" ></text>
</g>
<g >
<title>path_put (1 samples, 0.14%)</title><rect x="952.4" y="757" width="1.6" height="15.0" fill="rgb(205,81,36)" rx="2" ry="2" />
<text  x="955.41" y="767.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="389.5" y="1045" width="3.2" height="15.0" fill="rgb(227,65,34)" rx="2" ry="2" />
<text  x="392.51" y="1055.5" ></text>
</g>
<g >
<title>event_process_active_single_queue (9 samples, 1.22%)</title><rect x="357.6" y="965" width="14.4" height="15.0" fill="rgb(240,135,19)" rx="2" ry="2" />
<text  x="360.62" y="975.5" ></text>
</g>
<g >
<title>fib_validate_source (1 samples, 0.14%)</title><rect x="944.4" y="69" width="1.6" height="15.0" fill="rgb(251,35,24)" rx="2" ry="2" />
<text  x="947.43" y="79.5" ></text>
</g>
<g >
<title>github.com/docker/docker/vendor/github.com/pkg/errors.callers (4 samples, 0.54%)</title><rect x="128.0" y="709" width="6.4" height="15.0" fill="rgb(232,5,6)" rx="2" ry="2" />
<text  x="131.00" y="719.5" ></text>
</g>
<g >
<title>os.newFile (1 samples, 0.14%)</title><rect x="120.0" y="677" width="1.6" height="15.0" fill="rgb(246,59,21)" rx="2" ry="2" />
<text  x="123.03" y="687.5" ></text>
</g>
<g >
<title>alloc_empty_file (1 samples, 0.14%)</title><rect x="969.9" y="757" width="1.6" height="15.0" fill="rgb(239,126,17)" rx="2" ry="2" />
<text  x="972.95" y="767.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.14%)</title><rect x="356.0" y="837" width="1.6" height="15.0" fill="rgb(232,2,29)" rx="2" ry="2" />
<text  x="359.03" y="847.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::RequestHeaderMap, std::__1::default_delete&lt;Envoy::Http::RequestHeaderMap&gt; &gt;&amp;&amp;, bool) (2 samples, 0.27%)</title><rect x="1180.4" y="757" width="3.2" height="15.0" fill="rgb(248,223,37)" rx="2" ry="2" />
<text  x="1183.43" y="767.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.14%)</title><rect x="403.9" y="1061" width="1.6" height="15.0" fill="rgb(206,0,18)" rx="2" ry="2" />
<text  x="406.86" y="1071.5" ></text>
</g>
<g >
<title>github.com/docker/docker/daemon.(*Daemon).Containers (61 samples, 8.24%)</title><rect x="100.9" y="885" width="97.3" height="15.0" fill="rgb(221,100,54)" rx="2" ry="2" />
<text  x="103.89" y="895.5" >github.com/..</text>
</g>
<g >
<title>kthread (1 samples, 0.14%)</title><rect x="402.3" y="1045" width="1.6" height="15.0" fill="rgb(249,179,31)" rx="2" ry="2" />
<text  x="405.27" y="1055.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.14%)</title><rect x="1030.5" y="1061" width="1.6" height="15.0" fill="rgb(224,127,12)" rx="2" ry="2" />
<text  x="1033.54" y="1071.5" ></text>
</g>
<g >
<title>event_active_nolock_ (1 samples, 0.14%)</title><rect x="373.6" y="1045" width="1.6" height="15.0" fill="rgb(208,103,19)" rx="2" ry="2" />
<text  x="376.57" y="1055.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.14%)</title><rect x="394.3" y="901" width="1.6" height="15.0" fill="rgb(231,36,1)" rx="2" ry="2" />
<text  x="397.30" y="911.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.14%)</title><rect x="987.5" y="837" width="1.6" height="15.0" fill="rgb(252,58,8)" rx="2" ry="2" />
<text  x="990.49" y="847.5" ></text>
</g>
<g >
<title>kworker/0:0 (1 samples, 0.14%)</title><rect x="998.6" y="1077" width="1.6" height="15.0" fill="rgb(244,130,45)" rx="2" ry="2" />
<text  x="1001.65" y="1087.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1 samples, 0.14%)</title><rect x="944.4" y="613" width="1.6" height="15.0" fill="rgb(249,191,30)" rx="2" ry="2" />
<text  x="947.43" y="623.5" ></text>
</g>
<g >
<title>do_filp_open (2 samples, 0.27%)</title><rect x="969.9" y="789" width="3.2" height="15.0" fill="rgb(225,142,12)" rx="2" ry="2" />
<text  x="972.95" y="799.5" ></text>
</g>
<g >
<title>vfs_statx (4 samples, 0.54%)</title><rect x="963.6" y="789" width="6.3" height="15.0" fill="rgb(236,4,15)" rx="2" ry="2" />
<text  x="966.57" y="799.5" ></text>
</g>
<g >
<title>Envoy::Http::CodecClient::onData(Envoy::Buffer::Instance&amp;) (1 samples, 0.14%)</title><rect x="1154.9" y="885" width="1.6" height="15.0" fill="rgb(230,62,0)" rx="2" ry="2" />
<text  x="1157.92" y="895.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="24.4" y="1061" width="3.1" height="15.0" fill="rgb(239,160,47)" rx="2" ry="2" />
<text  x="27.35" y="1071.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.14%)</title><rect x="1185.2" y="213" width="1.6" height="15.0" fill="rgb(230,38,37)" rx="2" ry="2" />
<text  x="1188.22" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_readv (1 samples, 0.14%)</title><rect x="364.0" y="789" width="1.6" height="15.0" fill="rgb(229,10,43)" rx="2" ry="2" />
<text  x="367.00" y="799.5" ></text>
</g>
<g >
<title>non-virtual thunk to Envoy::Http::ActiveStreamDecoderFilter::encodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool, absl::string_view) (1 samples, 0.14%)</title><rect x="1178.8" y="677" width="1.6" height="15.0" fill="rgb(209,171,3)" rx="2" ry="2" />
<text  x="1181.84" y="687.5" ></text>
</g>
<g >
<title>sock_sendmsg (1 samples, 0.14%)</title><rect x="976.3" y="741" width="1.6" height="15.0" fill="rgb(219,81,19)" rx="2" ry="2" />
<text  x="979.32" y="751.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.14%)</title><rect x="1025.8" y="997" width="1.6" height="15.0" fill="rgb(210,137,19)" rx="2" ry="2" />
<text  x="1028.76" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Server::InstanceImpl::updateServerStats() (1 samples, 0.14%)</title><rect x="357.6" y="885" width="1.6" height="15.0" fill="rgb(247,169,25)" rx="2" ry="2" />
<text  x="360.62" y="895.5" ></text>
</g>
<g >
<title>ret_from_fork (2 samples, 0.27%)</title><rect x="1014.6" y="1061" width="3.2" height="15.0" fill="rgb(232,205,7)" rx="2" ry="2" />
<text  x="1017.59" y="1071.5" ></text>
</g>
<g >
<title>get_signal (1 samples, 0.14%)</title><rect x="378.4" y="869" width="1.5" height="15.0" fill="rgb(243,89,36)" rx="2" ry="2" />
<text  x="381.35" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1121.4" y="981" width="1.6" height="15.0" fill="rgb(235,35,21)" rx="2" ry="2" />
<text  x="1124.43" y="991.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.14%)</title><rect x="1003.4" y="1029" width="1.6" height="15.0" fill="rgb(221,85,30)" rx="2" ry="2" />
<text  x="1006.43" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Event::DispatcherImpl::runPostCallbacks() (1 samples, 0.14%)</title><rect x="343.3" y="1013" width="1.6" height="15.0" fill="rgb(248,105,24)" rx="2" ry="2" />
<text  x="346.27" y="1023.5" ></text>
</g>
<g >
<title>__ip_finish_output (1 samples, 0.14%)</title><rect x="946.0" y="501" width="1.6" height="15.0" fill="rgb(222,226,2)" rx="2" ry="2" />
<text  x="949.03" y="511.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/daemon.(*Daemon).refreshImage (52 samples, 7.03%)</title><rect x="115.2" y="821" width="83.0" height="15.0" fill="rgb(221,202,48)" rx="2" ry="2" />
<text  x="118.24" y="831.5" >local.git..</text>
</g>
<g >
<title>Envoy::Server::InstanceImpl::flushStatsInternal() (1 samples, 0.14%)</title><rect x="343.3" y="965" width="1.6" height="15.0" fill="rgb(234,59,46)" rx="2" ry="2" />
<text  x="346.27" y="975.5" ></text>
</g>
<g >
<title>local.reflect.Copy (1 samples, 0.14%)</title><rect x="167.9" y="613" width="1.6" height="15.0" fill="rgb(234,110,33)" rx="2" ry="2" />
<text  x="170.86" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.14%)</title><rect x="22.8" y="869" width="1.6" height="15.0" fill="rgb(244,143,46)" rx="2" ry="2" />
<text  x="25.76" y="879.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (4 samples, 0.54%)</title><rect x="963.6" y="821" width="6.3" height="15.0" fill="rgb(219,150,30)" rx="2" ry="2" />
<text  x="966.57" y="831.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.14%)</title><rect x="403.9" y="917" width="1.6" height="15.0" fill="rgb(252,180,42)" rx="2" ry="2" />
<text  x="406.86" y="927.5" ></text>
</g>
<g >
<title>do_iter_write (2 samples, 0.27%)</title><rect x="1185.2" y="773" width="3.2" height="15.0" fill="rgb(238,40,2)" rx="2" ry="2" />
<text  x="1188.22" y="783.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 1.35%)</title><rect x="1087.9" y="949" width="16.0" height="15.0" fill="rgb(213,205,8)" rx="2" ry="2" />
<text  x="1090.95" y="959.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1 samples, 0.14%)</title><rect x="1185.2" y="277" width="1.6" height="15.0" fill="rgb(241,210,24)" rx="2" ry="2" />
<text  x="1188.22" y="287.5" ></text>
</g>
<g >
<title>exit_mmap (2 samples, 0.27%)</title><rect x="397.5" y="965" width="3.2" height="15.0" fill="rgb(224,121,22)" rx="2" ry="2" />
<text  x="400.49" y="975.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.14%)</title><rect x="1143.8" y="981" width="1.6" height="15.0" fill="rgb(230,64,27)" rx="2" ry="2" />
<text  x="1146.76" y="991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="1146.9" y="1061" width="1.6" height="15.0" fill="rgb(252,182,46)" rx="2" ry="2" />
<text  x="1149.95" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (35 samples, 4.73%)</title><rect x="883.8" y="757" width="55.8" height="15.0" fill="rgb(244,201,50)" rx="2" ry="2" />
<text  x="886.84" y="767.5" >[unkn..</text>
</g>
<g >
<title>tcp_sendmsg (1 samples, 0.14%)</title><rect x="990.7" y="757" width="1.6" height="15.0" fill="rgb(223,79,7)" rx="2" ry="2" />
<text  x="993.68" y="767.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd.(*Client).Containers (1 samples, 0.14%)</title><rect x="27.5" y="997" width="1.6" height="15.0" fill="rgb(228,24,47)" rx="2" ry="2" />
<text  x="30.54" y="1007.5" ></text>
</g>
<g >
<title>github.com/docker/docker/container.(*State).String (1 samples, 0.14%)</title><rect x="100.9" y="805" width="1.6" height="15.0" fill="rgb(250,95,46)" rx="2" ry="2" />
<text  x="103.89" y="815.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (1 samples, 0.14%)</title><rect x="387.9" y="805" width="1.6" height="15.0" fill="rgb(233,214,51)" rx="2" ry="2" />
<text  x="390.92" y="815.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.14%)</title><rect x="338.5" y="949" width="1.6" height="15.0" fill="rgb(222,205,23)" rx="2" ry="2" />
<text  x="341.49" y="959.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;std::__1::__bind&lt;void (Envoy::Event::DispatcherImpl::*)(), Envoy::Event::DispatcherImpl*&gt;, std::__1::allocator&lt;std::__1::__bind&lt;void (Envoy::Event::DispatcherImpl::*)(), Envoy::Event::DispatcherImpl*&gt; &gt;, void ()&gt;::operator()() (1 samples, 0.14%)</title><rect x="372.0" y="965" width="1.6" height="15.0" fill="rgb(237,43,20)" rx="2" ry="2" />
<text  x="374.97" y="975.5" ></text>
</g>
<g >
<title>event_active (1 samples, 0.14%)</title><rect x="368.8" y="917" width="1.6" height="15.0" fill="rgb(237,66,12)" rx="2" ry="2" />
<text  x="371.78" y="927.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (1 samples, 0.14%)</title><rect x="49.9" y="949" width="1.6" height="15.0" fill="rgb(225,107,53)" rx="2" ry="2" />
<text  x="52.86" y="959.5" ></text>
</g>
<g >
<title>ext4_map_blocks (1 samples, 0.14%)</title><rect x="950.8" y="677" width="1.6" height="15.0" fill="rgb(214,212,34)" rx="2" ry="2" />
<text  x="953.81" y="687.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="946.0" y="469" width="1.6" height="15.0" fill="rgb(213,176,50)" rx="2" ry="2" />
<text  x="949.03" y="479.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.14%)</title><rect x="1140.6" y="709" width="1.6" height="15.0" fill="rgb(246,41,1)" rx="2" ry="2" />
<text  x="1143.57" y="719.5" ></text>
</g>
<g >
<title>runtime.mstart (8 samples, 1.08%)</title><rect x="43.5" y="1029" width="12.7" height="15.0" fill="rgb(247,33,46)" rx="2" ry="2" />
<text  x="46.49" y="1039.5" ></text>
</g>
<g >
<title>netlink_dump (1 samples, 0.14%)</title><rect x="942.8" y="677" width="1.6" height="15.0" fill="rgb(226,49,15)" rx="2" ry="2" />
<text  x="945.84" y="687.5" ></text>
</g>
<g >
<title>inet6_fill_ifla6_attrs (1 samples, 0.14%)</title><rect x="942.8" y="613" width="1.6" height="15.0" fill="rgb(249,76,43)" rx="2" ry="2" />
<text  x="945.84" y="623.5" ></text>
</g>
<g >
<title>ksys_read (2 samples, 0.27%)</title><rect x="973.1" y="805" width="3.2" height="15.0" fill="rgb(225,166,32)" rx="2" ry="2" />
<text  x="976.14" y="815.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.14%)</title><rect x="218.9" y="853" width="1.6" height="15.0" fill="rgb(226,201,9)" rx="2" ry="2" />
<text  x="221.89" y="863.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (9 samples, 1.22%)</title><rect x="158.3" y="661" width="14.3" height="15.0" fill="rgb(208,101,41)" rx="2" ry="2" />
<text  x="161.30" y="671.5" ></text>
</g>
<g >
<title>xas_start (1 samples, 0.14%)</title><rect x="998.6" y="837" width="1.6" height="15.0" fill="rgb(236,87,28)" rx="2" ry="2" />
<text  x="1001.65" y="847.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.14%)</title><rect x="394.3" y="965" width="1.6" height="15.0" fill="rgb(233,162,8)" rx="2" ry="2" />
<text  x="397.30" y="975.5" ></text>
</g>
<g >
<title>kworker/12:5 (1 samples, 0.14%)</title><rect x="1000.2" y="1077" width="1.6" height="15.0" fill="rgb(219,147,31)" rx="2" ry="2" />
<text  x="1003.24" y="1087.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.14%)</title><rect x="24.4" y="965" width="1.5" height="15.0" fill="rgb(254,140,6)" rx="2" ry="2" />
<text  x="27.35" y="975.5" ></text>
</g>
<g >
<title>runtime.sweepone (3 samples, 0.41%)</title><rect x="204.5" y="1029" width="4.8" height="15.0" fill="rgb(253,90,20)" rx="2" ry="2" />
<text  x="207.54" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Thread::ThreadImplPosix::ThreadImplPosix(std::__1::function&lt;void ()&gt;, absl::optional&lt;Envoy::Thread::Options&gt; const&amp;)::{lambda(void*)#1}::__invoke(void*) (11 samples, 1.49%)</title><rect x="1148.5" y="1045" width="17.6" height="15.0" fill="rgb(212,83,52)" rx="2" ry="2" />
<text  x="1151.54" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.68%)</title><rect x="1135.8" y="997" width="8.0" height="15.0" fill="rgb(224,28,28)" rx="2" ry="2" />
<text  x="1138.78" y="1007.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.14%)</title><rect x="1118.2" y="789" width="1.6" height="15.0" fill="rgb(235,169,3)" rx="2" ry="2" />
<text  x="1121.24" y="799.5" ></text>
</g>
<g >
<title>encoding/json.stateBeginValue (1 samples, 0.14%)</title><rect x="179.0" y="709" width="1.6" height="15.0" fill="rgb(228,202,52)" rx="2" ry="2" />
<text  x="182.03" y="719.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.14%)</title><rect x="1102.3" y="613" width="1.6" height="15.0" fill="rgb(236,187,36)" rx="2" ry="2" />
<text  x="1105.30" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="934.9" y="645" width="1.6" height="15.0" fill="rgb(244,73,20)" rx="2" ry="2" />
<text  x="937.86" y="655.5" ></text>
</g>
<g >
<title>[unknown] (364 samples, 49.19%)</title><rect x="418.2" y="1029" width="580.4" height="15.0" fill="rgb(249,132,37)" rx="2" ry="2" />
<text  x="421.22" y="1039.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (9 samples, 1.22%)</title><rect x="10.0" y="1029" width="14.4" height="15.0" fill="rgb(222,84,10)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" ></text>
</g>
<g >
<title>local.encoding/json.(*decodeState).value (7 samples, 0.95%)</title><rect x="161.5" y="645" width="11.1" height="15.0" fill="rgb(234,89,25)" rx="2" ry="2" />
<text  x="164.49" y="655.5" ></text>
</g>
<g >
<title>[Missed Kernel Stack] (1 samples, 0.14%)</title><rect x="1177.2" y="869" width="1.6" height="15.0" fill="rgb(243,90,25)" rx="2" ry="2" />
<text  x="1180.24" y="879.5" ></text>
</g>
<g >
<title>dbs_update (1 samples, 0.14%)</title><rect x="1021.0" y="949" width="1.6" height="15.0" fill="rgb(254,23,52)" rx="2" ry="2" />
<text  x="1023.97" y="959.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.14%)</title><rect x="115.2" y="565" width="1.6" height="15.0" fill="rgb(228,79,11)" rx="2" ry="2" />
<text  x="118.24" y="575.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (1 samples, 0.14%)</title><rect x="944.4" y="501" width="1.6" height="15.0" fill="rgb(248,107,17)" rx="2" ry="2" />
<text  x="947.43" y="511.5" ></text>
</g>
<g >
<title>bytes.makeSlice (1 samples, 0.14%)</title><rect x="77.0" y="597" width="1.6" height="15.0" fill="rgb(208,159,53)" rx="2" ry="2" />
<text  x="79.97" y="607.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1 samples, 0.14%)</title><rect x="402.3" y="933" width="1.6" height="15.0" fill="rgb(223,30,45)" rx="2" ry="2" />
<text  x="405.27" y="943.5" ></text>
</g>
<g >
<title>native_send_call_func_ipi (1 samples, 0.14%)</title><rect x="218.9" y="773" width="1.6" height="15.0" fill="rgb(217,107,18)" rx="2" ry="2" />
<text  x="221.89" y="783.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (9 samples, 1.22%)</title><rect x="140.8" y="629" width="14.3" height="15.0" fill="rgb(239,136,35)" rx="2" ry="2" />
<text  x="143.76" y="639.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).findRunnableGCWorker (1 samples, 0.14%)</title><rect x="217.3" y="981" width="1.6" height="15.0" fill="rgb(233,157,42)" rx="2" ry="2" />
<text  x="220.30" y="991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.27%)</title><rect x="1150.1" y="981" width="3.2" height="15.0" fill="rgb(211,172,53)" rx="2" ry="2" />
<text  x="1153.14" y="991.5" ></text>
</g>
<g >
<title>kthread (4 samples, 0.54%)</title><rect x="1124.6" y="1045" width="6.4" height="15.0" fill="rgb(216,222,48)" rx="2" ry="2" />
<text  x="1127.62" y="1055.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (1 samples, 0.14%)</title><rect x="260.4" y="965" width="1.5" height="15.0" fill="rgb(208,190,36)" rx="2" ry="2" />
<text  x="263.35" y="975.5" ></text>
</g>
<g >
<title>runtime.systemstack (74 samples, 10.00%)</title><rect x="218.9" y="1045" width="118.0" height="15.0" fill="rgb(214,169,32)" rx="2" ry="2" />
<text  x="221.89" y="1055.5" >runtime.system..</text>
</g>
<g >
<title>local.encoding/json.(*decodeState).value (22 samples, 2.97%)</title><rect x="139.2" y="709" width="35.0" height="15.0" fill="rgb(211,55,7)" rx="2" ry="2" />
<text  x="142.16" y="719.5" >lo..</text>
</g>
<g >
<title>do_group_exit (1 samples, 0.14%)</title><rect x="376.8" y="821" width="1.6" height="15.0" fill="rgb(215,195,28)" rx="2" ry="2" />
<text  x="379.76" y="831.5" ></text>
</g>
<g >
<title>local.syscall.Syscall (1 samples, 0.14%)</title><rect x="123.2" y="661" width="1.6" height="15.0" fill="rgb(235,161,43)" rx="2" ry="2" />
<text  x="126.22" y="671.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.14%)</title><rect x="25.9" y="981" width="1.6" height="15.0" fill="rgb(243,166,23)" rx="2" ry="2" />
<text  x="28.95" y="991.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/runtime/restart/monitor.(*monitor).monitor (1 samples, 0.14%)</title><rect x="27.5" y="1013" width="1.6" height="15.0" fill="rgb(229,36,47)" rx="2" ry="2" />
<text  x="30.54" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (1 samples, 0.14%)</title><rect x="1178.8" y="853" width="1.6" height="15.0" fill="rgb(216,132,48)" rx="2" ry="2" />
<text  x="1181.84" y="863.5" ></text>
</g>
<g >
<title>drain_zone_pages (1 samples, 0.14%)</title><rect x="1030.5" y="949" width="1.6" height="15.0" fill="rgb(247,83,37)" rx="2" ry="2" />
<text  x="1033.54" y="959.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.27%)</title><rect x="379.9" y="949" width="3.2" height="15.0" fill="rgb(252,196,7)" rx="2" ry="2" />
<text  x="382.95" y="959.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="387.9" y="885" width="1.6" height="15.0" fill="rgb(236,164,31)" rx="2" ry="2" />
<text  x="390.92" y="895.5" ></text>
</g>
<g >
<title>containerd-shim (9 samples, 1.22%)</title><rect x="10.0" y="1077" width="14.4" height="15.0" fill="rgb(245,205,20)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" ></text>
</g>
<g >
<title>all (740 samples, 100%)</title><rect x="10.0" y="1093" width="1180.0" height="15.0" fill="rgb(208,55,52)" rx="2" ry="2" />
<text  x="13.00" y="1103.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.14%)</title><rect x="77.0" y="549" width="1.6" height="15.0" fill="rgb(232,157,4)" rx="2" ry="2" />
<text  x="79.97" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_openat2 (1 samples, 0.14%)</title><rect x="947.6" y="773" width="1.6" height="15.0" fill="rgb(218,126,40)" rx="2" ry="2" />
<text  x="950.62" y="783.5" ></text>
</g>
<g >
<title>security_file_open (1 samples, 0.14%)</title><rect x="416.6" y="901" width="1.6" height="15.0" fill="rgb(207,10,39)" rx="2" ry="2" />
<text  x="419.62" y="911.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1 samples, 0.14%)</title><rect x="402.3" y="757" width="1.6" height="15.0" fill="rgb(213,163,21)" rx="2" ry="2" />
<text  x="405.27" y="767.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (1 samples, 0.14%)</title><rect x="115.2" y="533" width="1.6" height="15.0" fill="rgb(228,209,36)" rx="2" ry="2" />
<text  x="118.24" y="543.5" ></text>
</g>
<g >
<title>drm_gem_shmem_get_pages (1 samples, 0.14%)</title><rect x="1032.1" y="933" width="1.6" height="15.0" fill="rgb(217,203,29)" rx="2" ry="2" />
<text  x="1035.14" y="943.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.14%)</title><rect x="1005.0" y="1013" width="1.6" height="15.0" fill="rgb(206,129,12)" rx="2" ry="2" />
<text  x="1008.03" y="1023.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.14%)</title><rect x="973.1" y="773" width="1.6" height="15.0" fill="rgb(253,24,27)" rx="2" ry="2" />
<text  x="976.14" y="783.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (1 samples, 0.14%)</title><rect x="1161.3" y="597" width="1.6" height="15.0" fill="rgb(241,128,48)" rx="2" ry="2" />
<text  x="1164.30" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1139.0" y="725" width="1.6" height="15.0" fill="rgb(247,143,40)" rx="2" ry="2" />
<text  x="1141.97" y="735.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.14%)</title><rect x="1027.4" y="1013" width="1.5" height="15.0" fill="rgb(244,166,0)" rx="2" ry="2" />
<text  x="1030.35" y="1023.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="356.0" y="789" width="1.6" height="15.0" fill="rgb(220,134,12)" rx="2" ry="2" />
<text  x="359.03" y="799.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.54%)</title><rect x="930.1" y="693" width="6.4" height="15.0" fill="rgb(224,139,52)" rx="2" ry="2" />
<text  x="933.08" y="703.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.14%)</title><rect x="944.4" y="437" width="1.6" height="15.0" fill="rgb(250,37,25)" rx="2" ry="2" />
<text  x="947.43" y="447.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1 samples, 0.14%)</title><rect x="1185.2" y="357" width="1.6" height="15.0" fill="rgb(238,104,42)" rx="2" ry="2" />
<text  x="1188.22" y="367.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="387.9" y="981" width="1.6" height="15.0" fill="rgb(250,86,43)" rx="2" ry="2" />
<text  x="390.92" y="991.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 0.14%)</title><rect x="992.3" y="885" width="1.6" height="15.0" fill="rgb(254,206,36)" rx="2" ry="2" />
<text  x="995.27" y="895.5" ></text>
</g>
<g >
<title>ksoftirqd/14 (1 samples, 0.14%)</title><rect x="403.9" y="1077" width="1.6" height="15.0" fill="rgb(217,54,32)" rx="2" ry="2" />
<text  x="406.86" y="1087.5" ></text>
</g>
<g >
<title>cpufreq_stats_record_transition (1 samples, 0.14%)</title><rect x="1000.2" y="885" width="1.6" height="15.0" fill="rgb(206,58,8)" rx="2" ry="2" />
<text  x="1003.24" y="895.5" ></text>
</g>
<g >
<title>netif_receive_skb (1 samples, 0.14%)</title><rect x="402.3" y="789" width="1.6" height="15.0" fill="rgb(223,181,2)" rx="2" ry="2" />
<text  x="405.27" y="799.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.14%)</title><rect x="946.0" y="581" width="1.6" height="15.0" fill="rgb(213,146,13)" rx="2" ry="2" />
<text  x="949.03" y="591.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.14%)</title><rect x="51.5" y="869" width="1.6" height="15.0" fill="rgb(207,5,10)" rx="2" ry="2" />
<text  x="54.46" y="879.5" ></text>
</g>
<g >
<title>intel_cpufreq_target (1 samples, 0.14%)</title><rect x="1000.2" y="949" width="1.6" height="15.0" fill="rgb(206,185,33)" rx="2" ry="2" />
<text  x="1003.24" y="959.5" ></text>
</g>
<g >
<title>do_madvise (1 samples, 0.14%)</title><rect x="218.9" y="901" width="1.6" height="15.0" fill="rgb(212,211,29)" rx="2" ry="2" />
<text  x="221.89" y="911.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1 samples, 0.14%)</title><rect x="1102.3" y="645" width="1.6" height="15.0" fill="rgb(244,78,17)" rx="2" ry="2" />
<text  x="1105.30" y="655.5" ></text>
</g>
<g >
<title>runtime.gcDrain (1 samples, 0.14%)</title><rect x="33.9" y="1013" width="1.6" height="15.0" fill="rgb(211,162,21)" rx="2" ry="2" />
<text  x="36.92" y="1023.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/go.etcd.io/bbolt.(*Cursor).seek (1 samples, 0.14%)</title><rect x="27.5" y="741" width="1.6" height="15.0" fill="rgb(237,213,4)" rx="2" ry="2" />
<text  x="30.54" y="751.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1 samples, 0.14%)</title><rect x="116.8" y="549" width="1.6" height="15.0" fill="rgb(223,122,13)" rx="2" ry="2" />
<text  x="119.84" y="559.5" ></text>
</g>
<g >
<title>epoll_wait (1 samples, 0.14%)</title><rect x="336.9" y="1029" width="1.6" height="15.0" fill="rgb(235,12,12)" rx="2" ry="2" />
<text  x="339.89" y="1039.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.14%)</title><rect x="403.9" y="981" width="1.6" height="15.0" fill="rgb(225,15,18)" rx="2" ry="2" />
<text  x="406.86" y="991.5" ></text>
</g>
<g >
<title>process_backlog (1 samples, 0.14%)</title><rect x="946.0" y="373" width="1.6" height="15.0" fill="rgb(219,184,47)" rx="2" ry="2" />
<text  x="949.03" y="383.5" ></text>
</g>
<g >
<title>lookup_fast (1 samples, 0.14%)</title><rect x="939.6" y="597" width="1.6" height="15.0" fill="rgb(234,80,43)" rx="2" ry="2" />
<text  x="942.65" y="607.5" ></text>
</g>
<g >
<title>sock_sendmsg (2 samples, 0.27%)</title><rect x="1185.2" y="725" width="3.2" height="15.0" fill="rgb(229,145,36)" rx="2" ry="2" />
<text  x="1188.22" y="735.5" ></text>
</g>
<g >
<title>ip_route_input_slow (1 samples, 0.14%)</title><rect x="944.4" y="85" width="1.6" height="15.0" fill="rgb(217,45,45)" rx="2" ry="2" />
<text  x="947.43" y="95.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.14%)</title><rect x="955.6" y="757" width="1.6" height="15.0" fill="rgb(208,192,45)" rx="2" ry="2" />
<text  x="958.59" y="767.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/metadata/boltutil.ReadTimestamps (1 samples, 0.14%)</title><rect x="27.5" y="773" width="1.6" height="15.0" fill="rgb(245,164,7)" rx="2" ry="2" />
<text  x="30.54" y="783.5" ></text>
</g>
<g >
<title>write (1 samples, 0.14%)</title><rect x="368.8" y="885" width="1.6" height="15.0" fill="rgb(252,165,28)" rx="2" ry="2" />
<text  x="371.78" y="895.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="392.7" y="1013" width="1.6" height="15.0" fill="rgb(246,36,37)" rx="2" ry="2" />
<text  x="395.70" y="1023.5" ></text>
</g>
<g >
<title>runtime.schedule (3 samples, 0.41%)</title><rect x="29.1" y="981" width="4.8" height="15.0" fill="rgb(218,26,46)" rx="2" ry="2" />
<text  x="32.14" y="991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="202.9" y="933" width="1.6" height="15.0" fill="rgb(250,137,0)" rx="2" ry="2" />
<text  x="205.95" y="943.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.14%)</title><rect x="944.4" y="149" width="1.6" height="15.0" fill="rgb(228,1,44)" rx="2" ry="2" />
<text  x="947.43" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="1145.4" y="1029" width="1.5" height="15.0" fill="rgb(252,197,26)" rx="2" ry="2" />
<text  x="1148.35" y="1039.5" ></text>
</g>
<g >
<title>sort.Slice (1 samples, 0.14%)</title><rect x="94.5" y="661" width="1.6" height="15.0" fill="rgb(220,208,17)" rx="2" ry="2" />
<text  x="97.51" y="671.5" ></text>
</g>
<g >
<title>[unknown] (60 samples, 8.11%)</title><rect x="855.1" y="837" width="95.7" height="15.0" fill="rgb(217,162,12)" rx="2" ry="2" />
<text  x="858.14" y="847.5" >[unknown]</text>
</g>
<g >
<title>do_futex (1 samples, 0.14%)</title><rect x="1103.9" y="901" width="1.6" height="15.0" fill="rgb(205,39,49)" rx="2" ry="2" />
<text  x="1106.89" y="911.5" ></text>
</g>
<g >
<title>kworker/6:3 (1 samples, 0.14%)</title><rect x="1028.9" y="1077" width="1.6" height="15.0" fill="rgb(253,41,44)" rx="2" ry="2" />
<text  x="1031.95" y="1087.5" ></text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode-fm (16 samples, 2.16%)</title><rect x="75.4" y="789" width="25.5" height="15.0" fill="rgb(238,126,46)" rx="2" ry="2" />
<text  x="78.38" y="799.5" >e..</text>
</g>
<g >
<title>os.(*File).Read (1 samples, 0.14%)</title><rect x="123.2" y="693" width="1.6" height="15.0" fill="rgb(252,11,25)" rx="2" ry="2" />
<text  x="126.22" y="703.5" ></text>
</g>
<g >
<title>http_parser_execute (1 samples, 0.14%)</title><rect x="1154.9" y="805" width="1.6" height="15.0" fill="rgb(239,122,49)" rx="2" ry="2" />
<text  x="1157.92" y="815.5" ></text>
</g>
<g >
<title>Envoy::Network::FilterManagerImpl::onContinueReading(Envoy::Network::FilterManagerImpl::ActiveReadFilter*, Envoy::Network::ReadBufferSource&amp;) (3 samples, 0.41%)</title><rect x="1178.8" y="917" width="4.8" height="15.0" fill="rgb(216,54,24)" rx="2" ry="2" />
<text  x="1181.84" y="927.5" ></text>
</g>
<g >
<title>default_send_IPI_mask_sequence_phys (1 samples, 0.14%)</title><rect x="218.9" y="757" width="1.6" height="15.0" fill="rgb(254,194,10)" rx="2" ry="2" />
<text  x="221.89" y="767.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/runtime/restart/monitor.(*monitor).run (1 samples, 0.14%)</title><rect x="27.5" y="1045" width="1.6" height="15.0" fill="rgb(237,71,51)" rx="2" ry="2" />
<text  x="30.54" y="1055.5" ></text>
</g>
<g >
<title>local.sort.quickSort_func (1 samples, 0.14%)</title><rect x="94.5" y="645" width="1.6" height="15.0" fill="rgb(249,30,30)" rx="2" ry="2" />
<text  x="97.51" y="655.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="1167.7" y="885" width="1.6" height="15.0" fill="rgb(251,89,21)" rx="2" ry="2" />
<text  x="1170.68" y="895.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1115.1" y="853" width="1.5" height="15.0" fill="rgb(230,74,26)" rx="2" ry="2" />
<text  x="1118.05" y="863.5" ></text>
</g>
<g >
<title>pid_revalidate (1 samples, 0.14%)</title><rect x="954.0" y="661" width="1.6" height="15.0" fill="rgb(209,149,50)" rx="2" ry="2" />
<text  x="957.00" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_setsockopt (1 samples, 0.14%)</title><rect x="1183.6" y="741" width="1.6" height="15.0" fill="rgb(219,141,51)" rx="2" ry="2" />
<text  x="1186.62" y="751.5" ></text>
</g>
<g >
<title>local.encoding/json.unquoteBytes (2 samples, 0.27%)</title><rect x="161.5" y="581" width="3.2" height="15.0" fill="rgb(209,7,21)" rx="2" ry="2" />
<text  x="164.49" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1115.1" y="677" width="1.5" height="15.0" fill="rgb(249,182,52)" rx="2" ry="2" />
<text  x="1118.05" y="687.5" ></text>
</g>
<g >
<title>walk_component (3 samples, 0.41%)</title><rect x="965.2" y="709" width="4.7" height="15.0" fill="rgb(206,18,21)" rx="2" ry="2" />
<text  x="968.16" y="719.5" ></text>
</g>
<g >
<title>sock_write_iter (2 samples, 0.27%)</title><rect x="1185.2" y="741" width="3.2" height="15.0" fill="rgb(234,189,6)" rx="2" ry="2" />
<text  x="1188.22" y="751.5" ></text>
</g>
<g >
<title>seq_printf (1 samples, 0.14%)</title><rect x="974.7" y="709" width="1.6" height="15.0" fill="rgb(212,10,29)" rx="2" ry="2" />
<text  x="977.73" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="387.9" y="1013" width="1.6" height="15.0" fill="rgb(230,63,8)" rx="2" ry="2" />
<text  x="390.92" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 12.70%)</title><rect x="829.6" y="869" width="149.9" height="15.0" fill="rgb(227,158,5)" rx="2" ry="2" />
<text  x="832.62" y="879.5" >[unknown]</text>
</g>
<g >
<title>schedule (1 samples, 0.14%)</title><rect x="1167.7" y="933" width="1.6" height="15.0" fill="rgb(238,0,30)" rx="2" ry="2" />
<text  x="1170.68" y="943.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (2 samples, 0.27%)</title><rect x="1174.1" y="949" width="3.1" height="15.0" fill="rgb(250,55,28)" rx="2" ry="2" />
<text  x="1177.05" y="959.5" ></text>
</g>
<g >
<title>kworker/8:0 (1 samples, 0.14%)</title><rect x="1032.1" y="1077" width="1.6" height="15.0" fill="rgb(253,107,51)" rx="2" ry="2" />
<text  x="1035.14" y="1087.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.14%)</title><rect x="1105.5" y="853" width="1.6" height="15.0" fill="rgb(242,22,6)" rx="2" ry="2" />
<text  x="1108.49" y="863.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="1139.0" y="837" width="3.2" height="15.0" fill="rgb(222,120,45)" rx="2" ry="2" />
<text  x="1141.97" y="847.5" ></text>
</g>
<g >
<title>path_openat (2 samples, 0.27%)</title><rect x="969.9" y="773" width="3.2" height="15.0" fill="rgb(214,163,38)" rx="2" ry="2" />
<text  x="972.95" y="783.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1 samples, 0.14%)</title><rect x="1161.3" y="629" width="1.6" height="15.0" fill="rgb(218,216,22)" rx="2" ry="2" />
<text  x="1164.30" y="639.5" ></text>
</g>
<g >
<title>absl::string_view::find(absl::string_view, unsigned long) const (1 samples, 0.14%)</title><rect x="1178.8" y="613" width="1.6" height="15.0" fill="rgb(221,27,21)" rx="2" ry="2" />
<text  x="1181.84" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1121.4" y="997" width="1.6" height="15.0" fill="rgb(254,159,11)" rx="2" ry="2" />
<text  x="1124.43" y="1007.5" ></text>
</g>
<g >
<title>local.encoding/json.(*encodeState).string (4 samples, 0.54%)</title><rect x="78.6" y="661" width="6.3" height="15.0" fill="rgb(228,91,12)" rx="2" ry="2" />
<text  x="81.57" y="671.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.14%)</title><rect x="1146.9" y="949" width="1.6" height="15.0" fill="rgb(215,29,30)" rx="2" ry="2" />
<text  x="1149.95" y="959.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.14%)</title><rect x="368.8" y="837" width="1.6" height="15.0" fill="rgb(209,103,49)" rx="2" ry="2" />
<text  x="371.78" y="847.5" ></text>
</g>
<g >
<title>do_exit (4 samples, 0.54%)</title><rect x="379.9" y="997" width="6.4" height="15.0" fill="rgb(237,32,35)" rx="2" ry="2" />
<text  x="382.95" y="1007.5" ></text>
</g>
<g >
<title>do_nanosleep (3 samples, 0.41%)</title><rect x="51.5" y="901" width="4.7" height="15.0" fill="rgb(227,86,40)" rx="2" ry="2" />
<text  x="54.46" y="911.5" ></text>
</g>
<g >
<title>__sys_connect_file (2 samples, 0.27%)</title><rect x="944.4" y="725" width="3.2" height="15.0" fill="rgb(229,28,48)" rx="2" ry="2" />
<text  x="947.43" y="735.5" ></text>
</g>
<g >
<title>zap_page_range (1 samples, 0.14%)</title><rect x="218.9" y="885" width="1.6" height="15.0" fill="rgb(225,69,18)" rx="2" ry="2" />
<text  x="221.89" y="895.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.14%)</title><rect x="100.9" y="725" width="1.6" height="15.0" fill="rgb(227,168,29)" rx="2" ry="2" />
<text  x="103.89" y="735.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::WatchdogRegistration::WatchdogRegistration(std::__1::shared_ptr&lt;Envoy::Server::WatchDog&gt; const&amp;, Envoy::Event::Scheduler&amp;, std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000l&gt; &gt;, Envoy::Event::Dispatcher&amp;)::{lambda()#1}, std::__1::allocator&lt;{lambda()#1}&gt;, void ()&gt;::operator()() (1 samples, 0.14%)</title><rect x="1162.9" y="981" width="1.6" height="15.0" fill="rgb(214,207,36)" rx="2" ry="2" />
<text  x="1165.89" y="991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="1167.7" y="1045" width="1.6" height="15.0" fill="rgb(234,182,2)" rx="2" ry="2" />
<text  x="1170.68" y="1055.5" ></text>
</g>
<g >
<title>drm_client_buffer_vmap (1 samples, 0.14%)</title><rect x="1032.1" y="981" width="1.6" height="15.0" fill="rgb(246,42,6)" rx="2" ry="2" />
<text  x="1035.14" y="991.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (16 samples, 2.16%)</title><rect x="75.4" y="709" width="25.5" height="15.0" fill="rgb(238,97,29)" rx="2" ry="2" />
<text  x="78.38" y="719.5" >e..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.41%)</title><rect x="979.5" y="869" width="4.8" height="15.0" fill="rgb(250,139,35)" rx="2" ry="2" />
<text  x="982.51" y="879.5" ></text>
</g>
<g >
<title>rtnl_fill_ifinfo (1 samples, 0.14%)</title><rect x="942.8" y="645" width="1.6" height="15.0" fill="rgb(241,40,30)" rx="2" ry="2" />
<text  x="945.84" y="655.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.14%)</title><rect x="946.0" y="309" width="1.6" height="15.0" fill="rgb(237,200,39)" rx="2" ry="2" />
<text  x="949.03" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (1 samples, 0.14%)</title><rect x="49.9" y="933" width="1.6" height="15.0" fill="rgb(245,84,6)" rx="2" ry="2" />
<text  x="52.86" y="943.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).backtrack (4 samples, 0.54%)</title><rect x="188.6" y="709" width="6.4" height="15.0" fill="rgb(233,52,7)" rx="2" ry="2" />
<text  x="191.59" y="719.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.27%)</title><rect x="1150.1" y="821" width="3.2" height="15.0" fill="rgb(242,111,10)" rx="2" ry="2" />
<text  x="1153.14" y="831.5" ></text>
</g>
<g >
<title>local.reflect.mapaccess (1 samples, 0.14%)</title><rect x="89.7" y="645" width="1.6" height="15.0" fill="rgb(213,125,22)" rx="2" ry="2" />
<text  x="92.73" y="655.5" ></text>
</g>
<g >
<title>walk_component (1 samples, 0.14%)</title><rect x="989.1" y="773" width="1.6" height="15.0" fill="rgb(216,25,27)" rx="2" ry="2" />
<text  x="992.08" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="387.9" y="997" width="1.6" height="15.0" fill="rgb(245,178,7)" rx="2" ry="2" />
<text  x="390.92" y="1007.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (1 samples, 0.14%)</title><rect x="33.9" y="1029" width="1.6" height="15.0" fill="rgb(238,195,5)" rx="2" ry="2" />
<text  x="36.92" y="1039.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode-fm (13 samples, 1.76%)</title><rect x="75.4" y="693" width="20.7" height="15.0" fill="rgb(235,40,43)" rx="2" ry="2" />
<text  x="78.38" y="703.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onMessageComplete() (1 samples, 0.14%)</title><rect x="1154.9" y="773" width="1.6" height="15.0" fill="rgb(206,3,30)" rx="2" ry="2" />
<text  x="1157.92" y="783.5" ></text>
</g>
<g >
<title>tcp_data_ready (1 samples, 0.14%)</title><rect x="1185.2" y="197" width="1.6" height="15.0" fill="rgb(237,51,13)" rx="2" ry="2" />
<text  x="1188.22" y="207.5" ></text>
</g>
<g >
<title>runtime.newarray (1 samples, 0.14%)</title><rect x="155.1" y="613" width="1.6" height="15.0" fill="rgb(241,74,1)" rx="2" ry="2" />
<text  x="158.11" y="623.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/containers.(*local).ListStream (1 samples, 0.14%)</title><rect x="27.5" y="949" width="1.6" height="15.0" fill="rgb(246,74,41)" rx="2" ry="2" />
<text  x="30.54" y="959.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="1025.8" y="981" width="1.6" height="15.0" fill="rgb(220,125,48)" rx="2" ry="2" />
<text  x="1028.76" y="991.5" ></text>
</g>
<g >
<title>Envoy::Server::InstanceImpl::run() (14 samples, 1.89%)</title><rect x="351.2" y="997" width="22.4" height="15.0" fill="rgb(210,151,2)" rx="2" ry="2" />
<text  x="354.24" y="1007.5" >E..</text>
</g>
<g >
<title>[unknown] (8 samples, 1.08%)</title><rect x="1107.1" y="1045" width="12.7" height="15.0" fill="rgb(206,16,37)" rx="2" ry="2" />
<text  x="1110.08" y="1055.5" ></text>
</g>
<g >
<title>github.com/docker/docker/api/server/middleware.ExperimentalMiddleware.WrapHandler.func1 (79 samples, 10.68%)</title><rect x="75.4" y="933" width="126.0" height="15.0" fill="rgb(215,25,25)" rx="2" ry="2" />
<text  x="78.38" y="943.5" >github.com/dock..</text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.14%)</title><rect x="946.0" y="165" width="1.6" height="15.0" fill="rgb(254,129,30)" rx="2" ry="2" />
<text  x="949.03" y="175.5" ></text>
</g>
<g >
<title>Envoy::Http::ResponseDecoderWrapper::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool) (1 samples, 0.14%)</title><rect x="1178.8" y="741" width="1.6" height="15.0" fill="rgb(252,177,3)" rx="2" ry="2" />
<text  x="1181.84" y="751.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.14%)</title><rect x="990.7" y="549" width="1.6" height="15.0" fill="rgb(213,161,31)" rx="2" ry="2" />
<text  x="993.68" y="559.5" ></text>
</g>
<g >
<title>github.com/docker/docker/daemon.(*Daemon).filterByNameIDMatches (3 samples, 0.41%)</title><rect x="100.9" y="853" width="4.8" height="15.0" fill="rgb(209,206,39)" rx="2" ry="2" />
<text  x="103.89" y="863.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.14%)</title><rect x="155.1" y="597" width="1.6" height="15.0" fill="rgb(206,128,23)" rx="2" ry="2" />
<text  x="158.11" y="607.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.54%)</title><rect x="1137.4" y="981" width="6.4" height="15.0" fill="rgb(251,181,7)" rx="2" ry="2" />
<text  x="1140.38" y="991.5" ></text>
</g>
<g >
<title>kernfs_fop_read_iter (1 samples, 0.14%)</title><rect x="973.1" y="757" width="1.6" height="15.0" fill="rgb(207,125,8)" rx="2" ry="2" />
<text  x="976.14" y="767.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::encodeHeaders(Envoy::Http::ResponseHeaderMap&amp;, bool) (1 samples, 0.14%)</title><rect x="1154.9" y="661" width="1.6" height="15.0" fill="rgb(213,197,16)" rx="2" ry="2" />
<text  x="1157.92" y="671.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.14%)</title><rect x="990.7" y="661" width="1.6" height="15.0" fill="rgb(224,167,25)" rx="2" ry="2" />
<text  x="993.68" y="671.5" ></text>
</g>
<g >
<title>dbs_work_handler (1 samples, 0.14%)</title><rect x="1021.0" y="997" width="1.6" height="15.0" fill="rgb(224,168,5)" rx="2" ry="2" />
<text  x="1023.97" y="1007.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.14%)</title><rect x="416.6" y="981" width="1.6" height="15.0" fill="rgb(230,145,42)" rx="2" ry="2" />
<text  x="419.62" y="991.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ServerConnectionImpl::onMessageCompleteBase() (2 samples, 0.27%)</title><rect x="1180.4" y="773" width="3.2" height="15.0" fill="rgb(223,92,49)" rx="2" ry="2" />
<text  x="1183.43" y="783.5" ></text>
</g>
<g >
<title>regexp/syntax.(*Inst).MatchRunePos (1 samples, 0.14%)</title><rect x="193.4" y="677" width="1.6" height="15.0" fill="rgb(209,225,24)" rx="2" ry="2" />
<text  x="196.38" y="687.5" ></text>
</g>
<g >
<title>filename_lookup (2 samples, 0.27%)</title><rect x="939.6" y="661" width="3.2" height="15.0" fill="rgb(205,69,13)" rx="2" ry="2" />
<text  x="942.65" y="671.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.14%)</title><rect x="1000.2" y="1029" width="1.6" height="15.0" fill="rgb(245,145,13)" rx="2" ry="2" />
<text  x="1003.24" y="1039.5" ></text>
</g>
<g >
<title>encoding/json.ptrEncoder.encode-fm (1 samples, 0.14%)</title><rect x="96.1" y="597" width="1.6" height="15.0" fill="rgb(225,188,35)" rx="2" ry="2" />
<text  x="99.11" y="607.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.14%)</title><rect x="947.6" y="741" width="1.6" height="15.0" fill="rgb(223,199,24)" rx="2" ry="2" />
<text  x="950.62" y="751.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (1 samples, 0.14%)</title><rect x="950.8" y="757" width="1.6" height="15.0" fill="rgb(251,35,21)" rx="2" ry="2" />
<text  x="953.81" y="767.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.14%)</title><rect x="164.7" y="549" width="1.6" height="15.0" fill="rgb(217,160,14)" rx="2" ry="2" />
<text  x="167.68" y="559.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.14%)</title><rect x="386.3" y="1013" width="1.6" height="15.0" fill="rgb(208,167,26)" rx="2" ry="2" />
<text  x="389.32" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 1.62%)</title><rect x="918.9" y="725" width="19.2" height="15.0" fill="rgb(234,189,3)" rx="2" ry="2" />
<text  x="921.92" y="735.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.14%)</title><rect x="1019.4" y="1061" width="1.6" height="15.0" fill="rgb(254,91,44)" rx="2" ry="2" />
<text  x="1022.38" y="1071.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.14%)</title><rect x="1146.9" y="965" width="1.6" height="15.0" fill="rgb(215,81,21)" rx="2" ry="2" />
<text  x="1149.95" y="975.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.14%)</title><rect x="990.7" y="597" width="1.6" height="15.0" fill="rgb(237,127,45)" rx="2" ry="2" />
<text  x="993.68" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="22.8" y="885" width="1.6" height="15.0" fill="rgb(217,57,42)" rx="2" ry="2" />
<text  x="25.76" y="895.5" ></text>
</g>
<g >
<title>reflect.Value.Len (1 samples, 0.14%)</title><rect x="169.5" y="613" width="1.6" height="15.0" fill="rgb(251,169,46)" rx="2" ry="2" />
<text  x="172.46" y="623.5" ></text>
</g>
<g >
<title>[unknown] (41 samples, 5.54%)</title><rect x="1041.7" y="1061" width="65.4" height="15.0" fill="rgb(207,218,14)" rx="2" ry="2" />
<text  x="1044.70" y="1071.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="387.9" y="949" width="1.6" height="15.0" fill="rgb(224,146,40)" rx="2" ry="2" />
<text  x="390.92" y="959.5" ></text>
</g>
<g >
<title>local.bytes.(*Buffer).grow (1 samples, 0.14%)</title><rect x="77.0" y="613" width="1.6" height="15.0" fill="rgb(209,69,31)" rx="2" ry="2" />
<text  x="79.97" y="623.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.14%)</title><rect x="985.9" y="773" width="1.6" height="15.0" fill="rgb(211,214,42)" rx="2" ry="2" />
<text  x="988.89" y="783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.68%)</title><rect x="379.9" y="1061" width="8.0" height="15.0" fill="rgb(220,191,52)" rx="2" ry="2" />
<text  x="382.95" y="1071.5" ></text>
</g>
<g >
<title>os.Pipe (1 samples, 0.14%)</title><rect x="198.2" y="773" width="1.6" height="15.0" fill="rgb(220,19,35)" rx="2" ry="2" />
<text  x="201.16" y="783.5" ></text>
</g>
<g >
<title>Envoy::Event::FileEventImpl::assignEvents(unsigned int, event_base*)::$_1::__invoke(int, short, void*) (1 samples, 0.14%)</title><rect x="364.0" y="949" width="1.6" height="15.0" fill="rgb(243,190,45)" rx="2" ry="2" />
<text  x="367.00" y="959.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.14%)</title><rect x="91.3" y="629" width="1.6" height="15.0" fill="rgb(245,181,29)" rx="2" ry="2" />
<text  x="94.32" y="639.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::onData(Envoy::Buffer::Instance&amp;, bool) (1 samples, 0.14%)</title><rect x="1156.5" y="901" width="1.6" height="15.0" fill="rgb(242,60,44)" rx="2" ry="2" />
<text  x="1159.51" y="911.5" ></text>
</g>
<g >
<title>do_epoll_wait (1 samples, 0.14%)</title><rect x="1175.6" y="933" width="1.6" height="15.0" fill="rgb(248,85,12)" rx="2" ry="2" />
<text  x="1178.65" y="943.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (1 samples, 0.14%)</title><rect x="954.0" y="709" width="1.6" height="15.0" fill="rgb(217,187,54)" rx="2" ry="2" />
<text  x="957.00" y="719.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.14%)</title><rect x="947.6" y="757" width="1.6" height="15.0" fill="rgb(227,90,54)" rx="2" ry="2" />
<text  x="950.62" y="767.5" ></text>
</g>
<g >
<title>local.runtime.makeslice (1 samples, 0.14%)</title><rect x="91.3" y="645" width="1.6" height="15.0" fill="rgb(251,204,44)" rx="2" ry="2" />
<text  x="94.32" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.14%)</title><rect x="123.2" y="613" width="1.6" height="15.0" fill="rgb(253,212,37)" rx="2" ry="2" />
<text  x="126.22" y="623.5" ></text>
</g>
<g >
<title>cgroup_seqfile_show (1 samples, 0.14%)</title><rect x="973.1" y="709" width="1.6" height="15.0" fill="rgb(240,157,41)" rx="2" ry="2" />
<text  x="976.14" y="719.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ActiveClient::StreamWrapper::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool) (1 samples, 0.14%)</title><rect x="1178.8" y="725" width="1.6" height="15.0" fill="rgb(207,226,23)" rx="2" ry="2" />
<text  x="1181.84" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.27%)</title><rect x="394.3" y="1045" width="3.2" height="15.0" fill="rgb(236,130,2)" rx="2" ry="2" />
<text  x="397.30" y="1055.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.14%)</title><rect x="1146.9" y="1013" width="1.6" height="15.0" fill="rgb(213,35,25)" rx="2" ry="2" />
<text  x="1149.95" y="1023.5" ></text>
</g>
<g >
<title>__fget_files (1 samples, 0.14%)</title><rect x="352.8" y="837" width="1.6" height="15.0" fill="rgb(253,175,16)" rx="2" ry="2" />
<text  x="355.84" y="847.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1 samples, 0.14%)</title><rect x="1102.3" y="709" width="1.6" height="15.0" fill="rgb(220,221,54)" rx="2" ry="2" />
<text  x="1105.30" y="719.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (1 samples, 0.14%)</title><rect x="989.1" y="789" width="1.6" height="15.0" fill="rgb(241,205,35)" rx="2" ry="2" />
<text  x="992.08" y="799.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.14%)</title><rect x="340.1" y="933" width="1.6" height="15.0" fill="rgb(205,123,19)" rx="2" ry="2" />
<text  x="343.08" y="943.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Stats::ThreadLocalStoreImpl::mergeHistograms(std::__1::function&lt;void ()&gt;)::$_11, std::__1::allocator&lt;Envoy::Stats::ThreadLocalStoreImpl::mergeHistograms(std::__1::function&lt;void ()&gt;)::$_11&gt;, void ()&gt;::operator()() (1 samples, 0.14%)</title><rect x="343.3" y="997" width="1.6" height="15.0" fill="rgb(226,174,36)" rx="2" ry="2" />
<text  x="346.27" y="1007.5" ></text>
</g>
<g >
<title>__check_block_validity.constprop.0 (1 samples, 0.14%)</title><rect x="950.8" y="661" width="1.6" height="15.0" fill="rgb(210,181,48)" rx="2" ry="2" />
<text  x="953.81" y="671.5" ></text>
</g>
<g >
<title>ep_poll (1 samples, 0.14%)</title><rect x="202.9" y="869" width="1.6" height="15.0" fill="rgb(254,97,8)" rx="2" ry="2" />
<text  x="205.95" y="879.5" ></text>
</g>
<g >
<title>event_base_loop (1 samples, 0.14%)</title><rect x="336.9" y="1045" width="1.6" height="15.0" fill="rgb(210,0,28)" rx="2" ry="2" />
<text  x="339.89" y="1055.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.14%)</title><rect x="123.2" y="581" width="1.6" height="15.0" fill="rgb(210,59,21)" rx="2" ry="2" />
<text  x="126.22" y="591.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.14%)</title><rect x="376.8" y="885" width="1.6" height="15.0" fill="rgb(229,73,25)" rx="2" ry="2" />
<text  x="379.76" y="895.5" ></text>
</g>
<g >
<title>__d_lookup (1 samples, 0.14%)</title><rect x="939.6" y="565" width="1.6" height="15.0" fill="rgb(220,57,33)" rx="2" ry="2" />
<text  x="942.65" y="575.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.14%)</title><rect x="1024.2" y="1045" width="1.6" height="15.0" fill="rgb(207,166,48)" rx="2" ry="2" />
<text  x="1027.16" y="1055.5" ></text>
</g>
<g >
<title>native_send_call_func_ipi (1 samples, 0.14%)</title><rect x="1105.5" y="773" width="1.6" height="15.0" fill="rgb(250,14,34)" rx="2" ry="2" />
<text  x="1108.49" y="783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="368.8" y="869" width="1.6" height="15.0" fill="rgb(253,132,13)" rx="2" ry="2" />
<text  x="371.78" y="879.5" ></text>
</g>
<g >
<title>kernfs_seq_show (1 samples, 0.14%)</title><rect x="957.2" y="709" width="1.6" height="15.0" fill="rgb(223,79,53)" rx="2" ry="2" />
<text  x="960.19" y="719.5" ></text>
</g>
<g >
<title>queue_delayed_work_on (1 samples, 0.14%)</title><rect x="1036.9" y="981" width="1.6" height="15.0" fill="rgb(238,194,34)" rx="2" ry="2" />
<text  x="1039.92" y="991.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onFileEvent(unsigned int) (2 samples, 0.27%)</title><rect x="1185.2" y="949" width="3.2" height="15.0" fill="rgb(239,31,0)" rx="2" ry="2" />
<text  x="1188.22" y="959.5" ></text>
</g>
<g >
<title>kernfs_fop_readdir (1 samples, 0.14%)</title><rect x="979.5" y="805" width="1.6" height="15.0" fill="rgb(236,139,54)" rx="2" ry="2" />
<text  x="982.51" y="815.5" ></text>
</g>
<g >
<title>envoy (22 samples, 2.97%)</title><rect x="341.7" y="1077" width="35.1" height="15.0" fill="rgb(253,74,31)" rx="2" ry="2" />
<text  x="344.68" y="1087.5" >en..</text>
</g>
<g >
<title>local.runtime.mcall (6 samples, 0.81%)</title><rect x="209.3" y="1029" width="9.6" height="15.0" fill="rgb(223,61,38)" rx="2" ry="2" />
<text  x="212.32" y="1039.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.14%)</title><rect x="990.7" y="837" width="1.6" height="15.0" fill="rgb(254,86,54)" rx="2" ry="2" />
<text  x="993.68" y="847.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.14%)</title><rect x="364.0" y="613" width="1.6" height="15.0" fill="rgb(246,73,4)" rx="2" ry="2" />
<text  x="367.00" y="623.5" ></text>
</g>
<g >
<title>lockref_put_return (1 samples, 0.14%)</title><rect x="971.5" y="725" width="1.6" height="15.0" fill="rgb(237,42,51)" rx="2" ry="2" />
<text  x="974.54" y="735.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (1 samples, 0.14%)</title><rect x="989.1" y="805" width="1.6" height="15.0" fill="rgb(242,151,26)" rx="2" ry="2" />
<text  x="992.08" y="815.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatchSlice(char const*, unsigned long) (1 samples, 0.14%)</title><rect x="1154.9" y="837" width="1.6" height="15.0" fill="rgb(244,65,32)" rx="2" ry="2" />
<text  x="1157.92" y="847.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.14%)</title><rect x="936.5" y="629" width="1.6" height="15.0" fill="rgb(253,198,10)" rx="2" ry="2" />
<text  x="939.46" y="639.5" ></text>
</g>
<g >
<title>github.com/docker/docker/vendor/github.com/opencontainers/go-digest.Algorithm.Validate (1 samples, 0.14%)</title><rect x="187.0" y="725" width="1.6" height="15.0" fill="rgb(224,173,31)" rx="2" ry="2" />
<text  x="190.00" y="735.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (4 samples, 0.54%)</title><rect x="128.0" y="677" width="6.4" height="15.0" fill="rgb(249,172,50)" rx="2" ry="2" />
<text  x="131.00" y="687.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.14%)</title><rect x="121.6" y="661" width="1.6" height="15.0" fill="rgb(219,127,28)" rx="2" ry="2" />
<text  x="124.62" y="671.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.14%)</title><rect x="405.5" y="869" width="1.6" height="15.0" fill="rgb(209,228,44)" rx="2" ry="2" />
<text  x="408.46" y="879.5" ></text>
</g>
<g >
<title>neigh_periodic_work (1 samples, 0.14%)</title><rect x="1036.9" y="997" width="1.6" height="15.0" fill="rgb(250,172,52)" rx="2" ry="2" />
<text  x="1039.92" y="1007.5" ></text>
</g>
<g >
<title>runtime.findrunnable (3 samples, 0.41%)</title><rect x="29.1" y="965" width="4.8" height="15.0" fill="rgb(235,149,31)" rx="2" ry="2" />
<text  x="32.14" y="975.5" ></text>
</g>
<g >
<title>tomoyo_domain (1 samples, 0.14%)</title><rect x="955.6" y="677" width="1.6" height="15.0" fill="rgb(222,213,5)" rx="2" ry="2" />
<text  x="958.59" y="687.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.14%)</title><rect x="113.6" y="805" width="1.6" height="15.0" fill="rgb(206,101,38)" rx="2" ry="2" />
<text  x="116.65" y="815.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.14%)</title><rect x="202.9" y="805" width="1.6" height="15.0" fill="rgb(211,108,11)" rx="2" ry="2" />
<text  x="205.95" y="815.5" ></text>
</g>
<g >
<title>dbs_work_handler (1 samples, 0.14%)</title><rect x="1009.8" y="997" width="1.6" height="15.0" fill="rgb(216,5,40)" rx="2" ry="2" />
<text  x="1012.81" y="1007.5" ></text>
</g>
<g >
<title>runtime.epollwait (1 samples, 0.14%)</title><rect x="30.7" y="949" width="1.6" height="15.0" fill="rgb(223,184,23)" rx="2" ry="2" />
<text  x="33.73" y="959.5" ></text>
</g>
<g >
<title>ep_poll (1 samples, 0.14%)</title><rect x="984.3" y="805" width="1.6" height="15.0" fill="rgb(232,206,23)" rx="2" ry="2" />
<text  x="987.30" y="815.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (1 samples, 0.14%)</title><rect x="984.3" y="853" width="1.6" height="15.0" fill="rgb(251,180,18)" rx="2" ry="2" />
<text  x="987.30" y="863.5" ></text>
</g>
<g >
<title>kthread (4 samples, 0.54%)</title><rect x="1033.7" y="1045" width="6.4" height="15.0" fill="rgb(223,196,18)" rx="2" ry="2" />
<text  x="1036.73" y="1055.5" ></text>
</g>
<g >
<title>Envoy::Router::ConfigImpl::route(std::__1::function&lt;Envoy::Router::RouteMatchStatus (std::__1::shared_ptr&lt;Envoy::Router::Route const&gt;, Envoy::Router::RouteEvalStatus)&gt; const&amp;, Envoy::Http::RequestHeaderMap const&amp;, Envoy::StreamInfo::StreamInfo const&amp;, unsigned long) const (1 samples, 0.14%)</title><rect x="1180.4" y="725" width="1.6" height="15.0" fill="rgb(205,179,39)" rx="2" ry="2" />
<text  x="1183.43" y="735.5" ></text>
</g>
<g >
<title>Envoy::Network::FilterManagerImpl::onContinueReading(Envoy::Network::FilterManagerImpl::ActiveReadFilter*, Envoy::Network::ReadBufferSource&amp;) (2 samples, 0.27%)</title><rect x="1154.9" y="917" width="3.2" height="15.0" fill="rgb(207,202,50)" rx="2" ry="2" />
<text  x="1157.92" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="387.9" y="965" width="1.6" height="15.0" fill="rgb(231,194,49)" rx="2" ry="2" />
<text  x="390.92" y="975.5" ></text>
</g>
<g >
<title>br_pass_frame_up (1 samples, 0.14%)</title><rect x="402.3" y="821" width="1.6" height="15.0" fill="rgb(209,224,52)" rx="2" ry="2" />
<text  x="405.27" y="831.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (4 samples, 0.54%)</title><rect x="963.6" y="725" width="6.3" height="15.0" fill="rgb(220,166,12)" rx="2" ry="2" />
<text  x="966.57" y="735.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.14%)</title><rect x="1038.5" y="997" width="1.6" height="15.0" fill="rgb(216,129,7)" rx="2" ry="2" />
<text  x="1041.51" y="1007.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.14%)</title><rect x="1008.2" y="1061" width="1.6" height="15.0" fill="rgb(219,27,24)" rx="2" ry="2" />
<text  x="1011.22" y="1071.5" ></text>
</g>
<g >
<title>runtime.usleep (7 samples, 0.95%)</title><rect x="45.1" y="981" width="11.1" height="15.0" fill="rgb(246,138,29)" rx="2" ry="2" />
<text  x="48.08" y="991.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.14%)</title><rect x="405.5" y="997" width="1.6" height="15.0" fill="rgb(218,213,20)" rx="2" ry="2" />
<text  x="408.46" y="1007.5" ></text>
</g>
<g >
<title>runtime.notetsleep (1 samples, 0.14%)</title><rect x="24.4" y="981" width="1.5" height="15.0" fill="rgb(217,5,4)" rx="2" ry="2" />
<text  x="27.35" y="991.5" ></text>
</g>
<g >
<title>github.com/docker/docker/daemon.(*Daemon).foldFilter (2 samples, 0.27%)</title><rect x="105.7" y="853" width="3.2" height="15.0" fill="rgb(215,152,14)" rx="2" ry="2" />
<text  x="108.68" y="863.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="24.4" y="1045" width="3.1" height="15.0" fill="rgb(217,128,33)" rx="2" ry="2" />
<text  x="27.35" y="1055.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.14%)</title><rect x="77.0" y="533" width="1.6" height="15.0" fill="rgb(249,173,6)" rx="2" ry="2" />
<text  x="79.97" y="543.5" ></text>
</g>
<g >
<title>event_active_nolock_ (1 samples, 0.14%)</title><rect x="1153.3" y="997" width="1.6" height="15.0" fill="rgb(205,30,42)" rx="2" ry="2" />
<text  x="1156.32" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Stats::ThreadLocalStoreImpl::mergeInternal(std::__1::function&lt;void ()&gt;) (1 samples, 0.14%)</title><rect x="343.3" y="981" width="1.6" height="15.0" fill="rgb(253,172,35)" rx="2" ry="2" />
<text  x="346.27" y="991.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (3 samples, 0.41%)</title><rect x="161.5" y="597" width="4.8" height="15.0" fill="rgb(252,56,39)" rx="2" ry="2" />
<text  x="164.49" y="607.5" ></text>
</g>
<g >
<title>Envoy::Network::SocketImpl::close() (1 samples, 0.14%)</title><rect x="1177.2" y="917" width="1.6" height="15.0" fill="rgb(205,225,38)" rx="2" ry="2" />
<text  x="1180.24" y="927.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 1.22%)</title><rect x="1131.0" y="1029" width="14.4" height="15.0" fill="rgb(250,117,48)" rx="2" ry="2" />
<text  x="1134.00" y="1039.5" ></text>
</g>
<g >
<title>__legitimize_mnt (1 samples, 0.14%)</title><rect x="936.5" y="533" width="1.6" height="15.0" fill="rgb(213,174,39)" rx="2" ry="2" />
<text  x="939.46" y="543.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.14%)</title><rect x="944.4" y="197" width="1.6" height="15.0" fill="rgb(209,211,16)" rx="2" ry="2" />
<text  x="947.43" y="207.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 0.14%)</title><rect x="946.0" y="693" width="1.6" height="15.0" fill="rgb(228,93,7)" rx="2" ry="2" />
<text  x="949.03" y="703.5" ></text>
</g>
<g >
<title>Envoy::Server::InstanceImpl::updateServerStats() (1 samples, 0.14%)</title><rect x="343.3" y="949" width="1.6" height="15.0" fill="rgb(253,188,4)" rx="2" ry="2" />
<text  x="346.27" y="959.5" ></text>
</g>
<g >
<title>__hrtimer_init (1 samples, 0.14%)</title><rect x="354.4" y="805" width="1.6" height="15.0" fill="rgb(216,41,5)" rx="2" ry="2" />
<text  x="357.43" y="815.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/daemon.(*Daemon).SystemVersion (1 samples, 0.14%)</title><rect x="198.2" y="885" width="1.6" height="15.0" fill="rgb(254,76,16)" rx="2" ry="2" />
<text  x="201.16" y="895.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.14%)</title><rect x="394.3" y="917" width="1.6" height="15.0" fill="rgb(228,98,41)" rx="2" ry="2" />
<text  x="397.30" y="927.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="1003.4" y="965" width="1.6" height="15.0" fill="rgb(254,24,14)" rx="2" ry="2" />
<text  x="1006.43" y="975.5" ></text>
</g>
<g >
<title>runtime.mstart (2 samples, 0.27%)</title><rect x="24.4" y="1029" width="3.1" height="15.0" fill="rgb(233,37,11)" rx="2" ry="2" />
<text  x="27.35" y="1039.5" ></text>
</g>
<g >
<title>Envoy::Network::RawBufferSocket::doRead(Envoy::Buffer::Instance&amp;) (1 samples, 0.14%)</title><rect x="364.0" y="885" width="1.6" height="15.0" fill="rgb(236,85,14)" rx="2" ry="2" />
<text  x="367.00" y="895.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.14%)</title><rect x="998.6" y="1061" width="1.6" height="15.0" fill="rgb(216,227,23)" rx="2" ry="2" />
<text  x="1001.65" y="1071.5" ></text>
</g>
<g >
<title>do_sys_open (1 samples, 0.14%)</title><rect x="936.5" y="661" width="1.6" height="15.0" fill="rgb(223,86,16)" rx="2" ry="2" />
<text  x="939.46" y="671.5" ></text>
</g>
<g >
<title>__sys_getsockopt (1 samples, 0.14%)</title><rect x="395.9" y="997" width="1.6" height="15.0" fill="rgb(217,85,39)" rx="2" ry="2" />
<text  x="398.89" y="1007.5" ></text>
</g>
<g >
<title>worker_thread (2 samples, 0.27%)</title><rect x="1009.8" y="1029" width="3.2" height="15.0" fill="rgb(208,35,34)" rx="2" ry="2" />
<text  x="1012.81" y="1039.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.14%)</title><rect x="946.0" y="229" width="1.6" height="15.0" fill="rgb(236,83,45)" rx="2" ry="2" />
<text  x="949.03" y="239.5" ></text>
</g>
<g >
<title>local.runtime.newobject (1 samples, 0.14%)</title><rect x="134.4" y="709" width="1.6" height="15.0" fill="rgb(206,219,3)" rx="2" ry="2" />
<text  x="137.38" y="719.5" ></text>
</g>
<g >
<title>[unknown] (200 samples, 27.03%)</title><rect x="674.9" y="965" width="319.0" height="15.0" fill="rgb(232,209,33)" rx="2" ry="2" />
<text  x="677.95" y="975.5" >[unknown]</text>
</g>
<g >
<title>local.encoding/json.indirect (1 samples, 0.14%)</title><rect x="171.1" y="533" width="1.5" height="15.0" fill="rgb(246,143,48)" rx="2" ry="2" />
<text  x="174.05" y="543.5" ></text>
</g>
<g >
<title>vsnprintf (1 samples, 0.14%)</title><rect x="957.2" y="629" width="1.6" height="15.0" fill="rgb(214,183,37)" rx="2" ry="2" />
<text  x="960.19" y="639.5" ></text>
</g>
<g >
<title>sock_write_iter (1 samples, 0.14%)</title><rect x="990.7" y="805" width="1.6" height="15.0" fill="rgb(242,102,23)" rx="2" ry="2" />
<text  x="993.68" y="815.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ClientConnectionImpl::onMessageCompleteBase() (1 samples, 0.14%)</title><rect x="1178.8" y="757" width="1.6" height="15.0" fill="rgb(239,220,43)" rx="2" ry="2" />
<text  x="1181.84" y="767.5" ></text>
</g>
<g >
<title>local.runtime.park_m (2 samples, 0.27%)</title><rect x="201.4" y="997" width="3.1" height="15.0" fill="rgb(219,199,35)" rx="2" ry="2" />
<text  x="204.35" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (166 samples, 22.43%)</title><rect x="729.2" y="949" width="264.7" height="15.0" fill="rgb(236,108,28)" rx="2" ry="2" />
<text  x="732.16" y="959.5" >[unknown]</text>
</g>
<g >
<title>ret_from_fork (4 samples, 0.54%)</title><rect x="1124.6" y="1061" width="6.4" height="15.0" fill="rgb(246,63,35)" rx="2" ry="2" />
<text  x="1127.62" y="1071.5" ></text>
</g>
<g >
<title>br_nf_pre_routing_finish (1 samples, 0.14%)</title><rect x="944.4" y="325" width="1.6" height="15.0" fill="rgb(250,114,53)" rx="2" ry="2" />
<text  x="947.43" y="335.5" ></text>
</g>
<g >
<title>proc_reg_read_iter (2 samples, 0.27%)</title><rect x="958.8" y="741" width="3.2" height="15.0" fill="rgb(233,60,50)" rx="2" ry="2" />
<text  x="961.78" y="751.5" ></text>
</g>
<g >
<title>br_netif_receive_skb (1 samples, 0.14%)</title><rect x="944.4" y="261" width="1.6" height="15.0" fill="rgb(221,68,6)" rx="2" ry="2" />
<text  x="947.43" y="271.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).doExecute (4 samples, 0.54%)</title><rect x="188.6" y="725" width="6.4" height="15.0" fill="rgb(222,49,4)" rx="2" ry="2" />
<text  x="191.59" y="735.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.14%)</title><rect x="976.3" y="789" width="1.6" height="15.0" fill="rgb(226,108,53)" rx="2" ry="2" />
<text  x="979.32" y="799.5" ></text>
</g>
<g >
<title>od_dbs_update (1 samples, 0.14%)</title><rect x="1021.0" y="981" width="1.6" height="15.0" fill="rgb(240,222,28)" rx="2" ry="2" />
<text  x="1023.97" y="991.5" ></text>
</g>
<g >
<title>indexbytebody (1 samples, 0.14%)</title><rect x="195.0" y="757" width="1.6" height="15.0" fill="rgb(220,181,38)" rx="2" ry="2" />
<text  x="197.97" y="767.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode-fm (1 samples, 0.14%)</title><rect x="96.1" y="629" width="1.6" height="15.0" fill="rgb(216,219,25)" rx="2" ry="2" />
<text  x="99.11" y="639.5" ></text>
</g>
<g >
<title>os.newFile (1 samples, 0.14%)</title><rect x="124.8" y="661" width="1.6" height="15.0" fill="rgb(227,32,41)" rx="2" ry="2" />
<text  x="127.81" y="671.5" ></text>
</g>
<g >
<title>Envoy::Http::ActiveStreamFilterBase::route() (1 samples, 0.14%)</title><rect x="1182.0" y="709" width="1.6" height="15.0" fill="rgb(221,168,52)" rx="2" ry="2" />
<text  x="1185.03" y="719.5" ></text>
</g>
<g >
<title>__ip_finish_output (1 samples, 0.14%)</title><rect x="1185.2" y="517" width="1.6" height="15.0" fill="rgb(239,169,8)" rx="2" ry="2" />
<text  x="1188.22" y="527.5" ></text>
</g>
<g >
<title>local.encoding/json.(*encodeState).string (2 samples, 0.27%)</title><rect x="75.4" y="645" width="3.2" height="15.0" fill="rgb(237,192,27)" rx="2" ry="2" />
<text  x="78.38" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.68%)</title><rect x="379.9" y="1045" width="8.0" height="15.0" fill="rgb(248,142,37)" rx="2" ry="2" />
<text  x="382.95" y="1055.5" ></text>
</g>
<g >
<title>__x64_sys_read (4 samples, 0.54%)</title><rect x="957.2" y="805" width="6.4" height="15.0" fill="rgb(208,206,0)" rx="2" ry="2" />
<text  x="960.19" y="815.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.14%)</title><rect x="946.0" y="549" width="1.6" height="15.0" fill="rgb(233,9,28)" rx="2" ry="2" />
<text  x="949.03" y="559.5" ></text>
</g>
<g >
<title>kworker/17:3 (1 samples, 0.14%)</title><rect x="1003.4" y="1077" width="1.6" height="15.0" fill="rgb(212,1,1)" rx="2" ry="2" />
<text  x="1006.43" y="1087.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.14%)</title><rect x="33.9" y="1045" width="1.6" height="15.0" fill="rgb(209,223,10)" rx="2" ry="2" />
<text  x="36.92" y="1055.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="392.7" y="997" width="1.6" height="15.0" fill="rgb(224,102,18)" rx="2" ry="2" />
<text  x="395.70" y="1007.5" ></text>
</g>
<g >
<title>ep_poll (1 samples, 0.14%)</title><rect x="984.3" y="821" width="1.6" height="15.0" fill="rgb(207,131,45)" rx="2" ry="2" />
<text  x="987.30" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="387.9" y="837" width="1.6" height="15.0" fill="rgb(210,208,11)" rx="2" ry="2" />
<text  x="390.92" y="847.5" ></text>
</g>
<g >
<title>cpufreq_freq_transition_end (1 samples, 0.14%)</title><rect x="1000.2" y="933" width="1.6" height="15.0" fill="rgb(240,110,39)" rx="2" ry="2" />
<text  x="1003.24" y="943.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.14%)</title><rect x="1103.9" y="821" width="1.6" height="15.0" fill="rgb(226,142,1)" rx="2" ry="2" />
<text  x="1106.89" y="831.5" ></text>
</g>
<g >
<title>seq_printf (1 samples, 0.14%)</title><rect x="957.2" y="661" width="1.6" height="15.0" fill="rgb(226,88,43)" rx="2" ry="2" />
<text  x="960.19" y="671.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onFileEvent(unsigned int) (5 samples, 0.68%)</title><rect x="1154.9" y="949" width="8.0" height="15.0" fill="rgb(218,5,18)" rx="2" ry="2" />
<text  x="1157.92" y="959.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.14%)</title><rect x="946.0" y="149" width="1.6" height="15.0" fill="rgb(213,43,27)" rx="2" ry="2" />
<text  x="949.03" y="159.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::close() (1 samples, 0.14%)</title><rect x="1177.2" y="901" width="1.6" height="15.0" fill="rgb(236,131,0)" rx="2" ry="2" />
<text  x="1180.24" y="911.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.14%)</title><rect x="963.6" y="677" width="1.6" height="15.0" fill="rgb(210,70,54)" rx="2" ry="2" />
<text  x="966.57" y="687.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.14%)</title><rect x="944.4" y="645" width="1.6" height="15.0" fill="rgb(214,110,19)" rx="2" ry="2" />
<text  x="947.43" y="655.5" ></text>
</g>
<g >
<title>zap_page_range (1 samples, 0.14%)</title><rect x="1105.5" y="885" width="1.6" height="15.0" fill="rgb(231,209,29)" rx="2" ry="2" />
<text  x="1108.49" y="895.5" ></text>
</g>
<g >
<title>encoding/json.stringEncoder (1 samples, 0.14%)</title><rect x="96.1" y="533" width="1.6" height="15.0" fill="rgb(237,207,39)" rx="2" ry="2" />
<text  x="99.11" y="543.5" ></text>
</g>
<g >
<title>std::__1::__function::__func&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5, std::__1::allocator&lt;Envoy::Event::DispatcherImpl::createFileEvent(int, std::__1::function&lt;void (unsigned int)&gt;, Envoy::Event::FileTriggerType, unsigned int)::$_5&gt;, void (unsigned int)&gt;::operator()(unsigned int&amp;&amp;) (5 samples, 0.68%)</title><rect x="1154.9" y="965" width="8.0" height="15.0" fill="rgb(215,6,31)" rx="2" ry="2" />
<text  x="1157.92" y="975.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.14%)</title><rect x="22.8" y="837" width="1.6" height="15.0" fill="rgb(252,107,12)" rx="2" ry="2" />
<text  x="25.76" y="847.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="936.5" y="693" width="1.6" height="15.0" fill="rgb(253,62,24)" rx="2" ry="2" />
<text  x="939.46" y="703.5" ></text>
</g>
<g >
<title>local.runtime.(*spanSet).pop (1 samples, 0.14%)</title><rect x="207.7" y="997" width="1.6" height="15.0" fill="rgb(215,21,20)" rx="2" ry="2" />
<text  x="210.73" y="1007.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.27%)</title><rect x="53.1" y="853" width="3.1" height="15.0" fill="rgb(220,199,2)" rx="2" ry="2" />
<text  x="56.05" y="863.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.54%)</title><rect x="1113.5" y="869" width="6.3" height="15.0" fill="rgb(208,19,54)" rx="2" ry="2" />
<text  x="1116.46" y="879.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::execute(char const*, int) (1 samples, 0.14%)</title><rect x="1178.8" y="821" width="1.6" height="15.0" fill="rgb(242,44,37)" rx="2" ry="2" />
<text  x="1181.84" y="831.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.14%)</title><rect x="997.1" y="853" width="1.5" height="15.0" fill="rgb(217,163,45)" rx="2" ry="2" />
<text  x="1000.05" y="863.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.14%)</title><rect x="405.5" y="901" width="1.6" height="15.0" fill="rgb(243,169,2)" rx="2" ry="2" />
<text  x="408.46" y="911.5" ></text>
</g>
<g >
<title>Envoy::Server::ActiveTcpSocket::newConnection() (1 samples, 0.14%)</title><rect x="1183.6" y="885" width="1.6" height="15.0" fill="rgb(239,218,13)" rx="2" ry="2" />
<text  x="1186.62" y="895.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ClientConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (1 samples, 0.14%)</title><rect x="1178.8" y="869" width="1.6" height="15.0" fill="rgb(224,15,26)" rx="2" ry="2" />
<text  x="1181.84" y="879.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.41%)</title><rect x="352.8" y="933" width="4.8" height="15.0" fill="rgb(248,64,3)" rx="2" ry="2" />
<text  x="355.84" y="943.5" ></text>
</g>
<g >
<title>snmp_get_cpu_field (1 samples, 0.14%)</title><rect x="942.8" y="565" width="1.6" height="15.0" fill="rgb(222,66,25)" rx="2" ry="2" />
<text  x="945.84" y="575.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.14%)</title><rect x="387.9" y="677" width="1.6" height="15.0" fill="rgb(220,148,3)" rx="2" ry="2" />
<text  x="390.92" y="687.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.14%)</title><rect x="91.3" y="597" width="1.6" height="15.0" fill="rgb(211,35,52)" rx="2" ry="2" />
<text  x="94.32" y="607.5" ></text>
</g>
<g >
<title>kernfs_seq_show (1 samples, 0.14%)</title><rect x="973.1" y="725" width="1.6" height="15.0" fill="rgb(207,159,16)" rx="2" ry="2" />
<text  x="976.14" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_openat2 (2 samples, 0.27%)</title><rect x="969.9" y="821" width="3.2" height="15.0" fill="rgb(242,78,19)" rx="2" ry="2" />
<text  x="972.95" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.41%)</title><rect x="979.5" y="853" width="4.8" height="15.0" fill="rgb(236,140,51)" rx="2" ry="2" />
<text  x="982.51" y="863.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (2 samples, 0.27%)</title><rect x="354.4" y="853" width="3.2" height="15.0" fill="rgb(207,140,9)" rx="2" ry="2" />
<text  x="357.43" y="863.5" ></text>
</g>
<g >
<title>[Missed User Stack] (7 samples, 0.95%)</title><rect x="407.1" y="1061" width="11.1" height="15.0" fill="rgb(205,140,43)" rx="2" ry="2" />
<text  x="410.05" y="1071.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.14%)</title><rect x="997.1" y="885" width="1.5" height="15.0" fill="rgb(219,84,1)" rx="2" ry="2" />
<text  x="1000.05" y="895.5" ></text>
</g>
<g >
<title>od_dbs_update (1 samples, 0.14%)</title><rect x="1019.4" y="981" width="1.6" height="15.0" fill="rgb(241,80,25)" rx="2" ry="2" />
<text  x="1022.38" y="991.5" ></text>
</g>
<g >
<title>[unknown] (56 samples, 7.57%)</title><rect x="861.5" y="821" width="89.3" height="15.0" fill="rgb(247,197,17)" rx="2" ry="2" />
<text  x="864.51" y="831.5" >[unknown]</text>
</g>
<g >
<title>inet_sendmsg (1 samples, 0.14%)</title><rect x="1102.3" y="725" width="1.6" height="15.0" fill="rgb(229,8,9)" rx="2" ry="2" />
<text  x="1105.30" y="735.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="394.3" y="885" width="1.6" height="15.0" fill="rgb(206,56,4)" rx="2" ry="2" />
<text  x="397.30" y="895.5" ></text>
</g>
<g >
<title>Envoy::Http::ConnectionManagerImpl::ActiveStream::refreshCachedRoute(std::__1::function&lt;Envoy::Router::RouteMatchStatus (std::__1::shared_ptr&lt;Envoy::Router::Route const&gt;, Envoy::Router::RouteEvalStatus)&gt; const&amp;) (1 samples, 0.14%)</title><rect x="1180.4" y="741" width="1.6" height="15.0" fill="rgb(210,35,31)" rx="2" ry="2" />
<text  x="1183.43" y="751.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (1 samples, 0.14%)</title><rect x="1185.2" y="469" width="1.6" height="15.0" fill="rgb(225,67,45)" rx="2" ry="2" />
<text  x="1188.22" y="479.5" ></text>
</g>
<g >
<title>lockref_put_return (1 samples, 0.14%)</title><rect x="971.5" y="741" width="1.6" height="15.0" fill="rgb(242,62,29)" rx="2" ry="2" />
<text  x="974.54" y="751.5" ></text>
</g>
<g >
<title>new_sync_read (3 samples, 0.41%)</title><rect x="957.2" y="757" width="4.8" height="15.0" fill="rgb(237,11,44)" rx="2" ry="2" />
<text  x="960.19" y="767.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.68%)</title><rect x="389.5" y="1061" width="8.0" height="15.0" fill="rgb(236,26,34)" rx="2" ry="2" />
<text  x="392.51" y="1071.5" ></text>
</g>
<g >
<title>sock_sendmsg (1 samples, 0.14%)</title><rect x="1102.3" y="741" width="1.6" height="15.0" fill="rgb(212,14,26)" rx="2" ry="2" />
<text  x="1105.30" y="751.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.14%)</title><rect x="1146.9" y="1029" width="1.6" height="15.0" fill="rgb(214,93,13)" rx="2" ry="2" />
<text  x="1149.95" y="1039.5" ></text>
</g>
<g >
<title>os/exec.(*Cmd).Output (1 samples, 0.14%)</title><rect x="198.2" y="853" width="1.6" height="15.0" fill="rgb(248,132,18)" rx="2" ry="2" />
<text  x="201.16" y="863.5" ></text>
</g>
<g >
<title>Envoy::Server::ActiveStreamListenerBase::newConnection(std::__1::unique_ptr&lt;Envoy::Network::ConnectionSocket, std::__1::default_delete&lt;Envoy::Network::ConnectionSocket&gt; &gt;&amp;&amp;, std::__1::unique_ptr&lt;Envoy::StreamInfo::StreamInfo, std::__1::default_delete&lt;Envoy::StreamInfo::StreamInfo&gt; &gt;) (1 samples, 0.14%)</title><rect x="1183.6" y="869" width="1.6" height="15.0" fill="rgb(241,69,35)" rx="2" ry="2" />
<text  x="1186.62" y="879.5" ></text>
</g>
<g >
<title>vsnprintf (1 samples, 0.14%)</title><rect x="400.7" y="853" width="1.6" height="15.0" fill="rgb(241,180,15)" rx="2" ry="2" />
<text  x="403.68" y="863.5" ></text>
</g>
<g >
<title>runtime.mcall (3 samples, 0.41%)</title><rect x="29.1" y="1013" width="4.8" height="15.0" fill="rgb(220,226,48)" rx="2" ry="2" />
<text  x="32.14" y="1023.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/go.etcd.io/bbolt.(*Cursor).search (1 samples, 0.14%)</title><rect x="27.5" y="725" width="1.6" height="15.0" fill="rgb(221,158,53)" rx="2" ry="2" />
<text  x="30.54" y="735.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onFileEvent(unsigned int) (1 samples, 0.14%)</title><rect x="364.0" y="917" width="1.6" height="15.0" fill="rgb(237,146,5)" rx="2" ry="2" />
<text  x="367.00" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1115.1" y="661" width="1.5" height="15.0" fill="rgb(239,72,10)" rx="2" ry="2" />
<text  x="1118.05" y="671.5" ></text>
</g>
<g >
<title>[unknown] (41 samples, 5.54%)</title><rect x="1041.7" y="1013" width="65.4" height="15.0" fill="rgb(237,115,40)" rx="2" ry="2" />
<text  x="1044.70" y="1023.5" >[unknown]</text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.14%)</title><rect x="1118.2" y="741" width="1.6" height="15.0" fill="rgb(233,191,28)" rx="2" ry="2" />
<text  x="1121.24" y="751.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.27%)</title><rect x="379.9" y="917" width="3.2" height="15.0" fill="rgb(237,208,30)" rx="2" ry="2" />
<text  x="382.95" y="927.5" ></text>
</g>
<g >
<title>clear_user (1 samples, 0.14%)</title><rect x="394.3" y="949" width="1.6" height="15.0" fill="rgb(205,0,34)" rx="2" ry="2" />
<text  x="397.30" y="959.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="391.1" y="981" width="1.6" height="15.0" fill="rgb(215,159,17)" rx="2" ry="2" />
<text  x="394.11" y="991.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.14%)</title><rect x="1019.4" y="1045" width="1.6" height="15.0" fill="rgb(227,194,1)" rx="2" ry="2" />
<text  x="1022.38" y="1055.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.14%)</title><rect x="405.5" y="1061" width="1.6" height="15.0" fill="rgb(228,208,20)" rx="2" ry="2" />
<text  x="408.46" y="1071.5" ></text>
</g>
<g >
<title>__legitimize_mnt (1 samples, 0.14%)</title><rect x="936.5" y="549" width="1.6" height="15.0" fill="rgb(231,181,43)" rx="2" ry="2" />
<text  x="939.46" y="559.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="1139.0" y="821" width="3.2" height="15.0" fill="rgb(230,213,21)" rx="2" ry="2" />
<text  x="1141.97" y="831.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (3 samples, 0.41%)</title><rect x="352.8" y="917" width="4.8" height="15.0" fill="rgb(242,15,34)" rx="2" ry="2" />
<text  x="355.84" y="927.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.14%)</title><rect x="990.7" y="405" width="1.6" height="15.0" fill="rgb(235,142,51)" rx="2" ry="2" />
<text  x="993.68" y="415.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.14%)</title><rect x="340.1" y="901" width="1.6" height="15.0" fill="rgb(214,229,46)" rx="2" ry="2" />
<text  x="343.08" y="911.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1 samples, 0.14%)</title><rect x="118.4" y="549" width="1.6" height="15.0" fill="rgb(249,228,27)" rx="2" ry="2" />
<text  x="121.43" y="559.5" ></text>
</g>
<g >
<title>Envoy::Server::ActiveTcpConnection::ActiveTcpConnection(Envoy::Server::ActiveConnections&amp;, std::__1::unique_ptr&lt;Envoy::Network::Connection, std::__1::default_delete&lt;Envoy::Network::Connection&gt; &gt;&amp;&amp;, Envoy::TimeSource&amp;, std::__1::unique_ptr&lt;Envoy::StreamInfo::StreamInfo, std::__1::default_delete&lt;Envoy::StreamInfo::StreamInfo&gt; &gt;&amp;&amp;) (1 samples, 0.14%)</title><rect x="1183.6" y="837" width="1.6" height="15.0" fill="rgb(209,1,47)" rx="2" ry="2" />
<text  x="1186.62" y="847.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="21.2" y="933" width="3.2" height="15.0" fill="rgb(217,89,45)" rx="2" ry="2" />
<text  x="24.16" y="943.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.14%)</title><rect x="202.9" y="821" width="1.6" height="15.0" fill="rgb(250,89,18)" rx="2" ry="2" />
<text  x="205.95" y="831.5" ></text>
</g>
<g >
<title>unlazy_child (1 samples, 0.14%)</title><rect x="989.1" y="741" width="1.6" height="15.0" fill="rgb(206,158,50)" rx="2" ry="2" />
<text  x="992.08" y="751.5" ></text>
</g>
<g >
<title>user_path_at_empty (1 samples, 0.14%)</title><rect x="981.1" y="789" width="1.6" height="15.0" fill="rgb(250,64,20)" rx="2" ry="2" />
<text  x="984.11" y="799.5" ></text>
</g>
<g >
<title>wrk:worker_1 (15 samples, 2.03%)</title><rect x="1166.1" y="1077" width="23.9" height="15.0" fill="rgb(226,104,11)" rx="2" ry="2" />
<text  x="1169.08" y="1087.5" >w..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.27%)</title><rect x="1103.9" y="949" width="3.2" height="15.0" fill="rgb(249,116,4)" rx="2" ry="2" />
<text  x="1106.89" y="959.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 0.14%)</title><rect x="992.3" y="869" width="1.6" height="15.0" fill="rgb(232,138,1)" rx="2" ry="2" />
<text  x="995.27" y="879.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1 samples, 0.14%)</title><rect x="946.0" y="565" width="1.6" height="15.0" fill="rgb(224,169,41)" rx="2" ry="2" />
<text  x="949.03" y="575.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (4 samples, 0.54%)</title><rect x="963.6" y="805" width="6.3" height="15.0" fill="rgb(222,69,4)" rx="2" ry="2" />
<text  x="966.57" y="815.5" ></text>
</g>
<g >
<title>wq_worker_running (1 samples, 0.14%)</title><rect x="1006.6" y="997" width="1.6" height="15.0" fill="rgb(215,221,9)" rx="2" ry="2" />
<text  x="1009.62" y="1007.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.27%)</title><rect x="1014.6" y="997" width="3.2" height="15.0" fill="rgb(243,55,49)" rx="2" ry="2" />
<text  x="1017.59" y="1007.5" ></text>
</g>
<g >
<title>drm_gem_vmap (1 samples, 0.14%)</title><rect x="998.6" y="965" width="1.6" height="15.0" fill="rgb(216,48,41)" rx="2" ry="2" />
<text  x="1001.65" y="975.5" ></text>
</g>
<g >
<title>inet_stream_connect (2 samples, 0.27%)</title><rect x="944.4" y="709" width="3.2" height="15.0" fill="rgb(217,113,18)" rx="2" ry="2" />
<text  x="947.43" y="719.5" ></text>
</g>
<g >
<title>cpumask_next (1 samples, 0.14%)</title><rect x="973.1" y="677" width="1.6" height="15.0" fill="rgb(226,116,47)" rx="2" ry="2" />
<text  x="976.14" y="687.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.14%)</title><rect x="1022.6" y="1013" width="1.6" height="15.0" fill="rgb(212,40,40)" rx="2" ry="2" />
<text  x="1025.57" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::OwnedImplReservationSlicesOwnerMultiple::~OwnedImplReservationSlicesOwnerMultiple() (1 samples, 0.14%)</title><rect x="1159.7" y="837" width="1.6" height="15.0" fill="rgb(208,189,31)" rx="2" ry="2" />
<text  x="1162.70" y="847.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (1 samples, 0.14%)</title><rect x="1105.5" y="805" width="1.6" height="15.0" fill="rgb(224,223,8)" rx="2" ry="2" />
<text  x="1108.49" y="815.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.14%)</title><rect x="1145.4" y="949" width="1.5" height="15.0" fill="rgb(228,182,35)" rx="2" ry="2" />
<text  x="1148.35" y="959.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.14%)</title><rect x="1102.3" y="789" width="1.6" height="15.0" fill="rgb(232,144,1)" rx="2" ry="2" />
<text  x="1105.30" y="799.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.54%)</title><rect x="128.0" y="693" width="6.4" height="15.0" fill="rgb(239,210,0)" rx="2" ry="2" />
<text  x="131.00" y="703.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 0.14%)</title><rect x="949.2" y="757" width="1.6" height="15.0" fill="rgb(254,144,38)" rx="2" ry="2" />
<text  x="952.22" y="767.5" ></text>
</g>
<g >
<title>local.runtime.pcdatavalue (1 samples, 0.14%)</title><rect x="132.8" y="645" width="1.6" height="15.0" fill="rgb(236,182,47)" rx="2" ry="2" />
<text  x="135.78" y="655.5" ></text>
</g>
<g >
<title>tomoyo_domain (1 samples, 0.14%)</title><rect x="955.6" y="693" width="1.6" height="15.0" fill="rgb(207,4,19)" rx="2" ry="2" />
<text  x="958.59" y="703.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (1 samples, 0.14%)</title><rect x="969.9" y="709" width="1.6" height="15.0" fill="rgb(229,116,8)" rx="2" ry="2" />
<text  x="972.95" y="719.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (30 samples, 4.05%)</title><rect x="139.2" y="741" width="47.8" height="15.0" fill="rgb(247,119,53)" rx="2" ry="2" />
<text  x="142.16" y="751.5" >enco..</text>
</g>
<g >
<title>[unknown] (35 samples, 4.73%)</title><rect x="1051.3" y="997" width="55.8" height="15.0" fill="rgb(212,149,25)" rx="2" ry="2" />
<text  x="1054.27" y="1007.5" >[unkn..</text>
</g>
<g >
<title>ksys_read (1 samples, 0.14%)</title><rect x="982.7" y="821" width="1.6" height="15.0" fill="rgb(253,65,16)" rx="2" ry="2" />
<text  x="985.70" y="831.5" ></text>
</g>
<g >
<title>ep_poll (1 samples, 0.14%)</title><rect x="985.9" y="837" width="1.6" height="15.0" fill="rgb(245,101,42)" rx="2" ry="2" />
<text  x="988.89" y="847.5" ></text>
</g>
<g >
<title>br_nf_pre_routing_finish (1 samples, 0.14%)</title><rect x="402.3" y="869" width="1.6" height="15.0" fill="rgb(243,81,51)" rx="2" ry="2" />
<text  x="405.27" y="879.5" ></text>
</g>
<g >
<title>do_epoll_wait (1 samples, 0.14%)</title><rect x="202.9" y="885" width="1.6" height="15.0" fill="rgb(212,58,31)" rx="2" ry="2" />
<text  x="205.95" y="895.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.14%)</title><rect x="364.0" y="629" width="1.6" height="15.0" fill="rgb(253,176,52)" rx="2" ry="2" />
<text  x="367.00" y="639.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.14%)</title><rect x="1169.3" y="1061" width="1.6" height="15.0" fill="rgb(223,112,4)" rx="2" ry="2" />
<text  x="1172.27" y="1071.5" ></text>
</g>
<g >
<title>rtnl_dump_ifinfo (1 samples, 0.14%)</title><rect x="942.8" y="661" width="1.6" height="15.0" fill="rgb(228,208,31)" rx="2" ry="2" />
<text  x="945.84" y="671.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.14%)</title><rect x="1118.2" y="725" width="1.6" height="15.0" fill="rgb(229,47,29)" rx="2" ry="2" />
<text  x="1121.24" y="735.5" ></text>
</g>
<g >
<title>readv (1 samples, 0.14%)</title><rect x="364.0" y="837" width="1.6" height="15.0" fill="rgb(243,112,17)" rx="2" ry="2" />
<text  x="367.00" y="847.5" ></text>
</g>
<g >
<title>filename_lookup (1 samples, 0.14%)</title><rect x="954.0" y="741" width="1.6" height="15.0" fill="rgb(205,104,33)" rx="2" ry="2" />
<text  x="957.00" y="751.5" ></text>
</g>
<g >
<title>vm_normal_page (1 samples, 0.14%)</title><rect x="381.5" y="885" width="1.6" height="15.0" fill="rgb(242,100,50)" rx="2" ry="2" />
<text  x="384.54" y="895.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1 samples, 0.14%)</title><rect x="944.4" y="213" width="1.6" height="15.0" fill="rgb(221,226,33)" rx="2" ry="2" />
<text  x="947.43" y="223.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::execute(char const*, int) (1 samples, 0.14%)</title><rect x="1154.9" y="821" width="1.6" height="15.0" fill="rgb(240,32,45)" rx="2" ry="2" />
<text  x="1157.92" y="831.5" ></text>
</g>
<g >
<title>local.runtime.makeslice (1 samples, 0.14%)</title><rect x="77.0" y="581" width="1.6" height="15.0" fill="rgb(235,71,35)" rx="2" ry="2" />
<text  x="79.97" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1115.1" y="709" width="1.5" height="15.0" fill="rgb(210,217,26)" rx="2" ry="2" />
<text  x="1118.05" y="719.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.14%)</title><rect x="1032.1" y="1045" width="1.6" height="15.0" fill="rgb(222,105,30)" rx="2" ry="2" />
<text  x="1035.14" y="1055.5" ></text>
</g>
<g >
<title>new_sync_read (2 samples, 0.27%)</title><rect x="116.8" y="581" width="3.2" height="15.0" fill="rgb(217,53,21)" rx="2" ry="2" />
<text  x="119.84" y="591.5" ></text>
</g>
<g >
<title>part_stat_read_all.isra.0 (1 samples, 0.14%)</title><rect x="958.8" y="677" width="1.6" height="15.0" fill="rgb(206,51,7)" rx="2" ry="2" />
<text  x="961.78" y="687.5" ></text>
</g>
<g >
<title>local.runtime.findrunnable (4 samples, 0.54%)</title><rect x="210.9" y="981" width="6.4" height="15.0" fill="rgb(224,113,53)" rx="2" ry="2" />
<text  x="213.92" y="991.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="1139.0" y="869" width="3.2" height="15.0" fill="rgb(246,37,30)" rx="2" ry="2" />
<text  x="1141.97" y="879.5" ></text>
</g>
<g >
<title>epoll_wait (2 samples, 0.27%)</title><rect x="338.5" y="1029" width="3.2" height="15.0" fill="rgb(232,18,20)" rx="2" ry="2" />
<text  x="341.49" y="1039.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.27%)</title><rect x="1103.9" y="933" width="3.2" height="15.0" fill="rgb(215,164,5)" rx="2" ry="2" />
<text  x="1106.89" y="943.5" ></text>
</g>
<g >
<title>os.(*File).Close (1 samples, 0.14%)</title><rect x="121.6" y="693" width="1.6" height="15.0" fill="rgb(246,167,19)" rx="2" ry="2" />
<text  x="124.62" y="703.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="931.7" y="661" width="3.2" height="15.0" fill="rgb(246,69,25)" rx="2" ry="2" />
<text  x="934.68" y="671.5" ></text>
</g>
<g >
<title>local.encoding/json.(*encodeState).string (1 samples, 0.14%)</title><rect x="96.1" y="517" width="1.6" height="15.0" fill="rgb(242,50,27)" rx="2" ry="2" />
<text  x="99.11" y="527.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.14%)</title><rect x="1142.2" y="917" width="1.6" height="15.0" fill="rgb(230,25,19)" rx="2" ry="2" />
<text  x="1145.16" y="927.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/go.etcd.io/bbolt.(*Bucket).Get (1 samples, 0.14%)</title><rect x="27.5" y="757" width="1.6" height="15.0" fill="rgb(238,163,16)" rx="2" ry="2" />
<text  x="30.54" y="767.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::writev(Envoy::Buffer::RawSlice const*, unsigned long) (2 samples, 0.27%)</title><rect x="1185.2" y="885" width="3.2" height="15.0" fill="rgb(229,197,31)" rx="2" ry="2" />
<text  x="1188.22" y="895.5" ></text>
</g>
<g >
<title>time.Date (1 samples, 0.14%)</title><rect x="150.3" y="549" width="1.6" height="15.0" fill="rgb(211,63,45)" rx="2" ry="2" />
<text  x="153.32" y="559.5" ></text>
</g>
<g >
<title>ip_forward (1 samples, 0.14%)</title><rect x="402.3" y="677" width="1.6" height="15.0" fill="rgb(210,222,4)" rx="2" ry="2" />
<text  x="405.27" y="687.5" ></text>
</g>
<g >
<title>virtual thunk to Envoy::Http::Http1::ConnectionImpl::dispatch(Envoy::Buffer::Instance&amp;) (1 samples, 0.14%)</title><rect x="1156.5" y="885" width="1.6" height="15.0" fill="rgb(226,161,23)" rx="2" ry="2" />
<text  x="1159.51" y="895.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.14%)</title><rect x="1022.6" y="1029" width="1.6" height="15.0" fill="rgb(235,63,32)" rx="2" ry="2" />
<text  x="1025.57" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="933.3" y="597" width="1.6" height="15.0" fill="rgb(225,73,26)" rx="2" ry="2" />
<text  x="936.27" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="387.9" y="1061" width="1.6" height="15.0" fill="rgb(212,208,19)" rx="2" ry="2" />
<text  x="390.92" y="1071.5" ></text>
</g>
<g >
<title>bpf_prog_array_is_empty (1 samples, 0.14%)</title><rect x="1183.6" y="693" width="1.6" height="15.0" fill="rgb(242,46,15)" rx="2" ry="2" />
<text  x="1186.62" y="703.5" ></text>
</g>
<g >
<title>smp_call_function_single (1 samples, 0.14%)</title><rect x="1009.8" y="901" width="1.6" height="15.0" fill="rgb(211,170,20)" rx="2" ry="2" />
<text  x="1012.81" y="911.5" ></text>
</g>
<g >
<title>__fget_files (1 samples, 0.14%)</title><rect x="338.5" y="917" width="1.6" height="15.0" fill="rgb(215,225,4)" rx="2" ry="2" />
<text  x="341.49" y="927.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.14%)</title><rect x="156.7" y="661" width="1.6" height="15.0" fill="rgb(250,149,7)" rx="2" ry="2" />
<text  x="159.70" y="671.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.54%)</title><rect x="1097.5" y="933" width="6.4" height="15.0" fill="rgb(227,153,9)" rx="2" ry="2" />
<text  x="1100.51" y="943.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="202.9" y="917" width="1.6" height="15.0" fill="rgb(250,190,4)" rx="2" ry="2" />
<text  x="205.95" y="927.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (2 samples, 0.27%)</title><rect x="1185.2" y="757" width="3.2" height="15.0" fill="rgb(234,88,47)" rx="2" ry="2" />
<text  x="1188.22" y="767.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1 samples, 0.14%)</title><rect x="946.0" y="341" width="1.6" height="15.0" fill="rgb(215,95,50)" rx="2" ry="2" />
<text  x="949.03" y="351.5" ></text>
</g>
<g >
<title>Envoy::Network::ConnectionImpl::onReadReady() (1 samples, 0.14%)</title><rect x="364.0" y="901" width="1.6" height="15.0" fill="rgb(230,194,22)" rx="2" ry="2" />
<text  x="367.00" y="911.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.14%)</title><rect x="1021.0" y="1061" width="1.6" height="15.0" fill="rgb(207,190,44)" rx="2" ry="2" />
<text  x="1023.97" y="1071.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.14%)</title><rect x="1025.8" y="1061" width="1.6" height="15.0" fill="rgb(205,86,22)" rx="2" ry="2" />
<text  x="1028.76" y="1071.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.14%)</title><rect x="946.0" y="421" width="1.6" height="15.0" fill="rgb(245,11,12)" rx="2" ry="2" />
<text  x="949.03" y="431.5" ></text>
</g>
<g >
<title>Envoy::Buffer::OwnedImpl::OwnedImplReservationSlicesOwnerMultiple::~OwnedImplReservationSlicesOwnerMultiple() (1 samples, 0.14%)</title><rect x="1159.7" y="853" width="1.6" height="15.0" fill="rgb(229,225,44)" rx="2" ry="2" />
<text  x="1162.70" y="863.5" ></text>
</g>
<g >
<title>time.(*Time).UnmarshalJSON (4 samples, 0.54%)</title><rect x="145.5" y="581" width="6.4" height="15.0" fill="rgb(218,70,20)" rx="2" ry="2" />
<text  x="148.54" y="591.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="1001.8" y="981" width="1.6" height="15.0" fill="rgb(229,136,38)" rx="2" ry="2" />
<text  x="1004.84" y="991.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="1024.2" y="981" width="1.6" height="15.0" fill="rgb(247,86,22)" rx="2" ry="2" />
<text  x="1027.16" y="991.5" ></text>
</g>
<g >
<title>skb_tunnel_check_pmtu (1 samples, 0.14%)</title><rect x="402.3" y="501" width="1.6" height="15.0" fill="rgb(214,6,22)" rx="2" ry="2" />
<text  x="405.27" y="511.5" ></text>
</g>
<g >
<title>exit_mmap (2 samples, 0.27%)</title><rect x="379.9" y="965" width="3.2" height="15.0" fill="rgb(236,23,50)" rx="2" ry="2" />
<text  x="382.95" y="975.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.14%)</title><rect x="1185.2" y="341" width="1.6" height="15.0" fill="rgb(213,102,11)" rx="2" ry="2" />
<text  x="1188.22" y="351.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.14%)</title><rect x="403.9" y="1029" width="1.6" height="15.0" fill="rgb(219,92,12)" rx="2" ry="2" />
<text  x="406.86" y="1039.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.14%)</title><rect x="391.1" y="997" width="1.6" height="15.0" fill="rgb(231,98,20)" rx="2" ry="2" />
<text  x="394.11" y="1007.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.27%)</title><rect x="1014.6" y="1013" width="3.2" height="15.0" fill="rgb(222,31,2)" rx="2" ry="2" />
<text  x="1017.59" y="1023.5" ></text>
</g>
<g >
<title>__release_sock (1 samples, 0.14%)</title><rect x="946.0" y="677" width="1.6" height="15.0" fill="rgb(247,178,5)" rx="2" ry="2" />
<text  x="949.03" y="687.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="1139.0" y="773" width="3.2" height="15.0" fill="rgb(240,65,36)" rx="2" ry="2" />
<text  x="1141.97" y="783.5" ></text>
</g>
<g >
<title>refresh_cpu_vm_stats (1 samples, 0.14%)</title><rect x="1030.5" y="981" width="1.6" height="15.0" fill="rgb(219,35,24)" rx="2" ry="2" />
<text  x="1033.54" y="991.5" ></text>
</g>
<g >
<title>internal_get_user_pages_fast (1 samples, 0.14%)</title><rect x="376.8" y="677" width="1.6" height="15.0" fill="rgb(210,11,40)" rx="2" ry="2" />
<text  x="379.76" y="687.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.14%)</title><rect x="944.4" y="181" width="1.6" height="15.0" fill="rgb(223,39,11)" rx="2" ry="2" />
<text  x="947.43" y="191.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode-fm (1 samples, 0.14%)</title><rect x="97.7" y="693" width="1.6" height="15.0" fill="rgb(213,65,9)" rx="2" ry="2" />
<text  x="100.70" y="703.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::onMessageComplete() (1 samples, 0.14%)</title><rect x="1178.8" y="773" width="1.6" height="15.0" fill="rgb(227,101,36)" rx="2" ry="2" />
<text  x="1181.84" y="783.5" ></text>
</g>
<g >
<title>exit_mm_release (1 samples, 0.14%)</title><rect x="376.8" y="789" width="1.6" height="15.0" fill="rgb(206,104,19)" rx="2" ry="2" />
<text  x="379.76" y="799.5" ></text>
</g>
<g >
<title>local.runtime.memclrNoHeapPointers (1 samples, 0.14%)</title><rect x="104.1" y="773" width="1.6" height="15.0" fill="rgb(217,56,16)" rx="2" ry="2" />
<text  x="107.08" y="783.5" ></text>
</g>
<g >
<title>event_base_loop (2 samples, 0.27%)</title><rect x="338.5" y="1045" width="3.2" height="15.0" fill="rgb(249,180,3)" rx="2" ry="2" />
<text  x="341.49" y="1055.5" ></text>
</g>
<g >
<title>ep_poll (2 samples, 0.27%)</title><rect x="354.4" y="885" width="3.2" height="15.0" fill="rgb(251,139,41)" rx="2" ry="2" />
<text  x="357.43" y="895.5" ></text>
</g>
<g >
<title>nf_getsockopt (1 samples, 0.14%)</title><rect x="395.9" y="933" width="1.6" height="15.0" fill="rgb(205,147,29)" rx="2" ry="2" />
<text  x="398.89" y="943.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.27%)</title><rect x="379.9" y="933" width="3.2" height="15.0" fill="rgb(205,93,50)" rx="2" ry="2" />
<text  x="382.95" y="943.5" ></text>
</g>
<g >
<title>inet_sendmsg (1 samples, 0.14%)</title><rect x="1161.3" y="709" width="1.6" height="15.0" fill="rgb(220,216,25)" rx="2" ry="2" />
<text  x="1164.30" y="719.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1 samples, 0.14%)</title><rect x="1102.3" y="693" width="1.6" height="15.0" fill="rgb(209,162,6)" rx="2" ry="2" />
<text  x="1105.30" y="703.5" ></text>
</g>
<g >
<title>drm_fb_helper_dirty_work (1 samples, 0.14%)</title><rect x="1032.1" y="997" width="1.6" height="15.0" fill="rgb(225,154,43)" rx="2" ry="2" />
<text  x="1035.14" y="1007.5" ></text>
</g>
<g >
<title>drm_gem_get_pages (1 samples, 0.14%)</title><rect x="1032.1" y="917" width="1.6" height="15.0" fill="rgb(244,98,32)" rx="2" ry="2" />
<text  x="1035.14" y="927.5" ></text>
</g>
<g >
<title>walk_component (2 samples, 0.27%)</title><rect x="939.6" y="613" width="3.2" height="15.0" fill="rgb(233,63,45)" rx="2" ry="2" />
<text  x="942.65" y="623.5" ></text>
</g>
<g >
<title>github.com/docker/docker/image.(*fs).metadataDir (1 samples, 0.14%)</title><rect x="126.4" y="725" width="1.6" height="15.0" fill="rgb(228,97,51)" rx="2" ry="2" />
<text  x="129.41" y="735.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (2 samples, 0.27%)</title><rect x="939.6" y="629" width="3.2" height="15.0" fill="rgb(211,131,18)" rx="2" ry="2" />
<text  x="942.65" y="639.5" ></text>
</g>
<g >
<title>sock_recvmsg (1 samples, 0.14%)</title><rect x="942.8" y="709" width="1.6" height="15.0" fill="rgb(213,69,35)" rx="2" ry="2" />
<text  x="945.84" y="719.5" ></text>
</g>
<g >
<title>irqbalance (1 samples, 0.14%)</title><rect x="400.7" y="1077" width="1.6" height="15.0" fill="rgb(205,197,46)" rx="2" ry="2" />
<text  x="403.68" y="1087.5" ></text>
</g>
<g >
<title>br_handle_frame (1 samples, 0.14%)</title><rect x="944.4" y="357" width="1.6" height="15.0" fill="rgb(243,131,29)" rx="2" ry="2" />
<text  x="947.43" y="367.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.14%)</title><rect x="202.9" y="837" width="1.6" height="15.0" fill="rgb(235,33,37)" rx="2" ry="2" />
<text  x="205.95" y="847.5" ></text>
</g>
<g >
<title>runtime.schedule (6 samples, 0.81%)</title><rect x="209.3" y="997" width="9.6" height="15.0" fill="rgb(241,96,45)" rx="2" ry="2" />
<text  x="212.32" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Router::UpstreamRequest::decodeHeaders(std::__1::unique_ptr&lt;Envoy::Http::ResponseHeaderMap, std::__1::default_delete&lt;Envoy::Http::ResponseHeaderMap&gt; &gt;&amp;&amp;, bool) (1 samples, 0.14%)</title><rect x="1154.9" y="709" width="1.6" height="15.0" fill="rgb(243,191,7)" rx="2" ry="2" />
<text  x="1157.92" y="719.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.14%)</title><rect x="1185.2" y="453" width="1.6" height="15.0" fill="rgb(233,219,46)" rx="2" ry="2" />
<text  x="1188.22" y="463.5" ></text>
</g>
<g >
<title>apparmor_file_open (1 samples, 0.14%)</title><rect x="416.6" y="869" width="1.6" height="15.0" fill="rgb(215,210,15)" rx="2" ry="2" />
<text  x="419.62" y="879.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.81%)</title><rect x="1110.3" y="981" width="9.5" height="15.0" fill="rgb(214,65,1)" rx="2" ry="2" />
<text  x="1113.27" y="991.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.14%)</title><rect x="51.5" y="885" width="1.6" height="15.0" fill="rgb(246,186,12)" rx="2" ry="2" />
<text  x="54.46" y="895.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).init (1 samples, 0.14%)</title><rect x="124.8" y="629" width="1.6" height="15.0" fill="rgb(250,73,1)" rx="2" ry="2" />
<text  x="127.81" y="639.5" ></text>
</g>
<g >
<title>security_file_alloc (1 samples, 0.14%)</title><rect x="969.9" y="725" width="1.6" height="15.0" fill="rgb(230,68,50)" rx="2" ry="2" />
<text  x="972.95" y="735.5" ></text>
</g>
<g >
<title>[unknown] (23 samples, 3.11%)</title><rect x="1070.4" y="965" width="36.7" height="15.0" fill="rgb(223,47,37)" rx="2" ry="2" />
<text  x="1073.41" y="975.5" >[un..</text>
</g>
<g >
<title>writev (2 samples, 0.27%)</title><rect x="1185.2" y="869" width="3.2" height="15.0" fill="rgb(209,19,37)" rx="2" ry="2" />
<text  x="1188.22" y="879.5" ></text>
</g>
<g >
<title>os.openFileNolog (1 samples, 0.14%)</title><rect x="124.8" y="677" width="1.6" height="15.0" fill="rgb(217,150,15)" rx="2" ry="2" />
<text  x="127.81" y="687.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="1142.2" y="933" width="1.6" height="15.0" fill="rgb(241,143,45)" rx="2" ry="2" />
<text  x="1145.16" y="943.5" ></text>
</g>
<g >
<title>acct_collect (1 samples, 0.14%)</title><rect x="378.4" y="821" width="1.5" height="15.0" fill="rgb(249,221,9)" rx="2" ry="2" />
<text  x="381.35" y="831.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.14%)</title><rect x="387.9" y="709" width="1.6" height="15.0" fill="rgb(218,142,31)" rx="2" ry="2" />
<text  x="390.92" y="719.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.14%)</title><rect x="1185.2" y="373" width="1.6" height="15.0" fill="rgb(233,190,13)" rx="2" ry="2" />
<text  x="1188.22" y="383.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Close (1 samples, 0.14%)</title><rect x="115.2" y="677" width="1.6" height="15.0" fill="rgb(245,43,39)" rx="2" ry="2" />
<text  x="118.24" y="687.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (1 samples, 0.14%)</title><rect x="218.9" y="821" width="1.6" height="15.0" fill="rgb(220,130,2)" rx="2" ry="2" />
<text  x="221.89" y="831.5" ></text>
</g>
<g >
<title>local.runtime.gcWriteBarrier (1 samples, 0.14%)</title><rect x="100.9" y="741" width="1.6" height="15.0" fill="rgb(229,84,53)" rx="2" ry="2" />
<text  x="103.89" y="751.5" ></text>
</g>
<g >
<title>vma_merge (1 samples, 0.14%)</title><rect x="1145.4" y="933" width="1.5" height="15.0" fill="rgb(220,39,48)" rx="2" ry="2" />
<text  x="1148.35" y="943.5" ></text>
</g>
<g >
<title>ret_from_fork (4 samples, 0.54%)</title><rect x="1033.7" y="1061" width="6.4" height="15.0" fill="rgb(236,114,26)" rx="2" ry="2" />
<text  x="1036.73" y="1071.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (1 samples, 0.14%)</title><rect x="96.1" y="645" width="1.6" height="15.0" fill="rgb(241,222,38)" rx="2" ry="2" />
<text  x="99.11" y="655.5" ></text>
</g>
<g >
<title>seq_vprintf (1 samples, 0.14%)</title><rect x="974.7" y="693" width="1.6" height="15.0" fill="rgb(241,26,48)" rx="2" ry="2" />
<text  x="977.73" y="703.5" ></text>
</g>
<g >
<title>do_futex (2 samples, 0.27%)</title><rect x="1116.6" y="805" width="3.2" height="15.0" fill="rgb(225,228,31)" rx="2" ry="2" />
<text  x="1119.65" y="815.5" ></text>
</g>
<g >
<title>event_base_loop (11 samples, 1.49%)</title><rect x="1148.5" y="1013" width="17.6" height="15.0" fill="rgb(251,134,38)" rx="2" ry="2" />
<text  x="1151.54" y="1023.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::LegacyHttpParserImpl::execute(char const*, int) (1 samples, 0.14%)</title><rect x="1156.5" y="837" width="1.6" height="15.0" fill="rgb(245,23,16)" rx="2" ry="2" />
<text  x="1159.51" y="847.5" ></text>
</g>
<g >
<title>tomoyo_socket_sendmsg_permission (1 samples, 0.14%)</title><rect x="976.3" y="709" width="1.6" height="15.0" fill="rgb(221,169,10)" rx="2" ry="2" />
<text  x="979.32" y="719.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode-fm (16 samples, 2.16%)</title><rect x="75.4" y="725" width="25.5" height="15.0" fill="rgb(211,23,41)" rx="2" ry="2" />
<text  x="78.38" y="735.5" >e..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1139.0" y="709" width="1.6" height="15.0" fill="rgb(208,126,36)" rx="2" ry="2" />
<text  x="1141.97" y="719.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ConnectionImpl::dispatchSlice(char const*, unsigned long) (2 samples, 0.27%)</title><rect x="1180.4" y="853" width="3.2" height="15.0" fill="rgb(224,214,9)" rx="2" ry="2" />
<text  x="1183.43" y="863.5" ></text>
</g>
<g >
<title>do_epoll_ctl (1 samples, 0.14%)</title><rect x="934.9" y="613" width="1.6" height="15.0" fill="rgb(237,77,35)" rx="2" ry="2" />
<text  x="937.86" y="623.5" ></text>
</g>
<g >
<title>Envoy::Network::RawBufferSocket::doWrite(Envoy::Buffer::Instance&amp;, bool) (1 samples, 0.14%)</title><rect x="1161.3" y="917" width="1.6" height="15.0" fill="rgb(246,217,32)" rx="2" ry="2" />
<text  x="1164.30" y="927.5" ></text>
</g>
<g >
<title>force_qs_rnp (4 samples, 0.54%)</title><rect x="1124.6" y="1013" width="6.4" height="15.0" fill="rgb(221,65,11)" rx="2" ry="2" />
<text  x="1127.62" y="1023.5" ></text>
</g>
<g >
<title>runtime.(*mcache).allocLarge (1 samples, 0.14%)</title><rect x="104.1" y="789" width="1.6" height="15.0" fill="rgb(236,191,39)" rx="2" ry="2" />
<text  x="107.08" y="799.5" ></text>
</g>
<g >
<title>netif_skb_features (1 samples, 0.14%)</title><rect x="990.7" y="373" width="1.6" height="15.0" fill="rgb(234,63,37)" rx="2" ry="2" />
<text  x="993.68" y="383.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="387.9" y="869" width="1.6" height="15.0" fill="rgb(238,214,3)" rx="2" ry="2" />
<text  x="390.92" y="879.5" ></text>
</g>
<g >
<title>kworker/61:7 (1 samples, 0.14%)</title><rect x="1025.8" y="1077" width="1.6" height="15.0" fill="rgb(216,190,2)" rx="2" ry="2" />
<text  x="1028.76" y="1087.5" ></text>
</g>
<g >
<title>vfs_readv (1 samples, 0.14%)</title><rect x="364.0" y="757" width="1.6" height="15.0" fill="rgb(210,28,26)" rx="2" ry="2" />
<text  x="367.00" y="767.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ResponseEncoderImpl::encodeHeaders(Envoy::Http::ResponseHeaderMap const&amp;, bool) (1 samples, 0.14%)</title><rect x="1154.9" y="645" width="1.6" height="15.0" fill="rgb(232,150,0)" rx="2" ry="2" />
<text  x="1157.92" y="655.5" ></text>
</g>
<g >
<title>walk_component (1 samples, 0.14%)</title><rect x="954.0" y="693" width="1.6" height="15.0" fill="rgb(218,52,25)" rx="2" ry="2" />
<text  x="957.00" y="703.5" ></text>
</g>
<g >
<title>tcp_push (1 samples, 0.14%)</title><rect x="1185.2" y="661" width="1.6" height="15.0" fill="rgb(254,69,5)" rx="2" ry="2" />
<text  x="1188.22" y="671.5" ></text>
</g>
<g >
<title>Envoy::Http::Http1::ClientConnectionImpl::onMessageCompleteBase() (1 samples, 0.14%)</title><rect x="1154.9" y="757" width="1.6" height="15.0" fill="rgb(216,187,40)" rx="2" ry="2" />
<text  x="1157.92" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="938.1" y="725" width="1.5" height="15.0" fill="rgb(229,1,43)" rx="2" ry="2" />
<text  x="941.05" y="735.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.27%)</title><rect x="376.8" y="1029" width="3.1" height="15.0" fill="rgb(216,18,18)" rx="2" ry="2" />
<text  x="379.76" y="1039.5" ></text>
</g>
<g >
<title>kubelet (371 samples, 50.14%)</title><rect x="407.1" y="1077" width="591.5" height="15.0" fill="rgb(231,206,36)" rx="2" ry="2" />
<text  x="410.05" y="1087.5" >kubelet</text>
</g>
<g >
<title>__get_user_nocheck_4 (1 samples, 0.14%)</title><rect x="1116.6" y="773" width="1.6" height="15.0" fill="rgb(214,1,49)" rx="2" ry="2" />
<text  x="1119.65" y="783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="416.6" y="1045" width="1.6" height="15.0" fill="rgb(251,106,10)" rx="2" ry="2" />
<text  x="419.62" y="1055.5" ></text>
</g>
<g >
<title>local.runtime.mcall (2 samples, 0.27%)</title><rect x="201.4" y="1013" width="3.1" height="15.0" fill="rgb(247,174,40)" rx="2" ry="2" />
<text  x="204.35" y="1023.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.27%)</title><rect x="1033.7" y="965" width="3.2" height="15.0" fill="rgb(222,48,8)" rx="2" ry="2" />
<text  x="1036.73" y="975.5" ></text>
</g>
<g >
<title>dbs_work_handler (1 samples, 0.14%)</title><rect x="1019.4" y="997" width="1.6" height="15.0" fill="rgb(227,7,35)" rx="2" ry="2" />
<text  x="1022.38" y="1007.5" ></text>
</g>
<g >
<title>Envoy::Network::IoSocketHandleImpl::writev(Envoy::Buffer::RawSlice const*, unsigned long) (1 samples, 0.14%)</title><rect x="1161.3" y="885" width="1.6" height="15.0" fill="rgb(227,213,1)" rx="2" ry="2" />
<text  x="1164.30" y="895.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).tryBacktrack (4 samples, 0.54%)</title><rect x="188.6" y="693" width="6.4" height="15.0" fill="rgb(246,63,2)" rx="2" ry="2" />
<text  x="191.59" y="703.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (2 samples, 0.27%)</title><rect x="1150.1" y="885" width="3.2" height="15.0" fill="rgb(226,76,9)" rx="2" ry="2" />
<text  x="1153.14" y="895.5" ></text>
</g>
<g >
<title>ext4_inode_block_valid (1 samples, 0.14%)</title><rect x="950.8" y="629" width="1.6" height="15.0" fill="rgb(249,31,33)" rx="2" ry="2" />
<text  x="953.81" y="639.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.14%)</title><rect x="946.0" y="277" width="1.6" height="15.0" fill="rgb(240,54,36)" rx="2" ry="2" />
<text  x="949.03" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="364.0" y="805" width="1.6" height="15.0" fill="rgb(250,191,3)" rx="2" ry="2" />
<text  x="367.00" y="815.5" ></text>
</g>
<g >
<title>mm_alloc (1 samples, 0.14%)</title><rect x="387.9" y="773" width="1.6" height="15.0" fill="rgb(245,187,21)" rx="2" ry="2" />
<text  x="390.92" y="783.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.41%)</title><rect x="1119.8" y="1029" width="4.8" height="15.0" fill="rgb(234,85,38)" rx="2" ry="2" />
<text  x="1122.84" y="1039.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="1102.3" y="837" width="1.6" height="15.0" fill="rgb(208,2,24)" rx="2" ry="2" />
<text  x="1105.30" y="847.5" ></text>
</g>
<g >
<title>netlink_recvmsg (1 samples, 0.14%)</title><rect x="942.8" y="693" width="1.6" height="15.0" fill="rgb(214,35,16)" rx="2" ry="2" />
<text  x="945.84" y="703.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.14%)</title><rect x="104.1" y="805" width="1.6" height="15.0" fill="rgb(220,159,52)" rx="2" ry="2" />
<text  x="107.08" y="815.5" ></text>
</g>
<g >
<title>__x64_sys_read (2 samples, 0.27%)</title><rect x="973.1" y="821" width="3.2" height="15.0" fill="rgb(240,53,27)" rx="2" ry="2" />
<text  x="976.14" y="831.5" ></text>
</g>
<g >
<title>seq_vprintf (1 samples, 0.14%)</title><rect x="400.7" y="885" width="1.6" height="15.0" fill="rgb(237,16,40)" rx="2" ry="2" />
<text  x="403.68" y="895.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (6 samples, 0.81%)</title><rect x="209.3" y="1045" width="9.6" height="15.0" fill="rgb(236,82,17)" rx="2" ry="2" />
<text  x="212.32" y="1055.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.14%)</title><rect x="1001.8" y="1061" width="1.6" height="15.0" fill="rgb(242,194,39)" rx="2" ry="2" />
<text  x="1004.84" y="1071.5" ></text>
</g>
<g >
<title>hist_approx_count_below (3 samples, 0.41%)</title><rect x="359.2" y="869" width="4.8" height="15.0" fill="rgb(234,33,41)" rx="2" ry="2" />
<text  x="362.22" y="879.5" ></text>
</g>
</g>
</svg>
